

#----------------------------------------------------------------------------*

getter @unifiedTypeMap-proxy transientReturnTypeName -> @string outResult {
  switch [self mTypeKind]
  case boolType : outResult = "Bool"
  case uintegerType : outResult = "UInt"
  case integerType : outResult = "Int"
  case doubleType : outResult = "Double"
  case stringType : outResult = "String"
  case colorType : outResult = "NSColor"
  case dataType : outResult = "NSData"
  case dateType : outResult = "NSDate"
  case imageType : outResult = "NSImage"
  case fontType : outResult = "NSFont"
  case menuType : outResult = "NSMenu"
  case bezierPathType : outResult = "NSBezierPath"
  case structType, enumType : outResult = [self key]
  case classType, controllerClassType, documentType, entityType,
  preferencesType, nibClassType, outletClassType, protocolType :
    outResult = "<invalid return type '" + [self key] + "' >"
  end
}

#----------------------------------------------------------------------------*

getter @unifiedTypeMap-proxy transientFormalArgumentTypeName -> @string outResult {
  switch [self mTypeKind]
  case boolType : outResult = "Bool"
  case uintegerType : outResult = "UInt"
  case integerType : outResult = "Int"
  case doubleType : outResult = "Double"
  case stringType : outResult = "String"
  case colorType : outResult = "NSColor"
  case dataType : outResult = "NSData"
  case dateType : outResult = "NSDate"
  case imageType : outResult = "NSImage"
  case fontType : outResult = "NSFont"
  case menuType : outResult = "NSMenu"
  case bezierPathType : outResult = "NSBezierPath"
  case entityType : outResult = "Int" # Only used for .count binding
  case structType, enumType : outResult = [self key]
  case classType, controllerClassType, documentType,
  preferencesType, nibClassType, outletClassType, protocolType :
    outResult = "<invalid return type '" + [self key] + "' >"
  end
}

#----------------------------------------------------------------------------*

proc generateTransients
  ?let @string inSourceFile
  ?let @transientListForGeneration inTransientListForGeneration {
#--------------------------- Generate transient routines
  for () in inTransientListForGeneration do
    let @stringlist decomposedTransientSignature = [mTransientSignature componentsSeparatedByString !"."]
    let s = [filewrapper transientManager.transientComputationFunctionFile
      ![decomposedTransientSignature mValueAtIndex !1]
      ![decomposedTransientSignature mValueAtIndex !2]
      !mTransientDependencyListForGeneration
      !mTransientType 
    ]
    let fileName = [decomposedTransientSignature mValueAtIndex !1] + "+transient+" + [decomposedTransientSignature mValueAtIndex !2] + ".swift"
    [@string generateFileWithPattern
      ![inSourceFile stringByDeletingLastPathComponent]
      !fileName
      !"//"
      !"\n\n" # Defaut user zone1
      !s
      !"\n\n" # Defaut user zone2
      !"}\n\n//----------------------------------------------------------------------------*\n"
    ]
  end
}

#----------------------------------------------------------------------------*

private filewrapper transientManager in "../generation-templates" {
}{
}{
  template transientComputationFunctionFile "transient-computation-function.swift.galgasTemplate"
    ?@string KIND_NAME
    ?@string TRANSIENT_NAME
    ?@transientDependencyListForGeneration DEPENDENCY_LIST
    ?@unifiedTypeMap-proxy TRANSIENT_TYPE
}

#-----------------------------------------------------------------------------*
#   generateActualParameterForComputeFunction                                 *
#-----------------------------------------------------------------------------*
#! generateActualParameterForComputeFunction

abstract getter @abstractTransientDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult

#-----------------------------------------------------------------------------*

override getter @transientControllerDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult {
  outResult = "self." + mControllerName.string + "." + mMasterName + ".prop"
}

#-----------------------------------------------------------------------------*

override getter @transientRootSignDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult {
  outResult = "??@@transientRootSignDependency??"
}

#-----------------------------------------------------------------------------*

override getter @transientLocalDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult {
  outResult = "self." + mMasterName.string
  if mNamesCountOption then
    outResult += ".count"
  end
  outResult += ".prop"
}

#-----------------------------------------------------------------------------*

override getter @transientPreferenceDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult {
  outResult = "g_" + mPreferencesName.string + "!." + mMasterName.string + ".prop"
}

#-----------------------------------------------------------------------------*

override getter @transientRootDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult {
  outResult = "self.rootObject." + mMasterName.string
  if mNamesCountOption then
    outResult += ".count"
  end
  outResult += ".prop"
}

#-----------------------------------------------------------------------------*

override getter @transientRootRelationshipDependencyForGeneration generateActualParameterForComputeFunction -> @string outResult {
  outResult = "self.rootObject." + mRelationshipName + ".props"
}

#-----------------------------------------------------------------------------*
#   generateAddObserverCall                                                   *
#-----------------------------------------------------------------------------*
#! generateAddObserverCall

abstract getter @abstractTransientDependencyForGeneration generateAddObserverCall -> @string outResult

#-----------------------------------------------------------------------------*

override getter @transientControllerDependencyForGeneration generateAddObserverCall -> @string outResult {
  outResult = mControllerName.string + "." + mMasterName + ".addObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientRootSignDependencyForGeneration generateAddObserverCall -> @string outResult {
  outResult = "??@@transientRootSignDependency??"
}

#-----------------------------------------------------------------------------*

override getter @transientLocalDependencyForGeneration generateAddObserverCall -> @string outResult {
  outResult = mMasterName.string + ".addObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientPreferenceDependencyForGeneration generateAddObserverCall -> @string outResult {
  outResult = "g_" + mPreferencesName.string + "?."  + mMasterName.string + ".addObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientRootDependencyForGeneration generateAddObserverCall -> @string outResult {
  outResult = "rootObject." + mMasterName + ".addObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientRootRelationshipDependencyForGeneration generateAddObserverCall -> @string outResult {
  outResult = "rootObject." + mRelationshipName + ".addObserverOf_" + mMasterName
}

#-----------------------------------------------------------------------------*
#   generateRemoveObserverCall                                                *
#-----------------------------------------------------------------------------*
#! generateRemoveObserverCall

abstract getter @abstractTransientDependencyForGeneration generateRemoveObserverCall -> @string outResult

#-----------------------------------------------------------------------------*

override getter @transientControllerDependencyForGeneration generateRemoveObserverCall -> @string outResult {
  outResult = mControllerName.string + "." + mMasterName + ".removeObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientRootSignDependencyForGeneration generateRemoveObserverCall -> @string outResult {
  outResult = "??@@transientRootSignDependency??"
}

#-----------------------------------------------------------------------------*

override getter @transientLocalDependencyForGeneration generateRemoveObserverCall -> @string outResult {
  outResult = mMasterName.string + ".removeObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientPreferenceDependencyForGeneration generateRemoveObserverCall -> @string outResult {
  outResult = "g_" + mPreferencesName.string + "?." + mMasterName + ".removeObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientRootDependencyForGeneration generateRemoveObserverCall -> @string outResult {
  outResult = "rootObject." + mMasterName + ".removeObserver"
}

#-----------------------------------------------------------------------------*

override getter @transientRootRelationshipDependencyForGeneration generateRemoveObserverCall -> @string outResult {
  outResult = "rootObject." + mRelationshipName + ".removeObserverOf_" + mMasterName
}

#----------------------------------------------------------------------------*

