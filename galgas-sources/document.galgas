#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @documentDeclarationAST : @abstractDeclarationAST {
  @lstring mRootEntityName
  @outletDeclarationList mOutletDeclarationList
  @lstringlist mActionDeclarationList
}

#·······················································································································

override method @documentDeclarationAST enterInPrecedenceGraph ?!@declarationPrecedenceGraph ioGraph {
  [!?ioGraph addNode !mClassName !self]
  [!?ioGraph addEdge !mClassName !mRootEntityName]
}

#·······················································································································

override getter @documentDeclarationAST nodeKey -> @lstring {
  result = mClassName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension easyBindings_syntax {

  #·····················································································································
  
  rule <document_declaration> ?!@astDeclarationStruct ioDeclarationAST {
    $document$
    $Identifier$ ?let @lstring documentName
    $root$
    $Identifier$ ?let @lstring rootEntityName
    ${$
    @outletDeclarationList outletDeclarationList = {}
    @regularBindingList bindingList = {}
    @lstringlist actionDeclarationList = {}
    @stringset signatureList = {}
    repeat
    while
      <action_declaration> !?actionDeclarationList
    while
      <transient_declaration> !documentName !rootEntityName !?ioDeclarationAST
    while
      <outlet_declaration> !?outletDeclarationList
    while
      <controller_declaration> !documentName !rootEntityName !?ioDeclarationAST
    end
    $}$
    ioDeclarationAST.mUnifiedDeclarationList += !@documentDeclarationAST.new {
      !documentName
      !rootEntityName
      !outletDeclarationList
      !actionDeclarationList
    }
    ioDeclarationAST.mUnifiedDeclarationList += !@transientDeclarationAST.new {
      !documentName
      !rootEntityName
      !["String" here]
      !["documentFilePath" here]
      !{}
      !false
    }
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   CLASS AND PROPERTY SEMANTIC ANALYSIS                       
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @documentDeclarationAST firstAnalysisPhase
       ?!@semanticContext ioSemanticContext
       ?!@generationStruct ioGeneration
{
  buildActionMap (!mActionDeclarationList ?let @actionMap actionMap)
  [!?ioSemanticContext.mClassMap insertKey
    !mClassName
    !.document {!rootEntityName: mRootEntityName}
    !{}
    !actionMap
    !{}
  ]
  for () in actionMap do
    ioGeneration.mFileGenerationList += !@actionFileGeneration.new {
      !mClassName.string
      !lkey.string
    }
  end
}

#·······················································································································

override method @documentDeclarationAST fourthAnalysisPhase
       ?!@semanticContext ioSemanticContext
       ?!@generationStruct ioGeneration
{
#--- Get document property map
  [ioSemanticContext.mClassMap searchKey
    !.new {!mClassName !.nowhere}
    ?*
    ?let documentPropertyMap
    ?let documentActionMap
    ?let documentPropertyGenerationList
  ]
#--- Get root entity property map
  [ioSemanticContext.mClassMap searchKey
    !mRootEntityName
    ?*
    ?let rootPropertyMap
    ?let unused rootActionMap
    ?let unused rootPropertyGenerationList
  ]
#--- Analyze outlets and bindings
  analyzeOutlets (
    !rootPropertyMap
    !mRootEntityName.string
    !ioSemanticContext
    !mOutletDeclarationList
    !documentPropertyMap
    !documentActionMap
    !mClassName
    !?ioGeneration
    ?let @regularBindingsGenerationList regularBindingsGenerationList
    ?let @multipleBindingGenerationList multipleBindingGenerationList
    ?let @actionBindingListForGeneration actionBindingListForGeneration
    ?let @decoratedOutletMap outletMap
    ?let @tableViewBindingGenerationList tableViewBindingGenerationList
    ?let @ebViewGraphicControllerBindingGenerationList ebViewGraphicControllerBindingGenerationList
  )
#--- Code generation
  ioGeneration.mGenerateEBManagedDocumentSwift = true
#---
  ioGeneration.mFileGenerationList += !@documentFileGeneration.new {
    !mClassName.string
    !mRootEntityName.string
    !documentPropertyGenerationList
#    !{} # transientDefinitionListForGeneration
    !outletMap
    !actionBindingListForGeneration
    !regularBindingsGenerationList
    !multipleBindingGenerationList
#    !{} # documentArrayControllerListForGeneration
    !tableViewBindingGenerationList
    !ebViewGraphicControllerBindingGenerationList # ebViewBindingGenerationList
#    !{} # selectionControllerListForGeneration
  }
}



#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   GENERATION                            
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @documentFileGeneration : @abstractFileGeneration {
  @string mDocumentName
  @string mRootEntityName
  @propertyGenerationList mDocumentPropertyGenearionList
  @decoratedOutletMap mOutletMap
  @actionBindingListForGeneration mTargetActionList 
  @regularBindingsGenerationList mRegularBindingsGenerationList 
  @multipleBindingGenerationList multipleBindingGenerationList
  @tableViewBindingGenerationList mTableViewBindingGenerationList
  @ebViewGraphicControllerBindingGenerationList mEBViewBindingGenerationList
}

#·······················································································································

override method @documentFileGeneration generateCode
    ?let @string inOutputDirectory
    ?!@stringset ioGeneratedFileSet
{
  let s = [filewrapper documentGenerationTemplate.documentImplementation
    !mDocumentName
    !mRootEntityName
    !mDocumentPropertyGenearionList
#    !mTransientListForGeneration
    !mOutletMap
#    !mArrayControllerForGeneration
    !mTargetActionList
    !mRegularBindingsGenerationList
    !multipleBindingGenerationList
    !mTableViewBindingGenerationList
    !mEBViewBindingGenerationList
#    !mSelectionControllerListForGeneration
  ]
  let fileName = mDocumentName + ".swift"
  ioGeneratedFileSet += !fileName
  [@string generateFile
    !inOutputDirectory
    !fileName
    !s
  ]
}

#·······················································································································

private filewrapper documentGenerationTemplate in "../generation-templates" {
}{
}{
  template documentImplementation "document.swift.galgasTemplate"
    ?@string DOCUMENT_NAME
    ?@string ROOT_ENTITY_NAME
    ?@propertyGenerationList DOCUMENT_PROPERTY_LIST
    ?@decoratedOutletMap OUTLET_GENERATION_MAP
    ?@actionBindingListForGeneration TARGET_ACTION_LIST
    ?@regularBindingsGenerationList REGULAR_BINDINGS_GENERATION_LIST 
    ?@multipleBindingGenerationList MULTIPLE_BINDING_GENERATION_LIST
    ?@tableViewBindingGenerationList TABLE_VALUE_BINDING_GENERATION_LIST
    ?@ebViewGraphicControllerBindingGenerationList EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

proc generateEBManagedDocumentSwift
  ?let @string inOutputDirectory
  ?!@stringset ioGeneratedFileSet
{
  let fileName = "EBManagedDocument.swift"
  var fw = [filewrapper swift_sources]
  let contents = [fw textFileContentsAtPath !fileName]
  ioGeneratedFileSet += !fileName
  [@string generateFile
    !inOutputDirectory
    !fileName
    !contents
  ]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
