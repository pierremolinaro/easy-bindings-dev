#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   AST                                                                                                                *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

class @documentDeclaration : @astDeclaration {
  @lstring mDocumentName
  @lstring mRootEntityName
  @outletDeclarationList mOutletDeclarationList
  @simpleStoredPropertyList mSimpleStoredAttributeList
  @lstringlist mActionDeclarationList
  @secondaryPropertyList mSecondaryPropertyList
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   SYNTAX                                                                                                             *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

syntax extension easyBindings_syntax {

  #·····················································································································
  
  rule <document_declaration>
    ?let @bool inIsUserDefined
    ?!@astDeclarationStruct ioDeclarationAST
  {
    $document$
    $Identifier$ ?let @lstring documentName
    $root$
    $Identifier$ ?let @lstring rootEntityName
    ${$
    @secondaryPropertyList secondaryPropertyList = {}
    @outletDeclarationList outletDeclarationList = {}
    @regularBindingList bindingList = {}
    @lstringlist actionDeclarationList = {}
    @simpleStoredPropertyList simpleStoredPropertyList = {}
    @stringset signatureList = {}
    repeat
    while
      <simple_stored_declaration> !?simpleStoredPropertyList !?signatureList
    while
      <action_declaration> !?actionDeclarationList
    while
      <transient_declaration> !?secondaryPropertyList
    while
      <outlet_declaration> !?outletDeclarationList
    while
      <controller_declaration> !?secondaryPropertyList
    end
    $}$
  #--- Add documentFilePath transient property
    secondaryPropertyList += !@transientAST.new {
      !["String" here]
      !false
      !["documentFilePath" here]
      !{}
      !["" here]
    }
  #---
    ioDeclarationAST.mDeclarationList += !@documentDeclaration.new {
      !inIsUserDefined
      !documentName
      !rootEntityName
      !outletDeclarationList
      !simpleStoredPropertyList
      !actionDeclarationList
      !secondaryPropertyList
    }
  }

  #·····················································································································

}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   TYPE INVENTORY                                                                                                     *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

override method @documentDeclaration typeInventory
  ?!@unifiedTypeMap ioUnifiedTypeMap
{
  [mSimpleStoredAttributeList typeInventory !?ioUnifiedTypeMap]
  for (item) in mSecondaryPropertyList do
    [item typeInventory
      !?ioUnifiedTypeMap
    ]
  end
  [@unifiedTypeMap-proxy makeProxy !?ioUnifiedTypeMap !mRootEntityName ?*]
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   SEMANTIC TYPES                                                                                                     *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

map @documentObservablePropertyMap {
  @observablePropertyMap mObservablePropertyMap
  insert insertKey error message "the '%K' document is already declared in %L"
  search searchKey error message "there is no '%K' document"
}

#·······················································································································

override method @documentDeclaration buildInitialSecondaryPropertyListMap
  ?!@secondaryDeclarationListWorkingList ioSecondaryDeclarationListWorkingList
  ?!@uint ioSecondaryDeclarationCount
{
  ioSecondaryDeclarationCount = ioSecondaryDeclarationCount + [mSecondaryPropertyList length]
  ioSecondaryDeclarationListWorkingList += !self !mSecondaryPropertyList
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   SEMANTIC ANALYSIS                                                                                                  *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

override method @documentDeclaration buildObservablePropertyMapsFromStoredProperties
  ?let @unifiedTypeMap inUnifiedTypeMap
  ?!@semanticContext ioSemanticContext
{
  @observablePropertyMap observablePropertyMap = {}
#--- Analyze simple stored properties
  [mSimpleStoredAttributeList buildObservablePropertyMap
    !inUnifiedTypeMap
    !?observablePropertyMap
  ]
#--- Enter in semantics context  
  [!?ioSemanticContext.mDocumentObservablePropertyMap insertKey
    !mDocumentName
    !observablePropertyMap
  ]
}

#·······················································································································

override method @documentDeclaration solveSecondaryProperty
  ?!@semanticContext ioSemanticContext
  ?let @unifiedTypeMap unused inUnifiedTypeMap
  ?let @secondaryPropertyList inPropertiesToSolve
  !@secondaryPropertyList outUnsolvedProperties
{
  outUnsolvedProperties = {}
  [ioSemanticContext.mDocumentObservablePropertyMap searchKey
    !mDocumentName
    ?@observablePropertyMap observablePropertyMap
  ]
  [ioSemanticContext.mEntityObservablePropertyMap searchKey
    !mRootEntityName
    ?@observablePropertyMap rootObservablePropertyMap
  ]
  for (property) in inPropertiesToSolve do
    [property tryToSolveSecondaryProperty
      !?ioSemanticContext
      !rootObservablePropertyMap
      !?observablePropertyMap
      !?outUnsolvedProperties
    ]
  end
  [!?ioSemanticContext.mDocumentObservablePropertyMap setMObservablePropertyMapForKey
    !observablePropertyMap
    !mDocumentName.string
  ]
}

#·······················································································································

override method @documentDeclaration semanticAnalysis
  ?let @semanticContext inSemanticContext
  ?!@structForGeneration ioGeneration
{
  [inSemanticContext.mDocumentObservablePropertyMap searchKey
    !mDocumentName
    ?let @observablePropertyMap observablePropertyMap
  ]
  [inSemanticContext.mEntityObservablePropertyMap searchKey
    !mRootEntityName
    ?let @observablePropertyMap rootObservablePropertyMap
  ]
#--- Analyze simple stored properties
  [mSimpleStoredAttributeList simpleStoredPropertySemanticAnalysis
    !mDocumentName.string
    !inSemanticContext.mUnifiedTypeMap
    !?ioGeneration.mValidationStubRoutineListForGeneration
    ?let @simpleStoredPropertyListForGeneration simpleStoredPropertyListForGeneration
  ]
#--- Analyze transients
  @transientDefinitionListForGeneration transientDefinitionListForGeneration = {}
  @arrayControllerForGeneration documentArrayControllerListForGeneration = {}
  @selectionControllerForGeneration selectionControllerListForGeneration = {}
  @objectControllerForGeneration objectControllerListForGeneration = {}
  for (item) in mSecondaryPropertyList do
    [item secondaryPropertySemanticAnalysis
      !mDocumentName.string
      !mRootEntityName.string
      !rootObservablePropertyMap
      !inSemanticContext
      !observablePropertyMap
      !?transientDefinitionListForGeneration
      !?documentArrayControllerListForGeneration
      !?selectionControllerListForGeneration
      !?objectControllerListForGeneration
      !?ioGeneration.mNeededOutletClasses
    ]
  end
  ioGeneration.mTransientListForGeneration += transientDefinitionListForGeneration
  ioGeneration.mAllArrayControllerForGeneration += documentArrayControllerListForGeneration
  ioGeneration.mSelectionControllerListForGeneration += selectionControllerListForGeneration
  ioGeneration.mObjectControllerListForGeneration += objectControllerListForGeneration
#--- Build action map
  buildActionMap (!mActionDeclarationList ?let @actionMap actionMap)
  for () in actionMap do
    ioGeneration.mActionListForGeneration +=
      !mDocumentName.string
      !lkey.string
  end
#--- Analyze outlets and bindings
  analyzeOutlets (
    !rootObservablePropertyMap
    !mRootEntityName.string
    !inSemanticContext
    !mOutletDeclarationList
    !observablePropertyMap
    !actionMap
    !mDocumentName.string
    !?ioGeneration
    ?let @regularBindingsGenerationList regularBindingsGenerationList
    ?let @multipleBindingGenerationList multipleBindingGenerationList
    ?let @actionBindingListForGeneration actionBindingListForGeneration
    ?let @decoratedOutletMap outletMap
    ?let @tableViewBindingGenerationList tableViewBindingGenerationList
    ?let @ebViewGraphicControllerBindingGenerationList ebViewBindingGenerationList
  )
#--- Code generation
  ioGeneration.mDocumentListForGeneration +=
    !mDocumentName.string
    !mRootEntityName.string
    !simpleStoredPropertyListForGeneration
    !transientDefinitionListForGeneration
    !outletMap
    !actionBindingListForGeneration
    !regularBindingsGenerationList
    !multipleBindingGenerationList
    !documentArrayControllerListForGeneration
    !tableViewBindingGenerationList
    !ebViewBindingGenerationList
    !selectionControllerListForGeneration
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   GENERATION TYPES                                                                                                   *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

list @documentListForGeneration {
  @string mDocumentName
  @string mRootEntityName
  @simpleStoredPropertyListForGeneration mSimpleStoredPropertyListForGeneration
  @transientDefinitionListForGeneration mTransientListForGeneration
  @decoratedOutletMap mOutletMap
  @actionBindingListForGeneration mTargetActionList 
  @regularBindingsGenerationList mRegularBindingsGenerationList 
  @multipleBindingGenerationList multipleBindingGenerationList
  @arrayControllerForGeneration mDocumentArrayControllerForGeneration
  @tableViewBindingGenerationList mTableViewBindingGenerationList
  @ebViewGraphicControllerBindingGenerationList mEBViewBindingGenerationList
  @selectionControllerForGeneration mSelectionControllerListForGeneration
#  @customObjectControllerForGeneration mCustomObjectControllerListForGeneration
}

#·······················································································································

private filewrapper documentGenerationTemplate in "../generation-templates" {
}{
}{
  template documentImplementation "document.swift.galgasTemplate"
    ?@string DOCUMENT_NAME
    ?@string ROOT_ENTITY_NAME
    ?@simpleStoredPropertyListForGeneration SIMPLE_PROPERTY_LIST_FOR_GENERATION
    ?@transientDefinitionListForGeneration TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@decoratedOutletMap OUTLET_GENERATION_MAP
    ?@arrayControllerForGeneration ARRAY_CONTROLLER_LIST
    ?@actionBindingListForGeneration TARGET_ACTION_LIST
    ?@regularBindingsGenerationList REGULAR_BINDINGS_GENERATION_LIST 
    ?@multipleBindingGenerationList MULTIPLE_BINDING_GENERATION_LIST
    ?@tableViewBindingGenerationList TABLE_VALUE_BINDING_GENERATION_LIST
    ?@ebViewGraphicControllerBindingGenerationList EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST
    ?@selectionControllerForGeneration SELECTION_CONTROLLER_LIST
#    ?@customObjectControllerForGeneration CUSTOM_OBJECT_CONTROLLER_LIST
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   GENERATION                                                                                                         *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

proc generateDocuments
  ?let @documentListForGeneration inDocumentListForGeneration
  ?let @string inOutputDirectory
  ?!@stringset ioGeneratedFileSet
{
  if [inDocumentListForGeneration length] > 0 then
    let fileName = "EBManagedDocument.swift"
    var fw = [filewrapper swift_sources]
    let contents = [fw textFileContentsAtPath !fileName]
    ioGeneratedFileSet += !fileName
    [@string generateFile
      !inOutputDirectory
      !fileName
      !contents
    ]
  end
  for () in inDocumentListForGeneration do
    let s = [filewrapper documentGenerationTemplate.documentImplementation
      !mDocumentName
      !mRootEntityName
      !mSimpleStoredPropertyListForGeneration
      !mTransientListForGeneration
      !mOutletMap
      !mDocumentArrayControllerForGeneration
      !mTargetActionList
      !mRegularBindingsGenerationList
      !multipleBindingGenerationList
      !mTableViewBindingGenerationList
      !mEBViewBindingGenerationList
      !mSelectionControllerListForGeneration
#      !mCustomObjectControllerListForGeneration
    ]
    let fileName = mDocumentName + ".swift"
    ioGeneratedFileSet += !fileName
    [@string generateFile
      !inOutputDirectory
      !fileName
      !s
    ]
  end
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
