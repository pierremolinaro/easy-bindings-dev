#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   GRAMMAR                               
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

grammar easyBindings_grammar "SLR" {
  syntax easyBindings_syntax
  <start_symbol>
    ?userDefined:let @bool inIsUserDefined
    ?!@astDeclarationStruct ioDeclarationAST
    !@location outEndOfFile
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   AST   
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract class @astDeclaration {
  @bool mUserDefined
}

#·······················································································································

list @astDeclarationListEX {
  @astDeclaration mDeclaration
}

#·······················································································································

struct @astDeclarationStruct {
  @declarationListAST mUnifiedDeclarationList
  @astDeclarationListEX mDeclarationList
  @outletClassDeclarationListEX mOutletClassDeclarationList
  @outletClassBindingSpecificationList mBindingSpecificationListMap
  @prefDeclaration mPreferences
  @lstring mXcodeProject
}

#·······················································································································

#list @secondaryPropertyList {
#  @abstractSecondaryProperty mSecondaryProperty
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax easyBindings_syntax (easyBindings_lexique) {

  #·····················································································································
  
  rule <start_symbol>
    ?userDefined:let @bool inIsUserDefined
    ?!@astDeclarationStruct ioDeclarationAST
    !@location outEndOfFile
  {
    repeat
    while
      $include$
      $literal_string$ ?var @lstring filePath
      $;$
      let sourceFile = @lstring.new {
        ![filePath.string absolutePathFromPath ![@string.stringWithSourceFilePath stringByDeletingLastPathComponent]]
        !filePath.location
      }
      grammar easyBindings_grammar in sourceFile
        !userDefined:inIsUserDefined
        !?ioDeclarationAST
        ?*
    while
      <enum_declaration> !inIsUserDefined !?ioDeclarationAST
    while
      <entity_declaration>  !inIsUserDefined  !?ioDeclarationAST
    while
      <class_declaration>  !inIsUserDefined  !?ioDeclarationAST
    while
      <preferences_declaration> !inIsUserDefined !?ioDeclarationAST
    while
      <document_declaration> !inIsUserDefined !?ioDeclarationAST
    while
      <outlet_class_declaration> !inIsUserDefined !?ioDeclarationAST
    while
      <binding_specification> !inIsUserDefined !?ioDeclarationAST.mBindingSpecificationListMap
#    while
#      <xcode_project> !?ioDeclarationAST.mXcodeProject
#    while
#      <main_xib> !?ioDeclarationAST.mPreferences.mMainXibDescriptorList
    end
    outEndOfFile = .here
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
