//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import AppKit

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum %!ENUM_TYPE_NAME% : Int, EnumPropertyProtocol, Hashable, CaseIterable {
%
for (mValue) in CONSTANT_ORDERED_LIST do (idx)
   %  case %!mValue.string% = %![idx string]%\n%
end
%
%
for (lkey mAssociationSortedList) in FUNCTION_MAP do
%  //····················································································································\n%
%  // Function %!lkey.string%\n%
%  //····················································································································\n\n%
%  static func %!lkey.string% () -> [String] {\n%
%    return [%
for (mIndex mAssociatedString) in mAssociationSortedList
  do ![mAssociatedString utf8Representation]
  between %, %
end
%]\n%
%  }\n\n%
end

%  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> %!ENUM_TYPE_NAME%? {
    if let v = %!ENUM_TYPE_NAME% (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> %!ENUM_TYPE_NAME% {
    var result = self
    let v : %!ENUM_TYPE_NAME%? = %!ENUM_TYPE_NAME% (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  EBStoredPropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  //····················································································································

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  //····················································································································

  static func convertFromNSObject (object : NSObject) -> %!ENUM_TYPE_NAME% {
    var result = %!ENUM_TYPE_NAME%.%![CONSTANT_ORDERED_LIST mValueAtIndex !0].string%
    if let number = object as? NSNumber, let v = %!ENUM_TYPE_NAME% (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

  static func unarchiveFromDataRange (_ inData : Data, _ inRange : NSRange) -> %!ENUM_TYPE_NAME%? {
    if let rawValue = inData.base62EncodedInt (range: inRange), let enumValue = %!ENUM_TYPE_NAME% (rawValue: rawValue) {
      return enumValue
    }else{
      return nil
    }
  }

  //····················································································································

  func appendPropertyValueTo (_ ioData : inout Data) {
    ioData.append (base62Encoded: self.rawValue)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadWriteProperty_%!ENUM_TYPE_NAME% = EBReadWriteEnumProperty <%!ENUM_TYPE_NAME%> // EBObservableMutableProperty <%!ENUM_TYPE_NAME%>
typealias EBStoredProperty_%!ENUM_TYPE_NAME% = EBStoredEnumProperty <%!ENUM_TYPE_NAME%>
typealias EBComputedProperty_%!ENUM_TYPE_NAME% = EBGenericComputedEnumProperty <%!ENUM_TYPE_NAME%>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
