#   SEMANTIC TYPES                                                                                                     *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

struct @structForGeneration {
  @transientDefinitionListForGeneration mTransientListForGeneration
  @actionListForGeneration mActionListForGeneration
  @preferencesForGeneration mPreferencesForGeneration
  @documentListForGeneration mDocumentListForGeneration
  @entityListForGeneration mEntityListForGeneration
  @classListForGeneration mClassListForGeneration
  @enumListForGeneration mEnumListForGeneration
  @stringset mNeededOutletClasses
  @arrayControllerForGeneration mAllArrayControllerForGeneration
  @validationStubRoutineListForGeneration mValidationStubRoutineListForGeneration
  @selectionControllerForGeneration mSelectionControllerListForGeneration
  @customObjectControllerForGeneration mCustomObjectControllerListForGeneration
  @stringlist mPropertyClassList
  @stringlist mTransientPropertyClassList
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#   CODE GENERATION                                                                                                    *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

proc generateCode
  ?let @string inXcodeProjectString
  ?let @structForGeneration inGeneration
  ?let @string inSourceFile
{
  let outputDirectory = [inSourceFile stringByDeletingLastPathComponent]
  let projectName = [[inSourceFile lastPathComponent] stringByDeletingPathExtension]
  let fileOutputDirectory = outputDirectory + "/" + projectName
  @stringset generatedFileSet = {}
  generateTransients (
    !fileOutputDirectory
    !inGeneration.mTransientListForGeneration
    !?generatedFileSet
  )
  generateActions (
    !fileOutputDirectory
    !inGeneration.mActionListForGeneration
    !?generatedFileSet
  )
  generatePreferences (
    !inGeneration.mPreferencesForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateOutletClasses (
    !inGeneration.mNeededOutletClasses
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateClasses (
    !inGeneration.mClassListForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateEntities (
    !inGeneration.mEntityListForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateEnums (
    !inGeneration.mEnumListForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateDocuments (
    !inGeneration.mDocumentListForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateArrayControllers (
    !inGeneration.mAllArrayControllerForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateSelectionControllers (
    !inGeneration.mSelectionControllerListForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateCustomObjectControllers (
    !inGeneration.mCustomObjectControllerListForGeneration
    !fileOutputDirectory
    !?generatedFileSet
  )
  generateSwiftApplicationFiles (
    !fileOutputDirectory
    ![inGeneration.mEntityListForGeneration length] > 0
    !?generatedFileSet
  )
  generateValidationRoutineStubs (
    !fileOutputDirectory
    !inGeneration.mValidationStubRoutineListForGeneration
    !?generatedFileSet
  )
  generateStandardProperties (
    !fileOutputDirectory
    !inGeneration.mPropertyClassList
    !inGeneration.mTransientPropertyClassList
    !?generatedFileSet
  )
  generateXcodeProject (
    !outputDirectory
    !inXcodeProjectString
    !generatedFileSet
    !projectName
  )
  generateTestFile (
    !inXcodeProjectString
    !projectName
    !inGeneration.mPreferencesForGeneration.mMainXibDescriptorList
    !outputDirectory
  )
}

#·······················································································································

filewrapper swift_sources in "../generation-templates/swift-sources" {
  "xib", "swift"
}{
}{
}

#·······················································································································

private proc generateSwiftApplicationFiles
  ?let @string inOutputDirectory
  ?let @bool inHasEntities
  ?!@stringset ioGeneratedFileSet
{
  @stringlist swiftFiles = {
    !"main",
    !"EBAllocationDebug",
    !"easy-bindings-utilities",
    !"generic-bindings",
    !"application"
  }
  if inHasEntities then
    swiftFiles += !"EBManagedObject"
    swiftFiles += !"EBUndoManager"
    swiftFiles += !"EBDataScanner"
  end
  @stringlist xibFiles = {!"EBAllocationDebug"}
  var fw = [filewrapper swift_sources]
  for (@string s) in swiftFiles do
    let contents = [fw textFileContentsAtPath !s + ".swift"]
    let fileName = s + ".swift"
    ioGeneratedFileSet += !fileName
    [@string generateFile
      !inOutputDirectory
      !fileName
      !contents
    ]
  end
  for (@string s) in xibFiles do
    let contents = [fw textFileContentsAtPath !s + ".xib"]
    let fileName = s + ".xib"
    ioGeneratedFileSet += !fileName
    [@string generateFile
      !inOutputDirectory
      !fileName
      !contents
    ]
  end
}

#·······················································································································

filewrapper standard_properties in "../generation-templates/standard-properties" {
}{
}{
  template stub "standard-properties-stub.swift.galgasTemplate"

  template scalarProperty "scalar-standard-property.swift.galgasTemplate"
    ?@string TYPE

  template classProperty "class-standard-property.swift.galgasTemplate"
    ?@string CLASS_NAME
    ?@bool COMPARABLE
    ?@bool TRANSIENT
}

#·······················································································································

private proc generateStandardProperties
  ?let @string inOutputDirectory
  ?let @stringlist inPropertyClassList
  ?let @stringlist inTransientPropertyClassList
  ?!@stringset ioGeneratedFileSet
{
  var contents = [filewrapper standard_properties.stub]
#--- Add scalar property types
  contents += [filewrapper standard_properties.scalarProperty !"Int"   ]
  contents += [filewrapper standard_properties.scalarProperty !"Bool"  ]
  contents += [filewrapper standard_properties.scalarProperty !"Double"]
  contents += [filewrapper standard_properties.scalarProperty !"String"]
#--- Add class property types
  for (propertyClass) in inPropertyClassList do
    contents += [filewrapper standard_properties.classProperty !propertyClass !false !false]
  end
  for (propertyClass) in inTransientPropertyClassList do
    contents += [filewrapper standard_properties.classProperty !propertyClass !false !true]
  end
  contents += [filewrapper standard_properties.scalarProperty !"Date"]
  contents += [filewrapper standard_properties.classProperty !"NSFont"  !false !false]
#--- Generate file
  let fileName = "standard-properties.swift"
  ioGeneratedFileSet += !fileName
  [@string generateFile
    !inOutputDirectory
    !fileName
    !contents
  ]
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
