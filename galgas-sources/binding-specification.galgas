#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#  AST                                                                                                                 *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

list @controllerBindingOptionList {
  @lstring mOptionName
  @lstring mOptionTypeName
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

list @outletClassBindingSpecificationModelList {
  @lstring mModelTypeName
  @bool mModelShouldBeWritableProperty
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

list @outletClassBindingSpecificationList {
  @bool mIsUserDefined
  @lstring mBindingName
  @outletClassBindingSpecificationModelList mOutletClassBindingSpecificationModelList
  @controllerBindingOptionList mBindingOptionList
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

listmap @bindingSpecificationListMap (@outletClassBindingSpecificationList)

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#  SYNTAX                                                                                                              *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

syntax extension easyBindings_syntax {

  rule <binding_specification>
    ?let @bool inIsUserDefined
    ?!@bindingSpecificationListMap ioControllerTemplateList
  {
    $binding$
    $Identifier$ ?let @lstring outletClassName
    $bindingName$ ?let @lstring bindingName
    $:$
    @outletClassBindingSpecificationModelList outletClassBindingSpecificationModelList = {}
    repeat
      @bool modelShouldBeWritableProperty
      select
        $property$
        modelShouldBeWritableProperty = true
      or
        $transient$
        modelShouldBeWritableProperty = false
      end
      $Identifier$ ?let @lstring modelTypeName
      outletClassBindingSpecificationModelList += !modelTypeName !modelShouldBeWritableProperty
    while
      $,$
    end
    @controllerBindingOptionList bindingOptionList = {}
    select
    or
      ${$
      repeat
        $identifier$ ?let @lstring optionName
        $:$
        $Identifier$ ?let @lstring optionType
        bindingOptionList += !optionName !optionType
      while
        $,$
      end
      $}$
    end
    $;$
    ioControllerTemplateList +=
      !outletClassName.string
      !inIsUserDefined
      !bindingName
      !outletClassBindingSpecificationModelList
      !bindingOptionList
  }

}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
#  SEMANTICS                                                                                                           *
#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

map @bindingSpecificationMap {
  @outletBindingSpecificationMap mBindingMap
  insert insertKey error message "the '%K' controller template is already declared in %L"
  search searchKey error message "there is no '%K' controller template"
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

list @outletBindingSpecificationModelList {
  @unifiedTypeMap-proxy mModelTypeProxy
  @bool mModelShouldBeWritableProperty
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

map @outletBindingSpecificationMap {
  @outletBindingSpecificationModelList mOutletBindingSpecificationModelList
  @controllerBindingOptionDecoratedList mControllerBindingOptionDecoratedList
  insert insertKey error message "the '%K' controller template is already declared in %L"
  search searchKey error message "there is no '%K' controller template"
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

proc buildControllerTemplateMap
  ?let @unifiedTypeMap inUnifiedTypeMap
  ?let @bindingSpecificationListMap inBindingSpecificationListMap
  !@bindingSpecificationMap outTemplateControllerMap
{
  outTemplateControllerMap = {}
  for (key bindingList) in inBindingSpecificationListMap do
    @outletBindingSpecificationMap outletBindingSpecificationMap = {}
    for () in bindingList do
      @outletBindingSpecificationModelList outletBindingSpecificationModelList = {}
      for () in mOutletClassBindingSpecificationModelList do
        let modelTypeProxy = @unifiedTypeMap-proxy.searchKey { !inUnifiedTypeMap !mModelTypeName}
        outletBindingSpecificationModelList += !modelTypeProxy !mModelShouldBeWritableProperty
      end
      @controllerBindingOptionDecoratedList controllerBindingOptionDecoratedList = {}
      for () in mBindingOptionList do
        let bindingOptionTypeProxy = @unifiedTypeMap-proxy. searchKey { !inUnifiedTypeMap !mOptionTypeName}
        controllerBindingOptionDecoratedList += !mOptionName !bindingOptionTypeProxy
      end
      [!?outletBindingSpecificationMap insertKey
        !mBindingName
        !outletBindingSpecificationModelList
        !controllerBindingOptionDecoratedList
      ]
    end
    [!?outTemplateControllerMap insertKey
      ![key nowhere]
      !outletBindingSpecificationMap
    ]
  end
}

#——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

