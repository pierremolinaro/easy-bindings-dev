//-----------------------------------------------------------------------------*
//                                                                             *
//                            File 'PMDocument.m'                              *
//                     Generated by version 0.0.1 [debug]                      *
//                        june 9th, 2014, at 13h48'30"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//----------------------------------------------------------------------------*

import Cocoa

//----------------------------------------------------------------------------*

@objc(PMDocument) class PMDocument : PMManagedDocument {
  @IBOutlet var myTextField : NSTextField
  @IBOutlet var myTextMajField : NSTextField
  @IBOutlet var myTextMinField : NSTextField
  @IBOutlet var myTextConcatField : NSTextField
  @IBOutlet var myMatrix : NSMatrix
  @IBOutlet var myColorWell : NSColorWell

  //----------------------------------------------------------------------------*
  //    windowNibName                                                           *
  //----------------------------------------------------------------------------*

  var windowNibName: String {
    return "PMDocument"
  }

  //-----------------------------------------------------------------------------*
  //    rootEntityClass                                                          *
  //-----------------------------------------------------------------------------*

  override func rootEntityClass () -> PMEntityFactory {
    return PMEntityFactory.kMyRootEntity
  }


  //----------------------------------------------------------------------------*
  //    rootObject                                                              *
  //----------------------------------------------------------------------------*

  func rootObject () -> MyRootEntity {
    return mRootObject as MyRootEntity
  }

  //----------------------------------------------------------------------------*
  //    dataOfType                                                              *
  //----------------------------------------------------------------------------*

  override func dataOfType (typeName: String?, error outError: NSErrorPointer) -> NSData? {
    // Insert code here to write your document to data of the specified type. If outError != nil, ensure that you create and set an appropriate error when returning nil.
    // You can also choose to override fileWrapperOfType:error:, writeToURL:ofType:error:, or writeToURL:ofType:forSaveOperation:originalContentsURL:error: instead.
//    outError.memory = NSError.errorWithDomain(NSOSStatusErrorDomain, code: unimpErr, userInfo: nil)
    return nil
  }

  //----------------------------------------------------------------------------*
  //    readFromData                                                            *
  //----------------------------------------------------------------------------*

  override func readFromData (data: NSData?, ofType typeName: String?, error outError: NSErrorPointer) -> Bool {
    // Insert code here to read your document from the given data of the specified type. If outError != nil, ensure that you create and set an appropriate error when returning false.
    // You can also choose to override readFromFileWrapper:ofType:error: or readFromURL:ofType:error: instead.
    // If you override either of these, you should also override -isEntireFileLoaded to return NO if the contents are lazily loaded.
//    outError.memory = NSError.errorWithDomain(NSOSStatusErrorDomain, code: unimpErr, userInfo: nil)
    return false
  }

  //----------------------------------------------------------------------------*
  //    windowControllerDidLoadNib                                              *
  //----------------------------------------------------------------------------*

  override func windowControllerDidLoadNib (aController: NSWindowController) {
    super.windowControllerDidLoadNib (aController)
  //--------------------------- Controller instanciation
  //--------------------------- Controller bindings
  //--------------------------- Outlet bindings
  //--- Outlet myTextField
    if (nil == myTextField) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myTextField' outlet is nil")
    }
    myTextField.bind ("value",
      toObject:mRootObject,
      withKeyPath:"myString",
      options:nil
    )
  //--- Outlet myTextMajField
    if (nil == myTextMajField) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myTextMajField' outlet is nil")
    }
    myTextMajField.bind ("value",
      toObject:mRootObject,
      withKeyPath:"myStringMaj",
      options:nil
    )
  //--- Outlet myTextMinField
    if (nil == myTextMinField) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myTextMinField' outlet is nil")
    }
    myTextMinField.bind ("value",
      toObject:mRootObject,
      withKeyPath:"myStringMin",
      options:nil
    )
  //--- Outlet myTextConcatField
    if (nil == myTextConcatField) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myTextConcatField' outlet is nil")
    }
    myTextConcatField.bind ("value",
      toObject:mRootObject,
      withKeyPath:"myStringConcat",
      options:nil
    )
  //--- Outlet myMatrix
    if (nil == myMatrix) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myMatrix' outlet is nil")
    }
    myMatrix.bind ("selectedIndex",
      toObject:mRootObject,
      withKeyPath:"myEnumeration__as__number",
      options:nil
    )
  //--- Outlet myColorWell
    if (nil == myColorWell) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myColorWell' outlet is nil")
    }
    myColorWell.bind ("value",
      toObject:mRootObject,
      withKeyPath:"myColor",
      options:nil
    )
  //--------------------------- Add Transient observers
  //--------------------------- Add Signature observer
  }

//----------------------------------------------------------------------------*
//   R E M O V E    W I N D O W    C O N T R O L L E R                        *
//----------------------------------------------------------------------------*

  override func removeWindowController (inWindowController : NSWindowController) {
    //NSLog (@"%s", __PRETTY_FUNCTION__) ;
  //--------------------------- Add Signature observer
  //--- Unbind Outlets
    myTextField.unbind ("value")
    myTextMajField.unbind ("value")
    myTextMinField.unbind ("value")
    myTextConcatField.unbind ("value")
    myMatrix.unbind ("selectedIndex")
    myColorWell.unbind ("value")
  //--- Unbind Controllers
  //--- Remove Transient observers
  //--- Release controllers
  //--- Remove circularities in outlets
  //---
    super.removeWindowController (inWindowController)
  }

}

//----------------------------------------------------------------------------*

/*
#import "PMManagedDocument.h"
#import "PMManagedEntity.h"

//----------------------------------------------------------------------------*

@class PMEntityArrayController ;
// @class MyRootEntity ;

//----------------------------------------------------------------------------*

@interface PMDocument : PMManagedDocument {
//--- 'myTextField' outlet
  @private IBOutlet NSTextField * myTextField ;
//--- 'myTextMajField' outlet
  @private IBOutlet NSTextField * myTextMajField ;
//--- 'myTextMinField' outlet
  @private IBOutlet NSTextField * myTextMinField ;
//--- 'myTextConcatField' outlet
  @private IBOutlet NSTextField * myTextConcatField ;
//--- 'myMatrix' outlet
  @private IBOutlet NSMatrix * myMatrix ;
//--- 'myColorWell' outlet
  @private IBOutlet NSColorWell * myColorWell ;
//--- Attribute observers



}


//--- Actions
- (IBAction) monAction: (id) inSender ;
- (IBAction) autreAction: (id) inSender ;

@end

*/

/*
#import "PMAllocationDebug.h"
#import "easy-bindings-utilities.h"
#import "PMApplication.h"
#import "PMEntityArrayController.h"
#import "PMEntityController.h"
#import "PMDocument.h"
#import "MyRootEntity.h"

//----------------------------------------------------------------------------*

@implementation PMDocument

//----------------------------------------------------------------------------*
//    windowNibName                                                           *
//----------------------------------------------------------------------------*

- (NSString *) windowNibName {
  return @"PMDocument" ;
}

//----------------------------------------------------------------------------*
//    rootEntityClass                                                         *
//----------------------------------------------------------------------------*

- (Class) rootEntityClass {
  return [MyRootEntity class] ;
}

//----------------------------------------------------------------------------*
//    rootObject                                                              *
//----------------------------------------------------------------------------*

- (MyRootEntity *) rootObject {
  return (MyRootEntity *) mRootObject ;
}


//----------------------------------------------------------------------------*
//    windowControllerDidLoadNib                                              *
//----------------------------------------------------------------------------*

- (void) windowControllerDidLoadNib: (NSWindowController *) inWindowController { 
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  [super windowControllerDidLoadNib:inWindowController] ;
//--------------------------- Controller instanciation
//--------------------------- Controller bindings
//--------------------------- Outlet bindings
//--- Outlet myTextField
  if (nil == myTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextField' outlet is nil") ;
  }
  [myTextField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myString"
    options:nil
  ] ;
//--- Outlet myTextMajField
  if (nil == myTextMajField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextMajField' outlet is nil") ;
  }
  [myTextMajField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myStringMaj"
    options:nil
  ] ;
//--- Outlet myTextMinField
  if (nil == myTextMinField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextMinField' outlet is nil") ;
  }
  [myTextMinField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myStringMin"
    options:nil
  ] ;
//--- Outlet myTextConcatField
  if (nil == myTextConcatField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextConcatField' outlet is nil") ;
  }
  [myTextConcatField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myStringConcat"
    options:nil
  ] ;
//--- Outlet myMatrix
  if (nil == myMatrix) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myMatrix' outlet is nil") ;
  }
  [myMatrix
    bind:@"selectedIndex"
    toObject:mRootObject
    withKeyPath:@"myEnumeration"
    options:nil
  ] ;
//--- Outlet myColorWell
  if (nil == myColorWell) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myColorWell' outlet is nil") ;
  }
  [myColorWell
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myColor"
    options:nil
  ] ;
//--------------------------- Add Transient observers
//--------------------------- Add Signature observer
}

//----------------------------------------------------------------------------*
//   R E M O V E    W I N D O W    C O N T R O L L E R                        *
//----------------------------------------------------------------------------*

- (void) removeWindowController:(NSWindowController *) inWindowController {
  //NSLog (@"%s", __PRETTY_FUNCTION__) ;
//--------------------------- Add Signature observer
//--- Unbind Outlets
  [myTextField unbind:@"value"] ;
  [myTextMajField unbind:@"value"] ;
  [myTextMinField unbind:@"value"] ;
  [myTextConcatField unbind:@"value"] ;
  [myMatrix unbind:@"selectedIndex"] ;
  [myColorWell unbind:@"value"] ;
//--- Unbind Controllers
//--- Remove Transient observers
//--- Release controllers
//--- Remove circularities in outlets
//---
  [super removeWindowController:inWindowController] ;
}

*/

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

