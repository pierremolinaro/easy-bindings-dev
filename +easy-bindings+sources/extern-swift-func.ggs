//------------------------------------------------------------------------------------------------
//   AST   
//------------------------------------------------------------------------------------------------

list @externSwiftFunctionList {
  public var @lstring mExternSwiftFunctionName
  public var @lstring mCallerName
}

//------------------------------------------------------------------------------------------------
//   SYNTAX
//------------------------------------------------------------------------------------------------

syntax extension easyBindings_syntax {

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  
  rule <extern_swift_func>(
    ?!@externSwiftFunctionList ioExternSwiftFunctionList)
  {
    $externFunc$
    $identifier$ (?let @lstring externFunctionName)
    $calledBy$
    $identifier$ (?let @lstring callerName)
    $;$
    !?ioExternSwiftFunctionList.append (externFunctionName, callerName)
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//------------------------------------------------------------------------------------------------
#  SEMANTIC TYPE                          
//------------------------------------------------------------------------------------------------

map @externFunctionMap {
  %insertSetter insertKey %errorMessage "the '%K' extern function is already declared in %L"
}

//------------------------------------------------------------------------------------------------

