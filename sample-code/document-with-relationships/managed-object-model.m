//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'managed-object-model.m'                        *
//                    Generated by version 1.0.0 [debug]                     *
//                     august 13th, 2011, at 10h46'56"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "managed-object-model.h"
#import "easy-bindings-utilities.h"

//----------------------------------------------------------------------------*

static NSManagedObjectModel * buildManagedObjectModel (void) {
  NSMutableDictionary * entityDictionary = [NSMutableDictionary new] ;
  NSEntityDescription * entity = nil ;
  entity = [NSEntityDescription new] ;
  [entity setName:@"MyRootEntity"] ;
  [entityDictionary setObject:entity forKey:@"MyRootEntity"] ;
  entity = [NSEntityDescription new] ;
  [entity setName:@"PathEntity"] ;
  [entityDictionary setObject:entity forKey:@"PathEntity"] ;
//--------------------------
  NSMutableArray * properties = nil ;
  NSAttributeDescription * attribute = nil ;
  NSRelationshipDescription * relationship = nil ;
  NSRelationshipDescription * inverseRelationship = nil ;
  NSEntityDescription * entityDescription = nil ;
  NSEntityDescription * inverseEntityDescription = nil ;
//-------------------------- Entity 'MyRootEntity'
  entity = [entityDictionary objectForKey:@"MyRootEntity"] ;
  [entity setManagedObjectClassName:@"MyEntityClass"] ;
  properties = [NSMutableArray new] ;
//--- 'mPathes' relationship
  relationship = [NSRelationshipDescription new] ;
  [relationship setName:@"mPathes"] ;
  [relationship setDestinationEntity:[entityDictionary objectForKey:@"PathEntity"]] ;
  [relationship setDeleteRule:NSCascadeDeleteRule] ;
  [relationship setMinCount:0] ;
  [relationship setMaxCount:NSUIntegerMax] ;
  [properties addObject:relationship] ;
//---
  [entity setProperties:properties] ;
//-------------------------- Entity 'PathEntity'
  entity = [entityDictionary objectForKey:@"PathEntity"] ;
  [entity setManagedObjectClassName:@"MyClassForPathEntity"] ;
  properties = [NSMutableArray new] ;
//--- 'path' attribute
  attribute = [NSAttributeDescription new] ;
  [attribute setName:@"path"] ;
  [attribute setAttributeType:NSStringAttributeType] ;
  [attribute setDefaultValue:(@"")] ;
  [properties addObject:attribute] ;
//--- 'recursive' attribute
  attribute = [NSAttributeDescription new] ;
  [attribute setName:@"recursive"] ;
  [attribute setAttributeType:NSBooleanAttributeType] ;
  [attribute setDefaultValue:([NSNumber numberWithBool:YES])] ;
  [properties addObject:attribute] ;
//--- 'mRoot' relationship
  relationship = [NSRelationshipDescription new] ;
  [relationship setName:@"mRoot"] ;
  [relationship setDestinationEntity:[entityDictionary objectForKey:@"MyRootEntity"]] ;
  [relationship setDeleteRule:NSNullifyDeleteRule] ;
  [relationship setMinCount:0] ;
  [relationship setMaxCount:1] ;
  [properties addObject:relationship] ;
//---
  [entity setProperties:properties] ;
//-------------------------- Set inverse relationships
//------ Entity 'MyRootEntity'
  entityDescription = [entityDictionary objectForKey:@"MyRootEntity"] ;
//--- 'mPathes' relationship
  relationship = [[entityDescription relationshipsByName] objectForKey:@"mPathes"] ;
  inverseEntityDescription = [entityDictionary objectForKey:@"PathEntity"] ;
  inverseRelationship = [[inverseEntityDescription relationshipsByName] objectForKey:@"mRoot"] ;
  [relationship setInverseRelationship:inverseRelationship] ;
//------ Entity 'PathEntity'
  entityDescription = [entityDictionary objectForKey:@"PathEntity"] ;
//--- 'mRoot' relationship
  relationship = [[entityDescription relationshipsByName] objectForKey:@"mRoot"] ;
  inverseEntityDescription = [entityDictionary objectForKey:@"MyRootEntity"] ;
  inverseRelationship = [[inverseEntityDescription relationshipsByName] objectForKey:@"mPathes"] ;
  [relationship setInverseRelationship:inverseRelationship] ;
//--------------------------
  NSManagedObjectModel * mom = [NSManagedObjectModel new] ;
  [mom setEntities:[entityDictionary allValues]] ;
  return mom ;
}

//----------------------------------------------------------------------------*

static NSManagedObjectModel * gManagedObjectModel = nil ;

//----------------------------------------------------------------------------*

NSManagedObjectModel * managedObjectModel (void) {
  if (nil == gManagedObjectModel) {
    gManagedObjectModel = buildManagedObjectModel () ;
  }
  return gManagedObjectModel ;
}

//----------------------------------------------------------------------------*
//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


