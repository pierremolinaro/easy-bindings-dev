#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "all-declarations-2.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Routine 'semanticAnalysis'                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_semanticAnalysis (const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                               const GALGAS_lstringlist /* constinArgument_inSortedKeys */,
                               const GALGAS_string constinArgument_inSourceFile,
                               const GALGAS_astDeclarationStruct constinArgument_inAstDeclarationStruct,
                               GALGAS_transientDependencyGraphNodeInfoList & outArgument_outSortedTransientAndObservablePropertyNodes,
                               GALGAS_structForGeneration & outArgument_outGeneration,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSortedTransientAndObservablePropertyNodes.drop () ; // Release 'out' argument
  outArgument_outGeneration.drop () ; // Release 'out' argument
  {
  routine_buildTransientDependencyGraph (constinArgument_inUnifiedTypeMap, constinArgument_inSourceFile, outArgument_outSortedTransientAndObservablePropertyNodes, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 102)) ;
  }
  GALGAS_templateControllerMap var_templateControllerMap ;
  {
  routine_buildControllerTemplateMap (constinArgument_inUnifiedTypeMap, constinArgument_inAstDeclarationStruct.mAttribute_mControllerTemplateList, var_templateControllerMap, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 108)) ;
  }
  GALGAS_outletClassMap var_outletClassMap = GALGAS_outletClassMap::constructor_emptyMap (SOURCE_FILE ("easyBindings_program.galgas", 114)) ;
  cEnumerator_outletClassDeclarationList enumerator_5136 (constinArgument_inAstDeclarationStruct.mAttribute_mOutletClassDeclarationList, kEnumeration_up) ;
  while (enumerator_5136.hasCurrentObject ()) {
    {
    var_outletClassMap.modifier_insertKey (enumerator_5136.current_mOutletClassName (HERE), enumerator_5136.current_mHasRunAction (HERE), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 116)) ;
    }
    enumerator_5136.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("easyBindings_program.galgas", 119)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    {
    routine_typeAnalysis (constinArgument_inUnifiedTypeMap, var_outletClassMap, var_templateControllerMap, outArgument_outGeneration, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 120)) ;
    }
  }else if (kBoolFalse == test_0) {
    outArgument_outGeneration = GALGAS_structForGeneration::constructor_default (SOURCE_FILE ("easyBindings_program.galgas", 127)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'generateCode'                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateCode (const GALGAS_transientDependencyGraphNodeInfoList constinArgument_inSortedTransientAndObservablePropertyNodes,
                           const GALGAS_structForGeneration constinArgument_inGeneration,
                           const GALGAS_string constinArgument_inSourceFile,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  {
  routine_generateTransients (constinArgument_inSourceFile, constinArgument_inSortedTransientAndObservablePropertyNodes, constinArgument_inGeneration.mAttribute_mTransientListForGeneration, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 141)) ;
  }
  {
  routine_generateActions (constinArgument_inSourceFile, constinArgument_inGeneration.mAttribute_mActionListForGeneration, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 146)) ;
  }
  GALGAS_string var_outputDirectory = constinArgument_inSourceFile.reader_stringByDeletingLastPathComponent (SOURCE_FILE ("easyBindings_program.galgas", 150)) ;
  {
  routine_generatePreferences (constinArgument_inGeneration.mAttribute_mPreferenceListForGeneration, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 151)) ;
  }
  {
  routine_generateOutletClasses (constinArgument_inGeneration.mAttribute_mNeededOutletClasses, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 155)) ;
  }
  {
  routine_generateControllerClasses (constinArgument_inGeneration.mAttribute_mControllerGenerationStringSet, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 159)) ;
  }
  {
  routine_generateEntities (constinArgument_inGeneration.mAttribute_mEntityListForGeneration, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 163)) ;
  }
  {
  routine_generateEnums (constinArgument_inGeneration.mAttribute_mEnumListForGeneration, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 167)) ;
  }
  {
  routine_generateDocuments (constinArgument_inGeneration.mAttribute_mDocumentListForGeneration, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 171)) ;
  }
  {
  routine_generateArrayControllers (constinArgument_inGeneration.mAttribute_mAllArrayControllerForGeneration, var_outputDirectory, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 175)) ;
  }
  {
  routine_generateSwiftApplicationFiles (var_outputDirectory, GALGAS_bool (kIsStrictSup, constinArgument_inGeneration.mAttribute_mEntityListForGeneration.reader_length (SOURCE_FILE ("easyBindings_program.galgas", 181)).objectCompare (GALGAS_uint ((uint32_t) 0U))), inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 179)) ;
  }
  {
  routine_generateValidationRoutineStubs (var_outputDirectory, constinArgument_inGeneration.mAttribute_mValidationStubRoutineListForGeneration, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 183)) ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             Filewrapper 'swift_sources'                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- File '/PMAllocationDebug.swift'

const char * gWrapperFileContent_0_swift_5F_sources = "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    Public routines                                                                                                  *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "func noteObjectAllocation (inObject : PMUserClassName) {\n"
  "  installDebugMenu ()\n"
  "  let className = inObject.userClassName ()\n"
  "  gDebugObject\?.pmNoteObjectAllocation (className)\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "func noteObjectDeallocation (inObject : PMUserClassName) {\n"
  "  let className = inObject.userClassName ()\n"
  "  gDebugObject\?.pmNoteObjectDeallocation (className)\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "func addItemToDebugMenu (item : NSMenuItem) {\n"
  "  installDebugMenu ()\n"
  "  gDebugObject\?.mDebugMenu\?.addItem (item)\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    Private routine                                                                                                  *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "private func installDebugMenu () {\n"
  "  if nil == gDebugObject {\n"
  "    var debugObject = PMAllocationDebug ()\n"
  "    gDebugObject = debugObject\n"
  "    var mainBundle = NSBundle.mainBundle ()\n"
  "    let ok = mainBundle.loadNibNamed (\"PMAllocationDebug\", owner:debugObject, topLevelObjects:&debugObject.mTopLevelObjects)\n"
  "    if !ok {\n"
  "      presentErrorWindow (__FILE__, __LINE__, \"Cannot load 'PMAllocationDebug' nib file\") ;\n"
  "    }\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//   PMAllocationItemDisplay class                                                                                     *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "@objc(PMAllocationItemDisplay) class PMAllocationItemDisplay : NSObject {\n"
  "  var mClassname : String\n"
  "  var mAllCount : Int\n"
  "  var mLive : Int\n"
  "  var mSnapshot : Int\n"
  "\n"
  "  init (classname : String, allCount : Int, live : Int, snapshot : Int) {\n"
  "    mClassname = classname\n"
  "    mAllCount = allCount\n"
  "    mLive = live\n"
  "    mSnapshot = snapshot\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "private var gDebugObject : PMAllocationDebug\? = nil\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "@objc(PMAllocationDebug) class PMAllocationDebug : NSObject, NSTableViewDataSource, NSWindowDelegate {\n"
  "  @IBOutlet var mPerformSnapShotButton  : NSButton\?\n"
  "  @IBOutlet var mAllocationStatsWindowVisibleAtLaunchCheckbox : NSButton\?\n"
  "  @IBOutlet var mDisplayFilterPopUpButton : NSPopUpButton\?\n"
  "  @IBOutlet var mDebugMenu : NSMenu\?\n"
  "  @IBOutlet var mAllocationStatsWindow : NSWindow\?\n"
  "  @IBOutlet var mCurrentlyAllocatedObjectCountTextField : NSTextField\?\n"
  "  @IBOutlet var mTotalAllocatedObjectCountTextField : NSTextField\?\n"
  "  @IBOutlet var mStatsTableView : NSTableView\?\n"
  "\n"
  "\n"
  "  private var mTopLevelObjects : NSArray\?\n"
  "\n"
  "  private var mDebugMenuInstalled = false\n"
  "\n"
  "  private var mAllocationStatsWindowVisibleAtLaunch : Bool = true {\n"
  "    didSet {\n"
  "      mAllocationStatsWindowVisibleAtLaunchCheckbox\?.state = Int (mAllocationStatsWindowVisibleAtLaunch)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mAllocatedObjectCount : Int = 0 {\n"
  "    didSet {\n"
  "      mCurrentlyAllocatedObjectCountTextField\?.stringValue = String (format:\"%d\", mAllocatedObjectCount)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mTotalAllocatedObjectCount : Int = 0 {\n"
  "    didSet {\n"
  "      mTotalAllocatedObjectCountTextField\?.stringValue = String (format:\"%d\", mTotalAllocatedObjectCount)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mDisplayFilter : Int = 0 {\n"
  "    didSet {\n"
  "      mRefreshDisplay = true\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mAllocatedObjectCountByClass = NSCountedSet ()\n"
  "\n"
  "  private var mTotalAllocatedObjectCountByClass = NSCountedSet ()\n"
  "\n"
  "  private var mSnapShotDictionary = NSMutableDictionary ()\n"
  " \n"
  "  private var mRefreshDisplay = false\n"
  "\n"
  "  private var mAllocationStatsDataSource = NSMutableArray ()\n"
  "  \n"
  "  private var mRefreshTimer : NSTimer\? = nil\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    init                                                                                                           *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "   override init () {\n"
  "      //  NSLog (@\"%s %p\", __PRETTY_FUNCTION__, self) ;\n"
  "    super.init ()\n"
  "    assert (gDebugObject == nil, \"PMAllocationDebug already exists\", file:__FILE__, line:__LINE__)\n"
  "    let df = NSNotificationCenter.defaultCenter ()\n"
  "    df.addObserver (self,\n"
  "      selector:\"applicationWillTerminateAction:\",\n"
  "      name:NSApplicationWillTerminateNotification,\n"
  "      object:nil\n"
  "    )\n"
  "    gDebugObject = self\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    pmInstallDebugMenu                                                                                             *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  private func pmInstallDebugMenu () {\n"
  "    if !mDebugMenuInstalled && NSApp.mainMenu != nil, let menu = NSApp.mainMenu! {\n"
  "      var item = NSMenuItem (\n"
  "        title:\"\",\n"
  "        action:nil,\n"
  "        keyEquivalent:\"\"\n"
  "      )\n"
  "      item.submenu = mDebugMenu\n"
  "      menu.addItem (item)\n"
  "      mDebugMenuInstalled = true\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    awakeFromNib                                                                                                   *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  override func awakeFromNib () {\n"
  "  // NSLog (@\"%s %p %p\", __PRETTY_FUNCTION__, self, mDebugMenu) ;\n"
  "  //--- Allocation Window visibility\n"
  "    var df = NSUserDefaults.standardUserDefaults ()\n"
  "    mAllocationStatsWindowVisibleAtLaunch = df.boolForKey (\"PMAllocationDebug:allocationStatsWindowVisible\")\n"
  "    mDisplayFilter = df.integerForKey (\"PMAllocationDebug:allocationStatsDisplayFilter\")\n"
  "  //--- will call windowDidBecomeKey: and windowWillClose:\n"
  "    mAllocationStatsWindow\?.delegate = self\n"
  "  //--- Allocation stats window visibility at Launch\n"
  "    mAllocationStatsWindowVisibleAtLaunchCheckbox\?.state = Int (mAllocationStatsWindowVisibleAtLaunch)\n"
  "    mAllocationStatsWindowVisibleAtLaunchCheckbox\?.target = self\n"
  "    mAllocationStatsWindowVisibleAtLaunchCheckbox\?.action = \"setAllocationStatsWindowVisibleAtLaunchAction:\"\n"
  "    if mAllocationStatsWindowVisibleAtLaunch {\n"
  "      mAllocationStatsWindow\?.makeKeyAndOrderFront (nil)\n"
  "      installTimer ()\n"
  "    }\n"
  "    mDisplayFilterPopUpButton\?.selectItemAtIndex (mDisplayFilter)\n"
  "    mDisplayFilterPopUpButton\?.target = self\n"
  "    mDisplayFilterPopUpButton\?.action = \"setDisplayFilerAction:\"\n"
  "    let columns = mStatsTableView!.tableColumns as NSArray\n"
  "    if columns.count > 0 {\n"
  "      let firstColumn = columns [0] as! NSTableColumn\n"
  "      mStatsTableView!.sortDescriptors = NSArray (object:firstColumn.sortDescriptorPrototype!) as! [AnyObject]\n"
  "    }\n"
  "    pmInstallDebugMenu ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    installTimer                                                                                                   *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func installTimer () {\n"
  "    if mRefreshTimer == nil {\n"
  "      displayAllocation ()\n"
  "      mRefreshTimer = NSTimer (\n"
  "        timeInterval: 1.0,\n"
  "        target:self,\n"
  "        selector:\"refreshDisplay:\",\n"
  "        userInfo: nil,\n"
  "        repeats: true\n"
  "      )\n"
  "      NSRunLoop.currentRunLoop().addTimer (mRefreshTimer!, forMode:NSDefaultRunLoopMode)\n"
  "      mRefreshDisplay = true\n"
  "      displayAllocation ()\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    windowDidBecomeKey: create and validate timer                                                                  *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func windowDidBecomeKey (NSNotification) {\n"
  "    installTimer ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    windowWillClose: invalidate timer and release timer                                                            *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func windowWillClose (NSNotification) {\n"
  "    if let timer = mRefreshTimer {\n"
  "      timer.invalidate ()\n"
  "      mRefreshTimer = nil\n"
  "    }\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    refreshDisplay:                                                                                                *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func refreshDisplay (timer : NSTimer) {\n"
  "    displayAllocation ()\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    setAllocationStatsWindowVisibleAtLaunchAction:                                                                 *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  func setAllocationStatsWindowVisibleAtLaunchAction (AnyObject!) {\n"
  "    mAllocationStatsWindowVisibleAtLaunch = mAllocationStatsWindowVisibleAtLaunchCheckbox\?.state != 0\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    setDisplayFilerAction:                                                                                         *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  func setDisplayFilerAction (AnyObject!) {\n"
  "    if let displayFilterPopUpButton = mDisplayFilterPopUpButton {\n"
  "      mDisplayFilter = displayFilterPopUpButton.indexOfSelectedItem\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    applicationWillTerminateAction:                                                                                *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  func applicationWillTerminateAction (NSNotification) {\n"
  "    var ud = NSUserDefaults.standardUserDefaults ()\n"
  "    ud.setBool (mAllocationStatsWindowVisibleAtLaunch,\n"
  "      forKey:\"PMAllocationDebug:allocationStatsWindowVisible\"\n"
  "    )\n"
  "    ud.setInteger (mDisplayFilter,\n"
  "      forKey:\"PMAllocationDebug:allocationStatsDisplayFilter\"\n"
  "    )\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    performSnapShotAction:                                                                                         *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  @IBAction func performSnapShotAction (AnyObject) {\n"
  "    mSnapShotDictionary = NSMutableDictionary ()\n"
  "    for c : AnyObject in mAllocatedObjectCountByClass.allObjects  {\n"
  "      let className = c as! String\n"
  "      let liveByClass = mAllocatedObjectCountByClass.countForObject (className)\n"
  "      mSnapShotDictionary.setObject (liveByClass, forKey:className)\n"
  "    }\n"
  "    mRefreshDisplay = true\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    pmNoteObjectAllocation:                                                                                        *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  private func pmNoteObjectAllocation (inObjectClassName : NSString!) {\n"
  "  //NSLog (@\"objectClassName %@\", inObjectClassName) ;\n"
  "    mAllocatedObjectCountByClass.addObject (inObjectClassName)\n"
  "    mTotalAllocatedObjectCountByClass.addObject (inObjectClassName)\n"
  "    mRefreshDisplay = true\n"
  "    pmInstallDebugMenu ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    pmNoteObjectDeallocation:                                                                                      *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  private func pmNoteObjectDeallocation (inObjectClassName : NSString) {\n"
  "  // NSLog (@\"DEALLOC objectClassName %@\", inObjectClassName) ;\n"
  "    mAllocatedObjectCountByClass.removeObject (inObjectClassName)\n"
  "    mRefreshDisplay = true\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    displayAllocation                                                                                              *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  private func displayAllocation () {\n"
  "    if mRefreshDisplay {\n"
  "      mRefreshDisplay = false\n"
  "    //---\n"
  "      var liveObjectCount : Int = 0\n"
  "      var totalObjectCount : Int = 0\n"
  "    //---\n"
  "      mAllocationStatsDataSource = NSMutableArray ()\n"
  "      let allObjects = mTotalAllocatedObjectCountByClass.allObjects\n"
  "      for object : AnyObject in allObjects {\n"
  "        let liveByClass = mAllocatedObjectCountByClass.countForObject (object)\n"
  "        let totalByClass = mTotalAllocatedObjectCountByClass.countForObject (object)\n"
  "        let snapShotByClass : Int\? = mSnapShotDictionary.objectForKey (object)\?.unsignedIntegerValue\n"
  "        liveObjectCount += liveByClass ;\n"
  "        totalObjectCount += totalByClass ;\n"
  "        var display = true ;\n"
  "        if 1 == mDisplayFilter {\n"
  "          display = liveByClass != 0 ;\n"
  "        }else if 2 == mDisplayFilter {\n"
  "          display = liveByClass != snapShotByClass ;\n"
  "        }\n"
  "        if display {\n"
  "          mAllocationStatsDataSource.addObject (PMAllocationItemDisplay (\n"
  "            classname : object as! String,\n"
  "            allCount : totalByClass,\n"
  "            live : liveByClass,\n"
  "            snapshot : ((snapShotByClass != nil) \? snapShotByClass! : 0)\n"
  "          ))\n"
  "        }\n"
  "      }\n"
  "      mAllocatedObjectCount = liveObjectCount ;\n"
  "      mTotalAllocatedObjectCount = totalObjectCount ;\n"
  "    //---\n"
  "      let sortDescriptors : [AnyObject]! = mStatsTableView\?.sortDescriptors\n"
  "      mAllocationStatsDataSource.sortUsingDescriptors (sortDescriptors)\n"
  "      mStatsTableView\?.setDataSource (self)\n"
  "      mStatsTableView\?.reloadData ()\n"
  "    }\n"
  "  }\n"
  "\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    T A B L E   V I E W    D A T A    S O U R C E                                                                  *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  func tableView (aTableView : NSTableView,\n"
  "                  objectValueForTableColumn: NSTableColumn\?,\n"
  "                  row:NSInteger) -> AnyObject! {\n"
  "    var theRecord : PMAllocationItemDisplay = mAllocationStatsDataSource [row] as! PMAllocationItemDisplay\n"
  "    return theRecord.valueForKey (objectValueForTableColumn!.identifier as String)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  func numberOfRowsInTableView (NSTableView) -> Int {\n"
  "    return mAllocationStatsDataSource.count\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    tableView:sortDescriptorsDidChange: NSTableViewDataSource delegate                                             *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func tableView (aTableView: NSTableView,\n"
  "                 sortDescriptorsDidChange oldDescriptors: [AnyObject]) {\n"
  "    let sortDescriptors : [AnyObject]! = mStatsTableView\?.sortDescriptors\n"
  "    mAllocationStatsDataSource.sortUsingDescriptors (sortDescriptors)\n"
  "    mStatsTableView\?.reloadData ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_0_swift_5F_sources (
  "PMAllocationDebug.swift",
  "swift",
  true, // Text file
  17540, // Text length
  gWrapperFileContent_0_swift_5F_sources
) ;

//--- File '/PMAllocationDebug.xib'

const char * gWrapperFileContent_1_swift_5F_sources = "<\?xml version=\"1.0\" encoding=\"UTF-8\"\?>\n"
  "<archive type=\"com.apple.InterfaceBuilder3.Cocoa.XIB\" version=\"8.00\">\n"
  "\t<data>\n"
  "\t\t<int key=\"IBDocument.SystemTarget\">1090</int>\n"
  "\t\t<string key=\"IBDocument.SystemVersion\">14C109</string>\n"
  "\t\t<string key=\"IBDocument.InterfaceBuilderVersion\">7515.2</string>\n"
  "\t\t<string key=\"IBDocument.AppKitVersion\">1344.72</string>\n"
  "\t\t<string key=\"IBDocument.HIToolboxVersion\">757.30</string>\n"
  "\t\t<object class=\"NSMutableDictionary\" key=\"IBDocument.PluginVersions\">\n"
  "\t\t\t<string key=\"NS.key.0\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t<string key=\"NS.object.0\">7515.2</string>\n"
  "\t\t</object>\n"
  "\t\t<array key=\"IBDocument.IntegratedClassDependencies\">\n"
  "\t\t\t<string>NSButton</string>\n"
  "\t\t\t<string>NSButtonCell</string>\n"
  "\t\t\t<string>NSCustomObject</string>\n"
  "\t\t\t<string>NSMenu</string>\n"
  "\t\t\t<string>NSMenuItem</string>\n"
  "\t\t\t<string>NSNumberFormatter</string>\n"
  "\t\t\t<string>NSPopUpButton</string>\n"
  "\t\t\t<string>NSPopUpButtonCell</string>\n"
  "\t\t\t<string>NSScrollView</string>\n"
  "\t\t\t<string>NSScroller</string>\n"
  "\t\t\t<string>NSTableColumn</string>\n"
  "\t\t\t<string>NSTableHeaderView</string>\n"
  "\t\t\t<string>NSTableView</string>\n"
  "\t\t\t<string>NSTextField</string>\n"
  "\t\t\t<string>NSTextFieldCell</string>\n"
  "\t\t\t<string>NSTextView</string>\n"
  "\t\t\t<string>NSView</string>\n"
  "\t\t\t<string>NSWindowTemplate</string>\n"
  "\t\t</array>\n"
  "\t\t<array key=\"IBDocument.PluginDependencies\">\n"
  "\t\t\t<string>com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t</array>\n"
  "\t\t<object class=\"NSMutableDictionary\" key=\"IBDocument.Metadata\">\n"
  "\t\t\t<string key=\"NS.key.0\">PluginDependencyRecalculationVersion</string>\n"
  "\t\t\t<integer value=\"1\" key=\"NS.object.0\"/>\n"
  "\t\t</object>\n"
  "\t\t<array class=\"NSMutableArray\" key=\"IBDocument.RootObjects\" id=\"1000\">\n"
  "\t\t\t<object class=\"NSCustomObject\" id=\"1001\">\n"
  "\t\t\t\t<string key=\"NSClassName\">PMAllocationDebug</string>\n"
  "\t\t\t</object>\n"
  "\t\t\t<object class=\"NSCustomObject\" id=\"1003\">\n"
  "\t\t\t\t<string key=\"NSClassName\">FirstResponder</string>\n"
  "\t\t\t</object>\n"
  "\t\t\t<object class=\"NSCustomObject\" id=\"1004\">\n"
  "\t\t\t\t<string key=\"NSClassName\">PMApplication</string>\n"
  "\t\t\t</object>\n"
  "\t\t\t<object class=\"NSMenu\" id=\"832895925\">\n"
  "\t\t\t\t<string key=\"NSTitle\">Debug</string>\n"
  "\t\t\t\t<array class=\"NSMutableArray\" key=\"NSMenuItems\">\n"
  "\t\t\t\t\t<object class=\"NSMenuItem\" id=\"391542348\">\n"
  "\t\t\t\t\t\t<reference key=\"NSMenu\" ref=\"832895925\"/>\n"
  "\t\t\t\t\t\t<string key=\"NSTitle\">Show Allocation Stats</string>\n"
  "\t\t\t\t\t\t<string key=\"NSKeyEquiv\">,</string>\n"
  "\t\t\t\t\t\t<int key=\"NSKeyEquivModMask\">1310720</int>\n"
  "\t\t\t\t\t\t<int key=\"NSMnemonicLoc\">2147483647</int>\n"
  "\t\t\t\t\t\t<object class=\"NSCustomResource\" key=\"NSOnImage\" id=\"538130668\">\n"
  "\t\t\t\t\t\t\t<string key=\"NSClassName\">NSImage</string>\n"
  "\t\t\t\t\t\t\t<string key=\"NSResourceName\">NSMenuCheckmark</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSCustomResource\" key=\"NSMixedImage\" id=\"339904000\">\n"
  "\t\t\t\t\t\t\t<string key=\"NSClassName\">NSImage</string>\n"
  "\t\t\t\t\t\t\t<string key=\"NSResourceName\">NSMenuMixedState</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t</array>\n"
  "\t\t\t</object>\n"
  "\t\t\t<object class=\"NSWindowTemplate\" id=\"488945732\">\n"
  "\t\t\t\t<int key=\"NSWindowStyleMask\">15</int>\n"
  "\t\t\t\t<int key=\"NSWindowBacking\">2</int>\n"
  "\t\t\t\t<string key=\"NSWindowRect\">{{18, 448}, {532, 360}}</string>\n"
  "\t\t\t\t<int key=\"NSWTFlags\">1886913536</int>\n"
  "\t\t\t\t<string key=\"NSWindowTitle\">Allocation Stats</string>\n"
  "\t\t\t\t<string key=\"NSWindowClass\">NSWindow</string>\n"
  "\t\t\t\t<object class=\"NSMutableString\" key=\"NSViewClass\">\n"
  "\t\t\t\t\t<characters key=\"NS.bytes\">View</characters>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<nil key=\"NSUserInterfaceItemIdentifier\"/>\n"
  "\t\t\t\t<string key=\"NSWindowContentMinSize\">{532, 360}</string>\n"
  "\t\t\t\t<object class=\"NSView\" key=\"NSWindowView\" id=\"211121235\">\n"
  "\t\t\t\t\t<reference key=\"NSNextResponder\"/>\n"
  "\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t<object class=\"NSScrollView\" id=\"694864762\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">274</int>\n"
  "\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSClipView\" id=\"477363090\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">2322</int>\n"
  "\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableView\" id=\"54967480\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"477363090\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">4352</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSFrameSize\">{521, 262}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"477363090\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"584677815\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSControlAllowsExpansionToolTips\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableHeaderView\" key=\"NSHeaderView\" id=\"933801029\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"870119755\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSFrameSize\">{521, 17}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"870119755\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"385156970\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTableView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<object class=\"_NSCornerView\" key=\"NSCornerView\" id=\"385156970\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{521, 0}, {12, 17}}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"477363090\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSTableColumns\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableColumn\" id=\"665282369\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSIdentifier\">mClassname</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSWidth\">285.60546875</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMinWidth\">40</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMaxWidth\">1000</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableHeaderCell\" key=\"NSHeaderCell\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">75497536</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">2048</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Class Name</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSFont\" key=\"NSSupport\" id=\"26\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"IBIsSystemFont\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSSize\">11</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSfFlags\">3100</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSBackgroundColor\" id=\"185912087\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSWhite\">MC4zMzMzMzI5OQA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSTextColor\" id=\"700270135\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">headerTextColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSColor\" id=\"155403614\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSWhite\">MAA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSDataCell\" id=\"820684983\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">1143996481</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">1024</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Text Cell</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSBackgroundColor\" id=\"730430839\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSWhite\">MQA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSTextColor\" id=\"175780943\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">controlTextColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSColor\" ref=\"155403614\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSResizingMask\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSIsResizeable\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTableView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSSortDescriptor\" key=\"NSSortDescriptorPrototype\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSKey\">mClassname</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSAscending\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSSelector\">compare:</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableColumn\" id=\"856923415\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSIdentifier\">mSnapshot</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSWidth\">66</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMinWidth\">10</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMaxWidth\">3.4028234663852886e+38</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableHeaderCell\" key=\"NSHeaderCell\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">75497536</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134219776</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Snap Shot</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSBackgroundColor\" id=\"612056213\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">headerColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSColor\" ref=\"730430839\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"700270135\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSDataCell\" id=\"608501593\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">337641536</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134223872</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Text Cell</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSBackgroundColor\" id=\"1044488591\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">controlBackgroundColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSColor\" id=\"122981434\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSWhite\">MC42NjY2NjY2NjY3AA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSResizingMask\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSIsResizeable\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTableView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSSortDescriptor\" key=\"NSSortDescriptorPrototype\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSKey\">mSnapshot</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSAscending\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSSelector\">compare:</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableColumn\" id=\"404121835\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSIdentifier\">mLive</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSWidth\">79</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMinWidth\">40</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMaxWidth\">1000</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableHeaderCell\" key=\"NSHeaderCell\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">75497536</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134219776</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Live</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"185912087\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"700270135\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSDataCell\" id=\"590032922\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">1143996481</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134218752</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Text Cell</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"730430839\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTableView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSSortDescriptor\" key=\"NSSortDescriptorPrototype\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSKey\">mLive</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSAscending\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSSelector\">compare:</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableColumn\" id=\"610270419\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSIdentifier\">mAllCount</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSWidth\">78.081050000000005</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMinWidth\">31.081050000000001</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSMaxWidth\">1000</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTableHeaderCell\" key=\"NSHeaderCell\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">75497536</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134219776</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Total</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"612056213\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"700270135\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSDataCell\" id=\"236796732\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">1143996481</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134218752</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSContents\">Text Cell</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"1044488591\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTableView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSSortDescriptor\" key=\"NSSortDescriptorPrototype\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSKey\">mAllCount</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSAscending\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSSelector\">compare:</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSIntercellSpacingWidth\">3</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSIntercellSpacingHeight\">2</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"1044488591\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSGridColor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">gridColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSColor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSWhite\">MC41AA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSRowHeight\">14</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSTvFlags\">-490733568</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSDelegate\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSDataSource\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSGridStyleMask\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColumnAutoresizingStyle\">5</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSDraggingSourceMaskForLocal\">15</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSDraggingSourceMaskForNonLocal\">0</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<bool key=\"NSAllowsTypeSelect\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSTableViewDraggingDestinationStyle\">0</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSTableViewGroupRowStyle\">1</int>\n"
  "\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{0, 17}, {521, 262}}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSDocView\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSBGColor\" ref=\"1044488591\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NScvFlags\">4</int>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAutomaticallyAdjustsContentInsets\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSScroller\" id=\"584677815\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{521, 17}, {11, 262}}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"466601769\"/>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSControlAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSControlTarget\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSsFlags\">256</int>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSPercent\">0.95263160000000002</double>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSScroller\" id=\"466601769\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{0, 279}, {521, 11}}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\"/>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSControlAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSControlTarget\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSsFlags\">257</int>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSCurValue\">1</double>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSPercent\">0.97565543071161054</double>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSClipView\" id=\"870119755\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">2338</int>\n"
  "\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t\t\t\t\t<reference ref=\"933801029\"/>\n"
  "\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrameSize\">{521, 17}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"933801029\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSDocView\" ref=\"933801029\"/>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAutomaticallyAdjustsContentInsets\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<reference ref=\"385156970\"/>\n"
  "\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrameSize\">{532, 290}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"870119755\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSsFlags\">133168</int>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSVScroller\" ref=\"584677815\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSHScroller\" ref=\"466601769\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSContentView\" ref=\"477363090\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSHeaderClipView\" ref=\"870119755\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSCornerView\" ref=\"385156970\"/>\n"
  "\t\t\t\t\t\t\t<bytes key=\"NSScrollAmts\">QSAAAEEgAABBgAAAQYAAAA</bytes>\n"
  "\t\t\t\t\t\t\t<double key=\"NSMinMagnification\">0.25</double>\n"
  "\t\t\t\t\t\t\t<double key=\"NSMaxMagnification\">4</double>\n"
  "\t\t\t\t\t\t\t<double key=\"NSMagnification\">1</double>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSTextField\" id=\"381938415\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{404, 308}, {111, 14}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSCell\" id=\"868904438\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">-2008940544</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">\xE2""\x80""\xA6""live count\xE2""\x80""\xA6"" </string>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSFont\" key=\"NSSupport\" id=\"27\">\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"IBIsSystemFont\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSSize\">11</double>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSfFlags\">3357</int>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSNumberFormatter\" key=\"NSFormatter\" id=\"18967862\">\n"
  "\t\t\t\t\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"NS.attributes\">\n"
  "\t\t\t\t\t\t\t\t\t\t<boolean value=\"YES\" key=\"allowsFloats\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<integer value=\"1040\" key=\"formatterBehavior\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<object class=\"NSLocale\" key=\"locale\" id=\"866676299\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NS.identifier\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"negativeInfinitySymbol\">-\xE2""\x88""\x9E""</string>\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"nilSymbol\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"positiveInfinitySymbol\">+\xE2""\x88""\x9E""</string>\n"
  "\t\t\t\t\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.positiveformat\">#</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.negativeformat\">#</string>\n"
  "\t\t\t\t\t\t\t\t\t<nil key=\"NS.positiveattrs\"/>\n"
  "\t\t\t\t\t\t\t\t\t<nil key=\"NS.negativeattrs\"/>\n"
  "\t\t\t\t\t\t\t\t\t<nil key=\"NS.zero\"/>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSAttributedString\" key=\"NS.nil\">\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"NSString\"/>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSAttributedString\" key=\"NS.nan\">\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"NSString\">NaN</string>\n"
  "\t\t\t\t\t\t\t\t\t\t<dictionary key=\"NSAttributes\" id=\"546668749\"/>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSDecimalNumberPlaceholder\" key=\"NS.min\" id=\"446279750\">\n"
  "\t\t\t\t\t\t\t\t\t\t<int key=\"NS.exponent\">0</int>\n"
  "\t\t\t\t\t\t\t\t\t\t<int key=\"NS.length\">0</int>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.negative\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.compact\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t<int key=\"NS.mantissa.bo\">1</int>\n"
  "\t\t\t\t\t\t\t\t\t\t<bytes key=\"NS.mantissa\">AAAAAAAAAAAAAAAAAAAAAA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NS.max\" ref=\"446279750\"/>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSDecimalNumberHandler\" key=\"NS.rounding\">\n"
  "\t\t\t\t\t\t\t\t\t\t<int key=\"NS.roundingmode\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.raise.overflow\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.raise.underflow\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.raise.dividebyzero\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.decimal\">.</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.thousand\">,</string>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NS.hasthousands\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NS.localized\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NS.allowsfloats\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"381938415\"/>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSBackgroundColor\" id=\"277825497\">\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">controlColor</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSColor\" ref=\"122981434\"/>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t<int key=\"NSTextFieldAlignmentRectInsetsVersion\">1</int>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSPopUpButton\" id=\"518079538\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{78, 306}, {164, 19}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"336406046\"/>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSPopUpButtonCell\" key=\"NSCell\" id=\"92687822\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">-2076180416</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134350848</int>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"518079538\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags\">-2038284288</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags2\">6</int>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSFont\" key=\"NSAlternateImage\">\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSName\">LucidaGrande</string>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSSize\">11</double>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSfFlags\">16</int>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSAlternateContents\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSKeyEquivalent\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicDelay\">400</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicInterval\">75</int>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSMenuItem\" key=\"NSMenuItem\" id=\"555303939\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSMenu\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSTitle\">All Classes</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSKeyEquiv\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSMnemonicLoc\">2147483647</int>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSState\">1</int>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSOnImage\" ref=\"538130668\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSMixedImage\" ref=\"339904000\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_popUpItemAction:</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"92687822\"/>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<bool key=\"NSMenuItemRespectAlignment\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSMenu\" key=\"NSMenu\" id=\"1027996105\">\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSTitle\">OtherViews</string>\n"
  "\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSMenuItems\">\n"
  "\t\t\t\t\t\t\t\t\t\t<reference ref=\"555303939\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<object class=\"NSMenuItem\" id=\"590354082\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSMenu\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSTitle\">Allocated Classes</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSKeyEquiv\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSMnemonicLoc\">2147483647</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSOnImage\" ref=\"538130668\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSMixedImage\" ref=\"339904000\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_popUpItemAction:</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"92687822\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t<object class=\"NSMenuItem\" id=\"951103194\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSMenu\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSTitle\">Differences with Snap Shot</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSKeyEquiv\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSMnemonicLoc\">2147483647</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSOnImage\" ref=\"538130668\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSMixedImage\" ref=\"339904000\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_popUpItemAction:</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"92687822\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPreferredEdge\">1</int>\n"
  "\t\t\t\t\t\t\t\t<bool key=\"NSUsesItemFromMenu\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t<bool key=\"NSAltersState\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSArrowPosition\">2</int>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSTextField\" id=\"146764676\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{17, 308}, {56, 14}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"518079538\"/>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSCell\" id=\"1044367949\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">4325376</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">Display:</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"27\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"146764676\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"277825497\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t<int key=\"NSTextFieldAlignmentRectInsetsVersion\">1</int>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSButton\" id=\"477594254\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{19, 333}, {125, 18}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"733945224\"/>\n"
  "\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSButtonCell\" key=\"NSCell\" id=\"255990638\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">-2080374784</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">131072</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">Visible At Launch</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSCellIdentifier\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"477594254\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags\">1211912448</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags2\">2</int>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSCustomResource\" key=\"NSNormalImage\">\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSClassName\">NSImage</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSResourceName\">NSSwitch</string>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSButtonImageSource\" key=\"NSAlternateImage\">\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSImageName\">NSSwitch</string>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSAlternateContents\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSKeyEquivalent\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicDelay\">200</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicInterval\">25</int>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSTextField\" id=\"336406046\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{255, 307}, {147, 15}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"381938415\"/>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSCell\" id=\"403189114\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">71434240</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">Currently Allocated:</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"27\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"336406046\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"277825497\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t<int key=\"NSTextFieldAlignmentRectInsetsVersion\">1</int>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSTextField\" id=\"300812263\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{404, 335}, {111, 14}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"146764676\"/>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSCell\" id=\"316229116\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">-2008940544</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">\xE2""\x80""\xA6""total count\xE2""\x80""\xA6"" </string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"27\"/>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSNumberFormatter\" key=\"NSFormatter\" id=\"920445510\">\n"
  "\t\t\t\t\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"NS.attributes\">\n"
  "\t\t\t\t\t\t\t\t\t\t<boolean value=\"YES\" key=\"allowsFloats\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<integer value=\"1040\" key=\"formatterBehavior\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<reference key=\"locale\" ref=\"866676299\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"negativeInfinitySymbol\">-\xE2""\x88""\x9E""</string>\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"nilSymbol\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"positiveInfinitySymbol\">+\xE2""\x88""\x9E""</string>\n"
  "\t\t\t\t\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.positiveformat\">#</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.negativeformat\">#</string>\n"
  "\t\t\t\t\t\t\t\t\t<nil key=\"NS.positiveattrs\"/>\n"
  "\t\t\t\t\t\t\t\t\t<nil key=\"NS.negativeattrs\"/>\n"
  "\t\t\t\t\t\t\t\t\t<nil key=\"NS.zero\"/>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSAttributedString\" key=\"NS.nil\">\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"NSString\"/>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSAttributedString\" key=\"NS.nan\">\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"NSString\">NaN</string>\n"
  "\t\t\t\t\t\t\t\t\t\t<reference key=\"NSAttributes\" ref=\"546668749\"/>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NS.min\" ref=\"446279750\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NS.max\" ref=\"446279750\"/>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSDecimalNumberHandler\" key=\"NS.rounding\">\n"
  "\t\t\t\t\t\t\t\t\t\t<int key=\"NS.roundingmode\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.raise.overflow\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.raise.underflow\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t\t<bool key=\"NS.raise.dividebyzero\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.decimal\">.</string>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NS.thousand\">,</string>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NS.hasthousands\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NS.localized\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NS.allowsfloats\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"300812263\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"277825497\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t<int key=\"NSTextFieldAlignmentRectInsetsVersion\">1</int>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSTextField\" id=\"203767798\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{255, 334}, {147, 15}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"300812263\"/>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSTextFieldCell\" key=\"NSCell\" id=\"621467730\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">71434240</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">Total Allocated:</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"27\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"203767798\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"277825497\"/>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSTextColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t<int key=\"NSTextFieldAlignmentRectInsetsVersion\">1</int>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSButton\" id=\"733945224\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{145, 327}, {102, 28}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"203767798\"/>\n"
  "\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSButtonCell\" key=\"NSCell\" id=\"413400078\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134348800</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">Snap Shot</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSCellIdentifier\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"733945224\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags\">-2038284288</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags2\">129</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSAlternateContents\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSKeyEquivalent\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicDelay\">200</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicInterval\">25</int>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</array>\n"
  "\t\t\t\t\t<string key=\"NSFrameSize\">{532, 360}</string>\n"
  "\t\t\t\t\t<reference key=\"NSSuperview\"/>\n"
  "\t\t\t\t\t<reference key=\"NSWindow\"/>\n"
  "\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"477594254\"/>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<string key=\"NSScreenRect\">{{0, 0}, {2560, 1418}}</string>\n"
  "\t\t\t\t<string key=\"NSMinSize\">{532, 382}</string>\n"
  "\t\t\t\t<string key=\"NSMaxSize\">{10000000000000, 10000000000000}</string>\n"
  "\t\t\t\t<string key=\"NSFrameAutosaveName\">PMAllactionStatsWindowLocation</string>\n"
  "\t\t\t\t<bool key=\"NSWindowIsRestorable\">YES</bool>\n"
  "\t\t\t</object>\n"
  "\t\t\t<object class=\"NSWindowTemplate\" id=\"786576755\">\n"
  "\t\t\t\t<int key=\"NSWindowStyleMask\">15</int>\n"
  "\t\t\t\t<int key=\"NSWindowBacking\">2</int>\n"
  "\t\t\t\t<string key=\"NSWindowRect\">{{283, 305}, {480, 270}}</string>\n"
  "\t\t\t\t<int key=\"NSWTFlags\">1685586944</int>\n"
  "\t\t\t\t<string key=\"NSWindowTitle\">Transient Event Log</string>\n"
  "\t\t\t\t<string key=\"NSWindowClass\">NSWindow</string>\n"
  "\t\t\t\t<nil key=\"NSViewClass\"/>\n"
  "\t\t\t\t<nil key=\"NSUserInterfaceItemIdentifier\"/>\n"
  "\t\t\t\t<object class=\"NSView\" key=\"NSWindowView\" id=\"601444826\">\n"
  "\t\t\t\t\t<nil key=\"NSNextResponder\"/>\n"
  "\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t<object class=\"NSScrollView\" id=\"203471625\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">274</int>\n"
  "\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSClipView\" id=\"556254067\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">2322</int>\n"
  "\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSSubviews\">\n"
  "\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextView\" id=\"542085440\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"556254067\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">2322</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSFrameSize\">{465, 236}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"556254067\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"885678129\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:13</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextContainer\" key=\"NSTextContainer\" id=\"436829596\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSLayoutManager\" key=\"NSLayoutManager\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextStorage\" key=\"NSTextStorage\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSMutableString\" key=\"NSString\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<characters key=\"NS.bytes\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<nil key=\"NSDelegate\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSTextContainers\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference ref=\"436829596\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSLMFlags\">38</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<nil key=\"NSDelegate\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSTextView\" ref=\"542085440\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<double key=\"NSWidth\">465</double>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSTCFlags\">1</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSTextViewSharedData\" key=\"NSSharedData\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSFlags\">67111169</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSTextCheckingTypes\">0</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<nil key=\"NSMarkedAttributes\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSBackgroundColor\" ref=\"730430839\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<dictionary key=\"NSSelectedAttributes\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSBackgroundColor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">selectedTextBackgroundColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSColor\" ref=\"122981434\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSColor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSCatalogName\">System</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSColorName\">selectedTextColor</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSColor\" ref=\"155403614\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<reference key=\"NSInsertionColor\" ref=\"175780943\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<dictionary key=\"NSLinkAttributes\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSColor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">1</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSRGB\">MCAwIDEAA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSCursor\" key=\"NSCursor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSHotSpot\">{8, -8}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSCursorType\">13</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<integer value=\"1\" key=\"NSUnderline\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<nil key=\"NSDefaultParagraphStyle\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<nil key=\"NSTextFinder\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSPreferredTextFinderStyle\">2</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSTVFlags\">6</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<string key=\"NSMaxSize\">{465, 10000000}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<nil key=\"NSDelegate\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{1, 1}, {465, 236}}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"542085440\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:11</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSDocView\" ref=\"542085440\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSBGColor\" ref=\"730430839\"/>\n"
  "\t\t\t\t\t\t\t\t\t<object class=\"NSCursor\" key=\"NSCursor\">\n"
  "\t\t\t\t\t\t\t\t\t\t<string key=\"NSHotSpot\">{4, 5}</string>\n"
  "\t\t\t\t\t\t\t\t\t\t<object class=\"NSImage\" key=\"NSImage\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSImageFlags\">12582912</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"NSReps\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<array>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<integer value=\"0\"/>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSBitmapImageRep\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSData\" key=\"NSTIFFRepresentation\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NS.bytes\">TU0AKgAAAHCAFUqgBVKsAAAAwdVQUqwaEQeIRGJRGFlYqwWLQ+JxuOQpVRmEx2RROKwOQyOUQSPyaUym\n"
  "SxqWyKXyeYxyZzWbSuJTScRCbz2Nz+gRKhUOfTqeUai0OSxiWTiBQSHSGFquGwekxyAgAAAOAQAAAwAA\n"
  "AAEAEAAAAQEAAwAAAAEAEAAAAQIAAwAAAAIACAAIAQMAAwAAAAEABQAAAQYAAwAAAAEAAQAAAREABAAA\n"
  "AAEAAAAIARIAAwAAAAEAAQAAARUAAwAAAAEAAgAAARYAAwAAAAEAEAAAARcABAAAAAEAAABnARwAAwAA\n"
  "AAEAAQAAAT0AAwAAAAEAAgAAAVIAAwAAAAEAAQAAAVMAAwAAAAIAAQABAAAAAA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t\t\t\t\t<object class=\"NSColor\" key=\"NSColor\">\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<int key=\"NSColorSpace\">3</int>\n"
  "\t\t\t\t\t\t\t\t\t\t\t\t<bytes key=\"NSWhite\">MCAwAA</bytes>\n"
  "\t\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NScvFlags\">4</int>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAutomaticallyAdjustsContentInsets\">YES</bool>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSScroller\" id=\"491184262\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">256</int>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{466, 1}, {15, 236}}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:85</string>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSControlAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSControlTarget\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSCurValue\">1</double>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSPercent\">0.85256409645080566</double>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t\t<object class=\"NSScroller\" id=\"885678129\">\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSvFlags\">-2147483392</int>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSFrame\">{{-100, -100}, {87, 18}}</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"556254067\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:33</string>\n"
  "\t\t\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSControlAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSControlTarget\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<int key=\"NSsFlags\">1</int>\n"
  "\t\t\t\t\t\t\t\t\t<reference key=\"NSTarget\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t\t\t<string key=\"NSAction\">_doScroller:</string>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSCurValue\">1</double>\n"
  "\t\t\t\t\t\t\t\t\t<double key=\"NSPercent\">0.94565218687057495</double>\n"
  "\t\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{-1, -1}, {482, 238}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"556254067\"/>\n"
  "\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t<int key=\"NSsFlags\">133138</int>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSVScroller\" ref=\"491184262\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSHScroller\" ref=\"885678129\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSContentView\" ref=\"556254067\"/>\n"
  "\t\t\t\t\t\t\t<double key=\"NSMinMagnification\">0.25</double>\n"
  "\t\t\t\t\t\t\t<double key=\"NSMaxMagnification\">4</double>\n"
  "\t\t\t\t\t\t\t<double key=\"NSMagnification\">1</double>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"NSButton\" id=\"10925177\">\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextResponder\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t\t\t<int key=\"NSvFlags\">268</int>\n"
  "\t\t\t\t\t\t\t<string key=\"NSFrame\">{{15, 239}, {80, 28}}</string>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSSuperview\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSEnabled\">YES</bool>\n"
  "\t\t\t\t\t\t\t<object class=\"NSButtonCell\" key=\"NSCell\" id=\"385044288\">\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags\">67108864</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSCellFlags2\">134348800</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSContents\">Clear</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSSupport\" ref=\"26\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSCellIdentifier\">_NS:9</string>\n"
  "\t\t\t\t\t\t\t\t<reference key=\"NSControlView\" ref=\"10925177\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags\">-2038284288</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSButtonFlags2\">129</int>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSAlternateContents\"/>\n"
  "\t\t\t\t\t\t\t\t<string key=\"NSKeyEquivalent\"/>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicDelay\">200</int>\n"
  "\t\t\t\t\t\t\t\t<int key=\"NSPeriodicInterval\">25</int>\n"
  "\t\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t\t<bool key=\"NSAllowsLogicalLayoutDirection\">NO</bool>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</array>\n"
  "\t\t\t\t\t<string key=\"NSFrameSize\">{480, 270}</string>\n"
  "\t\t\t\t\t<reference key=\"NSNextKeyView\" ref=\"10925177\"/>\n"
  "\t\t\t\t\t<string key=\"NSReuseIdentifierKey\">_NS:20</string>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<string key=\"NSScreenRect\">{{0, 0}, {2560, 1418}}</string>\n"
  "\t\t\t\t<string key=\"NSMaxSize\">{10000000000000, 10000000000000}</string>\n"
  "\t\t\t\t<string key=\"NSFrameAutosaveName\">TransientEventLog</string>\n"
  "\t\t\t\t<bool key=\"NSWindowIsRestorable\">YES</bool>\n"
  "\t\t\t</object>\n"
  "\t\t</array>\n"
  "\t\t<object class=\"IBObjectContainer\" key=\"IBDocument.Objects\">\n"
  "\t\t\t<array key=\"connectionRecords\">\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mTransientEventExplorerWindow</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1004\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"786576755\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">223</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mTransientEventExplorerTextView</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1004\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"542085440\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">224</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBActionConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">clearTransientEventLogWindow:</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1004\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"10925177\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">225</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mDebugMenu</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"832895925\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">10</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mAllocationStatsWindow</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"488945732\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">60</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mStatsTableView</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">108</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mAllocationStatsWindowVisibleAtLaunchCheckbox</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"477594254\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">152</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mDisplayFilterPopUpButton</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"518079538\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">153</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mCurrentlyAllocatedObjectCountTextField</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"381938415\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">186</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mTotalAllocatedObjectCountTextField</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"300812263\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">187</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBOutletConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">mPerformSnapShotButton</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"733945224\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">209</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBActionConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">performSnapShotAction:</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"733945224\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">214</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBConnectionRecord\">\n"
  "\t\t\t\t\t<object class=\"IBActionConnection\" key=\"connection\">\n"
  "\t\t\t\t\t\t<string key=\"label\">makeKeyAndOrderFront:</string>\n"
  "\t\t\t\t\t\t<reference key=\"source\" ref=\"488945732\"/>\n"
  "\t\t\t\t\t\t<reference key=\"destination\" ref=\"391542348\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<int key=\"connectionID\">213</int>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t</array>\n"
  "\t\t\t<object class=\"IBMutableOrderedSet\" key=\"objectRecords\">\n"
  "\t\t\t\t<array key=\"orderedObjects\">\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">0</int>\n"
  "\t\t\t\t\t\t<array key=\"object\" id=\"0\"/>\n"
  "\t\t\t\t\t\t<reference key=\"children\" ref=\"1000\"/>\n"
  "\t\t\t\t\t\t<nil key=\"parent\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">-2</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"1001\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"0\"/>\n"
  "\t\t\t\t\t\t<string key=\"objectName\">File's Owner</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">-1</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"1003\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"0\"/>\n"
  "\t\t\t\t\t\t<string key=\"objectName\">First Responder</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">-3</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"1004\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"0\"/>\n"
  "\t\t\t\t\t\t<string key=\"objectName\">Application</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">6</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"832895925\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"391542348\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"0\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">7</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"391542348\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"832895925\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">13</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"488945732\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"0\"/>\n"
  "\t\t\t\t\t\t<string key=\"objectName\">AllocationStats Window</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">14</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"518079538\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"146764676\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"381938415\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"477594254\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"336406046\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"300812263\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"203767798\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"733945224\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"488945732\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">15</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"933801029\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"466601769\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"584677815\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">16</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"518079538\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"92687822\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">17</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"146764676\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"1044367949\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">18</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"381938415\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"868904438\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">23</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"868904438\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"18967862\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"381938415\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">24</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"1044367949\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"146764676\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">25</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"92687822\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"1027996105\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"518079538\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">26</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"555303939\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"590354082\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"951103194\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"92687822\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">27</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"555303939\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">28</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"590354082\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">29</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"933801029\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">30</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"466601769\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">31</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"584677815\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">32</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"665282369\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"404121835\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"610270419\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"856923415\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"694864762\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">33</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"665282369\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"820684983\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">34</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"404121835\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"590032922\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">35</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"610270419\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"236796732\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">36</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"236796732\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"610270419\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">37</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"590032922\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"404121835\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">38</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"820684983\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"665282369\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">107</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"18967862\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"868904438\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">138</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"477594254\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"255990638\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">139</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"255990638\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"477594254\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">154</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"336406046\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"403189114\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">156</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"403189114\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"336406046\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">171</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"300812263\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"316229116\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">172</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"203767798\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"621467730\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">175</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"621467730\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"203767798\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">177</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"316229116\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"920445510\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"300812263\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">178</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"920445510\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"316229116\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">207</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"733945224\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"413400078\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"211121235\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">208</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"413400078\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"733945224\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">210</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"856923415\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"608501593\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"54967480\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">211</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"608501593\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"856923415\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">212</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"951103194\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"1027996105\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">215</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"786576755\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"601444826\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"0\"/>\n"
  "\t\t\t\t\t\t<string key=\"objectName\">Transient Event Log</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">216</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"10925177\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"786576755\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">217</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"10925177\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"385044288\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">218</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t\t<array class=\"NSMutableArray\" key=\"children\">\n"
  "\t\t\t\t\t\t\t<reference ref=\"491184262\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"885678129\"/>\n"
  "\t\t\t\t\t\t\t<reference ref=\"542085440\"/>\n"
  "\t\t\t\t\t\t</array>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"601444826\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">219</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"491184262\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">220</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"885678129\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">221</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"542085440\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"203471625\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"IBObjectRecord\">\n"
  "\t\t\t\t\t\t<int key=\"objectID\">222</int>\n"
  "\t\t\t\t\t\t<reference key=\"object\" ref=\"385044288\"/>\n"
  "\t\t\t\t\t\t<reference key=\"parent\" ref=\"10925177\"/>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t</array>\n"
  "\t\t\t</object>\n"
  "\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"flattenedProperties\">\n"
  "\t\t\t\t<string key=\"-1.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"-2.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"-3.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1041\" key=\"107.IBNumberFormatterBehaviorMetadataKey\"/>\n"
  "\t\t\t\t<boolean value=\"YES\" key=\"107.IBNumberFormatterLocalizesFormatMetadataKey\"/>\n"
  "\t\t\t\t<string key=\"107.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"13.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"13.IBWindowTemplateEditedContentRect\">{{110, 1018}, {532, 360}}</string>\n"
  "\t\t\t\t<string key=\"138.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"139.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"14.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"15.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"154.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"156.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"16.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"17.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"171.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"172.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"175.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"177.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1041\" key=\"178.IBNumberFormatterBehaviorMetadataKey\"/>\n"
  "\t\t\t\t<boolean value=\"YES\" key=\"178.IBNumberFormatterLocalizesFormatMetadataKey\"/>\n"
  "\t\t\t\t<string key=\"178.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"18.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"207.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"208.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"210.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"211.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"212.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"215.IBPersistedLastKnownCanvasPosition\">{109, 304}</string>\n"
  "\t\t\t\t<string key=\"215.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<boolean value=\"NO\" key=\"215.NSWindowTemplate.visibleAtLaunch\"/>\n"
  "\t\t\t\t<reference key=\"216.IBNSViewMetadataConstraints\" ref=\"0\"/>\n"
  "\t\t\t\t<reference key=\"216.IBNSViewMetadataGestureRecognizers\" ref=\"0\"/>\n"
  "\t\t\t\t<string key=\"216.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"217.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"218.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"219.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"220.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"221.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"222.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"23.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"24.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"25.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"26.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"27.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"28.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"29.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1\" key=\"29.IBShouldRemoveOnLegacySave\"/>\n"
  "\t\t\t\t<string key=\"30.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1\" key=\"30.IBShouldRemoveOnLegacySave\"/>\n"
  "\t\t\t\t<string key=\"31.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1\" key=\"31.IBShouldRemoveOnLegacySave\"/>\n"
  "\t\t\t\t<string key=\"32.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"33.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"34.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"35.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"36.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1\" key=\"36.IBShouldRemoveOnLegacySave\"/>\n"
  "\t\t\t\t<string key=\"37.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1\" key=\"37.IBShouldRemoveOnLegacySave\"/>\n"
  "\t\t\t\t<string key=\"38.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<integer value=\"1\" key=\"38.IBShouldRemoveOnLegacySave\"/>\n"
  "\t\t\t\t<string key=\"6.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t\t<string key=\"7.IBPluginDependency\">com.apple.InterfaceBuilder.CocoaPlugin</string>\n"
  "\t\t\t</dictionary>\n"
  "\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"unlocalizedProperties\"/>\n"
  "\t\t\t<nil key=\"activeLocalization\"/>\n"
  "\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"localizations\"/>\n"
  "\t\t\t<nil key=\"sourceID\"/>\n"
  "\t\t\t<int key=\"maxID\">225</int>\n"
  "\t\t</object>\n"
  "\t\t<object class=\"IBClassDescriber\" key=\"IBDocument.Classes\">\n"
  "\t\t\t<array class=\"NSMutableArray\" key=\"referencedPartialClassDescriptions\">\n"
  "\t\t\t\t<object class=\"IBPartialClassDescription\">\n"
  "\t\t\t\t\t<string key=\"className\">PMAllocationDebug</string>\n"
  "\t\t\t\t\t<string key=\"superclassName\">NSObject</string>\n"
  "\t\t\t\t\t<object class=\"NSMutableDictionary\" key=\"actions\">\n"
  "\t\t\t\t\t\t<string key=\"NS.key.0\">performSnapShotAction:</string>\n"
  "\t\t\t\t\t\t<string key=\"NS.object.0\">id</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<object class=\"NSMutableDictionary\" key=\"actionInfosByName\">\n"
  "\t\t\t\t\t\t<string key=\"NS.key.0\">performSnapShotAction:</string>\n"
  "\t\t\t\t\t\t<object class=\"IBActionInfo\" key=\"NS.object.0\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">performSnapShotAction:</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">id</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"outlets\">\n"
  "\t\t\t\t\t\t<string key=\"mAllocationStatsWindow\">NSWindow</string>\n"
  "\t\t\t\t\t\t<string key=\"mAllocationStatsWindowVisibleAtLaunchCheckbox\">NSButton</string>\n"
  "\t\t\t\t\t\t<string key=\"mCurrentlyAllocatedObjectCountTextField\">NSTextField</string>\n"
  "\t\t\t\t\t\t<string key=\"mDebugMenu\">NSMenu</string>\n"
  "\t\t\t\t\t\t<string key=\"mDisplayFilterPopUpButton\">NSPopUpButton</string>\n"
  "\t\t\t\t\t\t<string key=\"mPerformSnapShotButton\">NSButton</string>\n"
  "\t\t\t\t\t\t<string key=\"mStatsTableView\">NSTableView</string>\n"
  "\t\t\t\t\t\t<string key=\"mTotalAllocatedObjectCountTextField\">NSTextField</string>\n"
  "\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"toOneOutletInfosByName\">\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mAllocationStatsWindow\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mAllocationStatsWindow</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSWindow</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mAllocationStatsWindowVisibleAtLaunchCheckbox\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mAllocationStatsWindowVisibleAtLaunchCheckbox</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSButton</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mCurrentlyAllocatedObjectCountTextField\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mCurrentlyAllocatedObjectCountTextField</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSTextField</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mDebugMenu\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mDebugMenu</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSMenu</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mDisplayFilterPopUpButton\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mDisplayFilterPopUpButton</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSPopUpButton</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mPerformSnapShotButton\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mPerformSnapShotButton</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSButton</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mStatsTableView\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mStatsTableView</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSTableView</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mTotalAllocatedObjectCountTextField\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mTotalAllocatedObjectCountTextField</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSTextField</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t<object class=\"IBClassDescriptionSource\" key=\"sourceIdentifier\">\n"
  "\t\t\t\t\t\t<string key=\"majorKey\">IBProjectSource</string>\n"
  "\t\t\t\t\t\t<string key=\"minorKey\">../01-simple-preferences/PMAllocationDebug.swift</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t\t<object class=\"IBPartialClassDescription\">\n"
  "\t\t\t\t\t<string key=\"className\">PMApplication</string>\n"
  "\t\t\t\t\t<string key=\"superclassName\">NSApplication</string>\n"
  "\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"actions\">\n"
  "\t\t\t\t\t\t<string key=\"clearTransientEventLogWindow:\">NSObject</string>\n"
  "\t\t\t\t\t\t<string key=\"showTransientEventLogWindow:\">NSObject</string>\n"
  "\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"actionInfosByName\">\n"
  "\t\t\t\t\t\t<object class=\"IBActionInfo\" key=\"clearTransientEventLogWindow:\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">clearTransientEventLogWindow:</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSObject</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBActionInfo\" key=\"showTransientEventLogWindow:\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">showTransientEventLogWindow:</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSObject</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"outlets\">\n"
  "\t\t\t\t\t\t<string key=\"mTransientEventExplorerTextView\">NSTextView</string>\n"
  "\t\t\t\t\t\t<string key=\"mTransientEventExplorerWindow\">NSWindow</string>\n"
  "\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t<dictionary class=\"NSMutableDictionary\" key=\"toOneOutletInfosByName\">\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mTransientEventExplorerTextView\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mTransientEventExplorerTextView</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSTextView</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t\t<object class=\"IBToOneOutletInfo\" key=\"mTransientEventExplorerWindow\">\n"
  "\t\t\t\t\t\t\t<string key=\"name\">mTransientEventExplorerWindow</string>\n"
  "\t\t\t\t\t\t\t<string key=\"candidateClassName\">NSWindow</string>\n"
  "\t\t\t\t\t\t</object>\n"
  "\t\t\t\t\t</dictionary>\n"
  "\t\t\t\t\t<object class=\"IBClassDescriptionSource\" key=\"sourceIdentifier\">\n"
  "\t\t\t\t\t\t<string key=\"majorKey\">IBProjectSource</string>\n"
  "\t\t\t\t\t\t<string key=\"minorKey\">../01-simple-preferences/PMApplication.swift</string>\n"
  "\t\t\t\t\t</object>\n"
  "\t\t\t\t</object>\n"
  "\t\t\t</array>\n"
  "\t\t</object>\n"
  "\t\t<int key=\"IBDocument.localizationMode\">0</int>\n"
  "\t\t<string key=\"IBDocument.TargetRuntimeIdentifier\">IBCocoaFramework</string>\n"
  "\t\t<bool key=\"IBDocument.previouslyAttemptedUpgradeToXcode5\">NO</bool>\n"
  "\t\t<object class=\"NSMutableDictionary\" key=\"IBDocument.PluginDeclaredDevelopmentDependencies\">\n"
  "\t\t\t<string key=\"NS.key.0\">com.apple.InterfaceBuilder.CocoaPlugin.InterfaceBuilder3</string>\n"
  "\t\t\t<integer value=\"4600\" key=\"NS.object.0\"/>\n"
  "\t\t</object>\n"
  "\t\t<bool key=\"IBDocument.PluginDeclaredDependenciesTrackSystemTargetVersion\">YES</bool>\n"
  "\t\t<int key=\"IBDocument.defaultPropertyAccessControl\">3</int>\n"
  "\t\t<dictionary class=\"NSMutableDictionary\" key=\"IBDocument.LastKnownImageSizes\">\n"
  "\t\t\t<string key=\"NSMenuCheckmark\">{12, 12}</string>\n"
  "\t\t\t<string key=\"NSMenuMixedState\">{10, 2}</string>\n"
  "\t\t\t<string key=\"NSSwitch\">{15, 15}</string>\n"
  "\t\t</dictionary>\n"
  "\t</data>\n"
  "</archive>\n" ;

const cRegularFileWrapper gWrapperFile_1_swift_5F_sources (
  "PMAllocationDebug.xib",
  "xib",
  true, // Text file
  72644, // Text length
  gWrapperFileContent_1_swift_5F_sources
) ;

//--- File '/PMDataScanner.swift'

const char * gWrapperFileContent_2_swift_5F_sources = "//\n"
  "//  PMDataScanner.m\n"
  "//  canari\n"
  "//\n"
  "//  Created by Pierre Molinaro on 09/11/07.\n"
  "//  Copyright 2007 __MyCompanyName__. All rights reserved.\n"
  "//\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "class PMDataScanner : NSObject, PMUserClassName {\n"
  "  var mData : NSData\n"
  "  var mReadIndex : Int = 0\n"
  "  var mReadOk : Bool = true\n"
  "  var mExpectedBytes : Array<UInt8> = []\n"
  "  var mProgressWindow : NSWindow\? = nil\n"
  "  var mProgressIndicator : NSProgressIndicator\? = nil\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    userClassName                                                                                                  *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func userClassName () -> String { return \"PMDataScanner\" }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  init                                                                     *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  init (data: NSData,\n"
  "        displayProgressWindowTitle: String\?) {\n"
  "    mData = data\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if (nil != displayProgressWindowTitle) {\n"
  "      openProgressWindowWithTitle (displayProgressWindowTitle!)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  deinit                                                                   *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  deinit {\n"
  "    mProgressWindow\?.orderOut (self)\n"
  "    noteObjectDeallocation (self)\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  openProgressWindowWithTitle                                              *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func openProgressWindowWithTitle (inTitle : String) {\n"
  "    if let visibleFrame = NSScreen.mainScreen ()\?.visibleFrame {\n"
  "      let windowWidth = 400.0\n"
  "      let windowHeight = 65.0\n"
  "      let windowRect = NSMakeRect (\n"
  "        NSMidX (visibleFrame) - CGFloat (windowWidth / 2.0),\n"
  "        NSMidY (visibleFrame) - CGFloat (windowHeight / 2.0),\n"
  "        CGFloat (windowWidth),\n"
  "        CGFloat (windowHeight)\n"
  "      )\n"
  "      let progressWindow = NSWindow (\n"
  "        contentRect:windowRect,\n"
  "        styleMask:NSTitledWindowMask,\n"
  "        backing:NSBackingStoreType.Buffered,\n"
  "        defer:false\n"
  "      )\n"
  "      mProgressWindow = progressWindow\n"
  "      progressWindow.excludedFromWindowsMenu = true\n"
  "      progressWindow.title = \"Progress\"\n"
  "      let contientViewRect : NSRect = progressWindow.contentView.frame\n"
  "    //--- Add comment text\n"
  "      let ts_r = NSRect (\n"
  "        x:25.0,\n"
  "        y:30.0,\n"
  "        width:NSMaxX (contientViewRect) - 40.0,\n"
  "        height:20.0\n"
  "      )\n"
  "      var ts = NSTextField (frame:ts_r)\n"
  "      ts.font = NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize())\n"
  "      ts.stringValue = String (format:\"Opening %@\xE2""\x80""\xA6""\", inTitle)\n"
  "      ts.bezeled = false\n"
  "      ts.bordered = false\n"
  "      ts.editable = false\n"
  "      ts.drawsBackground = false\n"
  "      progressWindow.contentView.addSubview (ts)\n"
  "    //--- Add progress indicator\n"
  "      let ps_r = NSRect (\n"
  "        x:20.0,\n"
  "        y:10.0,\n"
  "        width:NSMaxX (contientViewRect) - 40.0,\n"
  "        height: 20.0\n"
  "      )\n"
  "      mProgressIndicator = NSProgressIndicator (frame:ps_r)\n"
  "      mProgressIndicator!.indeterminate = true\n"
  "      progressWindow.contentView.addSubview (mProgressIndicator!)\n"
  "    //---\n"
  "      mProgressIndicator!.minValue = 0.0\n"
  "      mProgressIndicator!.maxValue = Double (mData.length)\n"
  "      mProgressIndicator!.doubleValue = Double (mReadIndex)\n"
  "      mProgressIndicator!.indeterminate = false\n"
  "      mProgressIndicator!.display ()\n"
  "    //---\n"
  "      progressWindow.makeKeyAndOrderFront (nil)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  updateProgressIndicator                                                  *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func updateProgressIndicator () {\n"
  "    if let progressIndicator = mProgressIndicator {\n"
  "      progressIndicator.doubleValue = Double (mReadIndex)\n"
  "      progressIndicator.display ()\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  ignoreBytes                                                              *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func ignoreBytes (inLengthToIgnore : Int) {\n"
  "    if mReadOk {\n"
  "      mReadIndex += inLengthToIgnore ;\n"
  "      updateProgressIndicator ()\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  testAcceptByte                                                           *\n"
  "  //---------------------------------------------------------------------------*\n"
  "  // http://stackoverflow.com/questions/24067085/pointers-pointer-arithmetic-and-raw-data-in-swift\n"
  "\n"
  "  func testAcceptByte (inByte : UInt8) -> Bool {\n"
  "    var result = mReadOk\n"
  "    if result {\n"
  "      if mReadIndex >= mData.length {\n"
  "         NSLog (\"Read beyond end of data\")\n"
  "         mReadOk = false\n"
  "       }else{\n"
  "        let byteAsData = mData.subdataWithRange (NSMakeRange(mReadIndex, sizeof(UInt8))).bytes\n"
  "        var byte = UnsafePointer<UInt8> (byteAsData).memory\n"
  "     //   let ptr = offsetPointer (mData.bytes, CInt(mReadIndex))\n"
  "     //   var array : COpaquePointer = mData.bytes ()\n"
  "     //   var byteArray : CConstPointer<UInt8> = CConstPointer<UInt8> (mData.bytes ())\n"
  "        result = byte == inByte\n"
  "        if result {\n"
  "          mReadIndex += 1\n"
  "          mExpectedBytes = []\n"
  "        }else{\n"
  "          mExpectedBytes.append (inByte)\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "    updateProgressIndicator ()\n"
  "    return result ;\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  testAcceptFromByte                                                       *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func testAcceptFromByte (lowerBound: UInt8,\n"
  "                           upperBound: UInt8,\n"
  "                           inout value:UInt8) -> Bool {\n"
  "    var result = mReadOk\n"
  "    if result {\n"
  "      if mReadIndex >= mData.length {\n"
  "         NSLog (\"Read beyond end of data\")\n"
  "         mReadOk = false\n"
  "       }else{\n"
  "        let byteAsData = mData.subdataWithRange (NSMakeRange(mReadIndex, sizeof(UInt8))).bytes\n"
  "        var byte = UnsafePointer<UInt8> (byteAsData).memory\n"
  "        result = (byte >= lowerBound) && (byte <= upperBound) ;\n"
  "        if (result) {\n"
  "          value = byte\n"
  "          mReadIndex += 1\n"
  "          mExpectedBytes = []\n"
  "        }else{\n"
  "          for i in lowerBound ..< upperBound + 1 {\n"
  "            mExpectedBytes.append (i)\n"
  "          }\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "    updateProgressIndicator ()\n"
  "    return result ;\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  acceptRequiredByte                                                       *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func acceptRequiredByte (inByte : UInt8,\n"
  "                           sourceFile: String) {\n"
  "    if mReadOk {\n"
  "      if mReadIndex >= mData.length {\n"
  "         NSLog (\"Read beyond end of data\")\n"
  "         mReadOk = false\n"
  "      }else{\n"
  "        let byteAsData = mData.subdataWithRange (NSMakeRange(mReadIndex, sizeof(UInt8))).bytes\n"
  "        var byte = UnsafePointer<UInt8> (byteAsData).memory\n"
  "        if (byte == inByte) {\n"
  "          mReadIndex += 1\n"
  "          mExpectedBytes = []\n"
  "        }else{\n"
  "          var message = \"\"\n"
  "          for b in mExpectedBytes {\n"
  "            message += String (format:\"0x%02hhx, \", b)\n"
  "          }\n"
  "          NSLog (\"%s: invalid current byte (0x%02x): expected bytes:%@0x%02x\", sourceFile, byte, message, inByte) ;\n"
  "          mReadOk = false\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "    updateProgressIndicator ()\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  parseByte                                                                *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func parseByte () -> UInt8 {\n"
  "    var result : UInt8 = 0\n"
  "    if mReadOk {\n"
  "      if mReadIndex >= mData.length {\n"
  "         NSLog (\"Read beyond end of data\")\n"
  "         mReadOk = false\n"
  "       }else{\n"
  "        let byteAsData = mData.subdataWithRange (NSMakeRange(mReadIndex, sizeof(UInt8))).bytes\n"
  "        result = UnsafePointer<UInt8> (byteAsData).memory\n"
  "        mReadIndex += 1\n"
  "      }\n"
  "    }\n"
  "    updateProgressIndicator ()\n"
  "    return result\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  parseAutosizedUnsignedInteger                                            *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func parseAutosizedUnsignedInteger () -> UInt {\n"
  "    var result : UInt = 0\n"
  "    var shift : UInt = 0\n"
  "    var loop = true\n"
  "    while loop && mReadOk {\n"
  "      if mReadIndex >= mData.length {\n"
  "         NSLog (\"Read beyond end of data\")\n"
  "         mReadOk = false\n"
  "      }else{\n"
  "        let byteAsData = mData.subdataWithRange (NSMakeRange(mReadIndex, sizeof(UInt8))).bytes\n"
  "        var byte = UnsafePointer<UInt8> (byteAsData).memory\n"
  "        let w : UInt = UInt (byte) & 0x7F\n"
  "        result |= (w << shift)\n"
  "        shift += 7\n"
  "        loop = (byte & 0x80) != 0\n"
  "        mReadIndex += 1\n"
  "      }\n"
  "    }\n"
  "    updateProgressIndicator ()\n"
  "    return result ;\n"
  "  }\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  parseAutosizedData                                                       *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func parseAutosizedData () -> NSData {\n"
  "  var result = NSData ()\n"
  "  if mReadOk {\n"
  "    let dataLength : Int = Int (parseAutosizedUnsignedInteger ())\n"
  "    if (mReadIndex + dataLength) >= mData.length {\n"
  "      NSLog (\"Read beyond end of data\")\n"
  "      mReadOk = false\n"
  "    }else{\n"
  "      result = mData.subdataWithRange (NSMakeRange (mReadIndex, dataLength))\n"
  "      mReadIndex += dataLength\n"
  "    }\n"
  "  }\n"
  "  updateProgressIndicator ()\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "  //---------------------------------------------------------------------------*\n"
  "  //  ok                                                                       *\n"
  "  //---------------------------------------------------------------------------*\n"
  "\n"
  "  func ok () -> Bool {\n"
  "    return mReadOk\n"
  "  }\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_2_swift_5F_sources (
  "PMDataScanner.swift",
  "swift",
  true, // Text file
  10776, // Text length
  gWrapperFileContent_2_swift_5F_sources
) ;

//--- File '/PMEntityProperty.swift'

const char * gWrapperFileContent_3_swift_5F_sources = "\n"
  "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "struct PMEntityProperty <T : Equatable where T : DescriptionForExplorer> {\n"
  "  var explorer : NSTextField\? = nil\n"
  "\n"
  "  var value : T {\n"
  "    didSet {\n"
  "      if value != oldValue {\n"
  "        explorer\?.stringValue = value.descriptionForExplorer ()\n"
  "        for (key, object) in mObservers {\n"
  "          postTransientEvent (object)\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "  \n"
  "  init (_ inValue : T) {\n"
  "    value = inValue\n"
  "  }\n"
  "\n"
  "  private var mObservers : [Int : PMTransientEventProtocol] = [:]\n"
  "  \n"
  "  mutating func addObserver (inObserver : PMTransientEventProtocol, inTrigger:Bool) {\n"
  "    mObservers [inObserver.uniqueIndex] = inObserver\n"
  "    if inTrigger {\n"
  "      postTransientEvent (inObserver)\n"
  "    }\n"
  "  }\n"
  " \n"
  "  mutating func removeObserver (inObserver : PMTransientEventProtocol, inTrigger:Bool) {\n"
  "    mObservers [inObserver.uniqueIndex] = nil\n"
  "    if inTrigger {\n"
  "      postTransientEvent (inObserver)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mValidationFunction : (T) -> PMValidationResult = defaultValidationFunction\n"
  "  \n"
  "  mutating func setValidationFunction (fonction : (T) -> PMValidationResult) {\n"
  "    mValidationFunction = fonction\n"
  "  }\n"
  "  \n"
  "  func validate (proposedValue : T) -> PMValidationResult {\n"
  "    return mValidationFunction (proposedValue)\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_3_swift_5F_sources (
  "PMEntityProperty.swift",
  "swift",
  true, // Text file
  1463, // Text length
  gWrapperFileContent_3_swift_5F_sources
) ;

//--- File '/PMManagedDocument.swift'

const char * gWrapperFileContent_4_swift_5F_sources = "\n"
  "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "private let kFormatSignature = \"PM-BINARY-FORMAT\"\n"
  "private var gDebugMenuItemsAdded = false\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "enum PMDocumentCompressionEnum {\n"
  "  case PMDocumentNoCompression\n"
  "  case PMDocumentBZ2Compression\n"
  "  case PMDocumentZLIBCompression\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//                                                                                                                     *\n"
  "//  PMManagedDocument                                                                                                  *\n"
  "//                                                                                                                     *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "class PMManagedDocument : NSDocument, PMUserClassName {\n"
  "  var mRootObject : PMManagedObject\?\n"
  "  var mReadMetadataStatus : UInt8 = 0\n"
  "  var mMetadataDictionary : NSMutableDictionary = [:]\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    userClassName                                                                                                  *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func userClassName () -> String { return \"PMManagedDocument\" }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    init                                                                                                           *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  override init () {\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    undoManager = PMUndoManager ()\n"
  "    hookOfInit ()\n"
  "    undoManager\?.disableUndoRegistration ()\n"
  "    mRootObject = newInstanceOfEntityNamed (rootEntityClassName ())\n"
  "    hookOfNewDocumentCreation ()\n"
  "    undoManager\?.enableUndoRegistration ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    deinit                                                                                                         *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    hookOfInit                                                                                                     *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func hookOfInit () {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    hookOfNewDocumentCreation                                                                                      *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func hookOfNewDocumentCreation () {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    rootEntityClassName                                                                                            *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func rootEntityClassName () -> String {\n"
  "    return \"\"\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    windowControllerDidLoadNib:                                                                                    *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  override func windowControllerDidLoadNib (aController: NSWindowController) {\n"
  "    super.windowControllerDidLoadNib (aController)\n"
  "  //--- Add Debug menu items \?\n"
  "      if !gDebugMenuItemsAdded {\n"
  "        gDebugMenuItemsAdded = true\n"
  "        var menuItem = NSMenuItem (\n"
  "          title:\"Explore document\",\n"
  "          action:\"showObjectExplorerWindow:\",\n"
  "          keyEquivalent:\"\"\n"
  "        )\n"
  "        addItemToDebugMenu (menuItem)\n"
  "        menuItem = NSMenuItem (\n"
  "          title:\"Check Relationships\",\n"
  "          action:\"checkRelationships:\",\n"
  "          keyEquivalent:\"\"\n"
  "        )\n"
  "        addItemToDebugMenu (menuItem)\n"
  "        menuItem = NSMenuItem (\n"
  "          title:\"Check All Objects are Reachable\",\n"
  "          action:\"checkEntityReachability:\",\n"
  "          keyEquivalent:\"\"\n"
  "        )\n"
  "        addItemToDebugMenu (menuItem)\n"
  "      }\n"
  "    //-------------- Check relationships\n"
  "/*      NSUserDefaultsController * sudc = [NSUserDefaultsController sharedUserDefaultsController] ;\n"
  "      const BOOL check = [[[sudc values] value_for_key:@\"checkDocumentRelationships\"] boolValue] ;\n"
  "      if (check) {\n"
  "        [self.windowForSheet makeKeyAndOrderFront:nil] ;\n"
  "        [self checkRelationships:nil] ;\n"
  "      }*/\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   removeWindowController:                                                                                         *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  override func removeWindowController (inWindowController : NSWindowController) {\n"
  "    let managedObjectArray = reachableObjectsFromRootObject ()\n"
  "    for object in managedObjectArray {\n"
  "      let managedObject = object as! PMManagedObject\n"
  "      managedObject.prepareForDeletion ()\n"
  "    }\n"
  "    super.removeWindowController (inWindowController)\n"
  "  }\n"
  "\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  S A V E    T O    D A T A                                                                                        *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func metadataStatusForSaving () -> UInt8 {\n"
  "    return 0 ;\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func compressDataOnSaving () -> PMDocumentCompressionEnum {\n"
  "    return PMDocumentCompressionEnum.PMDocumentBZ2Compression ;\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func hookOfWillSave () {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    dataOfType                                                                                                     *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  override func dataOfType (typeName: String\?, error outError: NSErrorPointer) -> NSData\? {\n"
  "  //---\n"
  "    hookOfWillSave ()\n"
  "  //--- Add to metadata dictionary the witdth and the height of main window\n"
  "    if let unwrappedWindowForSheet = windowForSheet { // Document has been opened in the user interface\n"
  "      if (unwrappedWindowForSheet.styleMask & NSResizableWindowMask) != 0 { // Only if window is resizable\n"
  "        let windowSize = unwrappedWindowForSheet.frame.size ;\n"
  "        mMetadataDictionary.setObject (NSNumber (double: Double (windowSize.width)), forKey:\"PMWindowWidth\")\n"
  "        mMetadataDictionary.setObject (NSNumber (double: Double (windowSize.height)), forKey:\"PMWindowHeight\")\n"
  "      }\n"
  "    }else{ // Document has not been opened in the user interface, use values read from file, if they exist\n"
  "/*      NSDictionary * metadataDictionaryReadFromFile = self.metadataDictionaryReadFromFile ;\n"
  "      NSNumber * v = [metadataDictionaryReadFromFile objectForKey:@\"PMWindowWidth\"] ;\n"
  "      if (nil != v) {\n"
  "        [metadataDictionary setObject:v forKey:@\"PMWindowWidth\"] ;\n"
  "      }\n"
  "      v = [metadataDictionaryReadFromFile objectForKey:@\"PMWindowHeight\"] ;\n"
  "      if (nil != v) {\n"
  "        [metadataDictionary setObject:v forKey:@\"PMWindowHeight\"] ;\n"
  "      }*/\n"
  "    }\n"
  "  //---\n"
  "    var fileData = NSMutableData ()\n"
  "    var trace : String = \"\"\n"
  "  //--- Append signature\n"
  "    fileData.writeSignature (&trace)\n"
  "  //--- Write status\n"
  "    fileData.writeByte (metadataStatusForSaving (), trace:&trace)\n"
  "  //--- Append metadata dictionary\n"
  "    let metaData = NSPropertyListSerialization.dataWithPropertyList (mMetadataDictionary,\n"
  "      format:NSPropertyListFormat.BinaryFormat_v1_0,\n"
  "      options:0,\n"
  "      error:nil\n"
  "    )!\n"
  "    fileData.writeByte (1, trace:&trace)\n"
  "    fileData.writeAutosizedData (metaData, trace:&trace)\n"
  "  //--- Append document data\n"
  "    let documentData = dataForSavingFromRootObject ()\n"
  "    fileData.writeByte (6, trace:&trace)\n"
  "    fileData.writeAutosizedData (documentData, trace:&trace)\n"
  "/*    switch ([self compressDataOnSaving]) {\n"
  "    case PMDocumentBZ2Compression:\n"
  "      data = [data bz2CompressedDataWithCompressionFactor:9 returnedErrorCode:nil] ;\n"
  "      [fileData writeByte:5 trace:nil] ;\n"
  "      [fileData writeAutosizedData:data trace:nil] ;\n"
  "      break ;\n"
  "    case PMDocumentZLIBCompression:\n"
  "      data = [data zlibCompressedDataWithCompressionFactor:9 returnedErrorCode:nil] ;\n"
  "      [fileData writeByte:7 trace:nil] ;\n"
  "      [fileData writeAutosizedData:data trace:nil] ;\n"
  "      break ;\n"
  "    default:\n"
  "      [fileData writeByte:6 trace:nil] ;\n"
  "      [fileData writeAutosizedData:data trace:nil] ;\n"
  "      break ;\n"
  "    }*/\n"
  "  //--- Append final byte\n"
  "    fileData.writeByte (0, trace:&trace)\n"
  "   // println (trace)\n"
  "  //---\n"
  "    return fileData ;\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func dataForSavingFromRootObject () -> NSData {\n"
  "    let objectsToSaveArray : NSArray = reachableObjectsFromRootObject ()\n"
  "  //--- Set savingIndex for each object\n"
  "    var idx = 0 ;\n"
  "    for anyObject in objectsToSaveArray {\n"
  "      let object = anyObject as! PMManagedObject\n"
  "      object.savingIndex = idx\n"
  "      idx += 1\n"
  "    }\n"
  "  //---\n"
  "    var saveDataArray : [NSDictionary] = []\n"
  "    for anyObject in objectsToSaveArray {\n"
  "      let object = anyObject as! PMManagedObject\n"
  "      var d : NSMutableDictionary = [\n"
  "        \"--entity\" : object.className\n"
  "      ]\n"
  "      object.saveIntoDictionary (d)\n"
  "      saveDataArray.append (d)\n"
  "    }\n"
  "    return NSPropertyListSerialization.dataWithPropertyList (saveDataArray,\n"
  "      format:NSPropertyListFormat.BinaryFormat_v1_0,\n"
  "      options:0,\n"
  "      error:nil\n"
  "    )!\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    readFromData                                                                                                   *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  override func readFromData (data: NSData\?,\n"
  "                              ofType typeName: String\?,\n"
  "                              error outError: NSErrorPointer) -> Bool {\n"
  "    undoManager\?.disableUndoRegistration ()\n"
  "  //---- Define input data scanner\n"
  "    var dataScanner = PMDataScanner (\n"
  "      data:data!,\n"
  "      displayProgressWindowTitle:(data!.length > 30000) \? lastComponentOfFileName.stringByDeletingPathExtension : nil\n"
  "    )\n"
  "  //--- Check Signature\n"
  "    for c in kFormatSignature.utf8 {\n"
  "      dataScanner.acceptRequiredByte (c, sourceFile:__FUNCTION__)\n"
  "    }\n"
  "  //--- Read Status\n"
  "    mReadMetadataStatus = dataScanner.parseByte ()\n"
  "  //--- if ok, check byte is 1\n"
  "    dataScanner.acceptRequiredByte (1, sourceFile:__FUNCTION__)\n"
  "  //--- Read metadata dictionary\n"
  "    var error : NSError\?\n"
  "    let dictionaryData = dataScanner.parseAutosizedData ()\n"
  "    let metadataDictionary = NSPropertyListSerialization.propertyListWithData (dictionaryData,\n"
  "      options:0, // NSPropertyListReadOptions.Immutable,\n"
  "      format:nil,\n"
  "      error:nil\n"
  "    ) as! NSDictionary\n"
  "    mMetadataDictionary = metadataDictionary.mutableCopy () as! NSMutableDictionary\n"
  "     //  NSLog (@\"mReadMetadataDictionary %@\", mReadMetadataDictionary) ;\n"
  "  //--- Read data dictionary\n"
  "    let dataFormat = dataScanner.parseByte ()\n"
  "    switch dataFormat {\n"
  "    case 6 :\n"
  "      let data = dataScanner.parseAutosizedData ()\n"
  "      readManagedObjectsFromData (data)\n"
  "    default:\n"
  "      NSLog (\"unknowm data format: %u\", dataFormat)\n"
  "    }\n"
  "/*    BOOL legacyDataWithoutConverterError = NO ;\n"
  "    if ([dataScanner testAcceptByte:3]) { // Legacy data, not compressed\n"
  "      NSData * data = [dataScanner parseAutosizedData] ;\n"
  "      if (NULL == legacyFormatLoader) {\n"
  "        data = nil ;\n"
  "        legacyDataWithoutConverterError = YES ;\n"
  "      }else if (nil != data) {\n"
  "        mRootObject = legacyFormatLoader (data, self.entityManager, self.rootEntityClass, & error) ;\n"
  "      }\n"
  "    }else if ([dataScanner testAcceptByte:4]) { // Legacy data, ZLIB Compressed\n"
  "      NSData * compressedData = [dataScanner parseAutosizedData] ;\n"
  "      NSData * data = nil ;\n"
  "      if (nil != compressedData) {\n"
  "         data = [compressedData zlibDecompressedDataWithEstimedExpansion:10 returnedErrorCode:nil] ;\n"
  "      }\n"
  "      if (NULL == legacyFormatLoader) {\n"
  "        legacyDataWithoutConverterError = YES ;\n"
  "        data = nil ;\n"
  "      }else if (nil != data) {\n"
  "        mRootObject = legacyFormatLoader (data, self.entityManager, self.rootEntityClass, & error) ;\n"
  "      }\n"
  "    }else if ([dataScanner testAcceptByte:2]) { // Legacy data, BZ2 compressed\n"
  "      NSData * compressedData = [dataScanner parseAutosizedData] ;\n"
  "      NSData * data = nil ;\n"
  "      if (nil != compressedData) {\n"
  "        data = [compressedData bz2DecompressedDataWithEstimedExpansion:10 returnedErrorCode:nil] ;\n"
  "      }\n"
  "      if (NULL == legacyFormatLoader) {\n"
  "        legacyDataWithoutConverterError = YES ;\n"
  "        data = nil ;\n"
  "      }else if (nil != data) {\n"
  "        mRootObject = legacyFormatLoader (data, self.entityManager, self.rootEntityClass, & error) ;\n"
  "      }\n"
  "    }else if ([dataScanner testAcceptByte:6]) { // Not compressed\n"
  "      NSData * data = [dataScanner parseAutosizedData] ;\n"
  "      if (nil != data) {\n"
  "        mRootObject = [mEntityManager readFromData:data withRootEntityClass:self.rootEntityClass] ;\n"
  "        macroRetain (mRootObject) ;\n"
  "      }\n"
  "    }else if ([dataScanner testAcceptByte:7]) { // ZLIB Compressed\n"
  "      NSData * compressedData = [dataScanner parseAutosizedData] ;\n"
  "      if (nil != compressedData) {\n"
  "        NSData * data = [compressedData zlibDecompressedDataWithEstimedExpansion:10 returnedErrorCode:nil] ;\n"
  "        mRootObject = [mEntityManager readFromData:data withRootEntityClass:self.rootEntityClass] ;\n"
  "        macroRetain (mRootObject) ;\n"
  "      }\n"
  "    }else{\n"
  "      [dataScanner acceptRequiredByte:5 sourceFile:__FUNCTION__] ; // BZ2 compressed\n"
  "      NSData * compressedData = [dataScanner parseAutosizedData] ;\n"
  "      if (nil != compressedData) {\n"
  "        NSData * data = [compressedData bz2DecompressedDataWithEstimedExpansion:10 returnedErrorCode:nil] ;\n"
  "        mRootObject = [mEntityManager readFromData:data withRootEntityClass:self.rootEntityClass] ;\n"
  "        macroRetain (mRootObject) ;\n"
  "      }\n"
  "    }*/\n"
  "  //--- if ok, check final byte (0)\n"
  "    dataScanner.acceptRequiredByte (0, sourceFile:__FUNCTION__)\n"
  "  //--- Scanner error \?\n"
  "    if !dataScanner.ok () {\n"
  "      let dictionary = [\n"
  "        \"Cannot Open Document\" :  NSLocalizedDescriptionKey,\n"
  "        \"The file has an invalid format\" :  NSLocalizedRecoverySuggestionErrorKey\n"
  "      ]\n"
  "      error = NSError (\n"
  "        domain:NSBundle.mainBundle ().bundleIdentifier!,\n"
  "        code:1,\n"
  "        userInfo:dictionary\n"
  "      )\n"
  "    }\n"
  "  //---\n"
  "/*    if (legacyDataWithoutConverterError) {\n"
  "      NSDictionary * dictionary = [NSDictionary dictionaryWithObjectsAndKeys:\n"
  "        @\"Cannot Open Document\",  NSLocalizedDescriptionKey,\n"
  "        @\"Legacy data, no helper function\",  NSLocalizedRecoverySuggestionErrorKey,\n"
  "        nil\n"
  "      ] ;\n"
  "      macroReleaseSetToNil (error) ;\n"
  "      error = [[NSError alloc]\n"
  "        initWithDomain:[NSBundle mainBundle].bundleIdentifier\n"
  "        code:1\n"
  "        userInfo:dictionary\n"
  "      ] ;\n"
  "    }*/\n"
  "  //---\n"
  "    if (error == nil) && (mRootObject == nil) {\n"
  "      let dictionary = [\n"
  "        \"Cannot Open Document\" :  NSLocalizedDescriptionKey,\n"
  "        \"Root object cannot be read\" :  NSLocalizedRecoverySuggestionErrorKey\n"
  "      ]\n"
  "      error = NSError (\n"
  "        domain:NSBundle.mainBundle ().bundleIdentifier!,\n"
  "        code:1,\n"
  "        userInfo:dictionary\n"
  "      )\n"
  "    }\n"
  "  //---\n"
  "    if (nil != outError) {\n"
  "      outError.memory = error\n"
  "    }\n"
  "    undoManager\?.enableUndoRegistration ()\n"
  "  //---\n"
  "    return nil == error\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  let logReadFileDuration = false\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readManagedObjectsFromData (inData : NSData) {\n"
  "    let startDate = NSDate ()\n"
  "    let v : AnyObject = NSPropertyListSerialization.propertyListWithData (inData,\n"
  "      options:0, // NSPropertyListReadOptions.Immutable,\n"
  "      format:nil,\n"
  "      error:nil\n"
  "    )!\n"
  "    let dictionaryArray : [NSDictionary] = v as! [NSDictionary]\n"
  "    if logReadFileDuration {\n"
  "      let timeTaken = NSDate().timeIntervalSinceDate (startDate)\n"
  "      NSLog (\"Dictionary array: +%g s\", timeTaken)\n"
  "    }\n"
  "    var objectArray : Array<PMManagedObject> = Array  ()\n"
  "    for d in dictionaryArray {\n"
  "      let className = d.objectForKey (\"--entity\") as! String\n"
  "      let object = newInstanceOfEntityNamed (className)\n"
  "      objectArray.append (object!)\n"
  "    }\n"
  "    if logReadFileDuration {\n"
  "      let timeTaken = NSDate().timeIntervalSinceDate (startDate)\n"
  "      NSLog (\"Creation of %d objects: +%g s\", objectArray.count, timeTaken)\n"
  "    }\n"
  "    var idx = 0\n"
  "    for d in dictionaryArray {\n"
  "      var object : PMManagedObject = objectArray [idx]\n"
  "      object.setUpWithDictionary (d, managedObjectArray:objectArray)\n"
  "      idx += 1\n"
  "    }\n"
  "    if logReadFileDuration {\n"
  "      let timeTaken = NSDate().timeIntervalSinceDate (startDate)\n"
  "      NSLog (\"Read: +%g s\", timeTaken)\n"
  "    }\n"
  "  //--- Set root object\n"
  "    mRootObject\?.prepareForDeletion ()\n"
  "    mRootObject = objectArray [0]\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   showWindows                                                                                                     *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  override func showWindows () {\n"
  "    super.showWindows ()\n"
  "    if let unwrappedWindowForSheet = windowForSheet { // Document has been opened in the user interface\n"
  "      if (unwrappedWindowForSheet.styleMask & NSResizableWindowMask) != 0 { // Only if window is resizable\n"
  "        var windowWidthNumber : NSNumber\? = mMetadataDictionary.objectForKey (\"PMWindowWidth\") as\? NSNumber\n"
  "        var windowHeightNumber : NSNumber\? = mMetadataDictionary.objectForKey (\"PMWindowHeight\") as\? NSNumber\n"
  "        if (nil != windowWidthNumber) && (nil != windowHeightNumber) {\n"
  "          let newSize = NSSize (width: CGFloat (windowWidthNumber!.doubleValue), height: CGFloat (windowHeightNumber!.doubleValue))\n"
  "          var windowFrame : NSRect = unwrappedWindowForSheet.frame\n"
  "          windowFrame.size = newSize\n"
  "          unwrappedWindowForSheet.setFrame (windowFrame, display:true)\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   C H E C K    E N T I T Y   R E A C H A B I L I T Y                                                              *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  @IBAction func checkEntityReachability (AnyObject!) {\n"
  "  //--- Build and show Panel\n"
  "    let panelRect = NSRect (\n"
  "      x:0.0,\n"
  "      y:0.0,\n"
  "      width:295.0,\n"
  "      height:107.0\n"
  "    )\n"
  "    let panel = NSPanel (contentRect:panelRect,\n"
  "      styleMask:NSTitledWindowMask,\n"
  "      backing:NSBackingStoreType.Buffered,\n"
  "      defer:false\n"
  "    )\n"
  "    let textRect = NSRect (\n"
  "     x:17.0,\n"
  "     y:45.0,\n"
  "     width:261.0,\n"
  "     height:17.0\n"
  "    )\n"
  "    var tf = NSTextField (frame:textRect)\n"
  "    tf.stringValue = \"Checking Document Relationships...\"\n"
  "    tf.bezeled = false\n"
  "    tf.bordered = false\n"
  "    tf.drawsBackground = false\n"
  "    tf.editable = false\n"
  "    tf.font = NSFont.boldSystemFontOfSize (0.0)\n"
  "    panel.contentView.addSubview (tf)\n"
  "    NSApp.beginSheet (panel,\n"
  "      modalForWindow:windowForSheet!,\n"
  "      modalDelegate:nil,\n"
  "      didEndSelector:nil,\n"
  "      contextInfo:nil\n"
  "    )\n"
  "    panel.display ()\n"
  "    let reachableObjects : NSArray = reachableObjectsFromRootObject ()\n"
  "  //---\n"
  "    panel.orderOut (nil) ; NSApp.endSheet (panel)\n"
  "  //---\n"
  "    let reachableCount = reachableObjects.count\n"
  "    var alert = NSAlert ()\n"
  "    alert.messageText = \"Object Graph Analysis\"\n"
  "    alert.informativeText = String (format:\"There are %lu reachable objects from root object.\",\n"
  "      reachableCount\n"
  "    )\n"
  "    alert.beginSheetModalForWindow (windowForSheet!,\n"
  "      completionHandler:nil\n"
  "    )\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   showObjectExplorerWindow:                                                                                       *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  @IBAction func showObjectExplorerWindow (AnyObject!) {\n"
  "    mRootObject\?.showExplorerWindow ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  R E A C H A B L E   O B J E C T S    F R O M    O B J E C T                                                      *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func reachableObjectsFromRootObject () -> NSArray {\n"
  "    var reachableObjectArray = NSMutableArray ()\n"
  "    if let rootObject = mRootObject {\n"
  "      var reachableObjectSet = NSMutableSet ()\n"
  "      reachableObjectSet.addObject (rootObject)\n"
  "      var objectsToExploreArray = NSMutableArray ()\n"
  "      objectsToExploreArray.addObject (rootObject)\n"
  "      rootObject.savingIndex = reachableObjectArray.count\n"
  "      reachableObjectArray.addObject (rootObject)\n"
  "      // let start = NSDate()\n"
  "      //   NSLog (\"start\")\n"
  "      while (objectsToExploreArray.count > 0) {\n"
  "        let objectToExplore : PMManagedObject = objectsToExploreArray.lastObject as! PMManagedObject\n"
  "        objectsToExploreArray.removeLastObject ()\n"
  "        var accessible = NSMutableArray ()\n"
  "        objectToExplore.accessibleObjects (&accessible)\n"
  "        for object : AnyObject in accessible {\n"
  "          let managedObject = object as! PMManagedObject\n"
  "          if !reachableObjectSet.containsObject (managedObject) {\n"
  "            reachableObjectSet.addObject (managedObject)\n"
  "            managedObject.savingIndex = reachableObjectArray.count\n"
  "            reachableObjectArray.addObject (managedObject)\n"
  "            objectsToExploreArray.addObject (managedObject)\n"
  "          }\n"
  "        }\n"
  "      }\n"
  "      // let timeTaken = NSDate().timeIntervalSinceDate(start) * 1000\n"
  "      // NSLog (\"%f ms\", timeTaken)\n"
  "    }\n"
  "    return reachableObjectArray ;\n"
  "  }\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//                                                                                                                     *\n"
  "//     NSMutableData extension                                                                                         *\n"
  "//                                                                                                                     *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension NSMutableData {\n"
  "\n"
  "  func writeSignature (inout trace: String) {\n"
  "    trace += String (format:\"%03lu %03lu \", length / 1000, length % 1000)\n"
  "    for c in kFormatSignature.utf8 {\n"
  "      var byte : UInt8 = UInt8 (c)\n"
  "      appendBytes (&byte, length:1)\n"
  "      trace += String (format:\"%02hhX \", byte)\n"
  "    }\n"
  "    trace += \"\\n\"\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func writeAutosizedData (inData: NSData,\n"
  "                           inout trace: String) {\n"
  "    writeAutosizedUnsigned (UInt64 (inData.length), trace:&trace)\n"
  "    trace += String (format:\"%03lu %03lu \", length / 1000, length % 1000)\n"
  "    appendData (inData)\n"
  "    trace += \"(data, length \\(inData.length))\\n\"\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func writeByte (inByte: UInt8,\n"
  "                  inout trace: String) {\n"
  "    trace += String (format:\"%03lu %03lu \", length / 1000, length % 1000)\n"
  "    trace += String (format:\"%02hhX \", inByte)\n"
  "    var byte = inByte\n"
  "    appendBytes (&byte, length:1)\n"
  "    trace += \"\\n\"\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func writeAutosizedUnsigned (inValue: UInt64,\n"
  "                               inout trace: String) {\n"
  "    trace += String (format:\"%03lu %03lu \", length / 1000, length % 1000)\n"
  "    trace += \"U \"\n"
  "    var value = inValue\n"
  "    do{\n"
  "      var byte : UInt8 = UInt8 (value & 0x7F)\n"
  "      value >>= 7\n"
  "      if (value != 0) {\n"
  "        byte |= 0x80\n"
  "      }\n"
  "      trace += String (format:\"%02hhX \", byte)\n"
  "      appendBytes (&byte, length:1)\n"
  "    }while value != 0\n"
  "    trace += \"\\n\"\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_4_swift_5F_sources (
  "PMManagedDocument.swift",
  "swift",
  true, // Text file
  26640, // Text length
  gWrapperFileContent_4_swift_5F_sources
) ;

//--- File '/PMManagedObject.swift'

const char * gWrapperFileContent_5_swift_5F_sources = "//\n"
  "//  PMManagedObject.swift\n"
  "//  essai\n"
  "//\n"
  "//  Created by Pierre Molinaro on 28/06/13.\n"
  "//  Copyright (c) 2013 ECN / IRCCyN. All rights reserved.\n"
  "//\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//   PMSignatureObserverProtocol                                                                                       *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "@objc(PMSignatureObserverProtocol) protocol PMSignatureObserverProtocol {\n"
  "  func triggerSignatureComputing ()\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "var gExplorerObjectIndex = 0\n"
  "var gAllocatedEntityCount = 0\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//  PMManagedObject                                                                                                    *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "class PMManagedObject : NSObject, PMSignatureObserverProtocol, PMUserClassName {\n"
  "  var savingIndex = 0\n"
  "  weak var mUndoManager : NSUndoManager\?\n"
  "//--- Signature\n"
  "  var mSignatureCache = 0\n"
  "  var mSignatureObserverSet = NSMutableSet () // : Array<PMSignatureObserverProtocol> = []\n"
  "  var mSignatureHasBeenComputed = false\n"
  "\n"
  " // #ifdef PM_COCOA_DEBUG\n"
  "    var mExplorerObjectIndex : Int\n"
  "    var mExplorerWindow : NSWindow\?\n"
  "//  #endif\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    userClassName                                                                                                  *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func userClassName () -> String { return \"PMManagedObject\" }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  init                                                                                                             *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (undoManager : NSUndoManager) {\n"
  "    mUndoManager = undoManager\n"
  "    gAllocatedEntityCount = gAllocatedEntityCount + 1\n"
  " //   #ifdef PM_COCOA_DEBUG\n"
  "      mExplorerObjectIndex = gExplorerObjectIndex\n"
  "      gExplorerObjectIndex = gExplorerObjectIndex + 1\n"
  " //   #endif\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  prepareForDeletion                                                                                               *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func prepareForDeletion () {\n"
  "    mUndoManager = nil\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  deinit                                                                                                           *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  setup and save                                                                                                   *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func setUpWithDictionary (inDictionary : NSDictionary,\n"
  "                            managedObjectArray : Array<PMManagedObject>) {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func saveIntoDictionary (ioDictionary : NSMutableDictionary) {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  Signature                                                                                                        *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func addSignatureObserver (inObserver : PMSignatureObserverProtocol) {\n"
  "    mSignatureObserverSet.addObject (inObserver)\n"
  "    inObserver.triggerSignatureComputing ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func removeSignatureObserver (inObserver : PMSignatureObserverProtocol) {\n"
  "    inObserver.triggerSignatureComputing ()\n"
  "    mSignatureObserverSet.removeObject (inObserver)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func triggerSignatureComputing () {\n"
  "    if mSignatureHasBeenComputed {\n"
  "      mSignatureHasBeenComputed = false ;\n"
  "      for anyObject in mSignatureObserverSet {\n"
  "        let object = anyObject as! PMSignatureObserverProtocol\n"
  "        object.triggerSignatureComputing ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func signature () -> Int {\n"
  "    if !mSignatureHasBeenComputed {\n"
  "      mSignatureHasBeenComputed = true\n"
  "      mSignatureCache = computeSignature ()\n"
  "    }\n"
  "    return mSignatureCache ;\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func computeSignature () -> Int {\n"
  "    return 0\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //  Getters                                                                                                          *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func undoManager () -> PMUndoManager\? {\n"
  "    return mUndoManager as! PMUndoManager\?\n"
  "  }\n"
  "\n"
  "  func explorerObjectIndex () -> Int {\n"
  "    return mExplorerObjectIndex\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   showExplorerWindow                                                                                              *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func showExplorerWindow () {\n"
  "    if mExplorerWindow == nil {\n"
  "      createAndPopulateObjectExplorerWindow ()\n"
  "    }\n"
  "    mExplorerWindow\?.makeKeyAndOrderFront (nil)\n"
  "  }\n"
  "\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   accessibleObjects                                                                                               *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func accessibleObjects (inout objects : NSMutableArray) {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   secondColumn                                                                                                    *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func secondColumn (inRect : NSRect) -> NSRect {\n"
  "    var r = inRect\n"
  "    r.origin.x += inRect.size.width + 2.0 ;\n"
  "    return r\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    populateExplorerWindow                                                                                         *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func populateExplorerWindowWithRect (inout ioRect : NSRect, view : NSView) {\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    createEntryForAttributeNamed                                                                                   *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func createEntryForAttributeNamed (attributeName : String,\n"
  "                                     inout ioRect : NSRect,\n"
  "                                     view : NSView) -> NSTextField {\n"
  "    let font = NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ())\n"
  "    var tf = NSTextField (frame:ioRect)\n"
  "    tf.enabled = false\n"
  "    tf.stringValue = attributeName\n"
  "    tf.font = font\n"
  "    view.addSubview (tf)\n"
  "    var tff = NSTextField (frame:secondColumn (ioRect))\n"
  "    tff.enabled = false\n"
  "    tff.font = font\n"
  "    view.addSubview (tff)\n"
  "    ioRect.origin.y += ioRect.size.height\n"
  "    return tff\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    createEntryForToOneRelationshipNamed                                                                           *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func createEntryForToOneRelationshipNamed (relationshipName : String,\n"
  "                                             inout ioRect : NSRect,\n"
  "                                             view : NSView) -> NSButton {\n"
  "    let font = NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ())\n"
  "    var tf = NSTextField (frame:ioRect)\n"
  "    tf.enabled = false\n"
  "    tf.stringValue = relationshipName\n"
  "    tf.font = font\n"
  "    view.addSubview (tf)\n"
  "    var bt = NSButton (frame:secondColumn (ioRect))\n"
  "    bt.font = font\n"
  "    view.addSubview (bt)\n"
  "    ioRect.origin.y += ioRect.size.height\n"
  "    return bt\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    createEntryForToManyRelationshipNamed                                                                          *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func createEntryForToManyRelationshipNamed (relationshipName : String,\n"
  "                                              inout ioRect : NSRect,\n"
  "                                              view : NSView) -> NSPopUpButton {\n"
  "    let font = NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ())\n"
  "    var tf = NSTextField (frame:ioRect)\n"
  "    tf.enabled = false\n"
  "    tf.stringValue = relationshipName\n"
  "    tf.font = font\n"
  "    view.addSubview (tf)\n"
  "    var bt = NSPopUpButton (frame:secondColumn (ioRect), pullsDown:true)\n"
  "    bt.font = font\n"
  "    view.addSubview (bt)\n"
  "    ioRect.origin.y += ioRect.size.height ;\n"
  "    return bt\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   createAndPopulateObjectExplorerWindow                                                                           *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func createAndPopulateObjectExplorerWindow () {\n"
  "  //-------------------------------------------------- Create Window\n"
  "    let r = NSRect (x:20.0, y:20.0, width:10.0, height:10.0)\n"
  "    mExplorerWindow = NSWindow (\n"
  "      contentRect:r,\n"
  "      styleMask:NSTitledWindowMask | NSClosableWindowMask,\n"
  "      backing:NSBackingStoreType.Buffered,\n"
  "      defer:true,\n"
  "      screen:nil\n"
  "    )\n"
  "  //-------------------------------------------------- Adding properties\n"
  "    var nameRect = NSRect (x:0.0, y:0.0, width:300.0, height:22.0)\n"
  "    let font = NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ())\n"
  "    var view = NSView (frame:nameRect)\n"
  "    populateExplorerWindowWithRect (&nameRect, view:view)\n"
  "  //-------------------------------------------------- Finish Window construction\n"
  "  //--- Resize View\n"
  "    let rr = secondColumn (nameRect)\n"
  "    view.frame = NSRect (x:0.0, y:0.0, width:NSMaxX (rr), height:NSMaxY (rr))\n"
  "  //--- Set content size\n"
  "    mExplorerWindow\?.setContentSize (NSSize (width:NSMaxX (nameRect) * 2.0 + 4.0 + 16.0, height:fmin (600.0, NSMaxY (nameRect))))\n"
  "  //--- Set close button as 'remove window' button\n"
  "    var closeButton : NSButton\? = mExplorerWindow\?.standardWindowButton (NSWindowButton.CloseButton)\n"
  "    closeButton!.target = self\n"
  "    closeButton!.action = \"deleteWindowAction:\"\n"
  "  //--- Set window title\n"
  "    let windowTitle = String (format:\"#%ld (%@) at %p\", mExplorerObjectIndex, className, self)\n"
  "    mExplorerWindow!.title = windowTitle\n"
  "  //--- Add Scroll view\n"
  "    let frame = NSRect (x:0.0, y:0.0, width:NSMaxX (nameRect) * 2.0 + 4.0, height:NSMaxY (nameRect))\n"
  "    var sw = NSScrollView (frame:frame)\n"
  "    sw.hasVerticalScroller = true\n"
  "    sw.documentView = view\n"
  "    mExplorerWindow!.contentView = sw\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   updateManagedObjectToManyRelationshipDisplay                                                                    *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func updateManagedObjectToManyRelationshipDisplay (inObjectArray : [PMManagedObject], popUpButton : NSPopUpButton\?) {\n"
  "    var title = \"No Object\" ;\n"
  "    if inObjectArray.count == 1 {\n"
  "      title = \"1 Object\" ;\n"
  "    }else if inObjectArray.count > 1 {\n"
  "      title = String (format:\"%lu objects\", inObjectArray.count)\n"
  "    }\n"
  "    popUpButton\?.removeAllItems ()\n"
  "    popUpButton\?.addItemWithTitle (title)\n"
  "    popUpButton\?.enabled = inObjectArray.count > 0\n"
  "    for object : PMManagedObject in inObjectArray {\n"
  "      let objectIndex = object.explorerObjectIndex ()\n"
  "      let stringValue = String (format:\"#%d (%@) %p\", objectIndex, object.className, object)\n"
  "      popUpButton\?.addItemWithTitle (stringValue)\n"
  "      var item = popUpButton\?.lastItem\n"
  "      item\?.target = object\n"
  "      item\?.action = \"showObjectWindowFromExplorerButton:\"\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   updateManagedObjectToOneRelationshipDisplay                                                                     *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func updateManagedObjectToOneRelationshipDisplay (inObject : PMManagedObject\?, button : NSButton\?) {\n"
  "    var stringValue = \"nil\"\n"
  "    if let unwrappedObject = inObject {\n"
  "      let objectIndex = unwrappedObject.explorerObjectIndex ()\n"
  "      stringValue = String (format:\"#%d (%@) %p\", objectIndex, unwrappedObject.className, unwrappedObject)\n"
  "    }\n"
  "    button\?.enabled = inObject != nil\n"
  "    button\?.title = stringValue\n"
  "    button\?.toolTip = stringValue\n"
  "    button\?.target = inObject\n"
  "    button\?.action = \"showObjectWindowFromExplorerButton:\"\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   showObjectWindowFromExplorerButton                                                                              *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func showObjectWindowFromExplorerButton (AnyObject) {\n"
  "    showExplorerWindow ()\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   deleteWindowAction                                                                                              *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func deleteWindowAction (AnyObject) {\n"
  "    clearObjectExplorer ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   clearObjectExplorer                                                                                             *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func clearObjectExplorer () {\n"
  "    var closeButton = mExplorerWindow\?.standardWindowButton (NSWindowButton.CloseButton)\n"
  "    closeButton!.target = nil\n"
  "    mExplorerWindow\?.orderOut (nil)\n"
  "    mExplorerWindow = nil\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   storeEntityArrayInDictionary                                                                                    *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func storeEntityArrayInDictionary (inEntityArray : NSArray,\n"
  "                                     inRelationshipName: String,\n"
  "                                     ioDictionary : NSMutableDictionary) {\n"
  "\n"
  "    if inEntityArray.count > 0 {\n"
  "      var indexArray = NSMutableArray ()\n"
  "      for object : AnyObject in inEntityArray {\n"
  "        let managedObject = object as! PMManagedObject\n"
  "        indexArray.addObject (NSNumber (unsignedInteger:object.savingIndex))\n"
  "      }\n"
  "      ioDictionary.setObject (indexArray, forKey:inRelationshipName)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   storeEntityInDictionary                                                                                         *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func storeEntityInDictionary (inObject : PMManagedObject\?,\n"
  "                                inRelationshipName: String,\n"
  "                                ioDictionary : NSMutableDictionary) {\n"
  "    if nil != inObject {\n"
  "      ioDictionary.setObject (NSNumber (unsignedInteger:inObject!.savingIndex), forKey:inRelationshipName)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   readEntityFromDictionary                                                                                        *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readEntityFromDictionary (inRelationshipName: String,\n"
  "                                 inDictionary : NSDictionary,\n"
  "                                 managedObjectArray : Array<PMManagedObject>) -> PMManagedObject\? {\n"
  "    let opValue : Int\? = inDictionary.valueForKey (inRelationshipName) as\? Int\n"
  "    var result : PMManagedObject\? = nil\n"
  "    if let value = opValue {\n"
  "      result = managedObjectArray [value]\n"
  "    }\n"
  "    return result\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //   readEntityArrayFromDictionary                                                                                   *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readEntityArrayFromDictionary (inRelationshipName: String,\n"
  "                                     inDictionary : NSDictionary,\n"
  "                                     managedObjectArray : Array<PMManagedObject>) -> Array<PMManagedObject> {\n"
  "    let opIndexArray : Array<Int>\? = inDictionary.valueForKey (inRelationshipName) as\? Array<Int>\n"
  "    var result = Array<PMManagedObject> ()\n"
  "    if let indexArray = opIndexArray {\n"
  "      for number : Int in indexArray {\n"
  "        let managedObject = managedObjectArray [number]\n"
  "        result.append (managedObject)\n"
  "      }\n"
  "    }\n"
  "    return result\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "/*\n"
  "//---------------------------------------------------------------------------*\n"
  "//   Signature routines                                                      *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeIntegerSignature (const NSInteger inSignature,\n"
  "                                   const NSInteger inValue) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeNSStringSignature (const NSInteger inSignature,\n"
  "                                    NSString * inValue) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeToOneEntitySignature (const NSInteger inSignature,\n"
  "                                       PMManagedObject * inToOnePropertyValue) ;\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeToManyEntitySignature (const NSInteger inSignature,\n"
  "                                        NSArray * inToManyPropertyValue) ;\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "*/\n"
  "\n"
  "\n"
  "\n"
  "\n"
  "\n"
  "/*\n"
  "#import \"easy-bindings-utilities.h\"\n"
  "#import \"PMAllocationDebug.h\"\n"
  "#import \"PMManagedObject.h\"\n"
  "#import \"PMObjectManager.h\"\n"
  "#import \"PMRelationshipDescription.h\"\n"
  "#import \"PMAttributeDescription.h\"\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//  Function used for object explorer                                          *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "NSString * convertBOOLValueToString (NSNumber * inValue) {\n"
  "  return [inValue boolValue] \? @\"YES\" : @\"NO\" ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "#ifdef PM_COCOA_DEBUG\n"
  "  static NSUInteger gExplorerObjectIndex ;\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//  Attribute and relationship description caches                              *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "static NSMutableDictionary * gAttributeDescriptionDictionary ;\n"
  "static NSMutableDictionary * gToOneRelationshipDescriptionDictionary ;\n"
  "static NSMutableDictionary * gToManyRelationshipDescriptionDictionary ;\n"
  "static NSUInteger gAllocatedEntityCount = 0 ;\n"
  "\n"
  "//----------------------------------------------------------------------------*\n"
  "//    Dealloc                                                                 *\n"
  "//----------------------------------------------------------------------------*\n"
  "\n"
  "- (void) dealloc {\n"
  "  gAllocatedEntityCount -- ;\n"
  "  if (0 == gAllocatedEntityCount) {\n"
  "    macroReleaseSetToNil (gAttributeDescriptionDictionary) ;\n"
  "    macroReleaseSetToNil (gToOneRelationshipDescriptionDictionary) ;\n"
  "    macroReleaseSetToNil (gToManyRelationshipDescriptionDictionary) ;\n"
  "  }\n"
  "  macroReleaseSetToNil (mEntityManager) ;\n"
  "  macroReleaseSetToNil (mUndoManager) ;\n"
  "  macroNoteObjectDeallocation ;\n"
  "  macroSuperDealloc ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "- (void) setEntityManager: (PMObjectManager *) inManager {\n"
  "  [mUndoManager\n"
  "    registerUndoWithTarget:self\n"
  "    selector: @selector (setEntityManager:)\n"
  "    object:mEntityManager\n"
  "  ] ;\n"
  "  macroAssign (mEntityManager, inManager) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "- (void) resetBeforeDeletion {\n"
  "  [self setEntityManager:nil] ;\n"
  "  #ifdef PM_COCOA_DEBUG\n"
  "    [self clearContextExplorer] ;\n"
  "  #endif\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  S I G N A T U R E                                                        *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#pragma mark Object Explorer\n"
  "\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "//   Signature routines                                                      *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeIntegerSignature (const NSInteger inSignature,\n"
  "                                   const NSInteger inValue) {\n"
  "  NSInteger result = inSignature ;\n"
  "  NSInteger negative = inSignature < 0 ;\n"
  "  result <<= 1 ;\n"
  "  result |= negative ;\n"
  "  result ^= inValue ;\n"
  "  return result ;  \n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeNSStringSignature (const NSInteger inSignature,\n"
  "                                    NSString * inValue) {\n"
  "  NSInteger result = inSignature ;\n"
  "  for (NSUInteger i=0 ; i<inValue.length ; i++) {\n"
  "    result = computeIntegerSignature (result, [inValue characterAtIndex:i]) ;\n"
  "  }\n"
  "  return result ;  \n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeToOneEntitySignature (const NSInteger inSignature,\n"
  "                                       PMManagedObject * inToOnePropertyValue) {\n"
  "  return computeIntegerSignature (inSignature, inToOnePropertyValue.signature) ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "NSInteger computeToManyEntitySignature (const NSInteger inSignature,\n"
  "                                        NSArray * inToManyPropertyValue) {\n"
  "  NSInteger result = inSignature ;\n"
  "  for (PMManagedObject * object in inToManyPropertyValue) {\n"
  "    result = computeIntegerSignature (result, object.signature) ;\n"
  "  }\n"
  "  return result ;\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "//  O B J E C T    E X P L O R E R                                           *\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#pragma mark Object Explorer\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifdef PM_COCOA_DEBUG\n"
  "  - (void) showObjectWindowFromSenderTagAction: (id) inSender {\n"
  "    [self showExplorerWindow] ;\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#pragma mark Clear Context Explorer\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#pragma mark Attribute did change\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifdef PM_COCOA_DEBUG\n"
  "  - (void) didChangeValueForKey:(NSString *) inKey {\n"
  "    [super didChangeValueForKey:inKey] ;\n"
  "    if ([mToManyRelationshipSet containsObject:inKey]) {\n"
  "      [self updateEntityArrayDisplayForKey:inKey] ;\n"
  "    }else if ([mToOneRelationshipSet containsObject:inKey]) {\n"
  "      [self updateEntityDisplayForKey:inKey] ;\n"
  "    }else{\n"
  "      for (PMAttributeDescription * description in mAttributeDescriptionArray) {\n"
  "        if ([inKey isEqualToString:description.attributeName]) {\n"
  "          [self updateAttributeDisplayForDescription:description] ;\n"
  "          break ;\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "#ifdef PM_COCOA_DEBUG\n"
  "  - (void) didChange: (NSKeyValueChange) inChange\n"
  "           valuesAtIndexes:(NSIndexSet *) inIndexes\n"
  "           forKey:(NSString *) inKey {\n"
  "    [super\n"
  "      didChange:inChange\n"
  "      valuesAtIndexes:inIndexes\n"
  "      forKey:inKey\n"
  "    ] ;\n"
  "    [self updateEntityArrayDisplayForKey:inKey] ;\n"
  "  }\n"
  "#endif\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "@end\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "*/\n" ;

const cRegularFileWrapper gWrapperFile_5_swift_5F_sources (
  "PMManagedObject.swift",
  "swift",
  true, // Text file
  28612, // Text length
  gWrapperFileContent_5_swift_5F_sources
) ;

//--- File '/PMPreferencesProperty.swift'

const char * gWrapperFileContent_6_swift_5F_sources = "//\n"
  "//  PMProperty.swift\n"
  "//  02-transient-property\n"
  "//\n"
  "//  Created by Pierre Molinaro on 27/02/2015.\n"
  "//  Copyright (c) 2015 Pierre Molinaro. All rights reserved.\n"
  "//\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "struct PMPreferencesProperty <T : Equatable> {\n"
  " \n"
  "  private var mObservers : [Int : PMTransientEventProtocol] = [:]\n"
  "\n"
  "  var value : T {\n"
  "    didSet {\n"
  "      if value != oldValue {\n"
  "        for (key, object) in mObservers {\n"
  "          postTransientEvent (object)\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "  \n"
  "  init (_ inValue : T) {\n"
  "    value = inValue\n"
  "  }\n"
  "  \n"
  "  mutating func addObserver (inObserver : PMTransientEventProtocol, inTrigger:Bool) {\n"
  "    mObservers [inObserver.uniqueIndex] = inObserver\n"
  "    if inTrigger {\n"
  "      postTransientEvent (inObserver)\n"
  "    }\n"
  "  }\n"
  " \n"
  "  mutating func removeObserver (inObserver : PMTransientEventProtocol, inTrigger:Bool) {\n"
  "    mObservers [inObserver.uniqueIndex] = nil\n"
  "    if inTrigger {\n"
  "      postTransientEvent (inObserver)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mValidationFunction : (T) -> PMValidationResult = defaultValidationFunction\n"
  "  \n"
  "  mutating func setValidationFunction (fonction : (T) -> PMValidationResult) {\n"
  "    mValidationFunction = fonction\n"
  "  }\n"
  "  \n"
  "  func validate (proposedValue : T) -> PMValidationResult {\n"
  "    return mValidationFunction (proposedValue)\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_6_swift_5F_sources (
  "PMPreferencesProperty.swift",
  "swift",
  true, // Text file
  1620, // Text length
  gWrapperFileContent_6_swift_5F_sources
) ;

//--- File '/PMTransientProperty.swift'

const char * gWrapperFileContent_7_swift_5F_sources = "//\n"
  "//  PMTransientProperty.swift\n"
  "//  02-transient-property\n"
  "//\n"
  "//  Created by Pierre Molinaro on 27/02/2015.\n"
  "//  Copyright (c) 2015 Pierre Molinaro. All rights reserved.\n"
  "//\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "import Foundation\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "class PMTransientProperty<T> : PMUserClassName {\n"
  "  private var mObservers : [Int : PMTransientEventProtocol] = [:]\n"
  "  private var mValueCache : T\? = nil\n"
  "  private let mTransientIndex : PMTransientIndex\n"
  "  private var mComputeFunction : Optional<() -> T>\n"
  "  \n"
  "  init (_ inTransientIndex : PMTransientIndex) {\n"
  "    mTransientIndex = inTransientIndex\n"
  "    noteObjectAllocation (self)\n"
  "  }\n"
  "\n"
  "  deinit {\n"
  "    noteObjectDeallocation (self) ;\n"
  "  }\n"
  "\n"
  "  func setComputeFunction (function : () -> T) {\n"
  "    mComputeFunction = function\n"
  "  }\n"
  "  \n"
  "  func userClassName () -> String { return \"PMTransientProperty<T>\"}\n"
  "  \n"
  "  var value : T {\n"
  "    get {\n"
  "      if mValueCache == nil, let computeFunction = mComputeFunction {\n"
  "        mValueCache = computeFunction ()\n"
  "      }\n"
  "      return mValueCache!\n"
  "    }\n"
  "  }\n"
  "\n"
  "  func noteDidChange () {\n"
  "    mValueCache = nil\n"
  "  }\n"
  "  \n"
  "\n"
  "  func trigger () {\n"
  "    for (key, object) in mObservers {\n"
  "      postTransientEvent (object)\n"
  "    }\n"
  "  }\n"
  " \n"
  "  func addObserver (inObserver : PMTransientEventProtocol, inTrigger:Bool) {\n"
  "    mObservers [inObserver.uniqueIndex] = inObserver\n"
  "    if inTrigger {\n"
  "      postTransientEvent (inObserver)\n"
  "    }\n"
  "  }\n"
  " \n"
  "  func removeObserver (inObserver : PMTransientEventProtocol, inTrigger:Bool) {\n"
  "    mObservers [inObserver.uniqueIndex] = nil\n"
  "    if inTrigger {\n"
  "      postTransientEvent (inObserver)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  private var mEvent : PMTransientEventProtocol\?\n"
  "\n"
  "  var event : PMTransientEventProtocol {\n"
  "    get {\n"
  "      if mEvent == nil {\n"
  "        mEvent = PMTransientPropertyEvent<T> (self)\n"
  "      }\n"
  "      return mEvent!\n"
  "    }\n"
  "  }\n"
  "\n"
  "  func resetComputationFunction () {\n"
  "    mComputeFunction = nil\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "class PMTransientPropertyEvent<T> : PMTransientEventProtocol {\n"
  "  weak private var mObserver : PMTransientProperty<T>\? = nil\n"
  "  private let mTransientIndex : PMTransientIndex\n"
  "  \n"
  "  func userClassName () -> String { return \"PMTransientPropertyEvent<T>\" }\n"
  "\n"
  "  var transientEventIndex : PMTransientIndex { get { return mTransientIndex } }\n"
  "\n"
  "  private let mPrivateUniqueIndex : Int\n"
  "\n"
  "  var uniqueIndex : Int { get { return mPrivateUniqueIndex } }\n"
  "  \n"
  "  init (_ inObject : PMTransientProperty<T>) {\n"
  "    mPrivateUniqueIndex = getUniqueIndex ()\n"
  "    mObserver = inObject\n"
  "    mTransientIndex = inObject.mTransientIndex\n"
  "    noteObjectAllocation (self)\n"
  "  }\n"
  "\n"
  "  func noteModelDidChange () {\n"
  "    mObserver\?.noteDidChange ()\n"
  "  }\n"
  "\n"
  "  func unregister () {\n"
  "  }\n"
  "  \n"
  "  deinit {\n"
  "    noteObjectDeallocation (self) ;\n"
  "  }\n"
  "\n"
  "  func trigger () {\n"
  "    mObserver\?.trigger ()\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_7_swift_5F_sources (
  "PMTransientProperty.swift",
  "swift",
  true, // Text file
  3140, // Text length
  gWrapperFileContent_7_swift_5F_sources
) ;

//--- File '/PMUndoManager.swift'

const char * gWrapperFileContent_8_swift_5F_sources = "//\n"
  "//  PMUndoManager.swift\n"
  "//  essai\n"
  "//\n"
  "//  Created by Pierre Molinaro on 30/06/14.\n"
  "//  Copyright (c) 2013 ECN / IRCCyN. All rights reserved.\n"
  "//\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "let traceUndoManager = false\n"
  "\n"
  "//---------------------------------------------------------------------------*\n"
  "\n"
  "@objc(PMUndoManager) class PMUndoManager : NSUndoManager, PMUserClassName {\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    userClassName                                                                                                  *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func userClassName () -> String { return \"PMUndoManager\" }\n"
  "\n"
  "  //-----------------------------------------------------------------------------*\n"
  "  //    init                                                                     *\n"
  "  //-----------------------------------------------------------------------------*\n"
  "\n"
  "  override init () {\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "  }\n"
  "\n"
  "  //-----------------------------------------------------------------------------*\n"
  "  //    deinit                                                                   *\n"
  "  //-----------------------------------------------------------------------------*\n"
  "\n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "  }\n"
  "\n"
  "  //-----------------------------------------------------------------------------*\n"
  "  //    registerUndoWithTarget                                                   *\n"
  "  //-----------------------------------------------------------------------------*\n"
  "\n"
  "/*  override func prepareWithInvocationTarget (target:AnyObject!) -> AnyObject! {\n"
  "    let result : AnyObject! = super.prepareWithInvocationTarget (target)\n"
  "    if traceUndoManager {\n"
  "      NSLog (\"prepareWithInvocationTarget (%@) target:%@\", undoRegistrationEnabled \? \"yes\" : \"no\", target.description)\n"
  "    }\n"
  "    return result\n"
  "  }*/\n"
  "\n"
  "  //-----------------------------------------------------------------------------*\n"
  "  //    registerUndoWithTarget                                                   *\n"
  "  //-----------------------------------------------------------------------------*\n"
  "\n"
  "  override func registerUndoWithTarget (target:AnyObject, selector:Selector, object anObject:AnyObject!) {\n"
  "    super.registerUndoWithTarget (target, selector:selector, object:anObject)\n"
  "    if traceUndoManager {\n"
  "      if nil != anObject {\n"
  "        NSLog (\"registerUndoWithTarget (%@) target:%@, selector:\\\"%@\\\" object:%@\", undoRegistrationEnabled \? \"yes\" : \"no\", target.description, selecto"
  "r.description, anObject.description)\n"
  "      }else{\n"
  "        NSLog (\"registerUndoWithTarget (%@) target:%@, selector:\\\"%@\\\" object:nil\", undoRegistrationEnabled \? \"yes\" : \"no\", target.description, select"
  "or.description)\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-----------------------------------------------------------------------------*\n"
  "  //    beginUndoGrouping                                                        *\n"
  "  //-----------------------------------------------------------------------------*\n"
  "\n"
  "  override func beginUndoGrouping () {\n"
  "    if traceUndoManager {\n"
  "      NSLog (\"beginUndoGrouping\")\n"
  "    }\n"
  "    super.beginUndoGrouping ()\n"
  "  }\n"
  "\n"
  "  //-----------------------------------------------------------------------------*\n"
  "  //    endUndoGrouping                                                          *\n"
  "  //-----------------------------------------------------------------------------*\n"
  "\n"
  "  override func endUndoGrouping () {\n"
  "    if traceUndoManager {\n"
  "      NSLog (\"endUndoGrouping\")\n"
  "    }\n"
  "    super.endUndoGrouping ()\n"
  "  }\n"
  "}\n"
  "\n"
  "//------------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_8_swift_5F_sources (
  "PMUndoManager.swift",
  "swift",
  true, // Text file
  3872, // Text length
  gWrapperFileContent_8_swift_5F_sources
) ;

//--- File '/easy-bindings-utilities.swift'

const char * gWrapperFileContent_9_swift_5F_sources = "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//   presentErrorWindow                                                                                                *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "var gErrorWindows : [NSWindow] = []\n"
  "var origin = NSPoint (x:20.0, y:20.0)\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "func presentErrorWindow (file : String!,\n"
  "                         lineNumber : Int,\n"
  "                         errorMessage : String) {\n"
  "  var message = \"\"\n"
  "  message += \"File: \" + file + \"\\n\"\n"
  "  message += \"Line: \\(lineNumber)\\n\"\n"
  "  message += \"Message: \" + errorMessage + \"\\n\"\n"
  "  let r = NSRect (origin:origin, size:NSSize (width:300.0, height:200.0))\n"
  "  origin.x += 20.0 ;\n"
  "  origin.y += 20.0 ;\n"
  "  var window = NSWindow.init (\n"
  "    contentRect:r,\n"
  "    styleMask:NSTitledWindowMask | NSClosableWindowMask,\n"
  "    backing:NSBackingStoreType.Buffered,\n"
  "    defer:true\n"
  "  )\n"
  "  window.title = \"Outlet Error\"\n"
  "  let contentView : NSView! = window.contentView as! NSView\n"
  "  let tfRect = NSInsetRect (contentView.bounds , 10.0, 10.0)\n"
  "  var tf = NSTextField.init (frame:tfRect)\n"
  "  tf.editable = false\n"
  "  tf.selectable = true\n"
  "  tf.font = NSFont.boldSystemFontOfSize (0.0)\n"
  "  tf.textColor = NSColor.redColor ()\n"
  "  tf.stringValue = message\n"
  "  contentView.addSubview (tf)\n"
  "  NSBeep () ;\n"
  "  window.makeKeyAndOrderFront (nil)\n"
  "  //---\n"
  "  gErrorWindows.append (window)\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//   NSDictionary extension                                                                                            *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension NSDictionary {\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readString (inKey : String) -> String {\n"
  "    var result = \"\"\n"
  "    let object : AnyObject\? = valueForKey (inKey)\n"
  "    if let s = object as\? String {\n"
  "      result = s\n"
  "    }\n"
  "    return result\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readNSColor (inKey : String) -> NSColor {\n"
  "    var result = NSColor.blackColor ()\n"
  "    let object : AnyObject\? = valueForKey (inKey)\n"
  "    if let d = object as\? NSData {\n"
  "      let c : AnyObject\? = NSUnarchiver.unarchiveObjectWithData (d)\n"
  "      if let color = c as\? NSColor {\n"
  "        result = color\n"
  "      }\n"
  "    }\n"
  "    return result\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readInt (inKey : String) -> Int {\n"
  "    var result : Int = 0\n"
  "    let object : AnyObject\? = valueForKey (inKey)\n"
  "    if let d = object as\? NSNumber {\n"
  "      result = d.integerValue\n"
  "    }\n"
  "    return result\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func readBool (inKey : String) -> Bool {\n"
  "    var result : Bool = false\n"
  "    let object : AnyObject\? = valueForKey (inKey)\n"
  "    if let d = object as\? NSNumber {\n"
  "      result = d.boolValue \n"
  "    }\n"
  "    return result\n"
  "  }\n"
  "\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//   NSArray extension                                                                                                 *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension NSArray {\n"
  "  func objectAtIndex (index:Int, file:String, line:Int) -> AnyObject! {\n"
  "    if index < 0 {\n"
  "      NSLog (\"Negative index %d in '%@' line %d\", index, file, line)\n"
  "    }else if index >= count {\n"
  "      NSLog (\"index %d >= count %d in '%@' line %d\", index, count, file, line)\n"
  "    }\n"
  "    return objectAtIndex (index)\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//   Array<T> extension                                                                                                *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension Array {\n"
  "  func objectAtIndex (index:Int, file:String, line:Int) -> T {\n"
  "    if index < 0 {\n"
  "      NSLog (\"Negative index %d in '%@' line %d\", index, file, line)\n"
  "    }else if index >= count {\n"
  "      NSLog (\"index %d >= count %d in '%@' line %d\", index, count, file, line)\n"
  "    }\n"
  "    return self [index]\n"
  "  }\n"
  "}\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    getUniqueIndex                                                                                                   *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "private var gUniqueIndex = 0\n"
  "\n"
  "func getUniqueIndex () -> Int {\n"
  "  gUniqueIndex += 1\n"
  "  return gUniqueIndex\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    PMValidationResult                                                                                               *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "enum PMValidationResult {\n"
  "  case ok\n"
  "  case rejectWithBeep\n"
  "  case rejectWithAlert (String /* informativeText */)\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    PMUserClassName protocol                                                                                         *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "protocol PMUserClassName : class {\n"
  "  func userClassName () -> String\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    PMTransientEventProtocol protocol                                                                                *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "protocol PMTransientEventProtocol : PMUserClassName {\n"
  "  var transientEventIndex : PMTransientIndex { get }\n"
  "  func noteModelDidChange ()\n"
  "  func trigger ()\n"
  "  func unregister ()\n"
  "  var uniqueIndex : Int { get }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    NSTExtView extension                                                                                             *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension NSTextView {\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func displayAndScrollToEndOfText () {\n"
  "    if let unwrappedLayoutManager = layoutManager {\n"
  "      if let ts = unwrappedLayoutManager.textStorage {\n"
  "        let endOfText = NSRange (location:ts.length, length:0)\n"
  "        scrollRangeToVisible (endOfText)\n"
  "        displayIfNeeded ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func clear () {\n"
  "    let str = NSAttributedString (string:\"\", attributes:nil)\n"
  "    if let unwrappedLayoutManager = layoutManager {\n"
  "      if let ts = unwrappedLayoutManager.textStorage {\n"
  "        ts.setAttributedString (str)\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func appendAttributedString (inAttributedString : NSAttributedString) {\n"
  "    if let unwrappedLayoutManager = layoutManager {\n"
  "      if let ts = unwrappedLayoutManager.textStorage {\n"
  "        ts.appendAttributedString (inAttributedString)\n"
  "        displayAndScrollToEndOfText ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func appendMessageString (inString : String) {\n"
  "    let attributes : [String : NSObject] = [\n"
  "      NSFontAttributeName : NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ()),\n"
  "      NSForegroundColorAttributeName : NSColor.blackColor()\n"
  "    ]\n"
  "    let str = NSAttributedString (string:inString, attributes:attributes)\n"
  "    if let unwrappedLayoutManager = layoutManager {\n"
  "      if let ts = unwrappedLayoutManager.textStorage {\n"
  "        ts.appendAttributedString (str)\n"
  "        displayAndScrollToEndOfText ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func appendMessageString (inString : String, color:NSColor) {\n"
  "    let attributes : [String : NSObject] = [\n"
  "      NSFontAttributeName : NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ()),\n"
  "      NSForegroundColorAttributeName : color\n"
  "    ]\n"
  "    let str = NSAttributedString (string:inString, attributes:attributes)\n"
  "    if let unwrappedLayoutManager = layoutManager {\n"
  "      if let ts = unwrappedLayoutManager.textStorage {\n"
  "        ts.appendAttributedString (str)\n"
  "        displayAndScrollToEndOfText ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func appendErrorString (inString : String) {\n"
  "    let attributes : [String : NSObject] = [\n"
  "      NSFontAttributeName : NSFont.boldSystemFontOfSize (NSFont.smallSystemFontSize ()),\n"
  "      NSForegroundColorAttributeName : NSColor.redColor()\n"
  "    ]\n"
  "    let str = NSAttributedString (string:inString, attributes:attributes)\n"
  "    if let unwrappedLayoutManager = layoutManager {\n"
  "      if let ts = unwrappedLayoutManager.textStorage {\n"
  "        ts.appendAttributedString (str)\n"
  "        displayAndScrollToEndOfText ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    PMEnableProtocol protocol                                                                                        *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "@objc(PMEnableProtocol) protocol PMEnableProtocol {\n"
  "  func setEnableFromBinding (flag : Bool)\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    defaultValidationFunction                                                                                        *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "func defaultValidationFunction<T> (proposedValue : T) -> PMValidationResult {\n"
  "  return PMValidationResult.ok\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "//    descriptionForExplorer                                                                                           *\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "protocol DescriptionForExplorer {\n"
  "  func descriptionForExplorer () -> String\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension NSObject : DescriptionForExplorer {\n"
  "  func descriptionForExplorer () -> String {\n"
  "    return description\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension String : DescriptionForExplorer {\n"
  "  func descriptionForExplorer () -> String {\n"
  "    return self\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "extension Int : DescriptionForExplorer {\n"
  "  func descriptionForExplorer () -> String {\n"
  "    return String (format:\"%d\", self)\n"
  "  }\n"
  "}\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_9_swift_5F_sources (
  "easy-bindings-utilities.swift",
  "swift",
  true, // Text file
  12557, // Text length
  gWrapperFileContent_9_swift_5F_sources
) ;

//--- File '/main.swift'

const char * gWrapperFileContent_10_swift_5F_sources = "import Cocoa\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "NSApplicationMain (Process.argc, Process.unsafeArgv)\n"
  "\n"
  "//---------------------------------------------------------------------------------------------------------------------*\n" ;

const cRegularFileWrapper gWrapperFile_10_swift_5F_sources (
  "main.swift",
  "swift",
  true, // Text file
  311, // Text length
  gWrapperFileContent_10_swift_5F_sources
) ;

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_swift_5F_sources_0 [12] = {
  & gWrapperFile_0_swift_5F_sources,
  & gWrapperFile_1_swift_5F_sources,
  & gWrapperFile_2_swift_5F_sources,
  & gWrapperFile_3_swift_5F_sources,
  & gWrapperFile_4_swift_5F_sources,
  & gWrapperFile_5_swift_5F_sources,
  & gWrapperFile_6_swift_5F_sources,
  & gWrapperFile_7_swift_5F_sources,
  & gWrapperFile_8_swift_5F_sources,
  & gWrapperFile_9_swift_5F_sources,
  & gWrapperFile_10_swift_5F_sources,
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_swift_5F_sources_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_swift_5F_sources (
  "",
  11,
  gWrapperAllFiles_swift_5F_sources_0,
  0,
  gWrapperAllDirectories_swift_5F_sources_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'generateSwiftApplicationFiles'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_generateSwiftApplicationFiles (const GALGAS_string constinArgument_inOutputDirectory,
                                            const GALGAS_bool constinArgument_inHasEntities,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringlist temp_0 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("easyBindings_program.galgas", 207)) ;
  temp_0.addAssign_operation (GALGAS_string ("main")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 203)) ;
  temp_0.addAssign_operation (GALGAS_string ("PMAllocationDebug")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 204)) ;
  temp_0.addAssign_operation (GALGAS_string ("easy-bindings-utilities")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 205)) ;
  temp_0.addAssign_operation (GALGAS_string ("PMPreferencesProperty")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 206)) ;
  temp_0.addAssign_operation (GALGAS_string ("PMTransientProperty")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 207)) ;
  GALGAS_stringlist var_swiftFiles = temp_0 ;
  const enumGalgasBool test_1 = constinArgument_inHasEntities.boolEnum () ;
  if (kBoolTrue == test_1) {
    var_swiftFiles.addAssign_operation (GALGAS_string ("PMManagedObject")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 210)) ;
    var_swiftFiles.addAssign_operation (GALGAS_string ("PMManagedDocument")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 211)) ;
    var_swiftFiles.addAssign_operation (GALGAS_string ("PMUndoManager")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 212)) ;
    var_swiftFiles.addAssign_operation (GALGAS_string ("PMDataScanner")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 213)) ;
    var_swiftFiles.addAssign_operation (GALGAS_string ("PMEntityProperty")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 214)) ;
  }
  GALGAS_stringlist temp_2 = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("easyBindings_program.galgas", 216)) ;
  temp_2.addAssign_operation (GALGAS_string ("PMAllocationDebug")  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 216)) ;
  GALGAS_stringlist var_xibFiles = temp_2 ;
  GALGAS_filewrapper var_fw = GALGAS_filewrapper (gWrapperDirectory_0_swift_5F_sources) ;
  cEnumerator_stringlist enumerator_8081 (var_swiftFiles, kEnumeration_up) ;
  while (enumerator_8081.hasCurrentObject ()) {
    GALGAS_string var_contents = var_fw.reader_textFileContentsAtPath (enumerator_8081.current_mValue (HERE).add_operation (GALGAS_string (".swift"), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 219)), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 219)) ;
    {
    GALGAS_string::class_method_generateFile (constinArgument_inOutputDirectory, enumerator_8081.current_mValue (HERE).add_operation (GALGAS_string (".swift"), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 222)), var_contents, inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 220)) ;
    }
    enumerator_8081.gotoNextObject () ;
  }
  cEnumerator_stringlist enumerator_8274 (var_xibFiles, kEnumeration_up) ;
  while (enumerator_8274.hasCurrentObject ()) {
    GALGAS_string var_contents = var_fw.reader_textFileContentsAtPath (enumerator_8274.current_mValue (HERE).add_operation (GALGAS_string (".xib"), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 227)), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 227)) ;
    {
    GALGAS_string::class_method_generateFile (constinArgument_inOutputDirectory, enumerator_8274.current_mValue (HERE).add_operation (GALGAS_string (".xib"), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 230)), var_contents, inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 228)) ;
    }
    enumerator_8274.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractBooleanMultipleBindingExpressionAST::objectCompare (const GALGAS_abstractBooleanMultipleBindingExpressionAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST::GALGAS_abstractBooleanMultipleBindingExpressionAST (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST::GALGAS_abstractBooleanMultipleBindingExpressionAST (const cPtr_abstractBooleanMultipleBindingExpressionAST * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractBooleanMultipleBindingExpressionAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                        Pointer class for @abstractBooleanMultipleBindingExpressionAST class                         *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_abstractBooleanMultipleBindingExpressionAST::cPtr_abstractBooleanMultipleBindingExpressionAST (LOCATION_ARGS) :
acPtr_class (THERE) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  @abstractBooleanMultipleBindingExpressionAST type                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionAST ("abstractBooleanMultipleBindingExpressionAST",
                                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractBooleanMultipleBindingExpressionAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractBooleanMultipleBindingExpressionAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractBooleanMultipleBindingExpressionAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST GALGAS_abstractBooleanMultipleBindingExpressionAST::extractObject (const GALGAS_object & inObject,
                                                                                                                      C_Compiler * inCompiler
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_abstractBooleanMultipleBindingExpressionAST result ;
  const GALGAS_abstractBooleanMultipleBindingExpressionAST * p = (const GALGAS_abstractBooleanMultipleBindingExpressionAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractBooleanMultipleBindingExpressionAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractBooleanMultipleBindingExpressionAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_andBooleanMultipleBindingExpressionAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_andBooleanMultipleBindingExpressionAST * p = (const cPtr_andBooleanMultipleBindingExpressionAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_andBooleanMultipleBindingExpressionAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLeftBinding.objectCompare (p->mAttribute_mLeftBinding) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRightBinding.objectCompare (p->mAttribute_mRightBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_andBooleanMultipleBindingExpressionAST::objectCompare (const GALGAS_andBooleanMultipleBindingExpressionAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionAST::GALGAS_andBooleanMultipleBindingExpressionAST (void) :
GALGAS_abstractBooleanMultipleBindingExpressionAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionAST::GALGAS_andBooleanMultipleBindingExpressionAST (const cPtr_andBooleanMultipleBindingExpressionAST * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_andBooleanMultipleBindingExpressionAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionAST GALGAS_andBooleanMultipleBindingExpressionAST::constructor_new (const GALGAS_abstractBooleanMultipleBindingExpressionAST & inAttribute_mLeftBinding,
                                                                                                              const GALGAS_abstractBooleanMultipleBindingExpressionAST & inAttribute_mRightBinding
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_andBooleanMultipleBindingExpressionAST result ;
  if (inAttribute_mLeftBinding.isValid () && inAttribute_mRightBinding.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_andBooleanMultipleBindingExpressionAST (inAttribute_mLeftBinding, inAttribute_mRightBinding COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST GALGAS_andBooleanMultipleBindingExpressionAST::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_andBooleanMultipleBindingExpressionAST * p = (const cPtr_andBooleanMultipleBindingExpressionAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_andBooleanMultipleBindingExpressionAST) ;
    result = p->mAttribute_mLeftBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST cPtr_andBooleanMultipleBindingExpressionAST::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLeftBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST GALGAS_andBooleanMultipleBindingExpressionAST::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_andBooleanMultipleBindingExpressionAST * p = (const cPtr_andBooleanMultipleBindingExpressionAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_andBooleanMultipleBindingExpressionAST) ;
    result = p->mAttribute_mRightBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST cPtr_andBooleanMultipleBindingExpressionAST::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRightBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                           Pointer class for @andBooleanMultipleBindingExpressionAST class                           *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_andBooleanMultipleBindingExpressionAST::cPtr_andBooleanMultipleBindingExpressionAST (const GALGAS_abstractBooleanMultipleBindingExpressionAST & in_mLeftBinding,
                                                                                          const GALGAS_abstractBooleanMultipleBindingExpressionAST & in_mRightBinding
                                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionAST (THERE),
mAttribute_mLeftBinding (in_mLeftBinding),
mAttribute_mRightBinding (in_mRightBinding) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_andBooleanMultipleBindingExpressionAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_andBooleanMultipleBindingExpressionAST ;
}

void cPtr_andBooleanMultipleBindingExpressionAST::description (C_String & ioString,
                                                               const int32_t inIndentation) const {
  ioString << "[@andBooleanMultipleBindingExpressionAST:" ;
  mAttribute_mLeftBinding.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightBinding.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_andBooleanMultipleBindingExpressionAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_andBooleanMultipleBindingExpressionAST (mAttribute_mLeftBinding, mAttribute_mRightBinding COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    @andBooleanMultipleBindingExpressionAST type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_andBooleanMultipleBindingExpressionAST ("andBooleanMultipleBindingExpressionAST",
                                                               & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_andBooleanMultipleBindingExpressionAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_andBooleanMultipleBindingExpressionAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_andBooleanMultipleBindingExpressionAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_andBooleanMultipleBindingExpressionAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionAST GALGAS_andBooleanMultipleBindingExpressionAST::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_andBooleanMultipleBindingExpressionAST result ;
  const GALGAS_andBooleanMultipleBindingExpressionAST * p = (const GALGAS_andBooleanMultipleBindingExpressionAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_andBooleanMultipleBindingExpressionAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("andBooleanMultipleBindingExpressionAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_negateBooleanMultipleBindingExpressionAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_negateBooleanMultipleBindingExpressionAST * p = (const cPtr_negateBooleanMultipleBindingExpressionAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_negateBooleanMultipleBindingExpressionAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBinding.objectCompare (p->mAttribute_mBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_negateBooleanMultipleBindingExpressionAST::objectCompare (const GALGAS_negateBooleanMultipleBindingExpressionAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionAST::GALGAS_negateBooleanMultipleBindingExpressionAST (void) :
GALGAS_abstractBooleanMultipleBindingExpressionAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionAST::GALGAS_negateBooleanMultipleBindingExpressionAST (const cPtr_negateBooleanMultipleBindingExpressionAST * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_negateBooleanMultipleBindingExpressionAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionAST GALGAS_negateBooleanMultipleBindingExpressionAST::constructor_new (const GALGAS_abstractBooleanMultipleBindingExpressionAST & inAttribute_mBinding
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_negateBooleanMultipleBindingExpressionAST result ;
  if (inAttribute_mBinding.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_negateBooleanMultipleBindingExpressionAST (inAttribute_mBinding COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST GALGAS_negateBooleanMultipleBindingExpressionAST::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_negateBooleanMultipleBindingExpressionAST * p = (const cPtr_negateBooleanMultipleBindingExpressionAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_negateBooleanMultipleBindingExpressionAST) ;
    result = p->mAttribute_mBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST cPtr_negateBooleanMultipleBindingExpressionAST::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         Pointer class for @negateBooleanMultipleBindingExpressionAST class                          *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_negateBooleanMultipleBindingExpressionAST::cPtr_negateBooleanMultipleBindingExpressionAST (const GALGAS_abstractBooleanMultipleBindingExpressionAST & in_mBinding
                                                                                                COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionAST (THERE),
mAttribute_mBinding (in_mBinding) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_negateBooleanMultipleBindingExpressionAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_negateBooleanMultipleBindingExpressionAST ;
}

void cPtr_negateBooleanMultipleBindingExpressionAST::description (C_String & ioString,
                                                                  const int32_t inIndentation) const {
  ioString << "[@negateBooleanMultipleBindingExpressionAST:" ;
  mAttribute_mBinding.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_negateBooleanMultipleBindingExpressionAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_negateBooleanMultipleBindingExpressionAST (mAttribute_mBinding COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   @negateBooleanMultipleBindingExpressionAST type                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_negateBooleanMultipleBindingExpressionAST ("negateBooleanMultipleBindingExpressionAST",
                                                                  & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_negateBooleanMultipleBindingExpressionAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_negateBooleanMultipleBindingExpressionAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_negateBooleanMultipleBindingExpressionAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_negateBooleanMultipleBindingExpressionAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionAST GALGAS_negateBooleanMultipleBindingExpressionAST::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_negateBooleanMultipleBindingExpressionAST result ;
  const GALGAS_negateBooleanMultipleBindingExpressionAST * p = (const GALGAS_negateBooleanMultipleBindingExpressionAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_negateBooleanMultipleBindingExpressionAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("negateBooleanMultipleBindingExpressionAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_observablePropertyAsEnableBindingExpressionAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_observablePropertyAsEnableBindingExpressionAST * p = (const cPtr_observablePropertyAsEnableBindingExpressionAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_observablePropertyAsEnableBindingExpressionAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mProperty.objectCompare (p->mAttribute_mProperty) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_observablePropertyAsEnableBindingExpressionAST::objectCompare (const GALGAS_observablePropertyAsEnableBindingExpressionAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsEnableBindingExpressionAST::GALGAS_observablePropertyAsEnableBindingExpressionAST (void) :
GALGAS_abstractBooleanMultipleBindingExpressionAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsEnableBindingExpressionAST::GALGAS_observablePropertyAsEnableBindingExpressionAST (const cPtr_observablePropertyAsEnableBindingExpressionAST * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_observablePropertyAsEnableBindingExpressionAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsEnableBindingExpressionAST GALGAS_observablePropertyAsEnableBindingExpressionAST::constructor_new (const GALGAS_abstractObservablePropertyAST & inAttribute_mProperty
                                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyAsEnableBindingExpressionAST result ;
  if (inAttribute_mProperty.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_observablePropertyAsEnableBindingExpressionAST (inAttribute_mProperty COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST GALGAS_observablePropertyAsEnableBindingExpressionAST::reader_mProperty (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractObservablePropertyAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_observablePropertyAsEnableBindingExpressionAST * p = (const cPtr_observablePropertyAsEnableBindingExpressionAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_observablePropertyAsEnableBindingExpressionAST) ;
    result = p->mAttribute_mProperty ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST cPtr_observablePropertyAsEnableBindingExpressionAST::reader_mProperty (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProperty ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                       Pointer class for @observablePropertyAsEnableBindingExpressionAST class                       *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_observablePropertyAsEnableBindingExpressionAST::cPtr_observablePropertyAsEnableBindingExpressionAST (const GALGAS_abstractObservablePropertyAST & in_mProperty
                                                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionAST (THERE),
mAttribute_mProperty (in_mProperty) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_observablePropertyAsEnableBindingExpressionAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyAsEnableBindingExpressionAST ;
}

void cPtr_observablePropertyAsEnableBindingExpressionAST::description (C_String & ioString,
                                                                       const int32_t inIndentation) const {
  ioString << "[@observablePropertyAsEnableBindingExpressionAST:" ;
  mAttribute_mProperty.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_observablePropertyAsEnableBindingExpressionAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_observablePropertyAsEnableBindingExpressionAST (mAttribute_mProperty COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                @observablePropertyAsEnableBindingExpressionAST type                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyAsEnableBindingExpressionAST ("observablePropertyAsEnableBindingExpressionAST",
                                                                       & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyAsEnableBindingExpressionAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyAsEnableBindingExpressionAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyAsEnableBindingExpressionAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyAsEnableBindingExpressionAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsEnableBindingExpressionAST GALGAS_observablePropertyAsEnableBindingExpressionAST::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyAsEnableBindingExpressionAST result ;
  const GALGAS_observablePropertyAsEnableBindingExpressionAST * p = (const GALGAS_observablePropertyAsEnableBindingExpressionAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyAsEnableBindingExpressionAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyAsEnableBindingExpressionAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_orBooleanMultipleBindingExpressionAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_orBooleanMultipleBindingExpressionAST * p = (const cPtr_orBooleanMultipleBindingExpressionAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_orBooleanMultipleBindingExpressionAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLeftBinding.objectCompare (p->mAttribute_mLeftBinding) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRightBinding.objectCompare (p->mAttribute_mRightBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_orBooleanMultipleBindingExpressionAST::objectCompare (const GALGAS_orBooleanMultipleBindingExpressionAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionAST::GALGAS_orBooleanMultipleBindingExpressionAST (void) :
GALGAS_abstractBooleanMultipleBindingExpressionAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionAST::GALGAS_orBooleanMultipleBindingExpressionAST (const cPtr_orBooleanMultipleBindingExpressionAST * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_orBooleanMultipleBindingExpressionAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionAST GALGAS_orBooleanMultipleBindingExpressionAST::constructor_new (const GALGAS_abstractBooleanMultipleBindingExpressionAST & inAttribute_mLeftBinding,
                                                                                                            const GALGAS_abstractBooleanMultipleBindingExpressionAST & inAttribute_mRightBinding
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_orBooleanMultipleBindingExpressionAST result ;
  if (inAttribute_mLeftBinding.isValid () && inAttribute_mRightBinding.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_orBooleanMultipleBindingExpressionAST (inAttribute_mLeftBinding, inAttribute_mRightBinding COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST GALGAS_orBooleanMultipleBindingExpressionAST::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_orBooleanMultipleBindingExpressionAST * p = (const cPtr_orBooleanMultipleBindingExpressionAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_orBooleanMultipleBindingExpressionAST) ;
    result = p->mAttribute_mLeftBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST cPtr_orBooleanMultipleBindingExpressionAST::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLeftBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST GALGAS_orBooleanMultipleBindingExpressionAST::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_orBooleanMultipleBindingExpressionAST * p = (const cPtr_orBooleanMultipleBindingExpressionAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_orBooleanMultipleBindingExpressionAST) ;
    result = p->mAttribute_mRightBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionAST cPtr_orBooleanMultipleBindingExpressionAST::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRightBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                           Pointer class for @orBooleanMultipleBindingExpressionAST class                            *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_orBooleanMultipleBindingExpressionAST::cPtr_orBooleanMultipleBindingExpressionAST (const GALGAS_abstractBooleanMultipleBindingExpressionAST & in_mLeftBinding,
                                                                                        const GALGAS_abstractBooleanMultipleBindingExpressionAST & in_mRightBinding
                                                                                        COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionAST (THERE),
mAttribute_mLeftBinding (in_mLeftBinding),
mAttribute_mRightBinding (in_mRightBinding) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_orBooleanMultipleBindingExpressionAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_orBooleanMultipleBindingExpressionAST ;
}

void cPtr_orBooleanMultipleBindingExpressionAST::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "[@orBooleanMultipleBindingExpressionAST:" ;
  mAttribute_mLeftBinding.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightBinding.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_orBooleanMultipleBindingExpressionAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_orBooleanMultipleBindingExpressionAST (mAttribute_mLeftBinding, mAttribute_mRightBinding COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @orBooleanMultipleBindingExpressionAST type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_orBooleanMultipleBindingExpressionAST ("orBooleanMultipleBindingExpressionAST",
                                                              & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_orBooleanMultipleBindingExpressionAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_orBooleanMultipleBindingExpressionAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_orBooleanMultipleBindingExpressionAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_orBooleanMultipleBindingExpressionAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionAST GALGAS_orBooleanMultipleBindingExpressionAST::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_orBooleanMultipleBindingExpressionAST result ;
  const GALGAS_orBooleanMultipleBindingExpressionAST * p = (const GALGAS_orBooleanMultipleBindingExpressionAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_orBooleanMultipleBindingExpressionAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("orBooleanMultipleBindingExpressionAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractBooleanMultipleBindingExpressionForGeneration::objectCompare (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration::GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration::GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (const cPtr_abstractBooleanMultipleBindingExpressionForGeneration * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractBooleanMultipleBindingExpressionForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                   Pointer class for @abstractBooleanMultipleBindingExpressionForGeneration class                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_abstractBooleanMultipleBindingExpressionForGeneration::cPtr_abstractBooleanMultipleBindingExpressionForGeneration (LOCATION_ARGS) :
acPtr_class (THERE) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             @abstractBooleanMultipleBindingExpressionForGeneration type                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionForGeneration ("abstractBooleanMultipleBindingExpressionForGeneration",
                                                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractBooleanMultipleBindingExpressionForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractBooleanMultipleBindingExpressionForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration GALGAS_abstractBooleanMultipleBindingExpressionForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                                          C_Compiler * inCompiler
                                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_abstractBooleanMultipleBindingExpressionForGeneration result ;
  const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration * p = (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractBooleanMultipleBindingExpressionForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_andBooleanMultipleBindingExpressionForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_andBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_andBooleanMultipleBindingExpressionForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_andBooleanMultipleBindingExpressionForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLeftBinding.objectCompare (p->mAttribute_mLeftBinding) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRightBinding.objectCompare (p->mAttribute_mRightBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_andBooleanMultipleBindingExpressionForGeneration::objectCompare (const GALGAS_andBooleanMultipleBindingExpressionForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionForGeneration::GALGAS_andBooleanMultipleBindingExpressionForGeneration (void) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionForGeneration::GALGAS_andBooleanMultipleBindingExpressionForGeneration (const cPtr_andBooleanMultipleBindingExpressionForGeneration * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_andBooleanMultipleBindingExpressionForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionForGeneration GALGAS_andBooleanMultipleBindingExpressionForGeneration::constructor_new (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & inAttribute_mLeftBinding,
                                                                                                                                  const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & inAttribute_mRightBinding
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_andBooleanMultipleBindingExpressionForGeneration result ;
  if (inAttribute_mLeftBinding.isValid () && inAttribute_mRightBinding.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_andBooleanMultipleBindingExpressionForGeneration (inAttribute_mLeftBinding, inAttribute_mRightBinding COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration GALGAS_andBooleanMultipleBindingExpressionForGeneration::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_andBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_andBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_andBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mLeftBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration cPtr_andBooleanMultipleBindingExpressionForGeneration::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLeftBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration GALGAS_andBooleanMultipleBindingExpressionForGeneration::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_andBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_andBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_andBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mRightBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration cPtr_andBooleanMultipleBindingExpressionForGeneration::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRightBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                      Pointer class for @andBooleanMultipleBindingExpressionForGeneration class                      *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_andBooleanMultipleBindingExpressionForGeneration::cPtr_andBooleanMultipleBindingExpressionForGeneration (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & in_mLeftBinding,
                                                                                                              const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & in_mRightBinding
                                                                                                              COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionForGeneration (THERE),
mAttribute_mLeftBinding (in_mLeftBinding),
mAttribute_mRightBinding (in_mRightBinding) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_andBooleanMultipleBindingExpressionForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_andBooleanMultipleBindingExpressionForGeneration ;
}

void cPtr_andBooleanMultipleBindingExpressionForGeneration::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "[@andBooleanMultipleBindingExpressionForGeneration:" ;
  mAttribute_mLeftBinding.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightBinding.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_andBooleanMultipleBindingExpressionForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_andBooleanMultipleBindingExpressionForGeneration (mAttribute_mLeftBinding, mAttribute_mRightBinding COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               @andBooleanMultipleBindingExpressionForGeneration type                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_andBooleanMultipleBindingExpressionForGeneration ("andBooleanMultipleBindingExpressionForGeneration",
                                                                         & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_andBooleanMultipleBindingExpressionForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_andBooleanMultipleBindingExpressionForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_andBooleanMultipleBindingExpressionForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_andBooleanMultipleBindingExpressionForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_andBooleanMultipleBindingExpressionForGeneration GALGAS_andBooleanMultipleBindingExpressionForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_andBooleanMultipleBindingExpressionForGeneration result ;
  const GALGAS_andBooleanMultipleBindingExpressionForGeneration * p = (const GALGAS_andBooleanMultipleBindingExpressionForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_andBooleanMultipleBindingExpressionForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("andBooleanMultipleBindingExpressionForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_negateBooleanMultipleBindingExpressionForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_negateBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_negateBooleanMultipleBindingExpressionForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_negateBooleanMultipleBindingExpressionForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBinding.objectCompare (p->mAttribute_mBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_negateBooleanMultipleBindingExpressionForGeneration::objectCompare (const GALGAS_negateBooleanMultipleBindingExpressionForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionForGeneration::GALGAS_negateBooleanMultipleBindingExpressionForGeneration (void) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionForGeneration::GALGAS_negateBooleanMultipleBindingExpressionForGeneration (const cPtr_negateBooleanMultipleBindingExpressionForGeneration * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_negateBooleanMultipleBindingExpressionForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionForGeneration GALGAS_negateBooleanMultipleBindingExpressionForGeneration::constructor_new (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & inAttribute_mBinding
                                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_negateBooleanMultipleBindingExpressionForGeneration result ;
  if (inAttribute_mBinding.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_negateBooleanMultipleBindingExpressionForGeneration (inAttribute_mBinding COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration GALGAS_negateBooleanMultipleBindingExpressionForGeneration::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_negateBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_negateBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_negateBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration cPtr_negateBooleanMultipleBindingExpressionForGeneration::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                    Pointer class for @negateBooleanMultipleBindingExpressionForGeneration class                     *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_negateBooleanMultipleBindingExpressionForGeneration::cPtr_negateBooleanMultipleBindingExpressionForGeneration (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & in_mBinding
                                                                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionForGeneration (THERE),
mAttribute_mBinding (in_mBinding) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_negateBooleanMultipleBindingExpressionForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_negateBooleanMultipleBindingExpressionForGeneration ;
}

void cPtr_negateBooleanMultipleBindingExpressionForGeneration::description (C_String & ioString,
                                                                            const int32_t inIndentation) const {
  ioString << "[@negateBooleanMultipleBindingExpressionForGeneration:" ;
  mAttribute_mBinding.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_negateBooleanMultipleBindingExpressionForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_negateBooleanMultipleBindingExpressionForGeneration (mAttribute_mBinding COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              @negateBooleanMultipleBindingExpressionForGeneration type                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_negateBooleanMultipleBindingExpressionForGeneration ("negateBooleanMultipleBindingExpressionForGeneration",
                                                                            & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_negateBooleanMultipleBindingExpressionForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_negateBooleanMultipleBindingExpressionForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_negateBooleanMultipleBindingExpressionForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_negateBooleanMultipleBindingExpressionForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_negateBooleanMultipleBindingExpressionForGeneration GALGAS_negateBooleanMultipleBindingExpressionForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_negateBooleanMultipleBindingExpressionForGeneration result ;
  const GALGAS_negateBooleanMultipleBindingExpressionForGeneration * p = (const GALGAS_negateBooleanMultipleBindingExpressionForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_negateBooleanMultipleBindingExpressionForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("negateBooleanMultipleBindingExpressionForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mObservedObject.objectCompare (p->mAttribute_mObservedObject) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservedModel.objectCompare (p->mAttribute_mObservedModel) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservedTypeName.objectCompare (p->mAttribute_mObservedTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIndex.objectCompare (p->mAttribute_mIndex) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::objectCompare (const GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration (void) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                                                                    GALGAS_string::constructor_default (HERE),
                                                                                                    GALGAS_string::constructor_default (HERE),
                                                                                                    GALGAS_uint::constructor_default (HERE)
                                                                                                    COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration (const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::constructor_new (const GALGAS_string & inAttribute_mObservedObject,
                                                                                                                                                                    const GALGAS_string & inAttribute_mObservedModel,
                                                                                                                                                                    const GALGAS_string & inAttribute_mObservedTypeName,
                                                                                                                                                                    const GALGAS_uint & inAttribute_mIndex
                                                                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration result ;
  if (inAttribute_mObservedObject.isValid () && inAttribute_mObservedModel.isValid () && inAttribute_mObservedTypeName.isValid () && inAttribute_mIndex.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration (inAttribute_mObservedObject, inAttribute_mObservedModel, inAttribute_mObservedTypeName, inAttribute_mIndex COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mObservedObject (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mObservedObject ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mObservedObject (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedObject ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mObservedModel (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mObservedModel ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mObservedModel (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedModel ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mObservedTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mObservedTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mObservedTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mIndex (UNUSED_LOCATION_ARGS) const {
  GALGAS_uint result ;
  if (NULL != mObjectPtr) {
    const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mIndex ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_uint cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::reader_mIndex (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIndex ;
}

//---------------------------------------------------------------------------------------------------------------------*
//             Pointer class for @observablePropertyAsBooleanMultipleBindingExpressionForGeneration class              *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration (const GALGAS_string & in_mObservedObject,
                                                                                                                                                const GALGAS_string & in_mObservedModel,
                                                                                                                                                const GALGAS_string & in_mObservedTypeName,
                                                                                                                                                const GALGAS_uint & in_mIndex
                                                                                                                                                COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionForGeneration (THERE),
mAttribute_mObservedObject (in_mObservedObject),
mAttribute_mObservedModel (in_mObservedModel),
mAttribute_mObservedTypeName (in_mObservedTypeName),
mAttribute_mIndex (in_mIndex) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration ;
}

void cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::description (C_String & ioString,
                                                                                          const int32_t inIndentation) const {
  ioString << "[@observablePropertyAsBooleanMultipleBindingExpressionForGeneration:" ;
  mAttribute_mObservedObject.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservedModel.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservedTypeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mIndex.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_observablePropertyAsBooleanMultipleBindingExpressionForGeneration (mAttribute_mObservedObject, mAttribute_mObservedModel, mAttribute_mObservedTypeName, mAttribute_mIndex COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       @observablePropertyAsBooleanMultipleBindingExpressionForGeneration type                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration ("observablePropertyAsBooleanMultipleBindingExpressionForGeneration",
                                                                                          & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                                                                  C_Compiler * inCompiler
                                                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration result ;
  const GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration * p = (const GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyAsBooleanMultipleBindingExpressionForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyAsBooleanMultipleBindingExpressionForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_orBooleanMultipleBindingExpressionForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_orBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_orBooleanMultipleBindingExpressionForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_orBooleanMultipleBindingExpressionForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mLeftBinding.objectCompare (p->mAttribute_mLeftBinding) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRightBinding.objectCompare (p->mAttribute_mRightBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_orBooleanMultipleBindingExpressionForGeneration::objectCompare (const GALGAS_orBooleanMultipleBindingExpressionForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionForGeneration::GALGAS_orBooleanMultipleBindingExpressionForGeneration (void) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionForGeneration::GALGAS_orBooleanMultipleBindingExpressionForGeneration (const cPtr_orBooleanMultipleBindingExpressionForGeneration * inSourcePtr) :
GALGAS_abstractBooleanMultipleBindingExpressionForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_orBooleanMultipleBindingExpressionForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionForGeneration GALGAS_orBooleanMultipleBindingExpressionForGeneration::constructor_new (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & inAttribute_mLeftBinding,
                                                                                                                                const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & inAttribute_mRightBinding
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_orBooleanMultipleBindingExpressionForGeneration result ;
  if (inAttribute_mLeftBinding.isValid () && inAttribute_mRightBinding.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_orBooleanMultipleBindingExpressionForGeneration (inAttribute_mLeftBinding, inAttribute_mRightBinding COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration GALGAS_orBooleanMultipleBindingExpressionForGeneration::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_orBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_orBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_orBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mLeftBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration cPtr_orBooleanMultipleBindingExpressionForGeneration::reader_mLeftBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mLeftBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration GALGAS_orBooleanMultipleBindingExpressionForGeneration::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  GALGAS_abstractBooleanMultipleBindingExpressionForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_orBooleanMultipleBindingExpressionForGeneration * p = (const cPtr_orBooleanMultipleBindingExpressionForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_orBooleanMultipleBindingExpressionForGeneration) ;
    result = p->mAttribute_mRightBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractBooleanMultipleBindingExpressionForGeneration cPtr_orBooleanMultipleBindingExpressionForGeneration::reader_mRightBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRightBinding ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                      Pointer class for @orBooleanMultipleBindingExpressionForGeneration class                       *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_orBooleanMultipleBindingExpressionForGeneration::cPtr_orBooleanMultipleBindingExpressionForGeneration (const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & in_mLeftBinding,
                                                                                                            const GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & in_mRightBinding
                                                                                                            COMMA_LOCATION_ARGS) :
cPtr_abstractBooleanMultipleBindingExpressionForGeneration (THERE),
mAttribute_mLeftBinding (in_mLeftBinding),
mAttribute_mRightBinding (in_mRightBinding) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_orBooleanMultipleBindingExpressionForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_orBooleanMultipleBindingExpressionForGeneration ;
}

void cPtr_orBooleanMultipleBindingExpressionForGeneration::description (C_String & ioString,
                                                                        const int32_t inIndentation) const {
  ioString << "[@orBooleanMultipleBindingExpressionForGeneration:" ;
  mAttribute_mLeftBinding.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRightBinding.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_orBooleanMultipleBindingExpressionForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_orBooleanMultipleBindingExpressionForGeneration (mAttribute_mLeftBinding, mAttribute_mRightBinding COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                @orBooleanMultipleBindingExpressionForGeneration type                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_orBooleanMultipleBindingExpressionForGeneration ("orBooleanMultipleBindingExpressionForGeneration",
                                                                        & kTypeDescriptor_GALGAS_abstractBooleanMultipleBindingExpressionForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_orBooleanMultipleBindingExpressionForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_orBooleanMultipleBindingExpressionForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_orBooleanMultipleBindingExpressionForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_orBooleanMultipleBindingExpressionForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_orBooleanMultipleBindingExpressionForGeneration GALGAS_orBooleanMultipleBindingExpressionForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_orBooleanMultipleBindingExpressionForGeneration result ;
  const GALGAS_orBooleanMultipleBindingExpressionForGeneration * p = (const GALGAS_orBooleanMultipleBindingExpressionForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_orBooleanMultipleBindingExpressionForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("orBooleanMultipleBindingExpressionForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractDefaultValue::objectCompare (const GALGAS_abstractDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDefaultValue::GALGAS_abstractDefaultValue (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDefaultValue::GALGAS_abstractDefaultValue (const cPtr_abstractDefaultValue * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                    Pointer class for @abstractDefaultValue class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_abstractDefaultValue::cPtr_abstractDefaultValue (LOCATION_ARGS) :
acPtr_class (THERE) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @abstractDefaultValue type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractDefaultValue ("abstractDefaultValue",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDefaultValue GALGAS_abstractDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_abstractDefaultValue result ;
  const GALGAS_abstractDefaultValue * p = (const GALGAS_abstractDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_boolAsDefaultValue::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_boolAsDefaultValue * p = (const cPtr_boolAsDefaultValue *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_boolAsDefaultValue) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (p->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_boolAsDefaultValue::objectCompare (const GALGAS_boolAsDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_boolAsDefaultValue::GALGAS_boolAsDefaultValue (void) :
GALGAS_abstractDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_boolAsDefaultValue GALGAS_boolAsDefaultValue::constructor_default (LOCATION_ARGS) {
  return GALGAS_boolAsDefaultValue::constructor_new (GALGAS_lbool::constructor_default (HERE)
                                                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_boolAsDefaultValue::GALGAS_boolAsDefaultValue (const cPtr_boolAsDefaultValue * inSourcePtr) :
GALGAS_abstractDefaultValue (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_boolAsDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_boolAsDefaultValue GALGAS_boolAsDefaultValue::constructor_new (const GALGAS_lbool & inAttribute_mValue
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_boolAsDefaultValue result ;
  if (inAttribute_mValue.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_boolAsDefaultValue (inAttribute_mValue COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lbool GALGAS_boolAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  GALGAS_lbool result ;
  if (NULL != mObjectPtr) {
    const cPtr_boolAsDefaultValue * p = (const cPtr_boolAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_boolAsDefaultValue) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lbool cPtr_boolAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mValue ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                     Pointer class for @boolAsDefaultValue class                                     *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_boolAsDefaultValue::cPtr_boolAsDefaultValue (const GALGAS_lbool & in_mValue
                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractDefaultValue (THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_boolAsDefaultValue::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_boolAsDefaultValue ;
}

void cPtr_boolAsDefaultValue::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "[@boolAsDefaultValue:" ;
  mAttribute_mValue.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_boolAsDefaultValue::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_boolAsDefaultValue (mAttribute_mValue COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @boolAsDefaultValue type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_boolAsDefaultValue ("boolAsDefaultValue",
                                           & kTypeDescriptor_GALGAS_abstractDefaultValue) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_boolAsDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_boolAsDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_boolAsDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_boolAsDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_boolAsDefaultValue GALGAS_boolAsDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_boolAsDefaultValue result ;
  const GALGAS_boolAsDefaultValue * p = (const GALGAS_boolAsDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_boolAsDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("boolAsDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_doubleAsDefaultValue::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_doubleAsDefaultValue * p = (const cPtr_doubleAsDefaultValue *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_doubleAsDefaultValue) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (p->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_doubleAsDefaultValue::objectCompare (const GALGAS_doubleAsDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_doubleAsDefaultValue::GALGAS_doubleAsDefaultValue (void) :
GALGAS_abstractDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_doubleAsDefaultValue GALGAS_doubleAsDefaultValue::constructor_default (LOCATION_ARGS) {
  return GALGAS_doubleAsDefaultValue::constructor_new (GALGAS_ldouble::constructor_default (HERE)
                                                       COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_doubleAsDefaultValue::GALGAS_doubleAsDefaultValue (const cPtr_doubleAsDefaultValue * inSourcePtr) :
GALGAS_abstractDefaultValue (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_doubleAsDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_doubleAsDefaultValue GALGAS_doubleAsDefaultValue::constructor_new (const GALGAS_ldouble & inAttribute_mValue
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_doubleAsDefaultValue result ;
  if (inAttribute_mValue.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_doubleAsDefaultValue (inAttribute_mValue COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ldouble GALGAS_doubleAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  GALGAS_ldouble result ;
  if (NULL != mObjectPtr) {
    const cPtr_doubleAsDefaultValue * p = (const cPtr_doubleAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_doubleAsDefaultValue) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ldouble cPtr_doubleAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mValue ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                    Pointer class for @doubleAsDefaultValue class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_doubleAsDefaultValue::cPtr_doubleAsDefaultValue (const GALGAS_ldouble & in_mValue
                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractDefaultValue (THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_doubleAsDefaultValue::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_doubleAsDefaultValue ;
}

void cPtr_doubleAsDefaultValue::description (C_String & ioString,
                                             const int32_t inIndentation) const {
  ioString << "[@doubleAsDefaultValue:" ;
  mAttribute_mValue.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_doubleAsDefaultValue::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_doubleAsDefaultValue (mAttribute_mValue COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @doubleAsDefaultValue type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_doubleAsDefaultValue ("doubleAsDefaultValue",
                                             & kTypeDescriptor_GALGAS_abstractDefaultValue) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_doubleAsDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_doubleAsDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_doubleAsDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_doubleAsDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_doubleAsDefaultValue GALGAS_doubleAsDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_doubleAsDefaultValue result ;
  const GALGAS_doubleAsDefaultValue * p = (const GALGAS_doubleAsDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_doubleAsDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("doubleAsDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_identifierAsDefaultValue::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_identifierAsDefaultValue * p = (const cPtr_identifierAsDefaultValue *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_identifierAsDefaultValue) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (p->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_identifierAsDefaultValue::objectCompare (const GALGAS_identifierAsDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierAsDefaultValue::GALGAS_identifierAsDefaultValue (void) :
GALGAS_abstractDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierAsDefaultValue GALGAS_identifierAsDefaultValue::constructor_default (LOCATION_ARGS) {
  return GALGAS_identifierAsDefaultValue::constructor_new (GALGAS_lstring::constructor_default (HERE)
                                                           COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierAsDefaultValue::GALGAS_identifierAsDefaultValue (const cPtr_identifierAsDefaultValue * inSourcePtr) :
GALGAS_abstractDefaultValue (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_identifierAsDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierAsDefaultValue GALGAS_identifierAsDefaultValue::constructor_new (const GALGAS_lstring & inAttribute_mValue
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_identifierAsDefaultValue result ;
  if (inAttribute_mValue.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_identifierAsDefaultValue (inAttribute_mValue COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_identifierAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_identifierAsDefaultValue * p = (const cPtr_identifierAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_identifierAsDefaultValue) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_identifierAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mValue ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                  Pointer class for @identifierAsDefaultValue class                                  *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_identifierAsDefaultValue::cPtr_identifierAsDefaultValue (const GALGAS_lstring & in_mValue
                                                              COMMA_LOCATION_ARGS) :
cPtr_abstractDefaultValue (THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_identifierAsDefaultValue::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_identifierAsDefaultValue ;
}

void cPtr_identifierAsDefaultValue::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "[@identifierAsDefaultValue:" ;
  mAttribute_mValue.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_identifierAsDefaultValue::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_identifierAsDefaultValue (mAttribute_mValue COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @identifierAsDefaultValue type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_identifierAsDefaultValue ("identifierAsDefaultValue",
                                                 & kTypeDescriptor_GALGAS_abstractDefaultValue) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_identifierAsDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_identifierAsDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_identifierAsDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_identifierAsDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_identifierAsDefaultValue GALGAS_identifierAsDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_identifierAsDefaultValue result ;
  const GALGAS_identifierAsDefaultValue * p = (const GALGAS_identifierAsDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_identifierAsDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("identifierAsDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_integerAsDefaultValue::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_integerAsDefaultValue * p = (const cPtr_integerAsDefaultValue *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_integerAsDefaultValue) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (p->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_integerAsDefaultValue::objectCompare (const GALGAS_integerAsDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_integerAsDefaultValue::GALGAS_integerAsDefaultValue (void) :
GALGAS_abstractDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_integerAsDefaultValue GALGAS_integerAsDefaultValue::constructor_default (LOCATION_ARGS) {
  return GALGAS_integerAsDefaultValue::constructor_new (GALGAS_luint::constructor_default (HERE)
                                                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_integerAsDefaultValue::GALGAS_integerAsDefaultValue (const cPtr_integerAsDefaultValue * inSourcePtr) :
GALGAS_abstractDefaultValue (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_integerAsDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_integerAsDefaultValue GALGAS_integerAsDefaultValue::constructor_new (const GALGAS_luint & inAttribute_mValue
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_integerAsDefaultValue result ;
  if (inAttribute_mValue.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_integerAsDefaultValue (inAttribute_mValue COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint GALGAS_integerAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  GALGAS_luint result ;
  if (NULL != mObjectPtr) {
    const cPtr_integerAsDefaultValue * p = (const cPtr_integerAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_integerAsDefaultValue) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_luint cPtr_integerAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mValue ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                   Pointer class for @integerAsDefaultValue class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_integerAsDefaultValue::cPtr_integerAsDefaultValue (const GALGAS_luint & in_mValue
                                                        COMMA_LOCATION_ARGS) :
cPtr_abstractDefaultValue (THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_integerAsDefaultValue::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_integerAsDefaultValue ;
}

void cPtr_integerAsDefaultValue::description (C_String & ioString,
                                              const int32_t inIndentation) const {
  ioString << "[@integerAsDefaultValue:" ;
  mAttribute_mValue.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_integerAsDefaultValue::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_integerAsDefaultValue (mAttribute_mValue COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @integerAsDefaultValue type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_integerAsDefaultValue ("integerAsDefaultValue",
                                              & kTypeDescriptor_GALGAS_abstractDefaultValue) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_integerAsDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_integerAsDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_integerAsDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_integerAsDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_integerAsDefaultValue GALGAS_integerAsDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_integerAsDefaultValue result ;
  const GALGAS_integerAsDefaultValue * p = (const GALGAS_integerAsDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_integerAsDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("integerAsDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_listAsDefaultValue::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_listAsDefaultValue * p = (const cPtr_listAsDefaultValue *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_listAsDefaultValue) ;
  if (kOperandEqual == result) {
    result = mAttribute_mStartLocation.objectCompare (p->mAttribute_mStartLocation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDefaultValueList.objectCompare (p->mAttribute_mDefaultValueList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_listAsDefaultValue::objectCompare (const GALGAS_listAsDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_listAsDefaultValue::GALGAS_listAsDefaultValue (void) :
GALGAS_abstractDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_listAsDefaultValue GALGAS_listAsDefaultValue::constructor_default (LOCATION_ARGS) {
  return GALGAS_listAsDefaultValue::constructor_new (GALGAS_location::constructor_nowhere (HERE),
                                                     GALGAS_defaultValueList::constructor_emptyList (HERE)
                                                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_listAsDefaultValue::GALGAS_listAsDefaultValue (const cPtr_listAsDefaultValue * inSourcePtr) :
GALGAS_abstractDefaultValue (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_listAsDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_listAsDefaultValue GALGAS_listAsDefaultValue::constructor_new (const GALGAS_location & inAttribute_mStartLocation,
                                                                      const GALGAS_defaultValueList & inAttribute_mDefaultValueList
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_listAsDefaultValue result ;
  if (inAttribute_mStartLocation.isValid () && inAttribute_mDefaultValueList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_listAsDefaultValue (inAttribute_mStartLocation, inAttribute_mDefaultValueList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_listAsDefaultValue::reader_mStartLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_listAsDefaultValue * p = (const cPtr_listAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_listAsDefaultValue) ;
    result = p->mAttribute_mStartLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cPtr_listAsDefaultValue::reader_mStartLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStartLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList GALGAS_listAsDefaultValue::reader_mDefaultValueList (UNUSED_LOCATION_ARGS) const {
  GALGAS_defaultValueList result ;
  if (NULL != mObjectPtr) {
    const cPtr_listAsDefaultValue * p = (const cPtr_listAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_listAsDefaultValue) ;
    result = p->mAttribute_mDefaultValueList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList cPtr_listAsDefaultValue::reader_mDefaultValueList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValueList ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                     Pointer class for @listAsDefaultValue class                                     *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_listAsDefaultValue::cPtr_listAsDefaultValue (const GALGAS_location & in_mStartLocation,
                                                  const GALGAS_defaultValueList & in_mDefaultValueList
                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractDefaultValue (THERE),
mAttribute_mStartLocation (in_mStartLocation),
mAttribute_mDefaultValueList (in_mDefaultValueList) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_listAsDefaultValue::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_listAsDefaultValue ;
}

void cPtr_listAsDefaultValue::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "[@listAsDefaultValue:" ;
  mAttribute_mStartLocation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mDefaultValueList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_listAsDefaultValue::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_listAsDefaultValue (mAttribute_mStartLocation, mAttribute_mDefaultValueList COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @listAsDefaultValue type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_listAsDefaultValue ("listAsDefaultValue",
                                           & kTypeDescriptor_GALGAS_abstractDefaultValue) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_listAsDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_listAsDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_listAsDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_listAsDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_listAsDefaultValue GALGAS_listAsDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_listAsDefaultValue result ;
  const GALGAS_listAsDefaultValue * p = (const GALGAS_listAsDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_listAsDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("listAsDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_stringAsDefaultValue::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_stringAsDefaultValue * p = (const cPtr_stringAsDefaultValue *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_stringAsDefaultValue) ;
  if (kOperandEqual == result) {
    result = mAttribute_mValue.objectCompare (p->mAttribute_mValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_stringAsDefaultValue::objectCompare (const GALGAS_stringAsDefaultValue & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringAsDefaultValue::GALGAS_stringAsDefaultValue (void) :
GALGAS_abstractDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringAsDefaultValue GALGAS_stringAsDefaultValue::constructor_default (LOCATION_ARGS) {
  return GALGAS_stringAsDefaultValue::constructor_new (GALGAS_lstring::constructor_default (HERE)
                                                       COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringAsDefaultValue::GALGAS_stringAsDefaultValue (const cPtr_stringAsDefaultValue * inSourcePtr) :
GALGAS_abstractDefaultValue (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_stringAsDefaultValue) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringAsDefaultValue GALGAS_stringAsDefaultValue::constructor_new (const GALGAS_lstring & inAttribute_mValue
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_stringAsDefaultValue result ;
  if (inAttribute_mValue.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_stringAsDefaultValue (inAttribute_mValue COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_stringAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_stringAsDefaultValue * p = (const cPtr_stringAsDefaultValue *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_stringAsDefaultValue) ;
    result = p->mAttribute_mValue ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_stringAsDefaultValue::reader_mValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mValue ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                    Pointer class for @stringAsDefaultValue class                                    *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_stringAsDefaultValue::cPtr_stringAsDefaultValue (const GALGAS_lstring & in_mValue
                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractDefaultValue (THERE),
mAttribute_mValue (in_mValue) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_stringAsDefaultValue::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_stringAsDefaultValue ;
}

void cPtr_stringAsDefaultValue::description (C_String & ioString,
                                             const int32_t inIndentation) const {
  ioString << "[@stringAsDefaultValue:" ;
  mAttribute_mValue.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_stringAsDefaultValue::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_stringAsDefaultValue (mAttribute_mValue COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @stringAsDefaultValue type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_stringAsDefaultValue ("stringAsDefaultValue",
                                             & kTypeDescriptor_GALGAS_abstractDefaultValue) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_stringAsDefaultValue::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_stringAsDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_stringAsDefaultValue::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_stringAsDefaultValue (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringAsDefaultValue GALGAS_stringAsDefaultValue::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_stringAsDefaultValue result ;
  const GALGAS_stringAsDefaultValue * p = (const GALGAS_stringAsDefaultValue *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_stringAsDefaultValue *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("stringAsDefaultValue", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractObservablePropertyAST::objectCompare (const GALGAS_abstractObservablePropertyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST::GALGAS_abstractObservablePropertyAST (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST::GALGAS_abstractObservablePropertyAST (const cPtr_abstractObservablePropertyAST * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractObservablePropertyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                               Pointer class for @abstractObservablePropertyAST class                                *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_abstractObservablePropertyAST::cPtr_abstractObservablePropertyAST (LOCATION_ARGS) :
acPtr_class (THERE) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @abstractObservablePropertyAST type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractObservablePropertyAST ("abstractObservablePropertyAST",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractObservablePropertyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractObservablePropertyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractObservablePropertyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractObservablePropertyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST GALGAS_abstractObservablePropertyAST::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_abstractObservablePropertyAST result ;
  const GALGAS_abstractObservablePropertyAST * p = (const GALGAS_abstractObservablePropertyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractObservablePropertyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractObservablePropertyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_arrayControllerObservablePropertyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_arrayControllerObservablePropertyAST * p = (const cPtr_arrayControllerObservablePropertyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_arrayControllerObservablePropertyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mArrayControllerName.objectCompare (p->mAttribute_mArrayControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayControllerObservablePropertyName.objectCompare (p->mAttribute_mArrayControllerObservablePropertyName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_arrayControllerObservablePropertyAST::objectCompare (const GALGAS_arrayControllerObservablePropertyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerObservablePropertyAST::GALGAS_arrayControllerObservablePropertyAST (void) :
GALGAS_abstractObservablePropertyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerObservablePropertyAST GALGAS_arrayControllerObservablePropertyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_arrayControllerObservablePropertyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                       GALGAS_lstring::constructor_default (HERE)
                                                                       COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerObservablePropertyAST::GALGAS_arrayControllerObservablePropertyAST (const cPtr_arrayControllerObservablePropertyAST * inSourcePtr) :
GALGAS_abstractObservablePropertyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_arrayControllerObservablePropertyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerObservablePropertyAST GALGAS_arrayControllerObservablePropertyAST::constructor_new (const GALGAS_lstring & inAttribute_mArrayControllerName,
                                                                                                          const GALGAS_lstring & inAttribute_mArrayControllerObservablePropertyName
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_arrayControllerObservablePropertyAST result ;
  if (inAttribute_mArrayControllerName.isValid () && inAttribute_mArrayControllerObservablePropertyName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_arrayControllerObservablePropertyAST (inAttribute_mArrayControllerName, inAttribute_mArrayControllerObservablePropertyName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerObservablePropertyAST::reader_mArrayControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_arrayControllerObservablePropertyAST * p = (const cPtr_arrayControllerObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_arrayControllerObservablePropertyAST) ;
    result = p->mAttribute_mArrayControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_arrayControllerObservablePropertyAST::reader_mArrayControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerObservablePropertyAST::reader_mArrayControllerObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_arrayControllerObservablePropertyAST * p = (const cPtr_arrayControllerObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_arrayControllerObservablePropertyAST) ;
    result = p->mAttribute_mArrayControllerObservablePropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_arrayControllerObservablePropertyAST::reader_mArrayControllerObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerObservablePropertyName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                            Pointer class for @arrayControllerObservablePropertyAST class                            *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_arrayControllerObservablePropertyAST::cPtr_arrayControllerObservablePropertyAST (const GALGAS_lstring & in_mArrayControllerName,
                                                                                      const GALGAS_lstring & in_mArrayControllerObservablePropertyName
                                                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractObservablePropertyAST (THERE),
mAttribute_mArrayControllerName (in_mArrayControllerName),
mAttribute_mArrayControllerObservablePropertyName (in_mArrayControllerObservablePropertyName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_arrayControllerObservablePropertyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayControllerObservablePropertyAST ;
}

void cPtr_arrayControllerObservablePropertyAST::description (C_String & ioString,
                                                             const int32_t inIndentation) const {
  ioString << "[@arrayControllerObservablePropertyAST:" ;
  mAttribute_mArrayControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mArrayControllerObservablePropertyName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_arrayControllerObservablePropertyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_arrayControllerObservablePropertyAST (mAttribute_mArrayControllerName, mAttribute_mArrayControllerObservablePropertyName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @arrayControllerObservablePropertyAST type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_arrayControllerObservablePropertyAST ("arrayControllerObservablePropertyAST",
                                                             & kTypeDescriptor_GALGAS_abstractObservablePropertyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_arrayControllerObservablePropertyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayControllerObservablePropertyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_arrayControllerObservablePropertyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_arrayControllerObservablePropertyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerObservablePropertyAST GALGAS_arrayControllerObservablePropertyAST::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_arrayControllerObservablePropertyAST result ;
  const GALGAS_arrayControllerObservablePropertyAST * p = (const GALGAS_arrayControllerObservablePropertyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_arrayControllerObservablePropertyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("arrayControllerObservablePropertyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_preferenceObservablePropertyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_preferenceObservablePropertyAST * p = (const cPtr_preferenceObservablePropertyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_preferenceObservablePropertyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mPreferenceName.objectCompare (p->mAttribute_mPreferenceName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPreferenceObservablePropertyName.objectCompare (p->mAttribute_mPreferenceObservablePropertyName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_preferenceObservablePropertyAST::objectCompare (const GALGAS_preferenceObservablePropertyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceObservablePropertyAST::GALGAS_preferenceObservablePropertyAST (void) :
GALGAS_abstractObservablePropertyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceObservablePropertyAST GALGAS_preferenceObservablePropertyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_preferenceObservablePropertyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                  GALGAS_lstring::constructor_default (HERE)
                                                                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceObservablePropertyAST::GALGAS_preferenceObservablePropertyAST (const cPtr_preferenceObservablePropertyAST * inSourcePtr) :
GALGAS_abstractObservablePropertyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_preferenceObservablePropertyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceObservablePropertyAST GALGAS_preferenceObservablePropertyAST::constructor_new (const GALGAS_lstring & inAttribute_mPreferenceName,
                                                                                                const GALGAS_lstring & inAttribute_mPreferenceObservablePropertyName
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_preferenceObservablePropertyAST result ;
  if (inAttribute_mPreferenceName.isValid () && inAttribute_mPreferenceObservablePropertyName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_preferenceObservablePropertyAST (inAttribute_mPreferenceName, inAttribute_mPreferenceObservablePropertyName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferenceObservablePropertyAST::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceObservablePropertyAST * p = (const cPtr_preferenceObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceObservablePropertyAST) ;
    result = p->mAttribute_mPreferenceName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_preferenceObservablePropertyAST::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferenceName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferenceObservablePropertyAST::reader_mPreferenceObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceObservablePropertyAST * p = (const cPtr_preferenceObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceObservablePropertyAST) ;
    result = p->mAttribute_mPreferenceObservablePropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_preferenceObservablePropertyAST::reader_mPreferenceObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferenceObservablePropertyName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                              Pointer class for @preferenceObservablePropertyAST class                               *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_preferenceObservablePropertyAST::cPtr_preferenceObservablePropertyAST (const GALGAS_lstring & in_mPreferenceName,
                                                                            const GALGAS_lstring & in_mPreferenceObservablePropertyName
                                                                            COMMA_LOCATION_ARGS) :
cPtr_abstractObservablePropertyAST (THERE),
mAttribute_mPreferenceName (in_mPreferenceName),
mAttribute_mPreferenceObservablePropertyName (in_mPreferenceObservablePropertyName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_preferenceObservablePropertyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceObservablePropertyAST ;
}

void cPtr_preferenceObservablePropertyAST::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "[@preferenceObservablePropertyAST:" ;
  mAttribute_mPreferenceName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mPreferenceObservablePropertyName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_preferenceObservablePropertyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_preferenceObservablePropertyAST (mAttribute_mPreferenceName, mAttribute_mPreferenceObservablePropertyName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @preferenceObservablePropertyAST type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferenceObservablePropertyAST ("preferenceObservablePropertyAST",
                                                        & kTypeDescriptor_GALGAS_abstractObservablePropertyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferenceObservablePropertyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceObservablePropertyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferenceObservablePropertyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferenceObservablePropertyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceObservablePropertyAST GALGAS_preferenceObservablePropertyAST::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_preferenceObservablePropertyAST result ;
  const GALGAS_preferenceObservablePropertyAST * p = (const GALGAS_preferenceObservablePropertyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferenceObservablePropertyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferenceObservablePropertyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_rootObservablePropertyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_rootObservablePropertyAST * p = (const cPtr_rootObservablePropertyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_rootObservablePropertyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRootObservablePropertyName.objectCompare (p->mAttribute_mRootObservablePropertyName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_rootObservablePropertyAST::objectCompare (const GALGAS_rootObservablePropertyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_rootObservablePropertyAST::GALGAS_rootObservablePropertyAST (void) :
GALGAS_abstractObservablePropertyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_rootObservablePropertyAST GALGAS_rootObservablePropertyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_rootObservablePropertyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                            GALGAS_bool::constructor_default (HERE)
                                                            COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_rootObservablePropertyAST::GALGAS_rootObservablePropertyAST (const cPtr_rootObservablePropertyAST * inSourcePtr) :
GALGAS_abstractObservablePropertyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_rootObservablePropertyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_rootObservablePropertyAST GALGAS_rootObservablePropertyAST::constructor_new (const GALGAS_lstring & inAttribute_mRootObservablePropertyName,
                                                                                    const GALGAS_bool & inAttribute_mNamesCountOption
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_rootObservablePropertyAST result ;
  if (inAttribute_mRootObservablePropertyName.isValid () && inAttribute_mNamesCountOption.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_rootObservablePropertyAST (inAttribute_mRootObservablePropertyName, inAttribute_mNamesCountOption COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_rootObservablePropertyAST::reader_mRootObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_rootObservablePropertyAST * p = (const cPtr_rootObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_rootObservablePropertyAST) ;
    result = p->mAttribute_mRootObservablePropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_rootObservablePropertyAST::reader_mRootObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootObservablePropertyName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_rootObservablePropertyAST::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_rootObservablePropertyAST * p = (const cPtr_rootObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_rootObservablePropertyAST) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cPtr_rootObservablePropertyAST::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                 Pointer class for @rootObservablePropertyAST class                                  *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_rootObservablePropertyAST::cPtr_rootObservablePropertyAST (const GALGAS_lstring & in_mRootObservablePropertyName,
                                                                const GALGAS_bool & in_mNamesCountOption
                                                                COMMA_LOCATION_ARGS) :
cPtr_abstractObservablePropertyAST (THERE),
mAttribute_mRootObservablePropertyName (in_mRootObservablePropertyName),
mAttribute_mNamesCountOption (in_mNamesCountOption) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_rootObservablePropertyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_rootObservablePropertyAST ;
}

void cPtr_rootObservablePropertyAST::description (C_String & ioString,
                                                  const int32_t inIndentation) const {
  ioString << "[@rootObservablePropertyAST:" ;
  mAttribute_mRootObservablePropertyName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_rootObservablePropertyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_rootObservablePropertyAST (mAttribute_mRootObservablePropertyName, mAttribute_mNamesCountOption COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @rootObservablePropertyAST type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_rootObservablePropertyAST ("rootObservablePropertyAST",
                                                  & kTypeDescriptor_GALGAS_abstractObservablePropertyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_rootObservablePropertyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_rootObservablePropertyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_rootObservablePropertyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_rootObservablePropertyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_rootObservablePropertyAST GALGAS_rootObservablePropertyAST::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_rootObservablePropertyAST result ;
  const GALGAS_rootObservablePropertyAST * p = (const GALGAS_rootObservablePropertyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_rootObservablePropertyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("rootObservablePropertyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_selfObservablePropertyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_selfObservablePropertyAST * p = (const cPtr_selfObservablePropertyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_selfObservablePropertyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSelfObservablePropertyName.objectCompare (p->mAttribute_mSelfObservablePropertyName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_selfObservablePropertyAST::objectCompare (const GALGAS_selfObservablePropertyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_selfObservablePropertyAST::GALGAS_selfObservablePropertyAST (void) :
GALGAS_abstractObservablePropertyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_selfObservablePropertyAST GALGAS_selfObservablePropertyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_selfObservablePropertyAST::constructor_new (GALGAS_lstring::constructor_default (HERE)
                                                            COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_selfObservablePropertyAST::GALGAS_selfObservablePropertyAST (const cPtr_selfObservablePropertyAST * inSourcePtr) :
GALGAS_abstractObservablePropertyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_selfObservablePropertyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_selfObservablePropertyAST GALGAS_selfObservablePropertyAST::constructor_new (const GALGAS_lstring & inAttribute_mSelfObservablePropertyName
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_selfObservablePropertyAST result ;
  if (inAttribute_mSelfObservablePropertyName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_selfObservablePropertyAST (inAttribute_mSelfObservablePropertyName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_selfObservablePropertyAST::reader_mSelfObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_selfObservablePropertyAST * p = (const cPtr_selfObservablePropertyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_selfObservablePropertyAST) ;
    result = p->mAttribute_mSelfObservablePropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_selfObservablePropertyAST::reader_mSelfObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelfObservablePropertyName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                 Pointer class for @selfObservablePropertyAST class                                  *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_selfObservablePropertyAST::cPtr_selfObservablePropertyAST (const GALGAS_lstring & in_mSelfObservablePropertyName
                                                                COMMA_LOCATION_ARGS) :
cPtr_abstractObservablePropertyAST (THERE),
mAttribute_mSelfObservablePropertyName (in_mSelfObservablePropertyName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_selfObservablePropertyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_selfObservablePropertyAST ;
}

void cPtr_selfObservablePropertyAST::description (C_String & ioString,
                                                  const int32_t inIndentation) const {
  ioString << "[@selfObservablePropertyAST:" ;
  mAttribute_mSelfObservablePropertyName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_selfObservablePropertyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_selfObservablePropertyAST (mAttribute_mSelfObservablePropertyName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @selfObservablePropertyAST type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_selfObservablePropertyAST ("selfObservablePropertyAST",
                                                  & kTypeDescriptor_GALGAS_abstractObservablePropertyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_selfObservablePropertyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_selfObservablePropertyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_selfObservablePropertyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_selfObservablePropertyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_selfObservablePropertyAST GALGAS_selfObservablePropertyAST::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_selfObservablePropertyAST result ;
  const GALGAS_selfObservablePropertyAST * p = (const GALGAS_selfObservablePropertyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_selfObservablePropertyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("selfObservablePropertyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractTransientDependencyAST::objectCompare (const GALGAS_abstractTransientDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyAST::GALGAS_abstractTransientDependencyAST (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyAST::GALGAS_abstractTransientDependencyAST (const cPtr_abstractTransientDependencyAST * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractTransientDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                               Pointer class for @abstractTransientDependencyAST class                               *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_abstractTransientDependencyAST::cPtr_abstractTransientDependencyAST (LOCATION_ARGS) :
acPtr_class (THERE) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @abstractTransientDependencyAST type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractTransientDependencyAST ("abstractTransientDependencyAST",
                                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractTransientDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractTransientDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractTransientDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractTransientDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyAST GALGAS_abstractTransientDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_abstractTransientDependencyAST result ;
  const GALGAS_abstractTransientDependencyAST * p = (const GALGAS_abstractTransientDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractTransientDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractTransientDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientControllerDependencyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientControllerDependencyAST * p = (const cPtr_transientControllerDependencyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientControllerDependencyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientControllerDependencyAST::objectCompare (const GALGAS_transientControllerDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyAST::GALGAS_transientControllerDependencyAST (void) :
GALGAS_abstractTransientDependencyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyAST GALGAS_transientControllerDependencyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientControllerDependencyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                   GALGAS_lstring::constructor_default (HERE)
                                                                   COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyAST::GALGAS_transientControllerDependencyAST (const cPtr_transientControllerDependencyAST * inSourcePtr) :
GALGAS_abstractTransientDependencyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientControllerDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyAST GALGAS_transientControllerDependencyAST::constructor_new (const GALGAS_lstring & inAttribute_mControllerName,
                                                                                                  const GALGAS_lstring & inAttribute_mMasterName
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_transientControllerDependencyAST result ;
  if (inAttribute_mControllerName.isValid () && inAttribute_mMasterName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientControllerDependencyAST (inAttribute_mControllerName, inAttribute_mMasterName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientControllerDependencyAST::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientControllerDependencyAST * p = (const cPtr_transientControllerDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientControllerDependencyAST) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientControllerDependencyAST::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientControllerDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientControllerDependencyAST * p = (const cPtr_transientControllerDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientControllerDependencyAST) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientControllerDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                              Pointer class for @transientControllerDependencyAST class                              *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientControllerDependencyAST::cPtr_transientControllerDependencyAST (const GALGAS_lstring & in_mControllerName,
                                                                              const GALGAS_lstring & in_mMasterName
                                                                              COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyAST (THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientControllerDependencyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientControllerDependencyAST ;
}

void cPtr_transientControllerDependencyAST::description (C_String & ioString,
                                                         const int32_t inIndentation) const {
  ioString << "[@transientControllerDependencyAST:" ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientControllerDependencyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientControllerDependencyAST (mAttribute_mControllerName, mAttribute_mMasterName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @transientControllerDependencyAST type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientControllerDependencyAST ("transientControllerDependencyAST",
                                                         & kTypeDescriptor_GALGAS_abstractTransientDependencyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientControllerDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientControllerDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientControllerDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientControllerDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyAST GALGAS_transientControllerDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientControllerDependencyAST result ;
  const GALGAS_transientControllerDependencyAST * p = (const GALGAS_transientControllerDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientControllerDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientControllerDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientLocalDependencyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientLocalDependencyAST * p = (const cPtr_transientLocalDependencyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientLocalDependencyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientLocalDependencyAST::objectCompare (const GALGAS_transientLocalDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyAST::GALGAS_transientLocalDependencyAST (void) :
GALGAS_abstractTransientDependencyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyAST GALGAS_transientLocalDependencyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientLocalDependencyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                              GALGAS_bool::constructor_default (HERE)
                                                              COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyAST::GALGAS_transientLocalDependencyAST (const cPtr_transientLocalDependencyAST * inSourcePtr) :
GALGAS_abstractTransientDependencyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientLocalDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyAST GALGAS_transientLocalDependencyAST::constructor_new (const GALGAS_lstring & inAttribute_mMasterName,
                                                                                        const GALGAS_bool & inAttribute_mNamesCountOption
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientLocalDependencyAST result ;
  if (inAttribute_mMasterName.isValid () && inAttribute_mNamesCountOption.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientLocalDependencyAST (inAttribute_mMasterName, inAttribute_mNamesCountOption COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientLocalDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientLocalDependencyAST * p = (const cPtr_transientLocalDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientLocalDependencyAST) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientLocalDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientLocalDependencyAST::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientLocalDependencyAST * p = (const cPtr_transientLocalDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientLocalDependencyAST) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cPtr_transientLocalDependencyAST::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                Pointer class for @transientLocalDependencyAST class                                 *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientLocalDependencyAST::cPtr_transientLocalDependencyAST (const GALGAS_lstring & in_mMasterName,
                                                                    const GALGAS_bool & in_mNamesCountOption
                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyAST (THERE),
mAttribute_mMasterName (in_mMasterName),
mAttribute_mNamesCountOption (in_mNamesCountOption) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientLocalDependencyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientLocalDependencyAST ;
}

void cPtr_transientLocalDependencyAST::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "[@transientLocalDependencyAST:" ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientLocalDependencyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientLocalDependencyAST (mAttribute_mMasterName, mAttribute_mNamesCountOption COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @transientLocalDependencyAST type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientLocalDependencyAST ("transientLocalDependencyAST",
                                                    & kTypeDescriptor_GALGAS_abstractTransientDependencyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientLocalDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientLocalDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientLocalDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientLocalDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyAST GALGAS_transientLocalDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientLocalDependencyAST result ;
  const GALGAS_transientLocalDependencyAST * p = (const GALGAS_transientLocalDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientLocalDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientLocalDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientPreferenceDependencyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientPreferenceDependencyAST * p = (const cPtr_transientPreferenceDependencyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientPreferenceDependencyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mPreferencesName.objectCompare (p->mAttribute_mPreferencesName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientPreferenceDependencyAST::objectCompare (const GALGAS_transientPreferenceDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyAST::GALGAS_transientPreferenceDependencyAST (void) :
GALGAS_abstractTransientDependencyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyAST GALGAS_transientPreferenceDependencyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientPreferenceDependencyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                   GALGAS_lstring::constructor_default (HERE)
                                                                   COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyAST::GALGAS_transientPreferenceDependencyAST (const cPtr_transientPreferenceDependencyAST * inSourcePtr) :
GALGAS_abstractTransientDependencyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientPreferenceDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyAST GALGAS_transientPreferenceDependencyAST::constructor_new (const GALGAS_lstring & inAttribute_mPreferencesName,
                                                                                                  const GALGAS_lstring & inAttribute_mMasterName
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_transientPreferenceDependencyAST result ;
  if (inAttribute_mPreferencesName.isValid () && inAttribute_mMasterName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientPreferenceDependencyAST (inAttribute_mPreferencesName, inAttribute_mMasterName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientPreferenceDependencyAST::reader_mPreferencesName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientPreferenceDependencyAST * p = (const cPtr_transientPreferenceDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientPreferenceDependencyAST) ;
    result = p->mAttribute_mPreferencesName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientPreferenceDependencyAST::reader_mPreferencesName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferencesName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientPreferenceDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientPreferenceDependencyAST * p = (const cPtr_transientPreferenceDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientPreferenceDependencyAST) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientPreferenceDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                              Pointer class for @transientPreferenceDependencyAST class                              *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientPreferenceDependencyAST::cPtr_transientPreferenceDependencyAST (const GALGAS_lstring & in_mPreferencesName,
                                                                              const GALGAS_lstring & in_mMasterName
                                                                              COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyAST (THERE),
mAttribute_mPreferencesName (in_mPreferencesName),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientPreferenceDependencyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientPreferenceDependencyAST ;
}

void cPtr_transientPreferenceDependencyAST::description (C_String & ioString,
                                                         const int32_t inIndentation) const {
  ioString << "[@transientPreferenceDependencyAST:" ;
  mAttribute_mPreferencesName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientPreferenceDependencyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientPreferenceDependencyAST (mAttribute_mPreferencesName, mAttribute_mMasterName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @transientPreferenceDependencyAST type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientPreferenceDependencyAST ("transientPreferenceDependencyAST",
                                                         & kTypeDescriptor_GALGAS_abstractTransientDependencyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientPreferenceDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientPreferenceDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientPreferenceDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientPreferenceDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyAST GALGAS_transientPreferenceDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientPreferenceDependencyAST result ;
  const GALGAS_transientPreferenceDependencyAST * p = (const GALGAS_transientPreferenceDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientPreferenceDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientPreferenceDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientRootDependencyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientRootDependencyAST * p = (const cPtr_transientRootDependencyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientRootDependencyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientRootDependencyAST::objectCompare (const GALGAS_transientRootDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyAST::GALGAS_transientRootDependencyAST (void) :
GALGAS_abstractTransientDependencyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyAST GALGAS_transientRootDependencyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientRootDependencyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                             GALGAS_bool::constructor_default (HERE)
                                                             COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyAST::GALGAS_transientRootDependencyAST (const cPtr_transientRootDependencyAST * inSourcePtr) :
GALGAS_abstractTransientDependencyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientRootDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyAST GALGAS_transientRootDependencyAST::constructor_new (const GALGAS_lstring & inAttribute_mMasterName,
                                                                                      const GALGAS_bool & inAttribute_mNamesCountOption
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientRootDependencyAST result ;
  if (inAttribute_mMasterName.isValid () && inAttribute_mNamesCountOption.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientRootDependencyAST (inAttribute_mMasterName, inAttribute_mNamesCountOption COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientRootDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootDependencyAST * p = (const cPtr_transientRootDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootDependencyAST) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientRootDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientRootDependencyAST::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootDependencyAST * p = (const cPtr_transientRootDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootDependencyAST) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cPtr_transientRootDependencyAST::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                 Pointer class for @transientRootDependencyAST class                                 *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientRootDependencyAST::cPtr_transientRootDependencyAST (const GALGAS_lstring & in_mMasterName,
                                                                  const GALGAS_bool & in_mNamesCountOption
                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyAST (THERE),
mAttribute_mMasterName (in_mMasterName),
mAttribute_mNamesCountOption (in_mNamesCountOption) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientRootDependencyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootDependencyAST ;
}

void cPtr_transientRootDependencyAST::description (C_String & ioString,
                                                   const int32_t inIndentation) const {
  ioString << "[@transientRootDependencyAST:" ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientRootDependencyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientRootDependencyAST (mAttribute_mMasterName, mAttribute_mNamesCountOption COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @transientRootDependencyAST type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientRootDependencyAST ("transientRootDependencyAST",
                                                   & kTypeDescriptor_GALGAS_abstractTransientDependencyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientRootDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientRootDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientRootDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyAST GALGAS_transientRootDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientRootDependencyAST result ;
  const GALGAS_transientRootDependencyAST * p = (const GALGAS_transientRootDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientRootDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientRootDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientRootRelationshipDependencyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientRootRelationshipDependencyAST * p = (const cPtr_transientRootRelationshipDependencyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRelationshipName.objectCompare (p->mAttribute_mRelationshipName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientRootRelationshipDependencyAST::objectCompare (const GALGAS_transientRootRelationshipDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyAST::GALGAS_transientRootRelationshipDependencyAST (void) :
GALGAS_abstractTransientDependencyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyAST GALGAS_transientRootRelationshipDependencyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientRootRelationshipDependencyAST::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                         GALGAS_lstring::constructor_default (HERE)
                                                                         COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyAST::GALGAS_transientRootRelationshipDependencyAST (const cPtr_transientRootRelationshipDependencyAST * inSourcePtr) :
GALGAS_abstractTransientDependencyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientRootRelationshipDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyAST GALGAS_transientRootRelationshipDependencyAST::constructor_new (const GALGAS_lstring & inAttribute_mRelationshipName,
                                                                                                              const GALGAS_lstring & inAttribute_mMasterName
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_transientRootRelationshipDependencyAST result ;
  if (inAttribute_mRelationshipName.isValid () && inAttribute_mMasterName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientRootRelationshipDependencyAST (inAttribute_mRelationshipName, inAttribute_mMasterName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientRootRelationshipDependencyAST::reader_mRelationshipName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootRelationshipDependencyAST * p = (const cPtr_transientRootRelationshipDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyAST) ;
    result = p->mAttribute_mRelationshipName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientRootRelationshipDependencyAST::reader_mRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRelationshipName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientRootRelationshipDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootRelationshipDependencyAST * p = (const cPtr_transientRootRelationshipDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyAST) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientRootRelationshipDependencyAST::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                           Pointer class for @transientRootRelationshipDependencyAST class                           *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientRootRelationshipDependencyAST::cPtr_transientRootRelationshipDependencyAST (const GALGAS_lstring & in_mRelationshipName,
                                                                                          const GALGAS_lstring & in_mMasterName
                                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyAST (THERE),
mAttribute_mRelationshipName (in_mRelationshipName),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientRootRelationshipDependencyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootRelationshipDependencyAST ;
}

void cPtr_transientRootRelationshipDependencyAST::description (C_String & ioString,
                                                               const int32_t inIndentation) const {
  ioString << "[@transientRootRelationshipDependencyAST:" ;
  mAttribute_mRelationshipName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientRootRelationshipDependencyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientRootRelationshipDependencyAST (mAttribute_mRelationshipName, mAttribute_mMasterName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                    @transientRootRelationshipDependencyAST type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientRootRelationshipDependencyAST ("transientRootRelationshipDependencyAST",
                                                               & kTypeDescriptor_GALGAS_abstractTransientDependencyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientRootRelationshipDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootRelationshipDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientRootRelationshipDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientRootRelationshipDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyAST GALGAS_transientRootRelationshipDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_transientRootRelationshipDependencyAST result ;
  const GALGAS_transientRootRelationshipDependencyAST * p = (const GALGAS_transientRootRelationshipDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientRootRelationshipDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientRootRelationshipDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientRootSignDependencyAST::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientRootSignDependencyAST * p = (const cPtr_transientRootSignDependencyAST *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientRootSignDependencyAST) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDeclarationLocation.objectCompare (p->mAttribute_mDeclarationLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientRootSignDependencyAST::objectCompare (const GALGAS_transientRootSignDependencyAST & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyAST::GALGAS_transientRootSignDependencyAST (void) :
GALGAS_abstractTransientDependencyAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyAST GALGAS_transientRootSignDependencyAST::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientRootSignDependencyAST::constructor_new (GALGAS_location::constructor_nowhere (HERE)
                                                                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyAST::GALGAS_transientRootSignDependencyAST (const cPtr_transientRootSignDependencyAST * inSourcePtr) :
GALGAS_abstractTransientDependencyAST (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientRootSignDependencyAST) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyAST GALGAS_transientRootSignDependencyAST::constructor_new (const GALGAS_location & inAttribute_mDeclarationLocation
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_transientRootSignDependencyAST result ;
  if (inAttribute_mDeclarationLocation.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientRootSignDependencyAST (inAttribute_mDeclarationLocation COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_transientRootSignDependencyAST::reader_mDeclarationLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootSignDependencyAST * p = (const cPtr_transientRootSignDependencyAST *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootSignDependencyAST) ;
    result = p->mAttribute_mDeclarationLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cPtr_transientRootSignDependencyAST::reader_mDeclarationLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeclarationLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                               Pointer class for @transientRootSignDependencyAST class                               *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientRootSignDependencyAST::cPtr_transientRootSignDependencyAST (const GALGAS_location & in_mDeclarationLocation
                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyAST (THERE),
mAttribute_mDeclarationLocation (in_mDeclarationLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientRootSignDependencyAST::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootSignDependencyAST ;
}

void cPtr_transientRootSignDependencyAST::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "[@transientRootSignDependencyAST:" ;
  mAttribute_mDeclarationLocation.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientRootSignDependencyAST::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientRootSignDependencyAST (mAttribute_mDeclarationLocation COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @transientRootSignDependencyAST type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientRootSignDependencyAST ("transientRootSignDependencyAST",
                                                       & kTypeDescriptor_GALGAS_abstractTransientDependencyAST) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientRootSignDependencyAST::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootSignDependencyAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientRootSignDependencyAST::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientRootSignDependencyAST (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyAST GALGAS_transientRootSignDependencyAST::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_transientRootSignDependencyAST result ;
  const GALGAS_transientRootSignDependencyAST * p = (const GALGAS_transientRootSignDependencyAST *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientRootSignDependencyAST *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientRootSignDependencyAST", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractTransientDependencyForGeneration::objectCompare (const GALGAS_abstractTransientDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForGeneration::GALGAS_abstractTransientDependencyForGeneration (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForGeneration::GALGAS_abstractTransientDependencyForGeneration (const cPtr_abstractTransientDependencyForGeneration * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractTransientDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                          Pointer class for @abstractTransientDependencyForGeneration class                          *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_abstractTransientDependencyForGeneration::cPtr_abstractTransientDependencyForGeneration (LOCATION_ARGS) :
acPtr_class (THERE) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   @abstractTransientDependencyForGeneration type                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration ("abstractTransientDependencyForGeneration",
                                                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractTransientDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractTransientDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractTransientDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForGeneration GALGAS_abstractTransientDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_abstractTransientDependencyForGeneration result ;
  const GALGAS_abstractTransientDependencyForGeneration * p = (const GALGAS_abstractTransientDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractTransientDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractTransientDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientControllerDependencyForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientControllerDependencyForGeneration * p = (const cPtr_transientControllerDependencyForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientControllerDependencyForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientControllerDependencyForGeneration::objectCompare (const GALGAS_transientControllerDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyForGeneration::GALGAS_transientControllerDependencyForGeneration (void) :
GALGAS_abstractTransientDependencyForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyForGeneration GALGAS_transientControllerDependencyForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientControllerDependencyForGeneration::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                             GALGAS_lstring::constructor_default (HERE)
                                                                             COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyForGeneration::GALGAS_transientControllerDependencyForGeneration (const cPtr_transientControllerDependencyForGeneration * inSourcePtr) :
GALGAS_abstractTransientDependencyForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientControllerDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyForGeneration GALGAS_transientControllerDependencyForGeneration::constructor_new (const GALGAS_lstring & inAttribute_mControllerName,
                                                                                                                      const GALGAS_lstring & inAttribute_mMasterName
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientControllerDependencyForGeneration result ;
  if (inAttribute_mControllerName.isValid () && inAttribute_mMasterName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientControllerDependencyForGeneration (inAttribute_mControllerName, inAttribute_mMasterName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientControllerDependencyForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientControllerDependencyForGeneration * p = (const cPtr_transientControllerDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientControllerDependencyForGeneration) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientControllerDependencyForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientControllerDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientControllerDependencyForGeneration * p = (const cPtr_transientControllerDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientControllerDependencyForGeneration) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientControllerDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         Pointer class for @transientControllerDependencyForGeneration class                         *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientControllerDependencyForGeneration::cPtr_transientControllerDependencyForGeneration (const GALGAS_lstring & in_mControllerName,
                                                                                                  const GALGAS_lstring & in_mMasterName
                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForGeneration (THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientControllerDependencyForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientControllerDependencyForGeneration ;
}

void cPtr_transientControllerDependencyForGeneration::description (C_String & ioString,
                                                                   const int32_t inIndentation) const {
  ioString << "[@transientControllerDependencyForGeneration:" ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientControllerDependencyForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientControllerDependencyForGeneration (mAttribute_mControllerName, mAttribute_mMasterName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  @transientControllerDependencyForGeneration type                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientControllerDependencyForGeneration ("transientControllerDependencyForGeneration",
                                                                   & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientControllerDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientControllerDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientControllerDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientControllerDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientControllerDependencyForGeneration GALGAS_transientControllerDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientControllerDependencyForGeneration result ;
  const GALGAS_transientControllerDependencyForGeneration * p = (const GALGAS_transientControllerDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientControllerDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientControllerDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientLocalDependencyForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientLocalDependencyForGeneration * p = (const cPtr_transientLocalDependencyForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientLocalDependencyForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientLocalDependencyForGeneration::objectCompare (const GALGAS_transientLocalDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyForGeneration::GALGAS_transientLocalDependencyForGeneration (void) :
GALGAS_abstractTransientDependencyForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyForGeneration GALGAS_transientLocalDependencyForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientLocalDependencyForGeneration::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                        GALGAS_bool::constructor_default (HERE)
                                                                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyForGeneration::GALGAS_transientLocalDependencyForGeneration (const cPtr_transientLocalDependencyForGeneration * inSourcePtr) :
GALGAS_abstractTransientDependencyForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientLocalDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyForGeneration GALGAS_transientLocalDependencyForGeneration::constructor_new (const GALGAS_lstring & inAttribute_mMasterName,
                                                                                                            const GALGAS_bool & inAttribute_mNamesCountOption
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_transientLocalDependencyForGeneration result ;
  if (inAttribute_mMasterName.isValid () && inAttribute_mNamesCountOption.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientLocalDependencyForGeneration (inAttribute_mMasterName, inAttribute_mNamesCountOption COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientLocalDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientLocalDependencyForGeneration * p = (const cPtr_transientLocalDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientLocalDependencyForGeneration) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientLocalDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientLocalDependencyForGeneration::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientLocalDependencyForGeneration * p = (const cPtr_transientLocalDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientLocalDependencyForGeneration) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cPtr_transientLocalDependencyForGeneration::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                           Pointer class for @transientLocalDependencyForGeneration class                            *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientLocalDependencyForGeneration::cPtr_transientLocalDependencyForGeneration (const GALGAS_lstring & in_mMasterName,
                                                                                        const GALGAS_bool & in_mNamesCountOption
                                                                                        COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForGeneration (THERE),
mAttribute_mMasterName (in_mMasterName),
mAttribute_mNamesCountOption (in_mNamesCountOption) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientLocalDependencyForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientLocalDependencyForGeneration ;
}

void cPtr_transientLocalDependencyForGeneration::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "[@transientLocalDependencyForGeneration:" ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientLocalDependencyForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientLocalDependencyForGeneration (mAttribute_mMasterName, mAttribute_mNamesCountOption COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @transientLocalDependencyForGeneration type                                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientLocalDependencyForGeneration ("transientLocalDependencyForGeneration",
                                                              & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientLocalDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientLocalDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientLocalDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientLocalDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientLocalDependencyForGeneration GALGAS_transientLocalDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_transientLocalDependencyForGeneration result ;
  const GALGAS_transientLocalDependencyForGeneration * p = (const GALGAS_transientLocalDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientLocalDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientLocalDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientPreferenceDependencyForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientPreferenceDependencyForGeneration * p = (const cPtr_transientPreferenceDependencyForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientPreferenceDependencyForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mPreferencesName.objectCompare (p->mAttribute_mPreferencesName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientPreferenceDependencyForGeneration::objectCompare (const GALGAS_transientPreferenceDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyForGeneration::GALGAS_transientPreferenceDependencyForGeneration (void) :
GALGAS_abstractTransientDependencyForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyForGeneration GALGAS_transientPreferenceDependencyForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientPreferenceDependencyForGeneration::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                             GALGAS_lstring::constructor_default (HERE)
                                                                             COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyForGeneration::GALGAS_transientPreferenceDependencyForGeneration (const cPtr_transientPreferenceDependencyForGeneration * inSourcePtr) :
GALGAS_abstractTransientDependencyForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientPreferenceDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyForGeneration GALGAS_transientPreferenceDependencyForGeneration::constructor_new (const GALGAS_lstring & inAttribute_mPreferencesName,
                                                                                                                      const GALGAS_lstring & inAttribute_mMasterName
                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientPreferenceDependencyForGeneration result ;
  if (inAttribute_mPreferencesName.isValid () && inAttribute_mMasterName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientPreferenceDependencyForGeneration (inAttribute_mPreferencesName, inAttribute_mMasterName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientPreferenceDependencyForGeneration::reader_mPreferencesName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientPreferenceDependencyForGeneration * p = (const cPtr_transientPreferenceDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientPreferenceDependencyForGeneration) ;
    result = p->mAttribute_mPreferencesName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientPreferenceDependencyForGeneration::reader_mPreferencesName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferencesName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientPreferenceDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientPreferenceDependencyForGeneration * p = (const cPtr_transientPreferenceDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientPreferenceDependencyForGeneration) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientPreferenceDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                         Pointer class for @transientPreferenceDependencyForGeneration class                         *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientPreferenceDependencyForGeneration::cPtr_transientPreferenceDependencyForGeneration (const GALGAS_lstring & in_mPreferencesName,
                                                                                                  const GALGAS_lstring & in_mMasterName
                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForGeneration (THERE),
mAttribute_mPreferencesName (in_mPreferencesName),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientPreferenceDependencyForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientPreferenceDependencyForGeneration ;
}

void cPtr_transientPreferenceDependencyForGeneration::description (C_String & ioString,
                                                                   const int32_t inIndentation) const {
  ioString << "[@transientPreferenceDependencyForGeneration:" ;
  mAttribute_mPreferencesName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientPreferenceDependencyForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientPreferenceDependencyForGeneration (mAttribute_mPreferencesName, mAttribute_mMasterName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                  @transientPreferenceDependencyForGeneration type                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientPreferenceDependencyForGeneration ("transientPreferenceDependencyForGeneration",
                                                                   & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientPreferenceDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientPreferenceDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientPreferenceDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientPreferenceDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientPreferenceDependencyForGeneration GALGAS_transientPreferenceDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientPreferenceDependencyForGeneration result ;
  const GALGAS_transientPreferenceDependencyForGeneration * p = (const GALGAS_transientPreferenceDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientPreferenceDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientPreferenceDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientRootDependencyForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientRootDependencyForGeneration * p = (const cPtr_transientRootDependencyForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientRootDependencyForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientRootDependencyForGeneration::objectCompare (const GALGAS_transientRootDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyForGeneration::GALGAS_transientRootDependencyForGeneration (void) :
GALGAS_abstractTransientDependencyForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyForGeneration GALGAS_transientRootDependencyForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientRootDependencyForGeneration::constructor_new (GALGAS_lstring::constructor_default (HERE),
                                                                       GALGAS_bool::constructor_default (HERE)
                                                                       COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyForGeneration::GALGAS_transientRootDependencyForGeneration (const cPtr_transientRootDependencyForGeneration * inSourcePtr) :
GALGAS_abstractTransientDependencyForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientRootDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyForGeneration GALGAS_transientRootDependencyForGeneration::constructor_new (const GALGAS_lstring & inAttribute_mMasterName,
                                                                                                          const GALGAS_bool & inAttribute_mNamesCountOption
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_transientRootDependencyForGeneration result ;
  if (inAttribute_mMasterName.isValid () && inAttribute_mNamesCountOption.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientRootDependencyForGeneration (inAttribute_mMasterName, inAttribute_mNamesCountOption COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientRootDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootDependencyForGeneration * p = (const cPtr_transientRootDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootDependencyForGeneration) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientRootDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientRootDependencyForGeneration::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootDependencyForGeneration * p = (const cPtr_transientRootDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootDependencyForGeneration) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cPtr_transientRootDependencyForGeneration::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                            Pointer class for @transientRootDependencyForGeneration class                            *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientRootDependencyForGeneration::cPtr_transientRootDependencyForGeneration (const GALGAS_lstring & in_mMasterName,
                                                                                      const GALGAS_bool & in_mNamesCountOption
                                                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForGeneration (THERE),
mAttribute_mMasterName (in_mMasterName),
mAttribute_mNamesCountOption (in_mNamesCountOption) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientRootDependencyForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootDependencyForGeneration ;
}

void cPtr_transientRootDependencyForGeneration::description (C_String & ioString,
                                                             const int32_t inIndentation) const {
  ioString << "[@transientRootDependencyForGeneration:" ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientRootDependencyForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientRootDependencyForGeneration (mAttribute_mMasterName, mAttribute_mNamesCountOption COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @transientRootDependencyForGeneration type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientRootDependencyForGeneration ("transientRootDependencyForGeneration",
                                                             & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientRootDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientRootDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientRootDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootDependencyForGeneration GALGAS_transientRootDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientRootDependencyForGeneration result ;
  const GALGAS_transientRootDependencyForGeneration * p = (const GALGAS_transientRootDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientRootDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientRootDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientRootRelationshipDependencyForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientRootRelationshipDependencyForGeneration * p = (const cPtr_transientRootRelationshipDependencyForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mElementType.objectCompare (p->mAttribute_mElementType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRelationshipName.objectCompare (p->mAttribute_mRelationshipName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (p->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientRootRelationshipDependencyForGeneration::objectCompare (const GALGAS_transientRootRelationshipDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyForGeneration::GALGAS_transientRootRelationshipDependencyForGeneration (void) :
GALGAS_abstractTransientDependencyForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyForGeneration GALGAS_transientRootRelationshipDependencyForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientRootRelationshipDependencyForGeneration::constructor_new (GALGAS_unifiedTypeMap_2D_proxy::constructor_null (HERE),
                                                                                   GALGAS_lstring::constructor_default (HERE),
                                                                                   GALGAS_lstring::constructor_default (HERE)
                                                                                   COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyForGeneration::GALGAS_transientRootRelationshipDependencyForGeneration (const cPtr_transientRootRelationshipDependencyForGeneration * inSourcePtr) :
GALGAS_abstractTransientDependencyForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientRootRelationshipDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyForGeneration GALGAS_transientRootRelationshipDependencyForGeneration::constructor_new (const GALGAS_unifiedTypeMap_2D_proxy & inAttribute_mElementType,
                                                                                                                                  const GALGAS_lstring & inAttribute_mRelationshipName,
                                                                                                                                  const GALGAS_lstring & inAttribute_mMasterName
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_transientRootRelationshipDependencyForGeneration result ;
  if (inAttribute_mElementType.isValid () && inAttribute_mRelationshipName.isValid () && inAttribute_mMasterName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientRootRelationshipDependencyForGeneration (inAttribute_mElementType, inAttribute_mRelationshipName, inAttribute_mMasterName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_transientRootRelationshipDependencyForGeneration::reader_mElementType (UNUSED_LOCATION_ARGS) const {
  GALGAS_unifiedTypeMap_2D_proxy result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootRelationshipDependencyForGeneration * p = (const cPtr_transientRootRelationshipDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyForGeneration) ;
    result = p->mAttribute_mElementType ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy cPtr_transientRootRelationshipDependencyForGeneration::reader_mElementType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mElementType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientRootRelationshipDependencyForGeneration::reader_mRelationshipName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootRelationshipDependencyForGeneration * p = (const cPtr_transientRootRelationshipDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyForGeneration) ;
    result = p->mAttribute_mRelationshipName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientRootRelationshipDependencyForGeneration::reader_mRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRelationshipName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientRootRelationshipDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootRelationshipDependencyForGeneration * p = (const cPtr_transientRootRelationshipDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootRelationshipDependencyForGeneration) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_transientRootRelationshipDependencyForGeneration::reader_mMasterName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterName ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                      Pointer class for @transientRootRelationshipDependencyForGeneration class                      *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientRootRelationshipDependencyForGeneration::cPtr_transientRootRelationshipDependencyForGeneration (const GALGAS_unifiedTypeMap_2D_proxy & in_mElementType,
                                                                                                              const GALGAS_lstring & in_mRelationshipName,
                                                                                                              const GALGAS_lstring & in_mMasterName
                                                                                                              COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForGeneration (THERE),
mAttribute_mElementType (in_mElementType),
mAttribute_mRelationshipName (in_mRelationshipName),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientRootRelationshipDependencyForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootRelationshipDependencyForGeneration ;
}

void cPtr_transientRootRelationshipDependencyForGeneration::description (C_String & ioString,
                                                                         const int32_t inIndentation) const {
  ioString << "[@transientRootRelationshipDependencyForGeneration:" ;
  mAttribute_mElementType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRelationshipName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientRootRelationshipDependencyForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientRootRelationshipDependencyForGeneration (mAttribute_mElementType, mAttribute_mRelationshipName, mAttribute_mMasterName COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                               @transientRootRelationshipDependencyForGeneration type                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientRootRelationshipDependencyForGeneration ("transientRootRelationshipDependencyForGeneration",
                                                                         & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientRootRelationshipDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootRelationshipDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientRootRelationshipDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientRootRelationshipDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootRelationshipDependencyForGeneration GALGAS_transientRootRelationshipDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                                C_Compiler * inCompiler
                                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientRootRelationshipDependencyForGeneration result ;
  const GALGAS_transientRootRelationshipDependencyForGeneration * p = (const GALGAS_transientRootRelationshipDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientRootRelationshipDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientRootRelationshipDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_transientRootSignDependencyForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientRootSignDependencyForGeneration * p = (const cPtr_transientRootSignDependencyForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientRootSignDependencyForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mDeclarationLocation.objectCompare (p->mAttribute_mDeclarationLocation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientRootSignDependencyForGeneration::objectCompare (const GALGAS_transientRootSignDependencyForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyForGeneration::GALGAS_transientRootSignDependencyForGeneration (void) :
GALGAS_abstractTransientDependencyForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyForGeneration GALGAS_transientRootSignDependencyForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientRootSignDependencyForGeneration::constructor_new (GALGAS_location::constructor_nowhere (HERE)
                                                                           COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyForGeneration::GALGAS_transientRootSignDependencyForGeneration (const cPtr_transientRootSignDependencyForGeneration * inSourcePtr) :
GALGAS_abstractTransientDependencyForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientRootSignDependencyForGeneration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyForGeneration GALGAS_transientRootSignDependencyForGeneration::constructor_new (const GALGAS_location & inAttribute_mDeclarationLocation
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_transientRootSignDependencyForGeneration result ;
  if (inAttribute_mDeclarationLocation.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientRootSignDependencyForGeneration (inAttribute_mDeclarationLocation COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location GALGAS_transientRootSignDependencyForGeneration::reader_mDeclarationLocation (UNUSED_LOCATION_ARGS) const {
  GALGAS_location result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientRootSignDependencyForGeneration * p = (const cPtr_transientRootSignDependencyForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientRootSignDependencyForGeneration) ;
    result = p->mAttribute_mDeclarationLocation ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_location cPtr_transientRootSignDependencyForGeneration::reader_mDeclarationLocation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeclarationLocation ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                          Pointer class for @transientRootSignDependencyForGeneration class                          *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_transientRootSignDependencyForGeneration::cPtr_transientRootSignDependencyForGeneration (const GALGAS_location & in_mDeclarationLocation
                                                                                              COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForGeneration (THERE),
mAttribute_mDeclarationLocation (in_mDeclarationLocation) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientRootSignDependencyForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootSignDependencyForGeneration ;
}

void cPtr_transientRootSignDependencyForGeneration::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "[@transientRootSignDependencyForGeneration:" ;
  mAttribute_mDeclarationLocation.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_transientRootSignDependencyForGeneration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_transientRootSignDependencyForGeneration (mAttribute_mDeclarationLocation COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   @transientRootSignDependencyForGeneration type                                    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientRootSignDependencyForGeneration ("transientRootSignDependencyForGeneration",
                                                                 & kTypeDescriptor_GALGAS_abstractTransientDependencyForGeneration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientRootSignDependencyForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientRootSignDependencyForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientRootSignDependencyForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientRootSignDependencyForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientRootSignDependencyForGeneration GALGAS_transientRootSignDependencyForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientRootSignDependencyForGeneration result ;
  const GALGAS_transientRootSignDependencyForGeneration * p = (const GALGAS_transientRootSignDependencyForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientRootSignDependencyForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientRootSignDependencyForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*



typeComparisonResult GALGAS_astDeclaration::objectCompare (const GALGAS_astDeclaration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclaration::GALGAS_astDeclaration (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclaration::GALGAS_astDeclaration (const cPtr_astDeclaration * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_astDeclaration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_astDeclaration::reader_mUserDefined (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_astDeclaration * p = (const cPtr_astDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_astDeclaration) ;
    result = p->mAttribute_mUserDefined ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool cPtr_astDeclaration::reader_mUserDefined (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUserDefined ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                       Pointer class for @astDeclaration class                                       *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_astDeclaration::cPtr_astDeclaration (const GALGAS_bool & in_mUserDefined
                                          COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_mUserDefined (in_mUserDefined) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @astDeclaration type                                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_astDeclaration ("astDeclaration",
                                       NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_astDeclaration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_astDeclaration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_astDeclaration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_astDeclaration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclaration GALGAS_astDeclaration::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_astDeclaration result ;
  const GALGAS_astDeclaration * p = (const GALGAS_astDeclaration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_astDeclaration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("astDeclaration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_enumDeclaration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_enumDeclaration * p = (const cPtr_enumDeclaration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_enumDeclaration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mUserDefined.objectCompare (p->mAttribute_mUserDefined) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEnumTypeName.objectCompare (p->mAttribute_mEnumTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEnumConstantNameList.objectCompare (p->mAttribute_mEnumConstantNameList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_enumDeclaration::objectCompare (const GALGAS_enumDeclaration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumDeclaration::GALGAS_enumDeclaration (void) :
GALGAS_astDeclaration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumDeclaration GALGAS_enumDeclaration::constructor_default (LOCATION_ARGS) {
  return GALGAS_enumDeclaration::constructor_new (GALGAS_bool::constructor_default (HERE),
                                                  GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_lstringlist::constructor_emptyList (HERE)
                                                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumDeclaration::GALGAS_enumDeclaration (const cPtr_enumDeclaration * inSourcePtr) :
GALGAS_astDeclaration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_enumDeclaration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumDeclaration GALGAS_enumDeclaration::constructor_new (const GALGAS_bool & inAttribute_mUserDefined,
                                                                const GALGAS_lstring & inAttribute_mEnumTypeName,
                                                                const GALGAS_lstringlist & inAttribute_mEnumConstantNameList
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_enumDeclaration result ;
  if (inAttribute_mUserDefined.isValid () && inAttribute_mEnumTypeName.isValid () && inAttribute_mEnumConstantNameList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_enumDeclaration (inAttribute_mUserDefined, inAttribute_mEnumTypeName, inAttribute_mEnumConstantNameList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_enumDeclaration::reader_mEnumTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_enumDeclaration * p = (const cPtr_enumDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_enumDeclaration) ;
    result = p->mAttribute_mEnumTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_enumDeclaration::reader_mEnumTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumDeclaration::reader_mEnumConstantNameList (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_enumDeclaration * p = (const cPtr_enumDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_enumDeclaration) ;
    result = p->mAttribute_mEnumConstantNameList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist cPtr_enumDeclaration::reader_mEnumConstantNameList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumConstantNameList ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                      Pointer class for @enumDeclaration class                                       *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_enumDeclaration::cPtr_enumDeclaration (const GALGAS_bool & in_mUserDefined,
                                            const GALGAS_lstring & in_mEnumTypeName,
                                            const GALGAS_lstringlist & in_mEnumConstantNameList
                                            COMMA_LOCATION_ARGS) :
cPtr_astDeclaration (in_mUserDefined COMMA_THERE),
mAttribute_mEnumTypeName (in_mEnumTypeName),
mAttribute_mEnumConstantNameList (in_mEnumConstantNameList) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_enumDeclaration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumDeclaration ;
}

void cPtr_enumDeclaration::description (C_String & ioString,
                                        const int32_t inIndentation) const {
  ioString << "[@enumDeclaration:" ;
  mAttribute_mUserDefined.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mEnumTypeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mEnumConstantNameList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_enumDeclaration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_enumDeclaration (mAttribute_mUserDefined, mAttribute_mEnumTypeName, mAttribute_mEnumConstantNameList COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                @enumDeclaration type                                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumDeclaration ("enumDeclaration",
                                        & kTypeDescriptor_GALGAS_astDeclaration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumDeclaration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumDeclaration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumDeclaration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumDeclaration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumDeclaration GALGAS_enumDeclaration::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_enumDeclaration result ;
  const GALGAS_enumDeclaration * p = (const GALGAS_enumDeclaration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumDeclaration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumDeclaration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_predefinedTypeDeclaration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_predefinedTypeDeclaration * p = (const cPtr_predefinedTypeDeclaration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_predefinedTypeDeclaration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mUserDefined.objectCompare (p->mAttribute_mUserDefined) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTypeName.objectCompare (p->mAttribute_mTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mKind.objectCompare (p->mAttribute_mKind) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_predefinedTypeDeclaration::objectCompare (const GALGAS_predefinedTypeDeclaration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_predefinedTypeDeclaration::GALGAS_predefinedTypeDeclaration (void) :
GALGAS_astDeclaration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_predefinedTypeDeclaration::GALGAS_predefinedTypeDeclaration (const cPtr_predefinedTypeDeclaration * inSourcePtr) :
GALGAS_astDeclaration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_predefinedTypeDeclaration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_predefinedTypeDeclaration GALGAS_predefinedTypeDeclaration::constructor_new (const GALGAS_bool & inAttribute_mUserDefined,
                                                                                    const GALGAS_string & inAttribute_mTypeName,
                                                                                    const GALGAS_typeKind & inAttribute_mKind
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_predefinedTypeDeclaration result ;
  if (inAttribute_mUserDefined.isValid () && inAttribute_mTypeName.isValid () && inAttribute_mKind.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_predefinedTypeDeclaration (inAttribute_mUserDefined, inAttribute_mTypeName, inAttribute_mKind COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_predefinedTypeDeclaration::reader_mTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_predefinedTypeDeclaration * p = (const cPtr_predefinedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_predefinedTypeDeclaration) ;
    result = p->mAttribute_mTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cPtr_predefinedTypeDeclaration::reader_mTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_predefinedTypeDeclaration::reader_mKind (UNUSED_LOCATION_ARGS) const {
  GALGAS_typeKind result ;
  if (NULL != mObjectPtr) {
    const cPtr_predefinedTypeDeclaration * p = (const cPtr_predefinedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_predefinedTypeDeclaration) ;
    result = p->mAttribute_mKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind cPtr_predefinedTypeDeclaration::reader_mKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mKind ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                 Pointer class for @predefinedTypeDeclaration class                                  *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_predefinedTypeDeclaration::cPtr_predefinedTypeDeclaration (const GALGAS_bool & in_mUserDefined,
                                                                const GALGAS_string & in_mTypeName,
                                                                const GALGAS_typeKind & in_mKind
                                                                COMMA_LOCATION_ARGS) :
cPtr_astDeclaration (in_mUserDefined COMMA_THERE),
mAttribute_mTypeName (in_mTypeName),
mAttribute_mKind (in_mKind) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_predefinedTypeDeclaration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_predefinedTypeDeclaration ;
}

void cPtr_predefinedTypeDeclaration::description (C_String & ioString,
                                                  const int32_t inIndentation) const {
  ioString << "[@predefinedTypeDeclaration:" ;
  mAttribute_mUserDefined.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTypeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mKind.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_predefinedTypeDeclaration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_predefinedTypeDeclaration (mAttribute_mUserDefined, mAttribute_mTypeName, mAttribute_mKind COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @predefinedTypeDeclaration type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_predefinedTypeDeclaration ("predefinedTypeDeclaration",
                                                  & kTypeDescriptor_GALGAS_astDeclaration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_predefinedTypeDeclaration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_predefinedTypeDeclaration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_predefinedTypeDeclaration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_predefinedTypeDeclaration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_predefinedTypeDeclaration GALGAS_predefinedTypeDeclaration::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_predefinedTypeDeclaration result ;
  const GALGAS_predefinedTypeDeclaration * p = (const GALGAS_predefinedTypeDeclaration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_predefinedTypeDeclaration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("predefinedTypeDeclaration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_structDeclaration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_structDeclaration * p = (const cPtr_structDeclaration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_structDeclaration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mUserDefined.objectCompare (p->mAttribute_mUserDefined) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mStructTypeName.objectCompare (p->mAttribute_mStructTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFieldList.objectCompare (p->mAttribute_mFieldList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_structDeclaration::objectCompare (const GALGAS_structDeclaration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structDeclaration::GALGAS_structDeclaration (void) :
GALGAS_astDeclaration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structDeclaration GALGAS_structDeclaration::constructor_default (LOCATION_ARGS) {
  return GALGAS_structDeclaration::constructor_new (GALGAS_bool::constructor_default (HERE),
                                                    GALGAS_lstring::constructor_default (HERE),
                                                    GALGAS_structFieldASTList::constructor_emptyList (HERE)
                                                    COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structDeclaration::GALGAS_structDeclaration (const cPtr_structDeclaration * inSourcePtr) :
GALGAS_astDeclaration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_structDeclaration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structDeclaration GALGAS_structDeclaration::constructor_new (const GALGAS_bool & inAttribute_mUserDefined,
                                                                    const GALGAS_lstring & inAttribute_mStructTypeName,
                                                                    const GALGAS_structFieldASTList & inAttribute_mFieldList
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_structDeclaration result ;
  if (inAttribute_mUserDefined.isValid () && inAttribute_mStructTypeName.isValid () && inAttribute_mFieldList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_structDeclaration (inAttribute_mUserDefined, inAttribute_mStructTypeName, inAttribute_mFieldList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_structDeclaration::reader_mStructTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_structDeclaration * p = (const cPtr_structDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_structDeclaration) ;
    result = p->mAttribute_mStructTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_structDeclaration::reader_mStructTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStructTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList GALGAS_structDeclaration::reader_mFieldList (UNUSED_LOCATION_ARGS) const {
  GALGAS_structFieldASTList result ;
  if (NULL != mObjectPtr) {
    const cPtr_structDeclaration * p = (const cPtr_structDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_structDeclaration) ;
    result = p->mAttribute_mFieldList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList cPtr_structDeclaration::reader_mFieldList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldList ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                     Pointer class for @structDeclaration class                                      *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_structDeclaration::cPtr_structDeclaration (const GALGAS_bool & in_mUserDefined,
                                                const GALGAS_lstring & in_mStructTypeName,
                                                const GALGAS_structFieldASTList & in_mFieldList
                                                COMMA_LOCATION_ARGS) :
cPtr_astDeclaration (in_mUserDefined COMMA_THERE),
mAttribute_mStructTypeName (in_mStructTypeName),
mAttribute_mFieldList (in_mFieldList) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_structDeclaration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structDeclaration ;
}

void cPtr_structDeclaration::description (C_String & ioString,
                                          const int32_t inIndentation) const {
  ioString << "[@structDeclaration:" ;
  mAttribute_mUserDefined.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mStructTypeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mFieldList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_structDeclaration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_structDeclaration (mAttribute_mUserDefined, mAttribute_mStructTypeName, mAttribute_mFieldList COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               @structDeclaration type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structDeclaration ("structDeclaration",
                                          & kTypeDescriptor_GALGAS_astDeclaration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structDeclaration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structDeclaration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structDeclaration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structDeclaration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structDeclaration GALGAS_structDeclaration::extractObject (const GALGAS_object & inObject,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_structDeclaration result ;
  const GALGAS_structDeclaration * p = (const GALGAS_structDeclaration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structDeclaration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structDeclaration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//   Object comparison                                                                                                 *
//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cPtr_unifiedTypeDeclaration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mUserDefined.objectCompare (p->mAttribute_mUserDefined) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTypeName.objectCompare (p->mAttribute_mTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTypeKind.objectCompare (p->mAttribute_mTypeKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperTypeName.objectCompare (p->mAttribute_mSuperTypeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (p->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityName.objectCompare (p->mAttribute_mRootEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeList.objectCompare (p->mAttribute_mAttributeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRelationshipList.objectCompare (p->mAttribute_mRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayList.objectCompare (p->mAttribute_mArrayList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientList.objectCompare (p->mAttribute_mTransientList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingList.objectCompare (p->mAttribute_mBindingList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionDeclarationList.objectCompare (p->mAttribute_mActionDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayControllerDeclarationListAST.objectCompare (p->mAttribute_mArrayControllerDeclarationListAST) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*


typeComparisonResult GALGAS_unifiedTypeDeclaration::objectCompare (const GALGAS_unifiedTypeDeclaration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeDeclaration::GALGAS_unifiedTypeDeclaration (void) :
GALGAS_astDeclaration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeDeclaration::GALGAS_unifiedTypeDeclaration (const cPtr_unifiedTypeDeclaration * inSourcePtr) :
GALGAS_astDeclaration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_unifiedTypeDeclaration) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeDeclaration GALGAS_unifiedTypeDeclaration::constructor_new (const GALGAS_bool & inAttribute_mUserDefined,
                                                                              const GALGAS_lstring & inAttribute_mTypeName,
                                                                              const GALGAS_typeKind & inAttribute_mTypeKind,
                                                                              const GALGAS_lstring & inAttribute_mSuperTypeName,
                                                                              const GALGAS_outletDeclarationList & inAttribute_mOutletDeclarationList,
                                                                              const GALGAS_lstring & inAttribute_mRootEntityName,
                                                                              const GALGAS_attributeList & inAttribute_mAttributeList,
                                                                              const GALGAS_relationshipList & inAttribute_mRelationshipList,
                                                                              const GALGAS_classArrayList & inAttribute_mArrayList,
                                                                              const GALGAS_transientList & inAttribute_mTransientList,
                                                                              const GALGAS_bindingList & inAttribute_mBindingList,
                                                                              const GALGAS_lstringlist & inAttribute_mActionDeclarationList,
                                                                              const GALGAS_arrayControllerDeclarationListAST & inAttribute_mArrayControllerDeclarationListAST
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeDeclaration result ;
  if (inAttribute_mUserDefined.isValid () && inAttribute_mTypeName.isValid () && inAttribute_mTypeKind.isValid () && inAttribute_mSuperTypeName.isValid () && inAttribute_mOutletDeclarationList.isValid () && inAttribute_mRootEntityName.isValid () && inAttribute_mAttributeList.isValid () && inAttribute_mRelationshipList.isValid () && inAttribute_mArrayList.isValid () && inAttribute_mTransientList.isValid () && inAttribute_mBindingList.isValid () && inAttribute_mActionDeclarationList.isValid () && inAttribute_mArrayControllerDeclarationListAST.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_unifiedTypeDeclaration (inAttribute_mUserDefined, inAttribute_mTypeName, inAttribute_mTypeKind, inAttribute_mSuperTypeName, inAttribute_mOutletDeclarationList, inAttribute_mRootEntityName, inAttribute_mAttributeList, inAttribute_mRelationshipList, inAttribute_mArrayList, inAttribute_mTransientList, inAttribute_mBindingList, inAttribute_mActionDeclarationList, inAttribute_mArrayControllerDeclarationListAST COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_unifiedTypeDeclaration::reader_mTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_unifiedTypeDeclaration::reader_mTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_unifiedTypeDeclaration::reader_mTypeKind (UNUSED_LOCATION_ARGS) const {
  GALGAS_typeKind result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mTypeKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_typeKind cPtr_unifiedTypeDeclaration::reader_mTypeKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeKind ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_unifiedTypeDeclaration::reader_mSuperTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mSuperTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_unifiedTypeDeclaration::reader_mSuperTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList GALGAS_unifiedTypeDeclaration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletDeclarationList result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList cPtr_unifiedTypeDeclaration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_unifiedTypeDeclaration::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mRootEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cPtr_unifiedTypeDeclaration::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList GALGAS_unifiedTypeDeclaration::reader_mAttributeList (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeList result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mAttributeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList cPtr_unifiedTypeDeclaration::reader_mAttributeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_unifiedTypeDeclaration::reader_mRelationshipList (UNUSED_LOCATION_ARGS) const {
  GALGAS_relationshipList result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList cPtr_unifiedTypeDeclaration::reader_mRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRelationshipList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList GALGAS_unifiedTypeDeclaration::reader_mArrayList (UNUSED_LOCATION_ARGS) const {
  GALGAS_classArrayList result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mArrayList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList cPtr_unifiedTypeDeclaration::reader_mArrayList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList GALGAS_unifiedTypeDeclaration::reader_mTransientList (UNUSED_LOCATION_ARGS) const {
  GALGAS_transientList result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mTransientList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList cPtr_unifiedTypeDeclaration::reader_mTransientList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList GALGAS_unifiedTypeDeclaration::reader_mBindingList (UNUSED_LOCATION_ARGS) const {
  GALGAS_bindingList result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mBindingList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList cPtr_unifiedTypeDeclaration::reader_mBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_unifiedTypeDeclaration::reader_mActionDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mActionDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist cPtr_unifiedTypeDeclaration::reader_mActionDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST GALGAS_unifiedTypeDeclaration::reader_mArrayControllerDeclarationListAST (UNUSED_LOCATION_ARGS) const {
  GALGAS_arrayControllerDeclarationListAST result ;
  if (NULL != mObjectPtr) {
    const cPtr_unifiedTypeDeclaration * p = (const cPtr_unifiedTypeDeclaration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_unifiedTypeDeclaration) ;
    result = p->mAttribute_mArrayControllerDeclarationListAST ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST cPtr_unifiedTypeDeclaration::reader_mArrayControllerDeclarationListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerDeclarationListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                   Pointer class for @unifiedTypeDeclaration class                                   *
//---------------------------------------------------------------------------------------------------------------------*

cPtr_unifiedTypeDeclaration::cPtr_unifiedTypeDeclaration (const GALGAS_bool & in_mUserDefined,
                                                          const GALGAS_lstring & in_mTypeName,
                                                          const GALGAS_typeKind & in_mTypeKind,
                                                          const GALGAS_lstring & in_mSuperTypeName,
                                                          const GALGAS_outletDeclarationList & in_mOutletDeclarationList,
                                                          const GALGAS_lstring & in_mRootEntityName,
                                                          const GALGAS_attributeList & in_mAttributeList,
                                                          const GALGAS_relationshipList & in_mRelationshipList,
                                                          const GALGAS_classArrayList & in_mArrayList,
                                                          const GALGAS_transientList & in_mTransientList,
                                                          const GALGAS_bindingList & in_mBindingList,
                                                          const GALGAS_lstringlist & in_mActionDeclarationList,
                                                          const GALGAS_arrayControllerDeclarationListAST & in_mArrayControllerDeclarationListAST
                                                          COMMA_LOCATION_ARGS) :
cPtr_astDeclaration (in_mUserDefined COMMA_THERE),
mAttribute_mTypeName (in_mTypeName),
mAttribute_mTypeKind (in_mTypeKind),
mAttribute_mSuperTypeName (in_mSuperTypeName),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mRootEntityName (in_mRootEntityName),
mAttribute_mAttributeList (in_mAttributeList),
mAttribute_mRelationshipList (in_mRelationshipList),
mAttribute_mArrayList (in_mArrayList),
mAttribute_mTransientList (in_mTransientList),
mAttribute_mBindingList (in_mBindingList),
mAttribute_mActionDeclarationList (in_mActionDeclarationList),
mAttribute_mArrayControllerDeclarationListAST (in_mArrayControllerDeclarationListAST) {
}

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_unifiedTypeDeclaration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeDeclaration ;
}

void cPtr_unifiedTypeDeclaration::description (C_String & ioString,
                                               const int32_t inIndentation) const {
  ioString << "[@unifiedTypeDeclaration:" ;
  mAttribute_mUserDefined.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTypeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTypeKind.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSuperTypeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRootEntityName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRelationshipList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mArrayList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTransientList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mBindingList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mArrayControllerDeclarationListAST.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}

//---------------------------------------------------------------------------------------------------------------------*

acPtr_class * cPtr_unifiedTypeDeclaration::duplicate (LOCATION_ARGS) const {
  acPtr_class * ptr = NULL ;
  macroMyNew (ptr, cPtr_unifiedTypeDeclaration (mAttribute_mUserDefined, mAttribute_mTypeName, mAttribute_mTypeKind, mAttribute_mSuperTypeName, mAttribute_mOutletDeclarationList, mAttribute_mRootEntityName, mAttribute_mAttributeList, mAttribute_mRelationshipList, mAttribute_mArrayList, mAttribute_mTransientList, mAttribute_mBindingList, mAttribute_mActionDeclarationList, mAttribute_mArrayControllerDeclarationListAST COMMA_THERE)) ;
  return ptr ;
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @unifiedTypeDeclaration type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeDeclaration ("unifiedTypeDeclaration",
                                               & kTypeDescriptor_GALGAS_astDeclaration) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeDeclaration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeDeclaration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeDeclaration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeDeclaration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeDeclaration GALGAS_unifiedTypeDeclaration::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeDeclaration result ;
  const GALGAS_unifiedTypeDeclaration * p = (const GALGAS_unifiedTypeDeclaration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeDeclaration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeDeclaration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

#include "project_header.h"
#include "command_line_interface/F_mainForLIBPM.h"
#include "command_line_interface/F_Analyze_CLI_Options.h"
#include "utilities/F_DisplayException.h"
#include "galgas2/C_galgas_CLI_Options.h"

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      print_tool_help_message                                                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void print_tool_help_message (void) {
  co << "Compiled with GALGAS revision NUMERO_REVISION_GALGAS\n" ;
}

//---------------------------------------------------------------------------------------------------------------------*

static const char * kSourceFileExtensions [] = {
  "easyBindings",
  NULL
} ;    

//---------------------------------------------------------------------------------------------------------------------*

static const char * kSourceFileHelpMessages [] = {
  "a source text file with the .easyBindings extension",
  NULL
} ;    

//---------------------------------------------------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  static const char * kVersionString = "version " PROJECT_VERSION_STRING " [debug]" ;
#else
  static const char * kVersionString = "version " PROJECT_VERSION_STRING ;
#endif

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                  Routine 'before'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void routine_before (C_Compiler * /* inCompiler */
                            COMMA_UNUSED_LOCATION_ARGS) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                                   Routine 'after'                                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void routine_after (C_Compiler * /* inCompiler */
                           COMMA_UNUSED_LOCATION_ARGS) {
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                               Routine 'programRule_0'                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void routine_programRule_5F__30_ (const GALGAS_lstring constinArgument_inSourceFile,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_astDeclarationStruct var_declarationStruct = GALGAS_astDeclarationStruct::constructor_default (SOURCE_FILE ("easyBindings_program.galgas", 18)) ;
  GALGAS_location joker_671 ; // Joker input parameter
  cGrammar_easyBindings_5F_grammar::_performSourceStringParsing_ (inCompiler, GALGAS_string (filewrapperTemplate_predefinedOutletClasses_sourceFile (inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 19))), GALGAS_bool (false), var_declarationStruct, joker_671  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 19)) ;
  GALGAS_location var_endOfSourceFile ;
  var_endOfSourceFile.drop () ;
  cGrammar_easyBindings_5F_grammar::_performSourceFileParsing_ (inCompiler, constinArgument_inSourceFile, GALGAS_bool (true), var_declarationStruct, var_endOfSourceFile  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 24)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("String"), GALGAS_typeKind::constructor_stringType (SOURCE_FILE ("easyBindings_program.galgas", 29))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 29))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 29)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("Color"), GALGAS_typeKind::constructor_colorType (SOURCE_FILE ("easyBindings_program.galgas", 30))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 30))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 30)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("Enum"), GALGAS_typeKind::constructor_enumType (SOURCE_FILE ("easyBindings_program.galgas", 31))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 31))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 31)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("Date"), GALGAS_typeKind::constructor_dateType (SOURCE_FILE ("easyBindings_program.galgas", 32))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 32))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 32)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("Integer"), GALGAS_typeKind::constructor_integerType (SOURCE_FILE ("easyBindings_program.galgas", 37))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 37))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 37)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("UInteger"), GALGAS_typeKind::constructor_uintegerType (SOURCE_FILE ("easyBindings_program.galgas", 38))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 38))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 38)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("Bool"), GALGAS_typeKind::constructor_boolType (SOURCE_FILE ("easyBindings_program.galgas", 39))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 39))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 39)) ;
  var_declarationStruct.mAttribute_mDeclarationList.addAssign_operation (GALGAS_predefinedTypeDeclaration::constructor_new (GALGAS_bool (false), GALGAS_string ("Double"), GALGAS_typeKind::constructor_doubleType (SOURCE_FILE ("easyBindings_program.galgas", 40))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 40))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 40)) ;
  GALGAS_unifiedTypeMap var_unifiedTypeMap = GALGAS_unifiedTypeMap::constructor_emptyMap (SOURCE_FILE ("easyBindings_program.galgas", 42)) ;
  cEnumerator_astDeclarationList enumerator_2415 (var_declarationStruct.mAttribute_mDeclarationList, kEnumeration_up) ;
  while (enumerator_2415.hasCurrentObject ()) {
    callCategoryMethod_typeInventory ((const cPtr_astDeclaration *) enumerator_2415.current_mDeclaration (HERE).ptr (), var_unifiedTypeMap, inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 44)) ;
    enumerator_2415.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (gOption_easyBindings_5F_options_outputClassDependencyGraph.reader_value ()).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_s = var_unifiedTypeMap.reader_edgeGraphvizRepresentation (SOURCE_FILE ("easyBindings_program.galgas", 47)) ;
    GALGAS_string var_path = constinArgument_inSourceFile.mAttribute_string.add_operation (GALGAS_string (".classDependancyGraph.dot"), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 48)) ;
    GALGAS_bool joker_2716 ; // Joker input parameter
    var_s.method_writeToFileWhenDifferentContents (var_path, joker_2716, inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 49)) ;
  }
  GALGAS_lstringlist var_unsolvedProxyList = var_unifiedTypeMap.reader_unsolvedProxyList (SOURCE_FILE ("easyBindings_program.galgas", 52)) ;
  cEnumerator_lstringlist enumerator_2889 (var_unsolvedProxyList, kEnumeration_up) ;
  while (enumerator_2889.hasCurrentObject ()) {
    GALGAS_location location_1 (enumerator_2889.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("type ").add_operation (enumerator_2889.current_mValue (HERE).reader_string (SOURCE_FILE ("easyBindings_program.galgas", 54)), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 54)).add_operation (GALGAS_string (" is undefined"), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 54))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 54)) ;
    enumerator_2889.gotoNextObject () ;
  }
  const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_unsolvedProxyList.reader_length (SOURCE_FILE ("easyBindings_program.galgas", 57)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_lstringlist var_sortedTypeNames ;
    GALGAS_lstringlist var_unsortedTypeNames ;
    var_unifiedTypeMap.method_topologicalSort (var_sortedTypeNames, var_unsortedTypeNames, inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 58)) ;
    const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_unsortedTypeNames.reader_length (SOURCE_FILE ("easyBindings_program.galgas", 62)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_string var_s = GALGAS_string ("cannot sort types ; the following types are involved in circular dependence:") ;
      cEnumerator_lstringlist enumerator_3369 (var_unsortedTypeNames, kEnumeration_up) ;
      while (enumerator_3369.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-- ").add_operation (enumerator_3369.current_mValue (HERE).reader_string (SOURCE_FILE ("easyBindings_program.galgas", 65)), inCompiler COMMA_SOURCE_FILE ("easyBindings_program.galgas", 65))  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 65)) ;
        enumerator_3369.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (GALGAS_location::constructor_here (inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 67)), var_s  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 67)) ;
    }else if (kBoolFalse == test_3) {
      GALGAS_transientDependencyGraphNodeInfoList var_sortedTransientAndObservablePropertyNodes ;
      GALGAS_structForGeneration var_generation ;
      {
      routine_semanticAnalysis (var_unifiedTypeMap, var_sortedTypeNames, constinArgument_inSourceFile.mAttribute_string, var_declarationStruct, var_sortedTransientAndObservablePropertyNodes, var_generation, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 69)) ;
      }
      const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("easyBindings_program.galgas", 77)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
      if (kBoolTrue == test_4) {
        {
        routine_generateCode (var_sortedTransientAndObservablePropertyNodes, var_generation, constinArgument_inSourceFile.mAttribute_string, inCompiler  COMMA_SOURCE_FILE ("easyBindings_program.galgas", 78)) ;
        }
      }
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      M A I N    F O R    L I B P M                                                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

int mainForLIBPM (int inArgc, const char * inArgv []) {
//--- Analyze Command Line Options
  TC_UniqueArray <C_String> sourceFilesArray ;
  F_Analyze_CLI_Options (inArgc, inArgv,
                         kVersionString,
                         sourceFilesArray,
                         kSourceFileExtensions,
                         kSourceFileHelpMessages,
                         print_tool_help_message) ;
//---
  bool verboseOptionOn = true ;
  int16_t returnCode = 0 ; // No error
//--- Set Execution mode
  C_String executionModeOptionErrorMessage ;
  setExecutionMode (executionModeOptionErrorMessage) ;
  if (executionModeOptionErrorMessage.length () > 0) {
    co << executionModeOptionErrorMessage ;
    returnCode = 1 ;
  }else{
  //--- Common lexique object
    C_Compiler * commonLexique = NULL ;
    macroMyNew (commonLexique, C_Compiler (NULL, "", "" COMMA_HERE)) ;
    try{
      routine_before (commonLexique COMMA_HERE) ;
      verboseOptionOn = gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue ;
      for (int32_t i=0 ; i<sourceFilesArray.count () ; i++) {
        if (gOption_galgas_5F_builtin_5F_options_trace.mValue) {
          enableTraceWithPath (sourceFilesArray (i COMMA_HERE)) ;
        }
        const C_String fileExtension = sourceFilesArray (i COMMA_HERE).pathExtension () ;
        const GALGAS_string sfp = GALGAS_string (sourceFilesArray (i COMMA_HERE)) ;
        const GALGAS_location location = commonLexique->here () ;
        const GALGAS_lstring sourceFilePath (sfp, location) ;
        int16_t r = 0 ;
        if (fileExtension == "easyBindings") {
          switch (executionMode ()) {
          case kExecutionModeNormal :
            routine_programRule_5F__30_ (sourceFilePath, commonLexique COMMA_HERE) ;
            break ;
          case kExecutionModeLexicalAnalysisOnly :
            cGrammar_easyBindings_5F_grammar::performOnlyLexicalAnalysis (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
            break ;
          case kExecutionModeSyntaxAnalysisOnly :
            cGrammar_easyBindings_5F_grammar::performOnlySyntaxAnalysis (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
            break ;
          case kExecutionModeIndexing :
            cGrammar_easyBindings_5F_grammar::performIndexing (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
            break ;
          case kExecutionModeLatex :
            cGrammar_easyBindings_5F_grammar::performOnlyLexicalAnalysis (commonLexique, sourceFilesArray (i COMMA_HERE)) ;
            break ;
          }
        }else{
          printf ("*** Error: unhandled extension for file '%s' ***\n", sourceFilesArray (i COMMA_HERE).cString (HERE)) ;
          r = 1 ;
        }
        if (r != 0) {
          returnCode = r ;
        }
        closeTrace () ;
      }
    //--- Error or warnings ?
      if (totalErrorCount () > 0) {
        returnCode = 1 ; // Error code
      }else if (totalWarningCount () > 0) {
        if (gOption_galgas_5F_builtin_5F_options_treat_5F_warnings_5F_as_5F_error.mValue) {
          returnCode = 1 ; // Error code
          if (verboseOptionOn) {
            printf ("** Note: warnings are treated as errors. **\n") ;
          }
        }
      }
    //--- Epilogue
      routine_after (commonLexique COMMA_HERE) ;
    //--- Display error and warnings count
      if (gOption_galgas_5F_builtin_5F_options_verbose_5F_output.mValue || (totalWarningCount () > 0) || (totalErrorCount () > 0)) {
        C_String message ;
        if (totalWarningCount () == 0) {
          message << "No warning" ;
        }else if (totalWarningCount () == 1) {
          message << "1 warning" ;
        }else{
          message << cStringWithSigned (totalWarningCount ()) << " warnings" ;
        }
        message << ", " ;
        if (totalErrorCount () == 0) {
          message << "no error" ;
        }else if (totalErrorCount () == 1) {
          message << "1 error" ;
        }else{
          message << cStringWithSigned (totalErrorCount ()) << " errors" ;
        }
        message << ".\n" ;
        ggs_printMessage (message COMMA_HERE) ;
      }
    }catch (const ::std:: exception & e) {
      F_default_display_exception (e) ;
      returnCode = 1 ; // Error code
    }catch (...) {
      printf ("**** Unknow exception ****\n") ;
      throw ;
    }
    macroDetachSharedObject (commonLexique) ;
  }
  return returnCode ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Abstract category method '@astDeclaration typeInventory'                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_astDeclaration_typeInventory> gCategoryMethodTable_astDeclaration_typeInventory ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_typeInventory (const int32_t inClassIndex,
                                        categoryMethodSignature_astDeclaration_typeInventory inMethod) {
  gCategoryMethodTable_astDeclaration_typeInventory.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_astDeclaration_typeInventory (void) {
  gCategoryMethodTable_astDeclaration_typeInventory.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_astDeclaration_typeInventory (NULL,
                                                         freeCategoryMethod_astDeclaration_typeInventory) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_typeInventory (const cPtr_astDeclaration * inObject,
                                       GALGAS_unifiedTypeMap & io_ioUnifiedTypeMap,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_astDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_astDeclaration_typeInventory f = NULL ;
    if (classIndex < gCategoryMethodTable_astDeclaration_typeInventory.count ()) {
      f = gCategoryMethodTable_astDeclaration_typeInventory (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_astDeclaration_typeInventory.count ()) {
           f = gCategoryMethodTable_astDeclaration_typeInventory (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_astDeclaration_typeInventory.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioUnifiedTypeMap, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Category Reader '@typeKind kindName'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_kindName (const GALGAS_typeKind & inObject,
                                       C_Compiler * /* inCompiler */
                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_typeKind temp_0 = inObject ;
  switch (temp_0.enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_classType:
    {
      result_outResult = GALGAS_string ("class") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_controllerClassType:
    {
      result_outResult = GALGAS_string ("controller") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_documentType:
    {
      result_outResult = GALGAS_string ("document") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_entityType:
    {
      result_outResult = GALGAS_string ("entity") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_preferencesType:
    {
      result_outResult = GALGAS_string ("preference") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_boolType:
  case GALGAS_typeKind::kEnum_integerType:
  case GALGAS_typeKind::kEnum_uintegerType:
  case GALGAS_typeKind::kEnum_doubleType:
  case GALGAS_typeKind::kEnum_stringType:
  case GALGAS_typeKind::kEnum_colorType:
  case GALGAS_typeKind::kEnum_dataType:
  case GALGAS_typeKind::kEnum_dateType:
  case GALGAS_typeKind::kEnum_fontType:
  case GALGAS_typeKind::kEnum_imageType:
  case GALGAS_typeKind::kEnum_menuType:
  case GALGAS_typeKind::kEnum_bezierPathType:
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      result_outResult = GALGAS_string ("<kindName \?\?>") ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                              Category Reader '@typeKind suitableForObservableProperty'                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool categoryReader_suitableForObservableProperty (const GALGAS_typeKind & inObject,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  const GALGAS_typeKind temp_0 = inObject ;
  switch (temp_0.enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      result_outResult = GALGAS_bool (false) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_boolType:
  case GALGAS_typeKind::kEnum_integerType:
  case GALGAS_typeKind::kEnum_uintegerType:
  case GALGAS_typeKind::kEnum_doubleType:
  case GALGAS_typeKind::kEnum_stringType:
  case GALGAS_typeKind::kEnum_colorType:
  case GALGAS_typeKind::kEnum_dataType:
  case GALGAS_typeKind::kEnum_dateType:
  case GALGAS_typeKind::kEnum_fontType:
  case GALGAS_typeKind::kEnum_imageType:
  case GALGAS_typeKind::kEnum_menuType:
  case GALGAS_typeKind::kEnum_bezierPathType:
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_bool (true) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Abstract category method '@abstractDefaultValue analyzeDefaultValueType'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType> gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_analyzeDefaultValueType (const int32_t inClassIndex,
                                                  categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType inMethod) {
  gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractDefaultValue_analyzeDefaultValueType (void) {
  gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDefaultValue_analyzeDefaultValueType (NULL,
                                                                         freeCategoryMethod_abstractDefaultValue_analyzeDefaultValueType) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                 const GALGAS_unifiedTypeProxyList constin_inAttributeActualTypeList,
                                                 GALGAS_string & out_outSwiftDefaultValueAsString,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outSwiftDefaultValueAsString.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDefaultValue) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.count ()) {
      f = gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.count ()) {
           f = gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAttributeActualTypeList, out_outSwiftDefaultValueAsString, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//           Abstract category method '@abstractTransientDependencyAST transientDependencySemanticAnalysis'            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractTransientDependencyAST_transientDependencySemanticAnalysis> gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_transientDependencySemanticAnalysis (const int32_t inClassIndex,
                                                              categoryMethodSignature_abstractTransientDependencyAST_transientDependencySemanticAnalysis inMethod) {
  gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractTransientDependencyAST_transientDependencySemanticAnalysis (void) {
  gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractTransientDependencyAST_transientDependencySemanticAnalysis (NULL,
                                                                                               freeCategoryMethod_abstractTransientDependencyAST_transientDependencySemanticAnalysis) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_transientDependencySemanticAnalysis (const cPtr_abstractTransientDependencyAST * inObject,
                                                             const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                             const GALGAS_lstring constin_inTransientName,
                                                             const GALGAS_decoratedObservablePropertyMap constin_inAllObservablePropertyMap,
                                                             const GALGAS_arrayControllerMap constin_inArrayControllerMap,
                                                             const GALGAS_unifiedTypeMap_2D_proxy constin_inRootEntityType,
                                                             const GALGAS_lstring constin_inTransientPropertySignature,
                                                             GALGAS_transientDependencyListForGeneration & io_ioTransientDependencyListForGeneration,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependencyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractTransientDependencyAST_transientDependencySemanticAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis.count ()) {
      f = gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis.count ()) {
           f = gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractTransientDependencyAST_transientDependencySemanticAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inUnifiedTypeMap, constin_inTransientName, constin_inAllObservablePropertyMap, constin_inArrayControllerMap, constin_inRootEntityType, constin_inTransientPropertySignature, io_ioTransientDependencyListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//     Abstract category method '@abstractBooleanMultipleBindingExpressionAST analyzeExpressionForEnabledBinding'      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding> gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_analyzeExpressionForEnabledBinding (const int32_t inClassIndex,
                                                             categoryMethodSignature_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding inMethod) {
  gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding (void) {
  gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding (NULL,
                                                                                                           freeCategoryMethod_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_analyzeExpressionForEnabledBinding (const cPtr_abstractBooleanMultipleBindingExpressionAST * inObject,
                                                            const GALGAS_string constin_inSelfTypeName,
                                                            const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                            const GALGAS_arrayControllerMap constin_inArrayControllerMap,
                                                            const GALGAS_decoratedObservablePropertyMap constin_inCurrentObservablePropertyMap,
                                                            const GALGAS_unifiedTypeMap_2D_proxy constin_inRootEntityType,
                                                            GALGAS_uint & io_ioIndex,
                                                            GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & out_outEnableExpression,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outEnableExpression.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBooleanMultipleBindingExpressionAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding.count ()) {
      f = gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding.count ()) {
           f = gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBooleanMultipleBindingExpressionAST_analyzeExpressionForEnabledBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inSelfTypeName, constin_inUnifiedTypeMap, constin_inArrayControllerMap, constin_inCurrentObservablePropertyMap, constin_inRootEntityType, io_ioIndex, out_outEnableExpression, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//        Abstract category reader '@abstractBooleanMultipleBindingExpressionForGeneration observedObjectList'         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList> gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_observedObjectList (const int32_t inClassIndex,
                                             categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList inReader) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList (void) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList (NULL,
                                                                                                     freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist callCategoryReader_observedObjectList (const cPtr_abstractBooleanMultipleBindingExpressionForGeneration * inObject,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  GALGAS_stringlist result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBooleanMultipleBindingExpressionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList.count ()) {
      f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList.count ()) {
           f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectList.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//      Abstract category method '@abstractObservablePropertyAST analyzeBoundObservablePropertyForEnabledBinding'      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding> gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_analyzeBoundObservablePropertyForEnabledBinding (const int32_t inClassIndex,
                                                                          categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding inMethod) {
  gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding (void) {
  gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding (NULL,
                                                                                                          freeCategoryMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_analyzeBoundObservablePropertyForEnabledBinding (const cPtr_abstractObservablePropertyAST * inObject,
                                                                         const GALGAS_string constin_inSelfTypeName,
                                                                         const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                                         const GALGAS_arrayControllerMap constin_inArrayControllerMap,
                                                                         const GALGAS_decoratedObservablePropertyMap constin_inObservablePropertyMap,
                                                                         const GALGAS_unifiedTypeMap_2D_proxy constin_inRootEntityType,
                                                                         GALGAS_uint & io_ioIndex,
                                                                         GALGAS_abstractBooleanMultipleBindingExpressionForGeneration & out_outExpression,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outExpression.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractObservablePropertyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding.count ()) {
      f = gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding.count ()) {
           f = gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForEnabledBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inSelfTypeName, constin_inUnifiedTypeMap, constin_inArrayControllerMap, constin_inObservablePropertyMap, constin_inRootEntityType, io_ioIndex, out_outExpression, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//      Abstract category method '@abstractObservablePropertyAST analyzeBoundObservablePropertyForSimpleBinding'       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding> gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_analyzeBoundObservablePropertyForSimpleBinding (const int32_t inClassIndex,
                                                                         categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding inMethod) {
  gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding (void) {
  gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding (NULL,
                                                                                                         freeCategoryMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_analyzeBoundObservablePropertyForSimpleBinding (const cPtr_abstractObservablePropertyAST * inObject,
                                                                        const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                                        const GALGAS_arrayControllerMap constin_inArrayControllerMap,
                                                                        const GALGAS_lstring constin_inSelectorName,
                                                                        const GALGAS_string constin_inCurrentTypeName,
                                                                        const GALGAS_decoratedObservablePropertyMap constin_inObservablePropertyMap,
                                                                        const GALGAS_unifiedTypeMap_2D_proxy constin_inRootEntityType,
                                                                        GALGAS_string & io_ioControllerSignature,
                                                                        GALGAS_unifiedTypeProxySelectorList & io_ioBoundPropertyTypeList,
                                                                        GALGAS__32_stringlist & io_ioTypePropertyNameList,
                                                                        GALGAS_stringlist & io_ioBoundObjectNameList,
                                                                        GALGAS_bool & out_outModelIsTransient,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outModelIsTransient.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractObservablePropertyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding.count ()) {
      f = gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding.count ()) {
           f = gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForSimpleBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inUnifiedTypeMap, constin_inArrayControllerMap, constin_inSelectorName, constin_inCurrentTypeName, constin_inObservablePropertyMap, constin_inRootEntityType, io_ioControllerSignature, io_ioBoundPropertyTypeList, io_ioTypePropertyNameList, io_ioBoundObjectNameList, out_outModelIsTransient, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//  Abstract category method '@abstractObservablePropertyAST analyzeBoundObservablePropertyForArrayControllerBinding'  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding> gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_analyzeBoundObservablePropertyForArrayControllerBinding (const int32_t inClassIndex,
                                                                                  categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding inMethod) {
  gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding (void) {
  gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding (NULL,
                                                                                                                  freeCategoryMethod_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_analyzeBoundObservablePropertyForArrayControllerBinding (const cPtr_abstractObservablePropertyAST * inObject,
                                                                                 const GALGAS_decoratedEntityRelationshipMap constin_inCurrentRelationshipMap,
                                                                                 GALGAS_unifiedTypeMap_2D_proxy & out_outRelationshipTypeProxy,
                                                                                 GALGAS_lstring & out_outBoundRootTomanyRelationshipName,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outRelationshipTypeProxy.drop () ;
  out_outBoundRootTomanyRelationshipName.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractObservablePropertyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding.count ()) {
      f = gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding.count ()) {
           f = gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractObservablePropertyAST_analyzeBoundObservablePropertyForArrayControllerBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inCurrentRelationshipMap, out_outRelationshipTypeProxy, out_outBoundRootTomanyRelationshipName, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                     Abstract category reader '@abstractObservablePropertyAST propertySignature'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractObservablePropertyAST_propertySignature> gCategoryReaderTable_abstractObservablePropertyAST_propertySignature ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_propertySignature (const int32_t inClassIndex,
                                            categoryReaderSignature_abstractObservablePropertyAST_propertySignature inReader) {
  gCategoryReaderTable_abstractObservablePropertyAST_propertySignature.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractObservablePropertyAST_propertySignature (void) {
  gCategoryReaderTable_abstractObservablePropertyAST_propertySignature.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractObservablePropertyAST_propertySignature (NULL,
                                                                            freeCategoryReader_abstractObservablePropertyAST_propertySignature) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring callCategoryReader_propertySignature (const cPtr_abstractObservablePropertyAST * inObject,
                                                     const GALGAS_string & in_inKind,
                                                     const GALGAS_string & in_inSelfTypeName,
                                                     const GALGAS_unifiedTypeMap_2D_proxy & in_inRootypeProxy,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  GALGAS_lstring result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractObservablePropertyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractObservablePropertyAST_propertySignature f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractObservablePropertyAST_propertySignature.count ()) {
      f = gCategoryReaderTable_abstractObservablePropertyAST_propertySignature (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractObservablePropertyAST_propertySignature.count ()) {
           f = gCategoryReaderTable_abstractObservablePropertyAST_propertySignature (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractObservablePropertyAST_propertySignature.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inKind, in_inSelfTypeName, in_inRootypeProxy, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                  Abstract category reader '@abstractObservablePropertyAST arrayControllerTypeName'                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractObservablePropertyAST_arrayControllerTypeName> gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_arrayControllerTypeName (const int32_t inClassIndex,
                                                  categoryReaderSignature_abstractObservablePropertyAST_arrayControllerTypeName inReader) {
  gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractObservablePropertyAST_arrayControllerTypeName (void) {
  gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractObservablePropertyAST_arrayControllerTypeName (NULL,
                                                                                  freeCategoryReader_abstractObservablePropertyAST_arrayControllerTypeName) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callCategoryReader_arrayControllerTypeName (const cPtr_abstractObservablePropertyAST * inObject,
                                                          const GALGAS_string & in_inSelfTypeName,
                                                          const GALGAS_unifiedTypeMap_2D_proxy & in_inRootypeProxy,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractObservablePropertyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractObservablePropertyAST_arrayControllerTypeName f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName.count ()) {
      f = gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName.count ()) {
           f = gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractObservablePropertyAST_arrayControllerTypeName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inSelfTypeName, in_inRootypeProxy, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//             Abstract category reader '@abstractObservablePropertyAST modelSignatureForArrayController'              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractObservablePropertyAST_modelSignatureForArrayController> gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_modelSignatureForArrayController (const int32_t inClassIndex,
                                                           categoryReaderSignature_abstractObservablePropertyAST_modelSignatureForArrayController inReader) {
  gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractObservablePropertyAST_modelSignatureForArrayController (void) {
  gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractObservablePropertyAST_modelSignatureForArrayController (NULL,
                                                                                           freeCategoryReader_abstractObservablePropertyAST_modelSignatureForArrayController) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callCategoryReader_modelSignatureForArrayController (const cPtr_abstractObservablePropertyAST * inObject,
                                                                   const GALGAS_unifiedTypeMap_2D_proxy & in_inRootypeProxy,
                                                                   const GALGAS_string & in_inSelfTypeName,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractObservablePropertyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractObservablePropertyAST_modelSignatureForArrayController f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController.count ()) {
      f = gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController.count ()) {
           f = gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractObservablePropertyAST_modelSignatureForArrayController.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inRootypeProxy, in_inSelfTypeName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//               Abstract category reader '@abstractTransientDependencyAST buildDecoratedRepresentation'               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractTransientDependencyAST_buildDecoratedRepresentation> gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_buildDecoratedRepresentation (const int32_t inClassIndex,
                                                       categoryReaderSignature_abstractTransientDependencyAST_buildDecoratedRepresentation inReader) {
  gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractTransientDependencyAST_buildDecoratedRepresentation (void) {
  gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractTransientDependencyAST_buildDecoratedRepresentation (NULL,
                                                                                        freeCategoryReader_abstractTransientDependencyAST_buildDecoratedRepresentation) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForGeneration callCategoryReader_buildDecoratedRepresentation (const cPtr_abstractTransientDependencyAST * inObject,
                                                                                                 const GALGAS_unifiedTypeMap_2D_proxy & in_inRootEntityType,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_abstractTransientDependencyForGeneration result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependencyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractTransientDependencyAST_buildDecoratedRepresentation f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation.count ()) {
      f = gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation.count ()) {
           f = gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractTransientDependencyAST_buildDecoratedRepresentation.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inRootEntityType, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//    Abstract category reader '@abstractBooleanMultipleBindingExpressionForGeneration observedObjectTypeNameList'     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList> gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_observedObjectTypeNameList (const int32_t inClassIndex,
                                                     categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList inReader) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList (void) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList (NULL,
                                                                                                             freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist callCategoryReader_observedObjectTypeNameList (const cPtr_abstractBooleanMultipleBindingExpressionForGeneration * inObject,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_stringlist result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBooleanMultipleBindingExpressionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList.count ()) {
      f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList.count ()) {
           f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedObjectTypeNameList.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//      Abstract category reader '@abstractBooleanMultipleBindingExpressionForGeneration enableExpressionString'       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString> gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_enableExpressionString (const int32_t inClassIndex,
                                                 categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString inReader) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString (void) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString (NULL,
                                                                                                         freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callCategoryReader_enableExpressionString (const cPtr_abstractBooleanMultipleBindingExpressionForGeneration * inObject,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBooleanMultipleBindingExpressionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString.count ()) {
      f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString.count ()) {
           f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_enableExpressionString.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//       Abstract category reader '@abstractBooleanMultipleBindingExpressionForGeneration observedModelNameList'       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList> gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_observedModelNameList (const int32_t inClassIndex,
                                                categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList inReader) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList (void) {
  gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList (NULL,
                                                                                                        freeCategoryReader_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist callCategoryReader_observedModelNameList (const cPtr_abstractBooleanMultipleBindingExpressionForGeneration * inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_stringlist result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBooleanMultipleBindingExpressionForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList.count ()) {
      f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList.count ()) {
           f = gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBooleanMultipleBindingExpressionForGeneration_observedModelNameList.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//              Abstract category method '@abstractTransientDependencyAST buildTransientDependencyGraph'               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractTransientDependencyAST_buildTransientDependencyGraph> gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_buildTransientDependencyGraph (const int32_t inClassIndex,
                                                        categoryMethodSignature_abstractTransientDependencyAST_buildTransientDependencyGraph inMethod) {
  gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractTransientDependencyAST_buildTransientDependencyGraph (void) {
  gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractTransientDependencyAST_buildTransientDependencyGraph (NULL,
                                                                                         freeCategoryMethod_abstractTransientDependencyAST_buildTransientDependencyGraph) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_buildTransientDependencyGraph (const cPtr_abstractTransientDependencyAST * inObject,
                                                       const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                       GALGAS_transientDependencyGraph & io_ioTransientDependencyGraph,
                                                       const GALGAS_lstring constin_inTransientName,
                                                       const GALGAS_decoratedObservablePropertyMap constin_inLocalObservablePropertyMap,
                                                       const GALGAS_unifiedTypeMap_2D_proxy constin_inRootEntityType,
                                                       const GALGAS_arrayControllerMap constin_inArrayControllerMap,
                                                       const GALGAS_lstring constin_inTransientPropertySignature,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependencyAST) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractTransientDependencyAST_buildTransientDependencyGraph f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph.count ()) {
      f = gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph.count ()) {
           f = gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractTransientDependencyAST_buildTransientDependencyGraph.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inUnifiedTypeMap, io_ioTransientDependencyGraph, constin_inTransientName, constin_inLocalObservablePropertyMap, constin_inRootEntityType, constin_inArrayControllerMap, constin_inTransientPropertySignature, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//   Abstract category reader '@abstractTransientDependencyForGeneration generateActualParameterForComputeFunction'    *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction> gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_generateActualParameterForComputeFunction (const int32_t inClassIndex,
                                                                    categoryReaderSignature_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction inReader) {
  gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction (void) {
  gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction (NULL,
                                                                                                               freeCategoryReader_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateActualParameterForComputeFunction (const cPtr_abstractTransientDependencyForGeneration * inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependencyForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction.count ()) {
      f = gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction.count ()) {
           f = gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractTransientDependencyForGeneration_generateActualParameterForComputeFunction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//            Abstract category reader '@abstractTransientDependencyForGeneration generateAddObserverCall'             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractTransientDependencyForGeneration_generateAddObserverCall> gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_generateAddObserverCall (const int32_t inClassIndex,
                                                  categoryReaderSignature_abstractTransientDependencyForGeneration_generateAddObserverCall inReader) {
  gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractTransientDependencyForGeneration_generateAddObserverCall (void) {
  gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractTransientDependencyForGeneration_generateAddObserverCall (NULL,
                                                                                             freeCategoryReader_abstractTransientDependencyForGeneration_generateAddObserverCall) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateAddObserverCall (const cPtr_abstractTransientDependencyForGeneration * inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependencyForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractTransientDependencyForGeneration_generateAddObserverCall f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall.count ()) {
      f = gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall.count ()) {
           f = gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractTransientDependencyForGeneration_generateAddObserverCall.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//           Abstract category reader '@abstractTransientDependencyForGeneration generateRemoveObserverCall'           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractTransientDependencyForGeneration_generateRemoveObserverCall> gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryReader_generateRemoveObserverCall (const int32_t inClassIndex,
                                                     categoryReaderSignature_abstractTransientDependencyForGeneration_generateRemoveObserverCall inReader) {
  gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryReader_abstractTransientDependencyForGeneration_generateRemoveObserverCall (void) {
  gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractTransientDependencyForGeneration_generateRemoveObserverCall (NULL,
                                                                                                freeCategoryReader_abstractTransientDependencyForGeneration_generateRemoveObserverCall) ;

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateRemoveObserverCall (const cPtr_abstractTransientDependencyForGeneration * inObject,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependencyForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractTransientDependencyForGeneration_generateRemoveObserverCall f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall.count ()) {
      f = gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall.count ()) {
           f = gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractTransientDependencyForGeneration_generateRemoveObserverCall.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationList_2D_element::GALGAS_astDeclarationList_2D_element (void) :
mAttribute_mDeclaration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationList_2D_element::~ GALGAS_astDeclarationList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationList_2D_element::GALGAS_astDeclarationList_2D_element (const GALGAS_astDeclaration & inOperand0) :
mAttribute_mDeclaration (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationList_2D_element GALGAS_astDeclarationList_2D_element::constructor_new (const GALGAS_astDeclaration & inOperand0 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_astDeclarationList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_astDeclarationList_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_astDeclarationList_2D_element::objectCompare (const GALGAS_astDeclarationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDeclaration.objectCompare (inOperand.mAttribute_mDeclaration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_astDeclarationList_2D_element::isValid (void) const {
  return mAttribute_mDeclaration.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_astDeclarationList_2D_element::drop (void) {
  mAttribute_mDeclaration.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_astDeclarationList_2D_element::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "<struct @astDeclarationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDeclaration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclaration GALGAS_astDeclarationList_2D_element::reader_mDeclaration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeclaration ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @astDeclarationList-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_astDeclarationList_2D_element ("astDeclarationList-element",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_astDeclarationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_astDeclarationList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_astDeclarationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_astDeclarationList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationList_2D_element GALGAS_astDeclarationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_astDeclarationList_2D_element result ;
  const GALGAS_astDeclarationList_2D_element * p = (const GALGAS_astDeclarationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_astDeclarationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("astDeclarationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceList_2D_element::GALGAS_dependanceList_2D_element (void) :
mAttribute_mDependency () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceList_2D_element::~ GALGAS_dependanceList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceList_2D_element::GALGAS_dependanceList_2D_element (const GALGAS_abstractTransientDependencyAST & inOperand0) :
mAttribute_mDependency (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceList_2D_element GALGAS_dependanceList_2D_element::constructor_new (const GALGAS_abstractTransientDependencyAST & inOperand0 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_dependanceList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_dependanceList_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_dependanceList_2D_element::objectCompare (const GALGAS_dependanceList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDependency.objectCompare (inOperand.mAttribute_mDependency) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_dependanceList_2D_element::isValid (void) const {
  return mAttribute_mDependency.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dependanceList_2D_element::drop (void) {
  mAttribute_mDependency.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dependanceList_2D_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @dependanceList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDependency.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyAST GALGAS_dependanceList_2D_element::reader_mDependency (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependency ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @dependanceList-element type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_dependanceList_2D_element ("dependanceList-element",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_dependanceList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dependanceList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_dependanceList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_dependanceList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceList_2D_element GALGAS_dependanceList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_dependanceList_2D_element result ;
  const GALGAS_dependanceList_2D_element * p = (const GALGAS_dependanceList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_dependanceList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("dependanceList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList_2D_element::GALGAS_defaultValueList_2D_element (void) :
mAttribute_mDefaultValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList_2D_element::~ GALGAS_defaultValueList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList_2D_element::GALGAS_defaultValueList_2D_element (const GALGAS_abstractDefaultValue & inOperand0) :
mAttribute_mDefaultValue (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList_2D_element GALGAS_defaultValueList_2D_element::constructor_new (const GALGAS_abstractDefaultValue & inOperand0 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_defaultValueList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_defaultValueList_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_defaultValueList_2D_element::objectCompare (const GALGAS_defaultValueList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValue.objectCompare (inOperand.mAttribute_mDefaultValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_defaultValueList_2D_element::isValid (void) const {
  return mAttribute_mDefaultValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_defaultValueList_2D_element::drop (void) {
  mAttribute_mDefaultValue.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_defaultValueList_2D_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @defaultValueList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDefaultValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDefaultValue GALGAS_defaultValueList_2D_element::reader_mDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @defaultValueList-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_defaultValueList_2D_element ("defaultValueList-element",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_defaultValueList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_defaultValueList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_defaultValueList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_defaultValueList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_defaultValueList_2D_element GALGAS_defaultValueList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_defaultValueList_2D_element result ;
  const GALGAS_defaultValueList_2D_element * p = (const GALGAS_defaultValueList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_defaultValueList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("defaultValueList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceListForGeneration_2D_element::GALGAS_dependanceListForGeneration_2D_element (void) :
mAttribute_mDependency () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceListForGeneration_2D_element::~ GALGAS_dependanceListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceListForGeneration_2D_element::GALGAS_dependanceListForGeneration_2D_element (const GALGAS_abstractTransientDependencyForGeneration & inOperand0) :
mAttribute_mDependency (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceListForGeneration_2D_element GALGAS_dependanceListForGeneration_2D_element::constructor_new (const GALGAS_abstractTransientDependencyForGeneration & inOperand0 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_dependanceListForGeneration_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_dependanceListForGeneration_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_dependanceListForGeneration_2D_element::objectCompare (const GALGAS_dependanceListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDependency.objectCompare (inOperand.mAttribute_mDependency) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_dependanceListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mDependency.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dependanceListForGeneration_2D_element::drop (void) {
  mAttribute_mDependency.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_dependanceListForGeneration_2D_element::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "<struct @dependanceListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDependency.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForGeneration GALGAS_dependanceListForGeneration_2D_element::reader_mDependency (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependency ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @dependanceListForGeneration-element type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_dependanceListForGeneration_2D_element ("dependanceListForGeneration-element",
                                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_dependanceListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dependanceListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_dependanceListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_dependanceListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceListForGeneration_2D_element GALGAS_dependanceListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_dependanceListForGeneration_2D_element result ;
  const GALGAS_dependanceListForGeneration_2D_element * p = (const GALGAS_dependanceListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_dependanceListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("dependanceListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyGraphNodeInfoList_2D_element::GALGAS_transientDependencyGraphNodeInfoList_2D_element (void) :
mAttribute_mSignature (),
mAttribute_mIsTransient () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyGraphNodeInfoList_2D_element::~ GALGAS_transientDependencyGraphNodeInfoList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyGraphNodeInfoList_2D_element::GALGAS_transientDependencyGraphNodeInfoList_2D_element (const GALGAS_string & inOperand0,
                                                                                                                const GALGAS_bool & inOperand1) :
mAttribute_mSignature (inOperand0),
mAttribute_mIsTransient (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyGraphNodeInfoList_2D_element GALGAS_transientDependencyGraphNodeInfoList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_transientDependencyGraphNodeInfoList_2D_element (GALGAS_string::constructor_default (HERE),
                                                                 GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyGraphNodeInfoList_2D_element GALGAS_transientDependencyGraphNodeInfoList_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                const GALGAS_bool & inOperand1 
                                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_transientDependencyGraphNodeInfoList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_transientDependencyGraphNodeInfoList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_transientDependencyGraphNodeInfoList_2D_element::objectCompare (const GALGAS_transientDependencyGraphNodeInfoList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSignature.objectCompare (inOperand.mAttribute_mSignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsTransient.objectCompare (inOperand.mAttribute_mIsTransient) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_transientDependencyGraphNodeInfoList_2D_element::isValid (void) const {
  return mAttribute_mSignature.isValid () && mAttribute_mIsTransient.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_transientDependencyGraphNodeInfoList_2D_element::drop (void) {
  mAttribute_mSignature.drop () ;
  mAttribute_mIsTransient.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_transientDependencyGraphNodeInfoList_2D_element::description (C_String & ioString,
                                                                          const int32_t inIndentation) const {
  ioString << "<struct @transientDependencyGraphNodeInfoList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsTransient.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyGraphNodeInfoList_2D_element::reader_mSignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignature ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientDependencyGraphNodeInfoList_2D_element::reader_mIsTransient (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsTransient ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 @transientDependencyGraphNodeInfoList-element type                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyGraphNodeInfoList_2D_element ("transientDependencyGraphNodeInfoList-element",
                                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyGraphNodeInfoList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyGraphNodeInfoList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyGraphNodeInfoList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyGraphNodeInfoList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyGraphNodeInfoList_2D_element GALGAS_transientDependencyGraphNodeInfoList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyGraphNodeInfoList_2D_element result ;
  const GALGAS_transientDependencyGraphNodeInfoList_2D_element * p = (const GALGAS_transientDependencyGraphNodeInfoList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyGraphNodeInfoList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyGraphNodeInfoList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyListForGeneration_2D_element::GALGAS_transientDependencyListForGeneration_2D_element (void) :
mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument (),
mAttribute_mComputeFunctionFormalArgumentName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyListForGeneration_2D_element::~ GALGAS_transientDependencyListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyListForGeneration_2D_element::GALGAS_transientDependencyListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                                                const GALGAS_string & inOperand1) :
mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument (inOperand0),
mAttribute_mComputeFunctionFormalArgumentName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyListForGeneration_2D_element GALGAS_transientDependencyListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_transientDependencyListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                                 GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyListForGeneration_2D_element GALGAS_transientDependencyListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                const GALGAS_string & inOperand1 
                                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_transientDependencyListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_transientDependencyListForGeneration_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_transientDependencyListForGeneration_2D_element::objectCompare (const GALGAS_transientDependencyListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument.objectCompare (inOperand.mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mComputeFunctionFormalArgumentName.objectCompare (inOperand.mAttribute_mComputeFunctionFormalArgumentName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_transientDependencyListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument.isValid () && mAttribute_mComputeFunctionFormalArgumentName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_transientDependencyListForGeneration_2D_element::drop (void) {
  mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument.drop () ;
  mAttribute_mComputeFunctionFormalArgumentName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_transientDependencyListForGeneration_2D_element::description (C_String & ioString,
                                                                          const int32_t inIndentation) const {
  ioString << "<struct @transientDependencyListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mComputeFunctionFormalArgumentName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyListForGeneration_2D_element::reader_mSwiftTypeNameForComputeFunctionFormalArgument (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSwiftTypeNameForComputeFunctionFormalArgument ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyListForGeneration_2D_element::reader_mComputeFunctionFormalArgumentName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mComputeFunctionFormalArgumentName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 @transientDependencyListForGeneration-element type                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyListForGeneration_2D_element ("transientDependencyListForGeneration-element",
                                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDependencyListForGeneration_2D_element GALGAS_transientDependencyListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyListForGeneration_2D_element result ;
  const GALGAS_transientDependencyListForGeneration_2D_element * p = (const GALGAS_transientDependencyListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration_2D_element::GALGAS_actionListForGeneration_2D_element (void) :
mAttribute_mClassName (),
mAttribute_mActionName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration_2D_element::~ GALGAS_actionListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration_2D_element::GALGAS_actionListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                      const GALGAS_string & inOperand1) :
mAttribute_mClassName (inOperand0),
mAttribute_mActionName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration_2D_element GALGAS_actionListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_actionListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                    GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration_2D_element GALGAS_actionListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                      const GALGAS_string & inOperand1 
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_actionListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_actionListForGeneration_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_actionListForGeneration_2D_element::objectCompare (const GALGAS_actionListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mClassName.objectCompare (inOperand.mAttribute_mClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionName.objectCompare (inOperand.mAttribute_mActionName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_actionListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mClassName.isValid () && mAttribute_mActionName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actionListForGeneration_2D_element::drop (void) {
  mAttribute_mClassName.drop () ;
  mAttribute_mActionName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_actionListForGeneration_2D_element::description (C_String & ioString,
                                                             const int32_t inIndentation) const {
  ioString << "<struct @actionListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_actionListForGeneration_2D_element::reader_mClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mClassName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_actionListForGeneration_2D_element::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @actionListForGeneration-element type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionListForGeneration_2D_element ("actionListForGeneration-element",
                                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration_2D_element GALGAS_actionListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_actionListForGeneration_2D_element result ;
  const GALGAS_actionListForGeneration_2D_element * p = (const GALGAS_actionListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("actionListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration_2D_element::GALGAS_arrayControllerForGeneration_2D_element (void) :
mAttribute_mControllerName (),
mAttribute_mObjectTypeName (),
mAttribute_mTomanyRelationshipName (),
mAttribute_mElementTypeName (),
mAttribute_mTableViewOutletName (),
mAttribute_mArrayControllerBoundColumnListForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration_2D_element::~ GALGAS_arrayControllerForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration_2D_element::GALGAS_arrayControllerForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_string & inOperand1,
                                                                                                const GALGAS_string & inOperand2,
                                                                                                const GALGAS_string & inOperand3,
                                                                                                const GALGAS_string & inOperand4,
                                                                                                const GALGAS_arrayControllerBoundColumnListForGeneration & inOperand5) :
mAttribute_mControllerName (inOperand0),
mAttribute_mObjectTypeName (inOperand1),
mAttribute_mTomanyRelationshipName (inOperand2),
mAttribute_mElementTypeName (inOperand3),
mAttribute_mTableViewOutletName (inOperand4),
mAttribute_mArrayControllerBoundColumnListForGeneration (inOperand5) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration_2D_element GALGAS_arrayControllerForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_arrayControllerForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_string::constructor_default (HERE),
                                                         GALGAS_arrayControllerBoundColumnListForGeneration::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration_2D_element GALGAS_arrayControllerForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                const GALGAS_string & inOperand1,
                                                                                                                const GALGAS_string & inOperand2,
                                                                                                                const GALGAS_string & inOperand3,
                                                                                                                const GALGAS_string & inOperand4,
                                                                                                                const GALGAS_arrayControllerBoundColumnListForGeneration & inOperand5 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_arrayControllerForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_arrayControllerForGeneration_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_arrayControllerForGeneration_2D_element::objectCompare (const GALGAS_arrayControllerForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mControllerName.objectCompare (inOperand.mAttribute_mControllerName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObjectTypeName.objectCompare (inOperand.mAttribute_mObjectTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTomanyRelationshipName.objectCompare (inOperand.mAttribute_mTomanyRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mElementTypeName.objectCompare (inOperand.mAttribute_mElementTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTableViewOutletName.objectCompare (inOperand.mAttribute_mTableViewOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayControllerBoundColumnListForGeneration.objectCompare (inOperand.mAttribute_mArrayControllerBoundColumnListForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_arrayControllerForGeneration_2D_element::isValid (void) const {
  return mAttribute_mControllerName.isValid () && mAttribute_mObjectTypeName.isValid () && mAttribute_mTomanyRelationshipName.isValid () && mAttribute_mElementTypeName.isValid () && mAttribute_mTableViewOutletName.isValid () && mAttribute_mArrayControllerBoundColumnListForGeneration.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerForGeneration_2D_element::drop (void) {
  mAttribute_mControllerName.drop () ;
  mAttribute_mObjectTypeName.drop () ;
  mAttribute_mTomanyRelationshipName.drop () ;
  mAttribute_mElementTypeName.drop () ;
  mAttribute_mTableViewOutletName.drop () ;
  mAttribute_mArrayControllerBoundColumnListForGeneration.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerForGeneration_2D_element::description (C_String & ioString,
                                                                  const int32_t inIndentation) const {
  ioString << "<struct @arrayControllerForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mControllerName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObjectTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTomanyRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mElementTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTableViewOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayControllerBoundColumnListForGeneration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_arrayControllerForGeneration_2D_element::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_arrayControllerForGeneration_2D_element::reader_mObjectTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObjectTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_arrayControllerForGeneration_2D_element::reader_mTomanyRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTomanyRelationshipName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_arrayControllerForGeneration_2D_element::reader_mElementTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mElementTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_arrayControllerForGeneration_2D_element::reader_mTableViewOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTableViewOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListForGeneration GALGAS_arrayControllerForGeneration_2D_element::reader_mArrayControllerBoundColumnListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerBoundColumnListForGeneration ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @arrayControllerForGeneration-element type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_arrayControllerForGeneration_2D_element ("arrayControllerForGeneration-element",
                                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_arrayControllerForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayControllerForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_arrayControllerForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_arrayControllerForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration_2D_element GALGAS_arrayControllerForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_arrayControllerForGeneration_2D_element result ;
  const GALGAS_arrayControllerForGeneration_2D_element * p = (const GALGAS_arrayControllerForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_arrayControllerForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("arrayControllerForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList_2D_element::GALGAS_targetActionList_2D_element (void) :
mAttribute_mOutletName (),
mAttribute_mTargetName (),
mAttribute_mActionName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList_2D_element::~ GALGAS_targetActionList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList_2D_element::GALGAS_targetActionList_2D_element (const GALGAS_string & inOperand0,
                                                                        const GALGAS_string & inOperand1,
                                                                        const GALGAS_string & inOperand2) :
mAttribute_mOutletName (inOperand0),
mAttribute_mTargetName (inOperand1),
mAttribute_mActionName (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList_2D_element GALGAS_targetActionList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_targetActionList_2D_element (GALGAS_string::constructor_default (HERE),
                                             GALGAS_string::constructor_default (HERE),
                                             GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList_2D_element GALGAS_targetActionList_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                        const GALGAS_string & inOperand1,
                                                                                        const GALGAS_string & inOperand2 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_targetActionList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_targetActionList_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_targetActionList_2D_element::objectCompare (const GALGAS_targetActionList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTargetName.objectCompare (inOperand.mAttribute_mTargetName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionName.objectCompare (inOperand.mAttribute_mActionName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_targetActionList_2D_element::isValid (void) const {
  return mAttribute_mOutletName.isValid () && mAttribute_mTargetName.isValid () && mAttribute_mActionName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetActionList_2D_element::drop (void) {
  mAttribute_mOutletName.drop () ;
  mAttribute_mTargetName.drop () ;
  mAttribute_mActionName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_targetActionList_2D_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @targetActionList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTargetName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_targetActionList_2D_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_targetActionList_2D_element::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_targetActionList_2D_element::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @targetActionList-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_targetActionList_2D_element ("targetActionList-element",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_targetActionList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_targetActionList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_targetActionList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_targetActionList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList_2D_element GALGAS_targetActionList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_targetActionList_2D_element result ;
  const GALGAS_targetActionList_2D_element * p = (const GALGAS_targetActionList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_targetActionList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("targetActionList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration_2D_element::GALGAS_validationStubRoutineListForGeneration_2D_element (void) :
mAttribute_mObjectTypeName (),
mAttribute_mModelName (),
mAttribute_mModelTypeName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration_2D_element::~ GALGAS_validationStubRoutineListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration_2D_element::GALGAS_validationStubRoutineListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_string & inOperand2) :
mAttribute_mObjectTypeName (inOperand0),
mAttribute_mModelName (inOperand1),
mAttribute_mModelTypeName (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration_2D_element GALGAS_validationStubRoutineListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_validationStubRoutineListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                                   GALGAS_string::constructor_default (HERE),
                                                                   GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration_2D_element GALGAS_validationStubRoutineListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                    const GALGAS_string & inOperand2 
                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_validationStubRoutineListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_validationStubRoutineListForGeneration_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_validationStubRoutineListForGeneration_2D_element::objectCompare (const GALGAS_validationStubRoutineListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mObjectTypeName.objectCompare (inOperand.mAttribute_mObjectTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelName.objectCompare (inOperand.mAttribute_mModelName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelTypeName.objectCompare (inOperand.mAttribute_mModelTypeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_validationStubRoutineListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mObjectTypeName.isValid () && mAttribute_mModelName.isValid () && mAttribute_mModelTypeName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_validationStubRoutineListForGeneration_2D_element::drop (void) {
  mAttribute_mObjectTypeName.drop () ;
  mAttribute_mModelName.drop () ;
  mAttribute_mModelTypeName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_validationStubRoutineListForGeneration_2D_element::description (C_String & ioString,
                                                                            const int32_t inIndentation) const {
  ioString << "<struct @validationStubRoutineListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mObjectTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelTypeName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_validationStubRoutineListForGeneration_2D_element::reader_mObjectTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObjectTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_validationStubRoutineListForGeneration_2D_element::reader_mModelName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_validationStubRoutineListForGeneration_2D_element::reader_mModelTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelTypeName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                @validationStubRoutineListForGeneration-element type                                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_validationStubRoutineListForGeneration_2D_element ("validationStubRoutineListForGeneration-element",
                                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_validationStubRoutineListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_validationStubRoutineListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_validationStubRoutineListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_validationStubRoutineListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration_2D_element GALGAS_validationStubRoutineListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                  C_Compiler * inCompiler
                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_validationStubRoutineListForGeneration_2D_element result ;
  const GALGAS_validationStubRoutineListForGeneration_2D_element * p = (const GALGAS_validationStubRoutineListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_validationStubRoutineListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("validationStubRoutineListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration_2D_element::GALGAS_enumListForGeneration_2D_element (void) :
mAttribute_mEnumName (),
mAttribute_mEnumConstantList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration_2D_element::~ GALGAS_enumListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration_2D_element::GALGAS_enumListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                  const GALGAS_lstringlist & inOperand1) :
mAttribute_mEnumName (inOperand0),
mAttribute_mEnumConstantList (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration_2D_element GALGAS_enumListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_enumListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                  GALGAS_lstringlist::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration_2D_element GALGAS_enumListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                  const GALGAS_lstringlist & inOperand1 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_enumListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_enumListForGeneration_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_enumListForGeneration_2D_element::objectCompare (const GALGAS_enumListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mEnumName.objectCompare (inOperand.mAttribute_mEnumName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumConstantList.objectCompare (inOperand.mAttribute_mEnumConstantList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_enumListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mEnumName.isValid () && mAttribute_mEnumConstantList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_enumListForGeneration_2D_element::drop (void) {
  mAttribute_mEnumName.drop () ;
  mAttribute_mEnumConstantList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_enumListForGeneration_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @enumListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mEnumName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumConstantList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_enumListForGeneration_2D_element::reader_mEnumName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumListForGeneration_2D_element::reader_mEnumConstantList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumConstantList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @enumListForGeneration-element type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumListForGeneration_2D_element ("enumListForGeneration-element",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration_2D_element GALGAS_enumListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_enumListForGeneration_2D_element result ;
  const GALGAS_enumListForGeneration_2D_element * p = (const GALGAS_enumListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration_2D_element::GALGAS_preferenceListForGeneration_2D_element (void) :
mAttribute_mPreferenceName (),
mAttribute_mAttributeListForGeneration (),
mAttribute_mDecoratedTransientListForGeneration (),
mAttribute_mOutletMap (),
mAttribute_mControllerInstanciationStringList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration_2D_element::~ GALGAS_preferenceListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration_2D_element::GALGAS_preferenceListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                              const GALGAS_attributeListForGeneration & inOperand1,
                                                                                              const GALGAS_transientDefinitionListForGeneration & inOperand2,
                                                                                              const GALGAS_decoratedOutletMap & inOperand3,
                                                                                              const GALGAS_stringlist & inOperand4) :
mAttribute_mPreferenceName (inOperand0),
mAttribute_mAttributeListForGeneration (inOperand1),
mAttribute_mDecoratedTransientListForGeneration (inOperand2),
mAttribute_mOutletMap (inOperand3),
mAttribute_mControllerInstanciationStringList (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration_2D_element GALGAS_preferenceListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_preferenceListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                        GALGAS_attributeListForGeneration::constructor_emptyList (HERE),
                                                        GALGAS_transientDefinitionListForGeneration::constructor_emptyList (HERE),
                                                        GALGAS_decoratedOutletMap::constructor_emptyMap (HERE),
                                                        GALGAS_stringlist::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration_2D_element GALGAS_preferenceListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                              const GALGAS_attributeListForGeneration & inOperand1,
                                                                                                              const GALGAS_transientDefinitionListForGeneration & inOperand2,
                                                                                                              const GALGAS_decoratedOutletMap & inOperand3,
                                                                                                              const GALGAS_stringlist & inOperand4 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_preferenceListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_preferenceListForGeneration_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_preferenceListForGeneration_2D_element::objectCompare (const GALGAS_preferenceListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mPreferenceName.objectCompare (inOperand.mAttribute_mPreferenceName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForGeneration.objectCompare (inOperand.mAttribute_mAttributeListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDecoratedTransientListForGeneration.objectCompare (inOperand.mAttribute_mDecoratedTransientListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletMap.objectCompare (inOperand.mAttribute_mOutletMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerInstanciationStringList.objectCompare (inOperand.mAttribute_mControllerInstanciationStringList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_preferenceListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mPreferenceName.isValid () && mAttribute_mAttributeListForGeneration.isValid () && mAttribute_mDecoratedTransientListForGeneration.isValid () && mAttribute_mOutletMap.isValid () && mAttribute_mControllerInstanciationStringList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_preferenceListForGeneration_2D_element::drop (void) {
  mAttribute_mPreferenceName.drop () ;
  mAttribute_mAttributeListForGeneration.drop () ;
  mAttribute_mDecoratedTransientListForGeneration.drop () ;
  mAttribute_mOutletMap.drop () ;
  mAttribute_mControllerInstanciationStringList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_preferenceListForGeneration_2D_element::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "<struct @preferenceListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mPreferenceName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDecoratedTransientListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerInstanciationStringList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_preferenceListForGeneration_2D_element::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferenceName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeListForGeneration GALGAS_preferenceListForGeneration_2D_element::reader_mAttributeListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDefinitionListForGeneration GALGAS_preferenceListForGeneration_2D_element::reader_mDecoratedTransientListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDecoratedTransientListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_decoratedOutletMap GALGAS_preferenceListForGeneration_2D_element::reader_mOutletMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_preferenceListForGeneration_2D_element::reader_mControllerInstanciationStringList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerInstanciationStringList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @preferenceListForGeneration-element type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferenceListForGeneration_2D_element ("preferenceListForGeneration-element",
                                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferenceListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferenceListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferenceListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration_2D_element GALGAS_preferenceListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_preferenceListForGeneration_2D_element result ;
  const GALGAS_preferenceListForGeneration_2D_element * p = (const GALGAS_preferenceListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferenceListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferenceListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element::GALGAS_outletGenerationList_2D_element (void) :
mAttribute_mOutletName (),
mAttribute_mOutletType () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element::~ GALGAS_outletGenerationList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element::GALGAS_outletGenerationList_2D_element (const GALGAS_string & inOperand0,
                                                                                const GALGAS_string & inOperand1) :
mAttribute_mOutletName (inOperand0),
mAttribute_mOutletType (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element GALGAS_outletGenerationList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletGenerationList_2D_element (GALGAS_string::constructor_default (HERE),
                                                 GALGAS_string::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element GALGAS_outletGenerationList_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_string & inOperand1 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_outletGenerationList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletGenerationList_2D_element::objectCompare (const GALGAS_outletGenerationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletType.objectCompare (inOperand.mAttribute_mOutletType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_outletGenerationList_2D_element::isValid (void) const {
  return mAttribute_mOutletName.isValid () && mAttribute_mOutletType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2D_element::drop (void) {
  mAttribute_mOutletName.drop () ;
  mAttribute_mOutletType.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @outletGenerationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2D_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2D_element::reader_mOutletType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @outletGenerationList-element type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList_2D_element ("outletGenerationList-element",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element GALGAS_outletGenerationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2D_element result ;
  const GALGAS_outletGenerationList_2D_element * p = (const GALGAS_outletGenerationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletGenerationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element::GALGAS_entityListForGeneration_2D_element (void) :
mAttribute_mEntityName (),
mAttribute_mSuperEntityName (),
mAttribute_mAttributeListForGeneration (),
mAttribute_mDecoratedTransientListForGeneration (),
mAttribute_mDecoratedEntityRelationshipList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element::~ GALGAS_entityListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element::GALGAS_entityListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                      const GALGAS_string & inOperand1,
                                                                                      const GALGAS_attributeListForGeneration & inOperand2,
                                                                                      const GALGAS_transientDefinitionListForGeneration & inOperand3,
                                                                                      const GALGAS_entityRelationshipListForGeneration & inOperand4) :
mAttribute_mEntityName (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mAttributeListForGeneration (inOperand2),
mAttribute_mDecoratedTransientListForGeneration (inOperand3),
mAttribute_mDecoratedEntityRelationshipList (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element GALGAS_entityListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_entityListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                    GALGAS_string::constructor_default (HERE),
                                                    GALGAS_attributeListForGeneration::constructor_emptyList (HERE),
                                                    GALGAS_transientDefinitionListForGeneration::constructor_emptyList (HERE),
                                                    GALGAS_entityRelationshipListForGeneration::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element GALGAS_entityListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                      const GALGAS_string & inOperand1,
                                                                                                      const GALGAS_attributeListForGeneration & inOperand2,
                                                                                                      const GALGAS_transientDefinitionListForGeneration & inOperand3,
                                                                                                      const GALGAS_entityRelationshipListForGeneration & inOperand4 
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_entityListForGeneration_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityListForGeneration_2D_element::objectCompare (const GALGAS_entityListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mEntityName.objectCompare (inOperand.mAttribute_mEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForGeneration.objectCompare (inOperand.mAttribute_mAttributeListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDecoratedTransientListForGeneration.objectCompare (inOperand.mAttribute_mDecoratedTransientListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDecoratedEntityRelationshipList.objectCompare (inOperand.mAttribute_mDecoratedEntityRelationshipList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_entityListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mEntityName.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mAttributeListForGeneration.isValid () && mAttribute_mDecoratedTransientListForGeneration.isValid () && mAttribute_mDecoratedEntityRelationshipList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_entityListForGeneration_2D_element::drop (void) {
  mAttribute_mEntityName.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mAttributeListForGeneration.drop () ;
  mAttribute_mDecoratedTransientListForGeneration.drop () ;
  mAttribute_mDecoratedEntityRelationshipList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_entityListForGeneration_2D_element::description (C_String & ioString,
                                                             const int32_t inIndentation) const {
  ioString << "<struct @entityListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDecoratedTransientListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDecoratedEntityRelationshipList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration_2D_element::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration_2D_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeListForGeneration GALGAS_entityListForGeneration_2D_element::reader_mAttributeListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDefinitionListForGeneration GALGAS_entityListForGeneration_2D_element::reader_mDecoratedTransientListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDecoratedTransientListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityRelationshipListForGeneration GALGAS_entityListForGeneration_2D_element::reader_mDecoratedEntityRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDecoratedEntityRelationshipList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @entityListForGeneration-element type                                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityListForGeneration_2D_element ("entityListForGeneration-element",
                                                           NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element GALGAS_entityListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration_2D_element result ;
  const GALGAS_entityListForGeneration_2D_element * p = (const GALGAS_entityListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration_2D_element::GALGAS_documentListForGeneration_2D_element (void) :
mAttribute_mDocumentName (),
mAttribute_mRootEntityName (),
mAttribute_mAttributeListForGeneration (),
mAttribute_mDecoratedTransientListForGeneration (),
mAttribute_mOutletMap (),
mAttribute_mControllerInstanciationStringList (),
mAttribute_mDocumentArrayControllerForGeneration (),
mAttribute_mTargetActionList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration_2D_element::~ GALGAS_documentListForGeneration_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration_2D_element::GALGAS_documentListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                          const GALGAS_string & inOperand1,
                                                                                          const GALGAS_attributeListForGeneration & inOperand2,
                                                                                          const GALGAS_transientDefinitionListForGeneration & inOperand3,
                                                                                          const GALGAS_decoratedOutletMap & inOperand4,
                                                                                          const GALGAS_stringlist & inOperand5,
                                                                                          const GALGAS_arrayControllerForGeneration & inOperand6,
                                                                                          const GALGAS_targetActionList & inOperand7) :
mAttribute_mDocumentName (inOperand0),
mAttribute_mRootEntityName (inOperand1),
mAttribute_mAttributeListForGeneration (inOperand2),
mAttribute_mDecoratedTransientListForGeneration (inOperand3),
mAttribute_mOutletMap (inOperand4),
mAttribute_mControllerInstanciationStringList (inOperand5),
mAttribute_mDocumentArrayControllerForGeneration (inOperand6),
mAttribute_mTargetActionList (inOperand7) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration_2D_element GALGAS_documentListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_documentListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                      GALGAS_string::constructor_default (HERE),
                                                      GALGAS_attributeListForGeneration::constructor_emptyList (HERE),
                                                      GALGAS_transientDefinitionListForGeneration::constructor_emptyList (HERE),
                                                      GALGAS_decoratedOutletMap::constructor_emptyMap (HERE),
                                                      GALGAS_stringlist::constructor_emptyList (HERE),
                                                      GALGAS_arrayControllerForGeneration::constructor_emptyList (HERE),
                                                      GALGAS_targetActionList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration_2D_element GALGAS_documentListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                          const GALGAS_string & inOperand1,
                                                                                                          const GALGAS_attributeListForGeneration & inOperand2,
                                                                                                          const GALGAS_transientDefinitionListForGeneration & inOperand3,
                                                                                                          const GALGAS_decoratedOutletMap & inOperand4,
                                                                                                          const GALGAS_stringlist & inOperand5,
                                                                                                          const GALGAS_arrayControllerForGeneration & inOperand6,
                                                                                                          const GALGAS_targetActionList & inOperand7 
                                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_documentListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_documentListForGeneration_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_documentListForGeneration_2D_element::objectCompare (const GALGAS_documentListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDocumentName.objectCompare (inOperand.mAttribute_mDocumentName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootEntityName.objectCompare (inOperand.mAttribute_mRootEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForGeneration.objectCompare (inOperand.mAttribute_mAttributeListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDecoratedTransientListForGeneration.objectCompare (inOperand.mAttribute_mDecoratedTransientListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletMap.objectCompare (inOperand.mAttribute_mOutletMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerInstanciationStringList.objectCompare (inOperand.mAttribute_mControllerInstanciationStringList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDocumentArrayControllerForGeneration.objectCompare (inOperand.mAttribute_mDocumentArrayControllerForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTargetActionList.objectCompare (inOperand.mAttribute_mTargetActionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_documentListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mDocumentName.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mAttributeListForGeneration.isValid () && mAttribute_mDecoratedTransientListForGeneration.isValid () && mAttribute_mOutletMap.isValid () && mAttribute_mControllerInstanciationStringList.isValid () && mAttribute_mDocumentArrayControllerForGeneration.isValid () && mAttribute_mTargetActionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_documentListForGeneration_2D_element::drop (void) {
  mAttribute_mDocumentName.drop () ;
  mAttribute_mRootEntityName.drop () ;
  mAttribute_mAttributeListForGeneration.drop () ;
  mAttribute_mDecoratedTransientListForGeneration.drop () ;
  mAttribute_mOutletMap.drop () ;
  mAttribute_mControllerInstanciationStringList.drop () ;
  mAttribute_mDocumentArrayControllerForGeneration.drop () ;
  mAttribute_mTargetActionList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_documentListForGeneration_2D_element::description (C_String & ioString,
                                                               const int32_t inIndentation) const {
  ioString << "<struct @documentListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDocumentName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDecoratedTransientListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerInstanciationStringList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDocumentArrayControllerForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTargetActionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_documentListForGeneration_2D_element::reader_mDocumentName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDocumentName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_documentListForGeneration_2D_element::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeListForGeneration GALGAS_documentListForGeneration_2D_element::reader_mAttributeListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientDefinitionListForGeneration GALGAS_documentListForGeneration_2D_element::reader_mDecoratedTransientListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDecoratedTransientListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_decoratedOutletMap GALGAS_documentListForGeneration_2D_element::reader_mOutletMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_documentListForGeneration_2D_element::reader_mControllerInstanciationStringList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerInstanciationStringList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration GALGAS_documentListForGeneration_2D_element::reader_mDocumentArrayControllerForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDocumentArrayControllerForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_targetActionList GALGAS_documentListForGeneration_2D_element::reader_mTargetActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetActionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       @documentListForGeneration-element type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentListForGeneration_2D_element ("documentListForGeneration-element",
                                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentListForGeneration_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration_2D_element GALGAS_documentListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_documentListForGeneration_2D_element result ;
  const GALGAS_documentListForGeneration_2D_element * p = (const GALGAS_documentListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("documentListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationStruct::GALGAS_astDeclarationStruct (void) :
mAttribute_mDeclarationList (),
mAttribute_mCursorList (),
mAttribute_mOutletClassDeclarationList (),
mAttribute_mControllerTemplateList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationStruct::~ GALGAS_astDeclarationStruct (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationStruct::GALGAS_astDeclarationStruct (const GALGAS_astDeclarationList & inOperand0,
                                                          const GALGAS_cursorList & inOperand1,
                                                          const GALGAS_outletClassDeclarationList & inOperand2,
                                                          const GALGAS_controllerTemplateList & inOperand3) :
mAttribute_mDeclarationList (inOperand0),
mAttribute_mCursorList (inOperand1),
mAttribute_mOutletClassDeclarationList (inOperand2),
mAttribute_mControllerTemplateList (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationStruct GALGAS_astDeclarationStruct::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_astDeclarationStruct (GALGAS_astDeclarationList::constructor_emptyList (HERE),
                                      GALGAS_cursorList::constructor_emptyList (HERE),
                                      GALGAS_outletClassDeclarationList::constructor_emptyList (HERE),
                                      GALGAS_controllerTemplateList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationStruct GALGAS_astDeclarationStruct::constructor_new (const GALGAS_astDeclarationList & inOperand0,
                                                                          const GALGAS_cursorList & inOperand1,
                                                                          const GALGAS_outletClassDeclarationList & inOperand2,
                                                                          const GALGAS_controllerTemplateList & inOperand3 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_astDeclarationStruct result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_astDeclarationStruct (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_astDeclarationStruct::objectCompare (const GALGAS_astDeclarationStruct & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDeclarationList.objectCompare (inOperand.mAttribute_mDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCursorList.objectCompare (inOperand.mAttribute_mCursorList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassDeclarationList.objectCompare (inOperand.mAttribute_mOutletClassDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerTemplateList.objectCompare (inOperand.mAttribute_mControllerTemplateList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_astDeclarationStruct::isValid (void) const {
  return mAttribute_mDeclarationList.isValid () && mAttribute_mCursorList.isValid () && mAttribute_mOutletClassDeclarationList.isValid () && mAttribute_mControllerTemplateList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_astDeclarationStruct::drop (void) {
  mAttribute_mDeclarationList.drop () ;
  mAttribute_mCursorList.drop () ;
  mAttribute_mOutletClassDeclarationList.drop () ;
  mAttribute_mControllerTemplateList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_astDeclarationStruct::description (C_String & ioString,
                                               const int32_t inIndentation) const {
  ioString << "<struct @astDeclarationStruct:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCursorList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerTemplateList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationList GALGAS_astDeclarationStruct::reader_mDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList GALGAS_astDeclarationStruct::reader_mCursorList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCursorList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList GALGAS_astDeclarationStruct::reader_mOutletClassDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassDeclarationList ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList GALGAS_astDeclarationStruct::reader_mControllerTemplateList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerTemplateList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @astDeclarationStruct type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_astDeclarationStruct ("astDeclarationStruct",
                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_astDeclarationStruct::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_astDeclarationStruct ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_astDeclarationStruct::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_astDeclarationStruct (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_astDeclarationStruct GALGAS_astDeclarationStruct::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_astDeclarationStruct result ;
  const GALGAS_astDeclarationStruct * p = (const GALGAS_astDeclarationStruct *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_astDeclarationStruct *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("astDeclarationStruct", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structForGeneration::GALGAS_structForGeneration (void) :
mAttribute_mTransientListForGeneration (),
mAttribute_mActionListForGeneration (),
mAttribute_mPreferenceListForGeneration (),
mAttribute_mDocumentListForGeneration (),
mAttribute_mEntityListForGeneration (),
mAttribute_mEnumListForGeneration (),
mAttribute_mNeededOutletClasses (),
mAttribute_mControllerGenerationStringSet (),
mAttribute_mAllArrayControllerForGeneration (),
mAttribute_mValidationStubRoutineListForGeneration () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structForGeneration::~ GALGAS_structForGeneration (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structForGeneration::GALGAS_structForGeneration (const GALGAS_transientListForGeneration & inOperand0,
                                                        const GALGAS_actionListForGeneration & inOperand1,
                                                        const GALGAS_preferenceListForGeneration & inOperand2,
                                                        const GALGAS_documentListForGeneration & inOperand3,
                                                        const GALGAS_entityListForGeneration & inOperand4,
                                                        const GALGAS_enumListForGeneration & inOperand5,
                                                        const GALGAS_stringset & inOperand6,
                                                        const GALGAS_stringset & inOperand7,
                                                        const GALGAS_arrayControllerForGeneration & inOperand8,
                                                        const GALGAS_validationStubRoutineListForGeneration & inOperand9) :
mAttribute_mTransientListForGeneration (inOperand0),
mAttribute_mActionListForGeneration (inOperand1),
mAttribute_mPreferenceListForGeneration (inOperand2),
mAttribute_mDocumentListForGeneration (inOperand3),
mAttribute_mEntityListForGeneration (inOperand4),
mAttribute_mEnumListForGeneration (inOperand5),
mAttribute_mNeededOutletClasses (inOperand6),
mAttribute_mControllerGenerationStringSet (inOperand7),
mAttribute_mAllArrayControllerForGeneration (inOperand8),
mAttribute_mValidationStubRoutineListForGeneration (inOperand9) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structForGeneration GALGAS_structForGeneration::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_structForGeneration (GALGAS_transientListForGeneration::constructor_emptyList (HERE),
                                     GALGAS_actionListForGeneration::constructor_emptyList (HERE),
                                     GALGAS_preferenceListForGeneration::constructor_emptyList (HERE),
                                     GALGAS_documentListForGeneration::constructor_emptyList (HERE),
                                     GALGAS_entityListForGeneration::constructor_emptyList (HERE),
                                     GALGAS_enumListForGeneration::constructor_emptyList (HERE),
                                     GALGAS_stringset::constructor_emptySet (HERE),
                                     GALGAS_stringset::constructor_emptySet (HERE),
                                     GALGAS_arrayControllerForGeneration::constructor_emptyList (HERE),
                                     GALGAS_validationStubRoutineListForGeneration::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structForGeneration GALGAS_structForGeneration::constructor_new (const GALGAS_transientListForGeneration & inOperand0,
                                                                        const GALGAS_actionListForGeneration & inOperand1,
                                                                        const GALGAS_preferenceListForGeneration & inOperand2,
                                                                        const GALGAS_documentListForGeneration & inOperand3,
                                                                        const GALGAS_entityListForGeneration & inOperand4,
                                                                        const GALGAS_enumListForGeneration & inOperand5,
                                                                        const GALGAS_stringset & inOperand6,
                                                                        const GALGAS_stringset & inOperand7,
                                                                        const GALGAS_arrayControllerForGeneration & inOperand8,
                                                                        const GALGAS_validationStubRoutineListForGeneration & inOperand9 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_structForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid ()) {
    result = GALGAS_structForGeneration (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_structForGeneration::objectCompare (const GALGAS_structForGeneration & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForGeneration.objectCompare (inOperand.mAttribute_mTransientListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionListForGeneration.objectCompare (inOperand.mAttribute_mActionListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPreferenceListForGeneration.objectCompare (inOperand.mAttribute_mPreferenceListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDocumentListForGeneration.objectCompare (inOperand.mAttribute_mDocumentListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEntityListForGeneration.objectCompare (inOperand.mAttribute_mEntityListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumListForGeneration.objectCompare (inOperand.mAttribute_mEnumListForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mNeededOutletClasses.objectCompare (inOperand.mAttribute_mNeededOutletClasses) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerGenerationStringSet.objectCompare (inOperand.mAttribute_mControllerGenerationStringSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllArrayControllerForGeneration.objectCompare (inOperand.mAttribute_mAllArrayControllerForGeneration) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mValidationStubRoutineListForGeneration.objectCompare (inOperand.mAttribute_mValidationStubRoutineListForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_structForGeneration::isValid (void) const {
  return mAttribute_mTransientListForGeneration.isValid () && mAttribute_mActionListForGeneration.isValid () && mAttribute_mPreferenceListForGeneration.isValid () && mAttribute_mDocumentListForGeneration.isValid () && mAttribute_mEntityListForGeneration.isValid () && mAttribute_mEnumListForGeneration.isValid () && mAttribute_mNeededOutletClasses.isValid () && mAttribute_mControllerGenerationStringSet.isValid () && mAttribute_mAllArrayControllerForGeneration.isValid () && mAttribute_mValidationStubRoutineListForGeneration.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_structForGeneration::drop (void) {
  mAttribute_mTransientListForGeneration.drop () ;
  mAttribute_mActionListForGeneration.drop () ;
  mAttribute_mPreferenceListForGeneration.drop () ;
  mAttribute_mDocumentListForGeneration.drop () ;
  mAttribute_mEntityListForGeneration.drop () ;
  mAttribute_mEnumListForGeneration.drop () ;
  mAttribute_mNeededOutletClasses.drop () ;
  mAttribute_mControllerGenerationStringSet.drop () ;
  mAttribute_mAllArrayControllerForGeneration.drop () ;
  mAttribute_mValidationStubRoutineListForGeneration.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_structForGeneration::description (C_String & ioString,
                                              const int32_t inIndentation) const {
  ioString << "<struct @structForGeneration:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTransientListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPreferenceListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDocumentListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEntityListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumListForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mNeededOutletClasses.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerGenerationStringSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllArrayControllerForGeneration.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mValidationStubRoutineListForGeneration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientListForGeneration GALGAS_structForGeneration::reader_mTransientListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionListForGeneration GALGAS_structForGeneration::reader_mActionListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_preferenceListForGeneration GALGAS_structForGeneration::reader_mPreferenceListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferenceListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_documentListForGeneration GALGAS_structForGeneration::reader_mDocumentListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDocumentListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_structForGeneration::reader_mEntityListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enumListForGeneration GALGAS_structForGeneration::reader_mEnumListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumListForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_structForGeneration::reader_mNeededOutletClasses (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNeededOutletClasses ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_stringset GALGAS_structForGeneration::reader_mControllerGenerationStringSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerGenerationStringSet ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerForGeneration GALGAS_structForGeneration::reader_mAllArrayControllerForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllArrayControllerForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_validationStubRoutineListForGeneration GALGAS_structForGeneration::reader_mValidationStubRoutineListForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mValidationStubRoutineListForGeneration ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @structForGeneration type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structForGeneration ("structForGeneration",
                                            NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structForGeneration ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structForGeneration GALGAS_structForGeneration::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_structForGeneration result ;
  const GALGAS_structForGeneration * p = (const GALGAS_structForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                Category Reader '@unifiedTypeMap-proxy swiftTypeName'                                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_swiftTypeName (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 15)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("Bool") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("UInt") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("Int") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("Double") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = GALGAS_string ("String") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSColor") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 28)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<invalid return type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 31)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 31)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 31)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Category Reader '@unifiedTypeMap-proxy valueAccessorForExplorerWindow'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_valueAccessorForExplorerWindow (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                             const GALGAS_string & constinArgument_inPropertyName,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 38)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("NSString (format:\"%s\", ").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 39)).add_operation (GALGAS_string (".value \? \"true\" : \"false\") as! String"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 39)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("NSString (format:\"%lu\", ").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 40)).add_operation (GALGAS_string (".value) as! String"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 40)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("NSString (format:\"%ld\", ").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 41)).add_operation (GALGAS_string (".value) as! String"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 41)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("NSString (format:\"%g\", ").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 42)).add_operation (GALGAS_string (".value) as! String"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 42)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = constinArgument_inPropertyName.add_operation (GALGAS_string (".value"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 43)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = constinArgument_inPropertyName.add_operation (GALGAS_string (".value.description"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 44)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = constinArgument_inPropertyName.add_operation (GALGAS_string (".value.string ()"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 49)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 52)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 55)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 55)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 55)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Category Reader '@unifiedTypeMap-proxy transformForSavingInDictionary'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_transformForSavingInDictionary (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                             const GALGAS_string & constinArgument_inPropertyName,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 62)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("NSNumber (bool:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 63)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 63)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("NSNumber (unsignedInteger:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 64)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 64)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("NSNumber (integer:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 65)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 65)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("NSNumber (double:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 66)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 66)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = constinArgument_inPropertyName.add_operation (GALGAS_string (".value"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 67)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSArchiver.archivedDataWithRootObject (").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 68)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 68)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("NSNumber (integer:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 75)).add_operation (GALGAS_string (".value.rawValue)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 75)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 76)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 79)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 79)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 79)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                    Category Reader '@unifiedTypeMap-proxy transformerForRegisterUndoWithTarget'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_transformerForRegisterUndoWithTarget (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                                   const GALGAS_string & constinArgument_inOldValue,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 86)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("NSNumber (bool:").add_operation (constinArgument_inOldValue, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 87)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 87)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("NSNumber (unsignedInteger:").add_operation (constinArgument_inOldValue, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 88)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 88)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("NSNumber (integer:").add_operation (constinArgument_inOldValue, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 89)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 89)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("NSNumber (double:").add_operation (constinArgument_inOldValue, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 90)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 90)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = constinArgument_inOldValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("NSNumber (integer:").add_operation (constinArgument_inOldValue, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 97)).add_operation (GALGAS_string (".rawValue)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 97)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 99)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 102)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 102)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 102)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                            Category Reader '@unifiedTypeMap-proxy swiftTypeUndoArgument'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_swiftTypeUndoArgument (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 109)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("NSNumber") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("NSNumber") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("NSNumber") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("NSNumber") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = GALGAS_string ("String") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSColor") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("NSNumber") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      result_outResult = GALGAS_string ("NSNumber") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 126)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 126)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 126)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                             Category Reader '@unifiedTypeMap-proxy transformerForUndo'                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_transformerForUndo (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                 const GALGAS_string & constinArgument_inValue,
                                                 C_Compiler * inCompiler
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 133)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = constinArgument_inValue.add_operation (GALGAS_string (".boolValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 134)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = constinArgument_inValue.add_operation (GALGAS_string (".unsignedIntegerValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 135)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = constinArgument_inValue.add_operation (GALGAS_string (".integerValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 136)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = constinArgument_inValue.add_operation (GALGAS_string (".doubleValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 137)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = constinArgument_inValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = constinArgument_inValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = constinArgument_inValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = constinArgument_inValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = constinArgument_inValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = constinArgument_inValue ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 144)).add_operation (GALGAS_string (" (rawValue:"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 144)).add_operation (constinArgument_inValue, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 144)).add_operation (GALGAS_string (".integerValue)!"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 144)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 146)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_3 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_3.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 149)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 149)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 149)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Category Reader '@unifiedTypeMap-proxy typeNameForControllerTemplateName'                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_typeNameForControllerTemplateName (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 156)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("Enum") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
  case GALGAS_typeKind::kEnum_bezierPathType:
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_menuType:
  case GALGAS_typeKind::kEnum_fontType:
  case GALGAS_typeKind::kEnum_imageType:
  case GALGAS_typeKind::kEnum_dateType:
  case GALGAS_typeKind::kEnum_dataType:
  case GALGAS_typeKind::kEnum_stringType:
  case GALGAS_typeKind::kEnum_colorType:
  case GALGAS_typeKind::kEnum_doubleType:
  case GALGAS_typeKind::kEnum_integerType:
  case GALGAS_typeKind::kEnum_uintegerType:
  case GALGAS_typeKind::kEnum_boolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 162)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Category Reader '@unifiedTypeMap-proxy transformerForTableViewAction'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_transformerForTableViewAction (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                            const GALGAS_string & constinArgument_inSenderOutletName,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 169)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = constinArgument_inSenderOutletName.add_operation (GALGAS_string (".stringValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 170)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = constinArgument_inSenderOutletName.add_operation (GALGAS_string (".integerValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 171)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("NSNumber (bool:").add_operation (constinArgument_inSenderOutletName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 173)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 173)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("NSNumber (unsignedLongLong:").add_operation (constinArgument_inSenderOutletName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 174)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 174)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("NSNumber (double:").add_operation (constinArgument_inSenderOutletName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 175)).add_operation (GALGAS_string (")"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 175)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = constinArgument_inSenderOutletName.add_operation (GALGAS_string (".stringValue"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 176)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("NSNumber (integer:").add_operation (constinArgument_inSenderOutletName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 182)).add_operation (GALGAS_string (".rawValue)"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 182)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 184)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 187)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 187)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 187)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                      Category Reader '@unifiedTypeMap-proxy formatterStringForFormatPrinting'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_formatterStringForFormatPrinting (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 194)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("%d") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("%d") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("%u") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("%g") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("%d") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("%@") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 209)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 212)), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 212)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.galgas", 212)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Category Reader '@unifiedTypeMap-proxy preferencesSwiftGetter'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_preferencesSwiftGetter (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 36)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("(value as! NSNumber).boolValue") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("(value as! NSNumber).integerValue") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = GALGAS_string ("value as! String") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSUnarchiver.unarchiveObjectWithData (value as! NSData) as! NSColor") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("value as! NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftGetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = GALGAS_string ("<invalid type '").add_operation (temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 52)), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 52)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 52)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Category Reader '@unifiedTypeMap-proxy preferencesSwiftSetter'                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_preferencesSwiftSetter (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                     const GALGAS_string & constinArgument_inPropertyName,
                                                     C_Compiler * inCompiler
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 61)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("NSNumber (bool:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 62)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 62)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("NSNumber (integer:").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 64)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 64)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSArchiver.archivedDataWithRootObject (").add_operation (constinArgument_inPropertyName, inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 66)).add_operation (GALGAS_string (".value)"), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 66)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = constinArgument_inPropertyName.add_operation (GALGAS_string (".value"), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 68)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
    {
      result_outResult = GALGAS_string ("\xC3""\xA0"" compl\xC3""\xA9""ter preferencesSwiftSetter") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = GALGAS_string ("<invalid type '").add_operation (temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 76)), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 76)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("preferencesGeneration.galgas", 76)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Category Reader '@unifiedTypeMap-proxy transientReturnTypeName'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_transientReturnTypeName (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 6)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("Bool") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("UInt") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("Int") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("Double") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = GALGAS_string ("String") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSColor") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 19)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_entityType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<invalid return type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 22)), inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 22)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 22)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                       Category Reader '@unifiedTypeMap-proxy transientFormalArgumentTypeName'                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string categoryReader_transientFormalArgumentTypeName (const GALGAS_unifiedTypeMap_2D_proxy & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const GALGAS_unifiedTypeMap_2D_proxy temp_0 = inObject ;
  switch (temp_0.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 29)).enumValue ()) {
  case GALGAS_typeKind::kNotBuilt:
    break ;
  case GALGAS_typeKind::kEnum_boolType:
    {
      result_outResult = GALGAS_string ("Bool") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_uintegerType:
    {
      result_outResult = GALGAS_string ("UInt") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_integerType:
    {
      result_outResult = GALGAS_string ("Int") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_doubleType:
    {
      result_outResult = GALGAS_string ("Double") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_stringType:
    {
      result_outResult = GALGAS_string ("String") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_colorType:
    {
      result_outResult = GALGAS_string ("NSColor") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dataType:
    {
      result_outResult = GALGAS_string ("NSData") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_dateType:
    {
      result_outResult = GALGAS_string ("NSDate") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_imageType:
    {
      result_outResult = GALGAS_string ("NSImage") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_fontType:
    {
      result_outResult = GALGAS_string ("NSFont") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_menuType:
    {
      result_outResult = GALGAS_string ("NSMenu") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_bezierPathType:
    {
      result_outResult = GALGAS_string ("NSBezierPath") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_entityType:
    {
      result_outResult = GALGAS_string ("Int") ;
    }
    break ;
  case GALGAS_typeKind::kEnum_structType:
  case GALGAS_typeKind::kEnum_enumType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_1 = inObject ;
      result_outResult = temp_1.reader_key (inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 43)) ;
    }
    break ;
  case GALGAS_typeKind::kEnum_classType:
  case GALGAS_typeKind::kEnum_controllerClassType:
  case GALGAS_typeKind::kEnum_documentType:
  case GALGAS_typeKind::kEnum_preferencesType:
  case GALGAS_typeKind::kEnum_nibClassType:
  case GALGAS_typeKind::kEnum_outletClassType:
  case GALGAS_typeKind::kEnum_protocolType:
    {
      const GALGAS_unifiedTypeMap_2D_proxy temp_2 = inObject ;
      result_outResult = GALGAS_string ("<invalid return type '").add_operation (temp_2.reader_key (inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 46)), inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 46)).add_operation (GALGAS_string ("' >"), inCompiler COMMA_SOURCE_FILE ("transientGeneration.galgas", 46)) ;
    }
    break ;
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList_2D_element::GALGAS_controllerBindingOptionList_2D_element (void) :
mAttribute_mOptionName (),
mAttribute_mOptionTypeName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList_2D_element::~ GALGAS_controllerBindingOptionList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList_2D_element::GALGAS_controllerBindingOptionList_2D_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_lstring & inOperand1) :
mAttribute_mOptionName (inOperand0),
mAttribute_mOptionTypeName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList_2D_element GALGAS_controllerBindingOptionList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerBindingOptionList_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList_2D_element GALGAS_controllerBindingOptionList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_lstring & inOperand1 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerBindingOptionList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_controllerBindingOptionList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerBindingOptionList_2D_element::objectCompare (const GALGAS_controllerBindingOptionList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOptionName.objectCompare (inOperand.mAttribute_mOptionName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionTypeName.objectCompare (inOperand.mAttribute_mOptionTypeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_controllerBindingOptionList_2D_element::isValid (void) const {
  return mAttribute_mOptionName.isValid () && mAttribute_mOptionTypeName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionList_2D_element::drop (void) {
  mAttribute_mOptionName.drop () ;
  mAttribute_mOptionTypeName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionList_2D_element::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "<struct @controllerBindingOptionList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOptionName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionTypeName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerBindingOptionList_2D_element::reader_mOptionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerBindingOptionList_2D_element::reader_mOptionTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionTypeName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @controllerBindingOptionList-element type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerBindingOptionList_2D_element ("controllerBindingOptionList-element",
                                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerBindingOptionList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerBindingOptionList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerBindingOptionList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerBindingOptionList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList_2D_element GALGAS_controllerBindingOptionList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_controllerBindingOptionList_2D_element result ;
  const GALGAS_controllerBindingOptionList_2D_element * p = (const GALGAS_controllerBindingOptionList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerBindingOptionList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerBindingOptionList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList_2D_element::GALGAS_controllerTemplateList_2D_element (void) :
mAttribute_mIsUserDefined (),
mAttribute_mOutletClassName (),
mAttribute_mBindingName (),
mAttribute_mModelTypeName (),
mAttribute_mModelSelector (),
mAttribute_mModelShouldBeWritableProperty (),
mAttribute_mBindingOptionList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList_2D_element::~ GALGAS_controllerTemplateList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList_2D_element::GALGAS_controllerTemplateList_2D_element (const GALGAS_bool & inOperand0,
                                                                                    const GALGAS_lstring & inOperand1,
                                                                                    const GALGAS_lstring & inOperand2,
                                                                                    const GALGAS_lstring & inOperand3,
                                                                                    const GALGAS_lstring & inOperand4,
                                                                                    const GALGAS_bool & inOperand5,
                                                                                    const GALGAS_controllerBindingOptionList & inOperand6) :
mAttribute_mIsUserDefined (inOperand0),
mAttribute_mOutletClassName (inOperand1),
mAttribute_mBindingName (inOperand2),
mAttribute_mModelTypeName (inOperand3),
mAttribute_mModelSelector (inOperand4),
mAttribute_mModelShouldBeWritableProperty (inOperand5),
mAttribute_mBindingOptionList (inOperand6) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList_2D_element GALGAS_controllerTemplateList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerTemplateList_2D_element (GALGAS_bool::constructor_default (HERE),
                                                   GALGAS_lstring::constructor_default (HERE),
                                                   GALGAS_lstring::constructor_default (HERE),
                                                   GALGAS_lstring::constructor_default (HERE),
                                                   GALGAS_lstring::constructor_default (HERE),
                                                   GALGAS_bool::constructor_default (HERE),
                                                   GALGAS_controllerBindingOptionList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList_2D_element GALGAS_controllerTemplateList_2D_element::constructor_new (const GALGAS_bool & inOperand0,
                                                                                                    const GALGAS_lstring & inOperand1,
                                                                                                    const GALGAS_lstring & inOperand2,
                                                                                                    const GALGAS_lstring & inOperand3,
                                                                                                    const GALGAS_lstring & inOperand4,
                                                                                                    const GALGAS_bool & inOperand5,
                                                                                                    const GALGAS_controllerBindingOptionList & inOperand6 
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerTemplateList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result = GALGAS_controllerTemplateList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerTemplateList_2D_element::objectCompare (const GALGAS_controllerTemplateList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mIsUserDefined.objectCompare (inOperand.mAttribute_mIsUserDefined) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassName.objectCompare (inOperand.mAttribute_mOutletClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingName.objectCompare (inOperand.mAttribute_mBindingName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelTypeName.objectCompare (inOperand.mAttribute_mModelTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelSelector.objectCompare (inOperand.mAttribute_mModelSelector) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelShouldBeWritableProperty.objectCompare (inOperand.mAttribute_mModelShouldBeWritableProperty) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingOptionList.objectCompare (inOperand.mAttribute_mBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_controllerTemplateList_2D_element::isValid (void) const {
  return mAttribute_mIsUserDefined.isValid () && mAttribute_mOutletClassName.isValid () && mAttribute_mBindingName.isValid () && mAttribute_mModelTypeName.isValid () && mAttribute_mModelSelector.isValid () && mAttribute_mModelShouldBeWritableProperty.isValid () && mAttribute_mBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerTemplateList_2D_element::drop (void) {
  mAttribute_mIsUserDefined.drop () ;
  mAttribute_mOutletClassName.drop () ;
  mAttribute_mBindingName.drop () ;
  mAttribute_mModelTypeName.drop () ;
  mAttribute_mModelSelector.drop () ;
  mAttribute_mModelShouldBeWritableProperty.drop () ;
  mAttribute_mBindingOptionList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerTemplateList_2D_element::description (C_String & ioString,
                                                            const int32_t inIndentation) const {
  ioString << "<struct @controllerTemplateList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mIsUserDefined.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelSelector.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelShouldBeWritableProperty.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerTemplateList_2D_element::reader_mIsUserDefined (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsUserDefined ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerTemplateList_2D_element::reader_mOutletClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerTemplateList_2D_element::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerTemplateList_2D_element::reader_mModelTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerTemplateList_2D_element::reader_mModelSelector (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerTemplateList_2D_element::reader_mModelShouldBeWritableProperty (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelShouldBeWritableProperty ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionList GALGAS_controllerTemplateList_2D_element::reader_mBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingOptionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        @controllerTemplateList-element type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerTemplateList_2D_element ("controllerTemplateList-element",
                                                          NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerTemplateList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerTemplateList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerTemplateList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerTemplateList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerTemplateList_2D_element GALGAS_controllerTemplateList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_controllerTemplateList_2D_element result ;
  const GALGAS_controllerTemplateList_2D_element * p = (const GALGAS_controllerTemplateList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerTemplateList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerTemplateList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList_2D_element::GALGAS_bindingOptionList_2D_element (void) :
mAttribute_mOptionName (),
mAttribute_mOptionValue () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList_2D_element::~ GALGAS_bindingOptionList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList_2D_element::GALGAS_bindingOptionList_2D_element (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_abstractDefaultValue & inOperand1) :
mAttribute_mOptionName (inOperand0),
mAttribute_mOptionValue (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList_2D_element GALGAS_bindingOptionList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                          const GALGAS_abstractDefaultValue & inOperand1 
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bindingOptionList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_bindingOptionList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_bindingOptionList_2D_element::objectCompare (const GALGAS_bindingOptionList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOptionName.objectCompare (inOperand.mAttribute_mOptionName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionValue.objectCompare (inOperand.mAttribute_mOptionValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_bindingOptionList_2D_element::isValid (void) const {
  return mAttribute_mOptionName.isValid () && mAttribute_mOptionValue.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bindingOptionList_2D_element::drop (void) {
  mAttribute_mOptionName.drop () ;
  mAttribute_mOptionValue.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bindingOptionList_2D_element::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "<struct @bindingOptionList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOptionName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_bindingOptionList_2D_element::reader_mOptionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDefaultValue GALGAS_bindingOptionList_2D_element::reader_mOptionValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionValue ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @bindingOptionList-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bindingOptionList_2D_element ("bindingOptionList-element",
                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bindingOptionList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bindingOptionList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bindingOptionList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bindingOptionList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList_2D_element GALGAS_bindingOptionList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_bindingOptionList_2D_element result ;
  const GALGAS_bindingOptionList_2D_element * p = (const GALGAS_bindingOptionList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bindingOptionList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bindingOptionList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList_2D_element::GALGAS_bindingList_2D_element (void) :
mAttribute_mSelectorName (),
mAttribute_mObservableProperty (),
mAttribute_mOutletName (),
mAttribute_mBindingName (),
mAttribute_mBindingOptionList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList_2D_element::~ GALGAS_bindingList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList_2D_element::GALGAS_bindingList_2D_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_abstractObservablePropertyAST & inOperand1,
                                                              const GALGAS_lstring & inOperand2,
                                                              const GALGAS_lstring & inOperand3,
                                                              const GALGAS_bindingOptionList & inOperand4) :
mAttribute_mSelectorName (inOperand0),
mAttribute_mObservableProperty (inOperand1),
mAttribute_mOutletName (inOperand2),
mAttribute_mBindingName (inOperand3),
mAttribute_mBindingOptionList (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList_2D_element GALGAS_bindingList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_abstractObservablePropertyAST & inOperand1,
                                                                              const GALGAS_lstring & inOperand2,
                                                                              const GALGAS_lstring & inOperand3,
                                                                              const GALGAS_bindingOptionList & inOperand4 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bindingList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_bindingList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_bindingList_2D_element::objectCompare (const GALGAS_bindingList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mSelectorName.objectCompare (inOperand.mAttribute_mSelectorName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableProperty.objectCompare (inOperand.mAttribute_mObservableProperty) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingName.objectCompare (inOperand.mAttribute_mBindingName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingOptionList.objectCompare (inOperand.mAttribute_mBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_bindingList_2D_element::isValid (void) const {
  return mAttribute_mSelectorName.isValid () && mAttribute_mObservableProperty.isValid () && mAttribute_mOutletName.isValid () && mAttribute_mBindingName.isValid () && mAttribute_mBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bindingList_2D_element::drop (void) {
  mAttribute_mSelectorName.drop () ;
  mAttribute_mObservableProperty.drop () ;
  mAttribute_mOutletName.drop () ;
  mAttribute_mBindingName.drop () ;
  mAttribute_mBindingOptionList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_bindingList_2D_element::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "<struct @bindingList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mSelectorName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableProperty.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_bindingList_2D_element::reader_mSelectorName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelectorName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST GALGAS_bindingList_2D_element::reader_mObservableProperty (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableProperty ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_bindingList_2D_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_bindingList_2D_element::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList GALGAS_bindingList_2D_element::reader_mBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingOptionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @bindingList-element type                                              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bindingList_2D_element ("bindingList-element",
                                               NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bindingList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bindingList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bindingList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bindingList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingList_2D_element GALGAS_bindingList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_bindingList_2D_element result ;
  const GALGAS_bindingList_2D_element * p = (const GALGAS_bindingList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bindingList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bindingList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList_2D_element::GALGAS_outletClassDeclarationList_2D_element (void) :
mAttribute_mUserDefined (),
mAttribute_mOutletClassName (),
mAttribute_mHasRunAction (),
mAttribute_mHasEnabled () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList_2D_element::~ GALGAS_outletClassDeclarationList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList_2D_element::GALGAS_outletClassDeclarationList_2D_element (const GALGAS_bool & inOperand0,
                                                                                            const GALGAS_lstring & inOperand1,
                                                                                            const GALGAS_bool & inOperand2,
                                                                                            const GALGAS_bool & inOperand3) :
mAttribute_mUserDefined (inOperand0),
mAttribute_mOutletClassName (inOperand1),
mAttribute_mHasRunAction (inOperand2),
mAttribute_mHasEnabled (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList_2D_element GALGAS_outletClassDeclarationList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassDeclarationList_2D_element (GALGAS_bool::constructor_default (HERE),
                                                       GALGAS_lstring::constructor_default (HERE),
                                                       GALGAS_bool::constructor_default (HERE),
                                                       GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList_2D_element GALGAS_outletClassDeclarationList_2D_element::constructor_new (const GALGAS_bool & inOperand0,
                                                                                                            const GALGAS_lstring & inOperand1,
                                                                                                            const GALGAS_bool & inOperand2,
                                                                                                            const GALGAS_bool & inOperand3 
                                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassDeclarationList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_outletClassDeclarationList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassDeclarationList_2D_element::objectCompare (const GALGAS_outletClassDeclarationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mUserDefined.objectCompare (inOperand.mAttribute_mUserDefined) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassName.objectCompare (inOperand.mAttribute_mOutletClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasRunAction.objectCompare (inOperand.mAttribute_mHasRunAction) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasEnabled.objectCompare (inOperand.mAttribute_mHasEnabled) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_outletClassDeclarationList_2D_element::isValid (void) const {
  return mAttribute_mUserDefined.isValid () && mAttribute_mOutletClassName.isValid () && mAttribute_mHasRunAction.isValid () && mAttribute_mHasEnabled.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_outletClassDeclarationList_2D_element::drop (void) {
  mAttribute_mUserDefined.drop () ;
  mAttribute_mOutletClassName.drop () ;
  mAttribute_mHasRunAction.drop () ;
  mAttribute_mHasEnabled.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_outletClassDeclarationList_2D_element::description (C_String & ioString,
                                                                const int32_t inIndentation) const {
  ioString << "<struct @outletClassDeclarationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mUserDefined.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasRunAction.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasEnabled.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassDeclarationList_2D_element::reader_mUserDefined (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUserDefined ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassDeclarationList_2D_element::reader_mOutletClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassDeclarationList_2D_element::reader_mHasRunAction (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasRunAction ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassDeclarationList_2D_element::reader_mHasEnabled (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasEnabled ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                      @outletClassDeclarationList-element type                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassDeclarationList_2D_element ("outletClassDeclarationList-element",
                                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassDeclarationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassDeclarationList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassDeclarationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassDeclarationList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletClassDeclarationList_2D_element GALGAS_outletClassDeclarationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                          C_Compiler * inCompiler
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassDeclarationList_2D_element result ;
  const GALGAS_outletClassDeclarationList_2D_element * p = (const GALGAS_outletClassDeclarationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassDeclarationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassDeclarationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList_2D_element::GALGAS_attributeList_2D_element (void) :
mAttribute_mAttributeTypeName (),
mAttribute_mAttributeName (),
mAttribute_mDefaultValue (),
mAttribute_mNeedsValidation () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList_2D_element::~ GALGAS_attributeList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList_2D_element::GALGAS_attributeList_2D_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_lstring & inOperand1,
                                                                  const GALGAS_abstractDefaultValue & inOperand2,
                                                                  const GALGAS_bool & inOperand3) :
mAttribute_mAttributeTypeName (inOperand0),
mAttribute_mAttributeName (inOperand1),
mAttribute_mDefaultValue (inOperand2),
mAttribute_mNeedsValidation (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList_2D_element GALGAS_attributeList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_lstring & inOperand1,
                                                                                  const GALGAS_abstractDefaultValue & inOperand2,
                                                                                  const GALGAS_bool & inOperand3 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_attributeList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeList_2D_element::objectCompare (const GALGAS_attributeList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeTypeName.objectCompare (inOperand.mAttribute_mAttributeTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeName.objectCompare (inOperand.mAttribute_mAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValue.objectCompare (inOperand.mAttribute_mDefaultValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mNeedsValidation.objectCompare (inOperand.mAttribute_mNeedsValidation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_attributeList_2D_element::isValid (void) const {
  return mAttribute_mAttributeTypeName.isValid () && mAttribute_mAttributeName.isValid () && mAttribute_mDefaultValue.isValid () && mAttribute_mNeedsValidation.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeList_2D_element::drop (void) {
  mAttribute_mAttributeTypeName.drop () ;
  mAttribute_mAttributeName.drop () ;
  mAttribute_mDefaultValue.drop () ;
  mAttribute_mNeedsValidation.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_attributeList_2D_element::description (C_String & ioString,
                                                   const int32_t inIndentation) const {
  ioString << "<struct @attributeList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mAttributeTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDefaultValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mNeedsValidation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_attributeList_2D_element::reader_mAttributeTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_attributeList_2D_element::reader_mAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractDefaultValue GALGAS_attributeList_2D_element::reader_mDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValue ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_attributeList_2D_element::reader_mNeedsValidation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNeedsValidation ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @attributeList-element type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeList_2D_element ("attributeList-element",
                                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_attributeList_2D_element GALGAS_attributeList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_attributeList_2D_element result ;
  const GALGAS_attributeList_2D_element * p = (const GALGAS_attributeList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList_2D_element::GALGAS_relationshipList_2D_element (void) :
mAttribute_mIsToMany (),
mAttribute_mDestinationEntityName (),
mAttribute_mRelationshipName (),
mAttribute_mInverseRelationshipName (),
mAttribute_mInverseRelationIsToMany () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList_2D_element::~ GALGAS_relationshipList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList_2D_element::GALGAS_relationshipList_2D_element (const GALGAS_bool & inOperand0,
                                                                        const GALGAS_lstring & inOperand1,
                                                                        const GALGAS_lstring & inOperand2,
                                                                        const GALGAS_lstring & inOperand3,
                                                                        const GALGAS_bool & inOperand4) :
mAttribute_mIsToMany (inOperand0),
mAttribute_mDestinationEntityName (inOperand1),
mAttribute_mRelationshipName (inOperand2),
mAttribute_mInverseRelationshipName (inOperand3),
mAttribute_mInverseRelationIsToMany (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList_2D_element GALGAS_relationshipList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_relationshipList_2D_element (GALGAS_bool::constructor_default (HERE),
                                             GALGAS_lstring::constructor_default (HERE),
                                             GALGAS_lstring::constructor_default (HERE),
                                             GALGAS_lstring::constructor_default (HERE),
                                             GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList_2D_element GALGAS_relationshipList_2D_element::constructor_new (const GALGAS_bool & inOperand0,
                                                                                        const GALGAS_lstring & inOperand1,
                                                                                        const GALGAS_lstring & inOperand2,
                                                                                        const GALGAS_lstring & inOperand3,
                                                                                        const GALGAS_bool & inOperand4 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_relationshipList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_relationshipList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_relationshipList_2D_element::objectCompare (const GALGAS_relationshipList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mIsToMany.objectCompare (inOperand.mAttribute_mIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDestinationEntityName.objectCompare (inOperand.mAttribute_mDestinationEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRelationshipName.objectCompare (inOperand.mAttribute_mRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseRelationshipName.objectCompare (inOperand.mAttribute_mInverseRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseRelationIsToMany.objectCompare (inOperand.mAttribute_mInverseRelationIsToMany) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_relationshipList_2D_element::isValid (void) const {
  return mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mRelationshipName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mInverseRelationIsToMany.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_relationshipList_2D_element::drop (void) {
  mAttribute_mIsToMany.drop () ;
  mAttribute_mDestinationEntityName.drop () ;
  mAttribute_mRelationshipName.drop () ;
  mAttribute_mInverseRelationshipName.drop () ;
  mAttribute_mInverseRelationIsToMany.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_relationshipList_2D_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @relationshipList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDestinationEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseRelationIsToMany.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipList_2D_element::reader_mIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipList_2D_element::reader_mDestinationEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipList_2D_element::reader_mRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRelationshipName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipList_2D_element::reader_mInverseRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipList_2D_element::reader_mInverseRelationIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseRelationIsToMany ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                           @relationshipList-element type                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipList_2D_element ("relationshipList-element",
                                                    NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_relationshipList_2D_element GALGAS_relationshipList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_relationshipList_2D_element result ;
  const GALGAS_relationshipList_2D_element * p = (const GALGAS_relationshipList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("relationshipList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList_2D_element::GALGAS_outletDeclarationList_2D_element (void) :
mAttribute_mOutletType (),
mAttribute_mOutletName (),
mAttribute_mRunDescriptor (),
mAttribute_mEnabledBindingDescriptor () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList_2D_element::~ GALGAS_outletDeclarationList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList_2D_element::GALGAS_outletDeclarationList_2D_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_lstring & inOperand1,
                                                                                  const GALGAS_runActionDescriptor & inOperand2,
                                                                                  const GALGAS_enabledBindingDescriptor & inOperand3) :
mAttribute_mOutletType (inOperand0),
mAttribute_mOutletName (inOperand1),
mAttribute_mRunDescriptor (inOperand2),
mAttribute_mEnabledBindingDescriptor (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList_2D_element GALGAS_outletDeclarationList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_lstring & inOperand1,
                                                                                                  const GALGAS_runActionDescriptor & inOperand2,
                                                                                                  const GALGAS_enabledBindingDescriptor & inOperand3 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletDeclarationList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_outletDeclarationList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletDeclarationList_2D_element::objectCompare (const GALGAS_outletDeclarationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOutletType.objectCompare (inOperand.mAttribute_mOutletType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRunDescriptor.objectCompare (inOperand.mAttribute_mRunDescriptor) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnabledBindingDescriptor.objectCompare (inOperand.mAttribute_mEnabledBindingDescriptor) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_outletDeclarationList_2D_element::isValid (void) const {
  return mAttribute_mOutletType.isValid () && mAttribute_mOutletName.isValid () && mAttribute_mRunDescriptor.isValid () && mAttribute_mEnabledBindingDescriptor.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_outletDeclarationList_2D_element::drop (void) {
  mAttribute_mOutletType.drop () ;
  mAttribute_mOutletName.drop () ;
  mAttribute_mRunDescriptor.drop () ;
  mAttribute_mEnabledBindingDescriptor.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_outletDeclarationList_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @outletDeclarationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOutletType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRunDescriptor.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnabledBindingDescriptor.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletDeclarationList_2D_element::reader_mOutletType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletDeclarationList_2D_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_runActionDescriptor GALGAS_outletDeclarationList_2D_element::reader_mRunDescriptor (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRunDescriptor ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_enabledBindingDescriptor GALGAS_outletDeclarationList_2D_element::reader_mEnabledBindingDescriptor (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnabledBindingDescriptor ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @outletDeclarationList-element type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletDeclarationList_2D_element ("outletDeclarationList-element",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletDeclarationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletDeclarationList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletDeclarationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletDeclarationList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_outletDeclarationList_2D_element GALGAS_outletDeclarationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_outletDeclarationList_2D_element result ;
  const GALGAS_outletDeclarationList_2D_element * p = (const GALGAS_outletDeclarationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletDeclarationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletDeclarationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList_2D_element::GALGAS_transientList_2D_element (void) :
mAttribute_mTransientTypeName (),
mAttribute_mTransientName (),
mAttribute_mDependencyList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList_2D_element::~ GALGAS_transientList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList_2D_element::GALGAS_transientList_2D_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_lstring & inOperand1,
                                                                  const GALGAS_dependanceList & inOperand2) :
mAttribute_mTransientTypeName (inOperand0),
mAttribute_mTransientName (inOperand1),
mAttribute_mDependencyList (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList_2D_element GALGAS_transientList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_transientList_2D_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_dependanceList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList_2D_element GALGAS_transientList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_lstring & inOperand1,
                                                                                  const GALGAS_dependanceList & inOperand2 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_transientList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_transientList_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_transientList_2D_element::objectCompare (const GALGAS_transientList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTransientTypeName.objectCompare (inOperand.mAttribute_mTransientTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientName.objectCompare (inOperand.mAttribute_mTransientName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDependencyList.objectCompare (inOperand.mAttribute_mDependencyList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_transientList_2D_element::isValid (void) const {
  return mAttribute_mTransientTypeName.isValid () && mAttribute_mTransientName.isValid () && mAttribute_mDependencyList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_transientList_2D_element::drop (void) {
  mAttribute_mTransientTypeName.drop () ;
  mAttribute_mTransientName.drop () ;
  mAttribute_mDependencyList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_transientList_2D_element::description (C_String & ioString,
                                                   const int32_t inIndentation) const {
  ioString << "<struct @transientList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTransientTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDependencyList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientList_2D_element::reader_mTransientTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_transientList_2D_element::reader_mTransientName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_dependanceList GALGAS_transientList_2D_element::reader_mDependencyList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependencyList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @transientList-element type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientList_2D_element ("transientList-element",
                                                 NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_transientList_2D_element GALGAS_transientList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientList_2D_element result ;
  const GALGAS_transientList_2D_element * p = (const GALGAS_transientList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList_2D_element::GALGAS_classArrayList_2D_element (void) :
mAttribute_mElementClassName (),
mAttribute_mArrayName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList_2D_element::~ GALGAS_classArrayList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList_2D_element::GALGAS_classArrayList_2D_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_lstring & inOperand1) :
mAttribute_mElementClassName (inOperand0),
mAttribute_mArrayName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList_2D_element GALGAS_classArrayList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_classArrayList_2D_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList_2D_element GALGAS_classArrayList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_lstring & inOperand1 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_classArrayList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_classArrayList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_classArrayList_2D_element::objectCompare (const GALGAS_classArrayList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mElementClassName.objectCompare (inOperand.mAttribute_mElementClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayName.objectCompare (inOperand.mAttribute_mArrayName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_classArrayList_2D_element::isValid (void) const {
  return mAttribute_mElementClassName.isValid () && mAttribute_mArrayName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_classArrayList_2D_element::drop (void) {
  mAttribute_mElementClassName.drop () ;
  mAttribute_mArrayName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_classArrayList_2D_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @classArrayList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mElementClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_classArrayList_2D_element::reader_mElementClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mElementClassName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_classArrayList_2D_element::reader_mArrayName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            @classArrayList-element type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classArrayList_2D_element ("classArrayList-element",
                                                  NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classArrayList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classArrayList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classArrayList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classArrayList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_classArrayList_2D_element GALGAS_classArrayList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_classArrayList_2D_element result ;
  const GALGAS_classArrayList_2D_element * p = (const GALGAS_classArrayList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classArrayList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classArrayList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST_2D_element::GALGAS_arrayControllerBoundColumnListAST_2D_element (void) :
mAttribute_mColumnName (),
mAttribute_mColumnOutletTypeName (),
mAttribute_mObservablePropertyName (),
mAttribute_mBindingOptionList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST_2D_element::~ GALGAS_arrayControllerBoundColumnListAST_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST_2D_element::GALGAS_arrayControllerBoundColumnListAST_2D_element (const GALGAS_lstring & inOperand0,
                                                                                                          const GALGAS_lstring & inOperand1,
                                                                                                          const GALGAS_lstring & inOperand2,
                                                                                                          const GALGAS_bindingOptionList & inOperand3) :
mAttribute_mColumnName (inOperand0),
mAttribute_mColumnOutletTypeName (inOperand1),
mAttribute_mObservablePropertyName (inOperand2),
mAttribute_mBindingOptionList (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST_2D_element GALGAS_arrayControllerBoundColumnListAST_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_arrayControllerBoundColumnListAST_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                              GALGAS_lstring::constructor_default (HERE),
                                                              GALGAS_lstring::constructor_default (HERE),
                                                              GALGAS_bindingOptionList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST_2D_element GALGAS_arrayControllerBoundColumnListAST_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                          const GALGAS_lstring & inOperand1,
                                                                                                                          const GALGAS_lstring & inOperand2,
                                                                                                                          const GALGAS_bindingOptionList & inOperand3 
                                                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_arrayControllerBoundColumnListAST_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_arrayControllerBoundColumnListAST_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_arrayControllerBoundColumnListAST_2D_element::objectCompare (const GALGAS_arrayControllerBoundColumnListAST_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mColumnName.objectCompare (inOperand.mAttribute_mColumnName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mColumnOutletTypeName.objectCompare (inOperand.mAttribute_mColumnOutletTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyName.objectCompare (inOperand.mAttribute_mObservablePropertyName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingOptionList.objectCompare (inOperand.mAttribute_mBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_arrayControllerBoundColumnListAST_2D_element::isValid (void) const {
  return mAttribute_mColumnName.isValid () && mAttribute_mColumnOutletTypeName.isValid () && mAttribute_mObservablePropertyName.isValid () && mAttribute_mBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerBoundColumnListAST_2D_element::drop (void) {
  mAttribute_mColumnName.drop () ;
  mAttribute_mColumnOutletTypeName.drop () ;
  mAttribute_mObservablePropertyName.drop () ;
  mAttribute_mBindingOptionList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerBoundColumnListAST_2D_element::description (C_String & ioString,
                                                                       const int32_t inIndentation) const {
  ioString << "<struct @arrayControllerBoundColumnListAST-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mColumnName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mColumnOutletTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerBoundColumnListAST_2D_element::reader_mColumnName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerBoundColumnListAST_2D_element::reader_mColumnOutletTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnOutletTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerBoundColumnListAST_2D_element::reader_mObservablePropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_bindingOptionList GALGAS_arrayControllerBoundColumnListAST_2D_element::reader_mBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingOptionList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   @arrayControllerBoundColumnListAST-element type                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_arrayControllerBoundColumnListAST_2D_element ("arrayControllerBoundColumnListAST-element",
                                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_arrayControllerBoundColumnListAST_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayControllerBoundColumnListAST_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_arrayControllerBoundColumnListAST_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_arrayControllerBoundColumnListAST_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST_2D_element GALGAS_arrayControllerBoundColumnListAST_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_arrayControllerBoundColumnListAST_2D_element result ;
  const GALGAS_arrayControllerBoundColumnListAST_2D_element * p = (const GALGAS_arrayControllerBoundColumnListAST_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_arrayControllerBoundColumnListAST_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("arrayControllerBoundColumnListAST-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST_2D_element::GALGAS_arrayControllerDeclarationListAST_2D_element (void) :
mAttribute_mControllerName (),
mAttribute_mBoundModel (),
mAttribute_mTableViewOutletName (),
mAttribute_mArrayControllerBoundColumnListAST () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST_2D_element::~ GALGAS_arrayControllerDeclarationListAST_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST_2D_element::GALGAS_arrayControllerDeclarationListAST_2D_element (const GALGAS_lstring & inOperand0,
                                                                                                          const GALGAS_abstractObservablePropertyAST & inOperand1,
                                                                                                          const GALGAS_lstring & inOperand2,
                                                                                                          const GALGAS_arrayControllerBoundColumnListAST & inOperand3) :
mAttribute_mControllerName (inOperand0),
mAttribute_mBoundModel (inOperand1),
mAttribute_mTableViewOutletName (inOperand2),
mAttribute_mArrayControllerBoundColumnListAST (inOperand3) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST_2D_element GALGAS_arrayControllerDeclarationListAST_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                          const GALGAS_abstractObservablePropertyAST & inOperand1,
                                                                                                                          const GALGAS_lstring & inOperand2,
                                                                                                                          const GALGAS_arrayControllerBoundColumnListAST & inOperand3 
                                                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_arrayControllerDeclarationListAST_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_arrayControllerDeclarationListAST_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_arrayControllerDeclarationListAST_2D_element::objectCompare (const GALGAS_arrayControllerDeclarationListAST_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mControllerName.objectCompare (inOperand.mAttribute_mControllerName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBoundModel.objectCompare (inOperand.mAttribute_mBoundModel) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTableViewOutletName.objectCompare (inOperand.mAttribute_mTableViewOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayControllerBoundColumnListAST.objectCompare (inOperand.mAttribute_mArrayControllerBoundColumnListAST) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_arrayControllerDeclarationListAST_2D_element::isValid (void) const {
  return mAttribute_mControllerName.isValid () && mAttribute_mBoundModel.isValid () && mAttribute_mTableViewOutletName.isValid () && mAttribute_mArrayControllerBoundColumnListAST.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerDeclarationListAST_2D_element::drop (void) {
  mAttribute_mControllerName.drop () ;
  mAttribute_mBoundModel.drop () ;
  mAttribute_mTableViewOutletName.drop () ;
  mAttribute_mArrayControllerBoundColumnListAST.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerDeclarationListAST_2D_element::description (C_String & ioString,
                                                                       const int32_t inIndentation) const {
  ioString << "<struct @arrayControllerDeclarationListAST-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mControllerName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBoundModel.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTableViewOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayControllerBoundColumnListAST.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerDeclarationListAST_2D_element::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST GALGAS_arrayControllerDeclarationListAST_2D_element::reader_mBoundModel (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBoundModel ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerDeclarationListAST_2D_element::reader_mTableViewOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTableViewOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST GALGAS_arrayControllerDeclarationListAST_2D_element::reader_mArrayControllerBoundColumnListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerBoundColumnListAST ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                   @arrayControllerDeclarationListAST-element type                                   *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_arrayControllerDeclarationListAST_2D_element ("arrayControllerDeclarationListAST-element",
                                                                     NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_arrayControllerDeclarationListAST_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayControllerDeclarationListAST_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_arrayControllerDeclarationListAST_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_arrayControllerDeclarationListAST_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerDeclarationListAST_2D_element GALGAS_arrayControllerDeclarationListAST_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_arrayControllerDeclarationListAST_2D_element result ;
  const GALGAS_arrayControllerDeclarationListAST_2D_element * p = (const GALGAS_arrayControllerDeclarationListAST_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_arrayControllerDeclarationListAST_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("arrayControllerDeclarationListAST-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList_2D_element::GALGAS_cursorList_2D_element (void) :
mAttribute_mCursorName (),
mAttribute_mHotSpotX (),
mAttribute_mHotSpotY () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList_2D_element::~ GALGAS_cursorList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList_2D_element::GALGAS_cursorList_2D_element (const GALGAS_lstring & inOperand0,
                                                            const GALGAS_ldouble & inOperand1,
                                                            const GALGAS_ldouble & inOperand2) :
mAttribute_mCursorName (inOperand0),
mAttribute_mHotSpotX (inOperand1),
mAttribute_mHotSpotY (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList_2D_element GALGAS_cursorList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_cursorList_2D_element (GALGAS_lstring::constructor_default (HERE),
                                       GALGAS_ldouble::constructor_default (HERE),
                                       GALGAS_ldouble::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList_2D_element GALGAS_cursorList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_ldouble & inOperand1,
                                                                            const GALGAS_ldouble & inOperand2 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_cursorList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_cursorList_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_cursorList_2D_element::objectCompare (const GALGAS_cursorList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mCursorName.objectCompare (inOperand.mAttribute_mCursorName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotX.objectCompare (inOperand.mAttribute_mHotSpotX) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotY.objectCompare (inOperand.mAttribute_mHotSpotY) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_cursorList_2D_element::isValid (void) const {
  return mAttribute_mCursorName.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_cursorList_2D_element::drop (void) {
  mAttribute_mCursorName.drop () ;
  mAttribute_mHotSpotX.drop () ;
  mAttribute_mHotSpotY.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_cursorList_2D_element::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "<struct @cursorList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mCursorName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotX.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotY.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_cursorList_2D_element::reader_mCursorName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCursorName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ldouble GALGAS_cursorList_2D_element::reader_mHotSpotX (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotX ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_ldouble GALGAS_cursorList_2D_element::reader_mHotSpotY (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotY ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                              @cursorList-element type                                               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_cursorList_2D_element ("cursorList-element",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_cursorList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_cursorList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_cursorList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_cursorList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_cursorList_2D_element GALGAS_cursorList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_cursorList_2D_element result ;
  const GALGAS_cursorList_2D_element * p = (const GALGAS_cursorList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_cursorList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("cursorList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList_2D_element::GALGAS_structFieldASTList_2D_element (void) :
mAttribute_mFieldTypeName (),
mAttribute_mFieldName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList_2D_element::~ GALGAS_structFieldASTList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList_2D_element::GALGAS_structFieldASTList_2D_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_lstring & inOperand1) :
mAttribute_mFieldTypeName (inOperand0),
mAttribute_mFieldName (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList_2D_element GALGAS_structFieldASTList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_structFieldASTList_2D_element (GALGAS_lstring::constructor_default (HERE),
                                               GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList_2D_element GALGAS_structFieldASTList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_lstring & inOperand1 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_structFieldASTList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_structFieldASTList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_structFieldASTList_2D_element::objectCompare (const GALGAS_structFieldASTList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mFieldTypeName.objectCompare (inOperand.mAttribute_mFieldTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFieldName.objectCompare (inOperand.mAttribute_mFieldName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_structFieldASTList_2D_element::isValid (void) const {
  return mAttribute_mFieldTypeName.isValid () && mAttribute_mFieldName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_structFieldASTList_2D_element::drop (void) {
  mAttribute_mFieldTypeName.drop () ;
  mAttribute_mFieldName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_structFieldASTList_2D_element::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "<struct @structFieldASTList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mFieldTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFieldName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_structFieldASTList_2D_element::reader_mFieldTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldTypeName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_structFieldASTList_2D_element::reader_mFieldName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @structFieldASTList-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structFieldASTList_2D_element ("structFieldASTList-element",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structFieldASTList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structFieldASTList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structFieldASTList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structFieldASTList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_structFieldASTList_2D_element GALGAS_structFieldASTList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_structFieldASTList_2D_element result ;
  const GALGAS_structFieldASTList_2D_element * p = (const GALGAS_structFieldASTList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structFieldASTList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structFieldASTList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxySelectorList_2D_element::GALGAS_unifiedTypeProxySelectorList_2D_element (void) :
mAttribute_mType (),
mAttribute_mSelector () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxySelectorList_2D_element::~ GALGAS_unifiedTypeProxySelectorList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxySelectorList_2D_element::GALGAS_unifiedTypeProxySelectorList_2D_element (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0,
                                                                                                const GALGAS_lstring & inOperand1) :
mAttribute_mType (inOperand0),
mAttribute_mSelector (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxySelectorList_2D_element GALGAS_unifiedTypeProxySelectorList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_unifiedTypeProxySelectorList_2D_element (GALGAS_unifiedTypeMap_2D_proxy::constructor_null (HERE),
                                                         GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxySelectorList_2D_element GALGAS_unifiedTypeProxySelectorList_2D_element::constructor_new (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0,
                                                                                                                const GALGAS_lstring & inOperand1 
                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxySelectorList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_unifiedTypeProxySelectorList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_unifiedTypeProxySelectorList_2D_element::objectCompare (const GALGAS_unifiedTypeProxySelectorList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSelector.objectCompare (inOperand.mAttribute_mSelector) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_unifiedTypeProxySelectorList_2D_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mSelector.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxySelectorList_2D_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mSelector.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxySelectorList_2D_element::description (C_String & ioString,
                                                                  const int32_t inIndentation) const {
  ioString << "<struct @unifiedTypeProxySelectorList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSelector.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeProxySelectorList_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_unifiedTypeProxySelectorList_2D_element::reader_mSelector (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSelector ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @unifiedTypeProxySelectorList-element type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxySelectorList_2D_element ("unifiedTypeProxySelectorList-element",
                                                                NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxySelectorList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxySelectorList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxySelectorList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxySelectorList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxySelectorList_2D_element GALGAS_unifiedTypeProxySelectorList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxySelectorList_2D_element result ;
  const GALGAS_unifiedTypeProxySelectorList_2D_element * p = (const GALGAS_unifiedTypeProxySelectorList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxySelectorList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxySelectorList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element::GALGAS_unifiedTypeProxyList_2D_element (void) :
mAttribute_mType () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element::~ GALGAS_unifiedTypeProxyList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element::GALGAS_unifiedTypeProxyList_2D_element (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0) :
mAttribute_mType (inOperand0) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element GALGAS_unifiedTypeProxyList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_unifiedTypeProxyList_2D_element (GALGAS_unifiedTypeMap_2D_proxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element GALGAS_unifiedTypeProxyList_2D_element::constructor_new (const GALGAS_unifiedTypeMap_2D_proxy & inOperand0 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_unifiedTypeProxyList_2D_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_unifiedTypeProxyList_2D_element::objectCompare (const GALGAS_unifiedTypeProxyList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_unifiedTypeProxyList_2D_element::isValid (void) const {
  return mAttribute_mType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList_2D_element::drop (void) {
  mAttribute_mType.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @unifiedTypeProxyList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeMap_2D_proxy GALGAS_unifiedTypeProxyList_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @unifiedTypeProxyList-element type                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxyList_2D_element ("unifiedTypeProxyList-element",
                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxyList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxyList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxyList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxyList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element GALGAS_unifiedTypeProxyList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList_2D_element result ;
  const GALGAS_unifiedTypeProxyList_2D_element * p = (const GALGAS_unifiedTypeProxyList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxyList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxyList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerMap_2D_element::GALGAS_arrayControllerMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mBoundModel (),
mAttribute_mTableViewOutletName (),
mAttribute_mArrayControllerBoundColumnListAST (),
mAttribute_mActionMap (),
mAttribute_mObservablePropertyMap (),
mAttribute_mPropertySignature (),
mAttribute_mArrayControllerTypeName () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerMap_2D_element::~ GALGAS_arrayControllerMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerMap_2D_element::GALGAS_arrayControllerMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_abstractObservablePropertyAST & inOperand1,
                                                                            const GALGAS_lstring & inOperand2,
                                                                            const GALGAS_arrayControllerBoundColumnListAST & inOperand3,
                                                                            const GALGAS_actionMap & inOperand4,
                                                                            const GALGAS_decoratedObservablePropertyMap & inOperand5,
                                                                            const GALGAS_lstring & inOperand6,
                                                                            const GALGAS_string & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mBoundModel (inOperand1),
mAttribute_mTableViewOutletName (inOperand2),
mAttribute_mArrayControllerBoundColumnListAST (inOperand3),
mAttribute_mActionMap (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mPropertySignature (inOperand6),
mAttribute_mArrayControllerTypeName (inOperand7) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerMap_2D_element GALGAS_arrayControllerMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_abstractObservablePropertyAST & inOperand1,
                                                                                            const GALGAS_lstring & inOperand2,
                                                                                            const GALGAS_arrayControllerBoundColumnListAST & inOperand3,
                                                                                            const GALGAS_actionMap & inOperand4,
                                                                                            const GALGAS_decoratedObservablePropertyMap & inOperand5,
                                                                                            const GALGAS_lstring & inOperand6,
                                                                                            const GALGAS_string & inOperand7 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_arrayControllerMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_arrayControllerMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_arrayControllerMap_2D_element::objectCompare (const GALGAS_arrayControllerMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBoundModel.objectCompare (inOperand.mAttribute_mBoundModel) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTableViewOutletName.objectCompare (inOperand.mAttribute_mTableViewOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayControllerBoundColumnListAST.objectCompare (inOperand.mAttribute_mArrayControllerBoundColumnListAST) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertySignature.objectCompare (inOperand.mAttribute_mPropertySignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayControllerTypeName.objectCompare (inOperand.mAttribute_mArrayControllerTypeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_arrayControllerMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mBoundModel.isValid () && mAttribute_mTableViewOutletName.isValid () && mAttribute_mArrayControllerBoundColumnListAST.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mPropertySignature.isValid () && mAttribute_mArrayControllerTypeName.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mBoundModel.drop () ;
  mAttribute_mTableViewOutletName.drop () ;
  mAttribute_mArrayControllerBoundColumnListAST.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mPropertySignature.drop () ;
  mAttribute_mArrayControllerTypeName.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_arrayControllerMap_2D_element::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "<struct @arrayControllerMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBoundModel.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTableViewOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayControllerBoundColumnListAST.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertySignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayControllerTypeName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_abstractObservablePropertyAST GALGAS_arrayControllerMap_2D_element::reader_mBoundModel (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBoundModel ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerMap_2D_element::reader_mTableViewOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTableViewOutletName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerBoundColumnListAST GALGAS_arrayControllerMap_2D_element::reader_mArrayControllerBoundColumnListAST (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerBoundColumnListAST ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_arrayControllerMap_2D_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_decoratedObservablePropertyMap GALGAS_arrayControllerMap_2D_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_arrayControllerMap_2D_element::reader_mPropertySignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertySignature ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_arrayControllerMap_2D_element::reader_mArrayControllerTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayControllerTypeName ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          @arrayControllerMap-element type                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_arrayControllerMap_2D_element ("arrayControllerMap-element",
                                                      NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_arrayControllerMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayControllerMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_arrayControllerMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_arrayControllerMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_arrayControllerMap_2D_element GALGAS_arrayControllerMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_arrayControllerMap_2D_element result ;
  const GALGAS_arrayControllerMap_2D_element * p = (const GALGAS_arrayControllerMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_arrayControllerMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("arrayControllerMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

