//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'MyOtherClass.m'                            *
//                    Generated by version 0.0.1 [debug]                     *
//                      july 14th, 2013, at 17h20'10"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "PMTransientDependancyManager.h"
#import "PMAllocationDebug.h"
#import "easy-bindings-utilities.h"
#import "MyOtherClass.h"
#import "MyOtherClass-transient-computations.h"


//----------------------------------------------------------------------------*

@implementation MyOtherClass

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

@synthesize chose ;

//----------------------------------------------------------------------------*
//    Init Methods                                                            *
//----------------------------------------------------------------------------*

- (instancetype) init {
  self = [super init] ;
  if (self) {
    chose = NO ;
    [self MyOtherClass_did_init] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*

- (instancetype) initWithMyBool: (BOOL) inMyBool
                 withMyInteger: (NSInteger) inMyInteger
                 withMyString: (NSString *) inMyString
                 withChose: (BOOL) inChose {
  self = [super
    initWithMyBool:inMyBool
    withMyInteger:inMyInteger
    withMyString:inMyString
  ] ;
  if (self) {  
    chose = inChose ;
    [self MyOtherClass_did_init] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    removeObservers                                                         *
//----------------------------------------------------------------------------*

- (void) removeObservers {
//--- Remove Transient observers
  [super removeObservers] ;
}

//----------------------------------------------------------------------------*
//    load                                                                    *
//----------------------------------------------------------------------------*

+ (void) load {
  Method original, swizzled ;
  original = class_getInstanceMethod (self, @selector (setChose:));
  swizzled = class_getInstanceMethod (self, @selector (setChose_swizzled:));
  macroCheckMethodSwizzling (original, swizzled) ;
  method_exchangeImplementations (original, swizzled) ;
}

//----------------------------------------------------------------------------*
//    'chose' attribute                                            *
//----------------------------------------------------------------------------*

- (void) setChose_swizzled: (BOOL) inObject {
  if (! (inObject == self.chose)) {
    [self setChose_swizzled:inObject] ;
    [chose_observers makeObjectsPerformSelector:@selector (class_2E_MyOtherClass_2E_chose_didChange)] ;
      //--- Trigger 'bidule transient'
    if (bidule__computed) {
      bidule__computed = NO ;
      [PMTransientDependancyManager
        enterTriggerForObject:self
        transientIndex:class_2E_MyOtherClass_2E_bidule
      ] ;
    }
  }
}

//----------------------------------------------------------------------------*

- (void) addObserverOf_chose: (id) inObserver {
  if (nil == chose_observers) {
    chose_observers = [NSMutableSet new] ;
  }
  [chose_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyOtherClass_2E_chose_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserverOf_chose: (id) inObserver {
  [chose_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyOtherClass_2E_chose_didChange)] ;
}

//----------------------------------------------------------------------------*
// Cache routine of 'bidule' transient     *
//----------------------------------------------------------------------------*

- (NSString *) bidule {
  if (! bidule__computed) {
    bidule__cache = compute_MyOtherClass_bidule (self.chose, self.schmurtz) ;
    bidule__computed = YES ;
  }
  return bidule__cache.copy ;
}



//----------------------------------------------------------------------------*

//--- START OF USER ZONE 2

//----------------------------------------------------------------------------*

- (void) MyOtherClass_did_init {
}

//----------------------------------------------------------------------------*

//--- END OF USER ZONE 2

@end
