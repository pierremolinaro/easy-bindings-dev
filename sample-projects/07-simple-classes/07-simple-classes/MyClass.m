//---------------------------------------------------------------------------*
//                                                                           *
//                             File 'MyClass.m'                              *
//                        Generated by version 0.0.1                         *
//                    november 13th, 2012, at 22h53'45"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "PMTransientDependancyManager.h"
#import "MyClass.h"
#import "MyClass-transient-computations.h"

//----------------------------------------------------------------------------*

@implementation MyClass

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

@synthesize myBool ;
@synthesize myInteger32 ;
@synthesize myString ;

//----------------------------------------------------------------------------*
//    Init Method                                                             *
//----------------------------------------------------------------------------*

- (id) initWithMyBool: (BOOL) inMyBool
       withMyInteger32: (SInt32) inMyInteger32
       withMyString: (NSString *) inMyString {
  self = [super init] ;
  if (self) {  
    myBool = inMyBool ;
    myInteger32 = inMyInteger32 ;
    myString = inMyString ;
    [self pmInstallObserversForTransients] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//   T R A N S I E N T    I M P L E M E N T A T I O N                         *
//----------------------------------------------------------------------------*

- (void) pmInstallObserversForTransients {
  // NSLog (@"%s", __PRETTY_FUNCTION__) ;
  [super pmInstallObserversForTransients] ;
  [self
    addObserver:self
    forKeyPath:@"myInteger32"
    options:0
    context:NULL
  ] ;
  [self
    addObserver:self
    forKeyPath:@"myString"
    options:0
    context:NULL
  ] ;
  [self
    addObserver:self
    forKeyPath:@"schmurtz"
    options:0
    context:NULL
  ] ;
}

//----------------------------------------------------------------------------*

- (void) pmUninstallObserversForTransients {
  // NSLog (@"%s", __PRETTY_FUNCTION__) ;
  [super pmUninstallObserversForTransients] ;
  [self
    removeObserver:self
    forKeyPath:@"myInteger32"
  ] ;
  [self
    removeObserver:self
    forKeyPath:@"myString"
  ] ;
  [self
    removeObserver:self
    forKeyPath:@"schmurtz"
  ] ;
}

//----------------------------------------------------------------------------*

- (void) observeValueForKeyPath:(NSString *) inKeyPath
         ofObject:(id) inObject
         change:(NSDictionary *) inChange
         context:(void *) inContext {
  // NSLog (@"%s, key %@", __PRETTY_FUNCTION__, inKeyPath) ;
  if ([inKeyPath isEqualToString:@"myInteger32"]) {
    schmurtz__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:class_2F_MyClass_2F_self_2E_schmurtz
    ] ;
  }else if ([inKeyPath isEqualToString:@"myString"]) {
    schmurtz__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:class_2F_MyClass_2F_self_2E_schmurtz
    ] ;
  }else if ([inKeyPath isEqualToString:@"schmurtz"]) {
    truc__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:class_2F_MyClass_2F_self_2E_truc
    ] ;
  }else{
    [super
      observeValueForKeyPath:inKeyPath
      ofObject:inObject
      change:inChange
      context:inContext
    ] ;
  }
}

//----------------------------------------------------------------------------*

- (NSString *) schmurtz {
  if (! schmurtz__computed) {
    schmurtz__cache = compute_MyClass_schmurtz (self.myInteger32, self.myString) ;
    schmurtz__computed = YES ;
  }
  return schmurtz__cache.copy ;
}

//----------------------------------------------------------------------------*

- (NSString *) truc {
  if (! truc__computed) {
    truc__cache = compute_MyClass_truc (self.schmurtz) ;
    truc__computed = YES ;
  }
  return truc__cache.copy ;
}

//----------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

@end
