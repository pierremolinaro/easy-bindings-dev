//-----------------------------------------------------------------------------*
//                                                                             *
//                              File 'MyClass.m'                               *
//                     Generated by version 0.0.1 [debug]                      *
//                        july 28th, 2014, at 20h4'2"                          *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "PMApplication.h"
#import "PMAllocationDebug.h"
#import "easy-bindings-utilities.h"
#import "MyClass.h"
#import "MyClass-transient-computations.h"


//----------------------------------------------------------------------------*

@implementation MyClass

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

@synthesize myBool ;
@synthesize myInteger ;
@synthesize myString ;

//----------------------------------------------------------------------------*
//    Init Methods                                                            *
//----------------------------------------------------------------------------*

- (instancetype) init {
  self = [super init] ;
  if (self) {
    macroNoteObjectAllocation ;
    myBool = YES ;
    myInteger = 123 ;
    myString = @"555" ;
    [self MyClass_did_init] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*

- (instancetype) initWithMyBool: (BOOL) inMyBool
                 withMyInteger: (NSInteger) inMyInteger
                 withMyString: (NSString *) inMyString {
  self = [super init] ;
  if (self) {  
    macroNoteObjectAllocation ;
    myBool = inMyBool ;
    myInteger = inMyInteger ;
    myString = inMyString ;
    [self MyClass_did_init] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    Dealloc                                                                 *
//----------------------------------------------------------------------------*

#ifdef PM_COCOA_DEBUG
  - (void) dealloc {
    macroNoteObjectDeallocation ;
    macroSuperDealloc ;
  }
#endif

//----------------------------------------------------------------------------*
//    removeObservers                                                         *
//----------------------------------------------------------------------------*

- (void) removeObservers {
//--- Remove Transient observers
}

//----------------------------------------------------------------------------*
//    load                                                                    *
//----------------------------------------------------------------------------*

+ (void) load {
  Method original, swizzled ;
  original = class_getInstanceMethod (self, @selector (setMyBool:));
  swizzled = class_getInstanceMethod (self, @selector (setMyBool_swizzled:));
  macroCheckMethodSwizzling (original, swizzled) ;
  method_exchangeImplementations (original, swizzled) ;
  original = class_getInstanceMethod (self, @selector (setMyInteger:));
  swizzled = class_getInstanceMethod (self, @selector (setMyInteger_swizzled:));
  macroCheckMethodSwizzling (original, swizzled) ;
  method_exchangeImplementations (original, swizzled) ;
  original = class_getInstanceMethod (self, @selector (setMyString:));
  swizzled = class_getInstanceMethod (self, @selector (setMyString_swizzled:));
  macroCheckMethodSwizzling (original, swizzled) ;
  method_exchangeImplementations (original, swizzled) ;
}

//----------------------------------------------------------------------------*
//    'myBool' attribute                                            *
//----------------------------------------------------------------------------*

- (void) setMyBool_swizzled: (BOOL) inObject {
  if (! (inObject == self.myBool)) {
    [self setMyBool_swizzled:inObject] ;
    [myBool_observers makeObjectsPerformSelector:@selector (class_2E_MyClass_2E_myBool_didChange)] ;
      }
}

//----------------------------------------------------------------------------*

- (void) addObserverOf_myBool: (id) inObserver {
  if (nil == myBool_observers) {
    myBool_observers = [NSMutableSet new] ;
  }
  [myBool_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyClass_2E_myBool_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserverOf_myBool: (id) inObserver {
  [myBool_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyClass_2E_myBool_didChange)] ;
}

//----------------------------------------------------------------------------*
//    'myInteger' attribute                                            *
//----------------------------------------------------------------------------*

- (void) setMyInteger_swizzled: (NSInteger) inObject {
  if (! (inObject == self.myInteger)) {
    [self setMyInteger_swizzled:inObject] ;
    [myInteger_observers makeObjectsPerformSelector:@selector (class_2E_MyClass_2E_myInteger_didChange)] ;
      //--- Trigger 'schmurtz transient'
    if (schmurtz__computed) {
      schmurtz__computed = NO ;
      [PMApplication
        enterTriggerForObject:self
        transientIndex:class_2E_MyClass_2E_schmurtz
      ] ;
    }
  //--- Trigger 'truc transient'
    if (truc__computed) {
      truc__computed = NO ;
      [PMApplication
        enterTriggerForObject:self
        transientIndex:class_2E_MyClass_2E_truc
      ] ;
    }
  }
}

//----------------------------------------------------------------------------*

- (void) addObserverOf_myInteger: (id) inObserver {
  if (nil == myInteger_observers) {
    myInteger_observers = [NSMutableSet new] ;
  }
  [myInteger_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyClass_2E_myInteger_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserverOf_myInteger: (id) inObserver {
  [myInteger_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyClass_2E_myInteger_didChange)] ;
}

//----------------------------------------------------------------------------*
//    'myString' attribute                                            *
//----------------------------------------------------------------------------*

- (void) setMyString_swizzled: (NSString *) inObject {
  if (! ([inObject isEqualToString:self.myString])) {
    [self setMyString_swizzled:inObject] ;
    [myString_observers makeObjectsPerformSelector:@selector (class_2E_MyClass_2E_myString_didChange)] ;
      //--- Trigger 'schmurtz transient'
    if (schmurtz__computed) {
      schmurtz__computed = NO ;
      [PMApplication
        enterTriggerForObject:self
        transientIndex:class_2E_MyClass_2E_schmurtz
      ] ;
    }
  //--- Trigger 'truc transient'
    if (truc__computed) {
      truc__computed = NO ;
      [PMApplication
        enterTriggerForObject:self
        transientIndex:class_2E_MyClass_2E_truc
      ] ;
    }
  }
}

//----------------------------------------------------------------------------*

- (void) addObserverOf_myString: (id) inObserver {
  if (nil == myString_observers) {
    myString_observers = [NSMutableSet new] ;
  }
  [myString_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyClass_2E_myString_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserverOf_myString: (id) inObserver {
  [myString_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (class_2E_MyClass_2E_myString_didChange)] ;
}

//-------------------------------------------------------------------------------------------------------------------*
// Cache routine of 'schmurtz' transient     *
//-------------------------------------------------------------------------------------------------------------------*

- (NSString *) schmurtz {
  if (! schmurtz__computed) {
    schmurtz__cache = compute_MyClass_schmurtz (self.myInteger, self.myString) ;
    schmurtz__computed = YES ;
  }
  return schmurtz__cache.copy ;
}

//-------------------------------------------------------------------------------------------------------------------*
// Cache routine of 'truc' transient     *
//-------------------------------------------------------------------------------------------------------------------*

- (NSString *) truc {
  if (! truc__computed) {
    truc__cache = compute_MyClass_truc (self.schmurtz) ;
    truc__computed = YES ;
  }
  return truc__cache.copy ;
}



//----------------------------------------------------------------------------*

//--- START OF USER ZONE 2

//----------------------------------------------------------------------------*

- (void) MyClass_did_init {
}

//----------------------------------------------------------------------------*

//--- END OF USER ZONE 2

@end
