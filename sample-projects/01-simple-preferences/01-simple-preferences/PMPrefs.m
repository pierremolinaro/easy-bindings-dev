//---------------------------------------------------------------------------*
//                                                                           *
//                             File 'PMPrefs.m'                              *
//                        Generated by version 1.0.0                         *
//                       june 21th, 2012, at 15h55'1"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "PMPrefs.h"
#import "easy-bindings-utilities.h"


//----------------------------------------------------------------------------*

PMPrefs * g_PMPrefs ;

//----------------------------------------------------------------------------*

@implementation PMPrefs

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

@synthesize myString ;
@synthesize mColor ;
@synthesize mDate ;
@synthesize mInteger32Value ;

//----------------------------------------------------------------------------*
//    Init                                                                    *
//----------------------------------------------------------------------------*

- (id) init {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  self = [super init] ;
  if (self) {
    #ifdef PM_COCOA_DEBUG
      objectHasBeenAllocated (self) ;
    #endif
    g_PMPrefs = self ;
  //---
    NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;
    id value ;
    value = [ud objectForKey:@"PMPrefs:myString"] ;
    if (nil == value) {
      self.myString = @"hello" ;
    }else{
      self.myString =  (value) ;
    }
    value = [ud objectForKey:@"PMPrefs:mColor"] ;
    if (nil == value) {
      self.mColor = [NSColor yellowColor] ;
    }else{
      self.mColor = valueFromData (value) ;
    }
    value = [ud objectForKey:@"PMPrefs:mDate"] ;
    if (nil == value) {
      self.mDate = [NSDate date] ;
    }else{
      self.mDate =  (value) ;
    }
    value = [ud objectForKey:@"PMPrefs:mInteger32Value"] ;
    if (nil == value) {
      self.mInteger32Value = 123 ;
    }else{
      self.mInteger32Value = sint32FromNSNumber (value) ;
    }
  //---
    [[NSNotificationCenter defaultCenter]
      addObserver:self
      selector:@selector(applicationWillTerminateAction:)
      name:NSApplicationWillTerminateNotification
      object:nil
    ] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    applicationWillTerminateAction:                                         *
//----------------------------------------------------------------------------*

- (void) applicationWillTerminateAction: (NSNotification *) inNotification {
  NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;
  [ud setObject: (myString) forKey:@"PMPrefs:myString"] ;
  [ud setObject:dataEncodedValue (mColor) forKey:@"PMPrefs:mColor"] ;
  [ud setObject: (mDate) forKey:@"PMPrefs:mDate"] ;
  [ud setObject:numberEncodedSInt32 (mInteger32Value) forKey:@"PMPrefs:mInteger32Value"] ;
}

//----------------------------------------------------------------------------*
//    awakeFromNib                                                            *
//----------------------------------------------------------------------------*

- (void) awakeFromNib {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
//--- check myTextField' outlet not nil
  if (nil == myTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextField' outlet is nil") ;
  }
//--- 'myTextField' outlet: 'value' binding
  [myTextField
    bind:@"value"
    toObject:self
    withKeyPath:@"myString"
    options:nil
  ] ;
//--- check myOtherTextField' outlet not nil
  if (nil == myOtherTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myOtherTextField' outlet is nil") ;
  }
//--- 'myOtherTextField' outlet: 'value' binding
  [myOtherTextField
    bind:@"value"
    toObject:self
    withKeyPath:@"myString"
    options:[NSDictionary dictionaryWithObjectsAndKeys:
      [NSNumber numberWithBool:YES], @"NSContinuouslyUpdatesValue",
      nil
    ]
  ] ;
//--- check mColorWell' outlet not nil
  if (nil == mColorWell) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mColorWell' outlet is nil") ;
  }
//--- 'mColorWell' outlet: 'value' binding
  [mColorWell
    bind:@"value"
    toObject:self
    withKeyPath:@"mColor"
    options:nil
  ] ;
//--- check mDatePicker' outlet not nil
  if (nil == mDatePicker) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mDatePicker' outlet is nil") ;
  }
//--- 'mDatePicker' outlet: 'value' binding
  [mDatePicker
    bind:@"value"
    toObject:self
    withKeyPath:@"mDate"
    options:nil
  ] ;
//--- check mInteger32TextField' outlet not nil
  if (nil == mInteger32TextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mInteger32TextField' outlet is nil") ;
  }
//--- 'mInteger32TextField' outlet: 'value' binding
  if ((nil != mInteger32TextField) && (nil == [mInteger32TextField formatter])) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mInteger32TextField' outlet has no formatter, it should have an NSNumberFormatter") ;
  }else if ((nil != mInteger32TextField) && ![[mInteger32TextField formatter] isKindOfClass:[NSNumberFormatter class]]) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mInteger32TextField' outlet has a formatter that is not kind of NSNumberFormatter class") ;
  }
  [mInteger32TextField
    bind:@"value"
    toObject:self
    withKeyPath:@"mInteger32Value"
    options:nil
  ] ;
}

//----------------------------------------------------------------------------*
//    willChangeValueForKey                                                   *
//----------------------------------------------------------------------------*

- (void) willChangeValueForKey:(NSString *) inKey {
  // NSLog (@"%s:'%@'", __PRETTY_FUNCTION__, inKey) ;
  [super willChangeValueForKey:inKey] ;
}

//----------------------------------------------------------------------------*

@end

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


