//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'RootEntityClass.m'                          *
//                    Generated by version 0.0.1 [debug]                     *
//                    november 17th, 2012, at 17h46'28"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "easy-bindings-utilities.h"
#import "PMDebug.h"
#import "PMTransientDependancyManager.h"
#import "RootEntityClass.h"


//----------------------------------------------------------------------------*

@implementation RootEntityClass

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

//--- Attributes

//--- To-many relationships
@dynamic mNames ; // Set of NameEntity entities

//----------------------------------------------------------------------------*
//    Creation Class Method                                                   *
//----------------------------------------------------------------------------*

+ (RootEntityClass *) pmInsertNewObjectIntoManagedObjectContext:(NSManagedObjectContext *) inContext {
  return [NSEntityDescription insertNewObjectForEntityForName:@"MyRootEntity" inManagedObjectContext:inContext] ;
}

//----------------------------------------------------------------------------*
//    initWithEntity:insertIntoManagedObjectContext:                          *
//----------------------------------------------------------------------------*

- (id) initWithEntity:(NSEntityDescription *) inEntity
       insertIntoManagedObjectContext:(NSManagedObjectContext *) inManagedObjectContext {
  self = [super 
    initWithEntity:inEntity
    insertIntoManagedObjectContext:inManagedObjectContext
  ] ;
  if (self) {
    macroNoteObjectAllocation (self) ;
  //--- Add Transient observers
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    Dealloc                                                                 *
//----------------------------------------------------------------------------*

- (void) dealloc {
  macroNoteObjectDeallocation (self) ;
}

//----------------------------------------------------------------------------*
//    didTurnIntoFault                                                        *
//----------------------------------------------------------------------------*

- (void) didTurnIntoFault {
//--- Remove Transient observers
//---
  [super didTurnIntoFault] ;
}

//----------------------------------------------------------------------------*
//    didChangeValueForKey                                                    *
//----------------------------------------------------------------------------*

- (void) didChangeValueForKey: (NSString *) inKey {
  [super didChangeValueForKey:inKey] ;
  if ([inKey isEqualToString:@"mNames"]) {
    [mNames_observers makeObjectsPerformSelector:@selector (entity_2E_MyRootEntity_2E_mNames_didChange)] ;
  }
}

//----------------------------------------------------------------------------*

- (void) addObserverOf_mNames: (id) inObserver {
  if (nil == mNames_observers) {
    mNames_observers = [NSMutableSet new] ;
  }
  [mNames_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (entity_2E_MyRootEntity_2E_mNames_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserverOf_mNames: (id) inObserver {
  [mNames_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (entity_2E_MyRootEntity_2E_mNames_didChange)] ;
}

//----------------------------------------------------------------------------*

//--- START OF USER ZONE 2

//--- END OF USER ZONE 2

@end
