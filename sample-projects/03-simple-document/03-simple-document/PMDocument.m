//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'PMDocument.m'                             *
//                    Generated by version 0.0.1 [debug]                     *
//                    december 28th, 2012, at 12h47'59"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "PMAllocationDebug.h"
#import "managed-object-model.h"
#import "easy-bindings-utilities.h"
#import "PMTransientDependancyManager.h"
#import "PMDocument.h"
#import "MyRootEntityClass.h"

//----------------------------------------------------------------------------*

@implementation PMDocument

//----------------------------------------------------------------------------*
//    Init                                                                    *
//----------------------------------------------------------------------------*

- (id) init {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  self = [super init] ;
  if (self) {
    macroNoteObjectAllocation (self) ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    Dealloc                                                                 *
//----------------------------------------------------------------------------*

- (void) dealloc {
  macroNoteObjectDeallocation (self) ;
}

//----------------------------------------------------------------------------*
//    windowNibName                                                           *
//----------------------------------------------------------------------------*

- (NSString *) windowNibName {
  return @"PMDocument" ;
}

//----------------------------------------------------------------------------*
//    rootObject                                                              *
//----------------------------------------------------------------------------*

- (PMManagedObject *) rootObject {
  return mRootObject ;
}

//----------------------------------------------------------------------------*
//    fetchRootObject                                                         *
//----------------------------------------------------------------------------*

- (void) fetchRootObject { 
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  NSManagedObjectContext * moc = self.managedObjectContext ;
  NSArray * array = [moc
    executeFetchRequest:[NSFetchRequest fetchRequestWithEntityName:@"MyRootEntity"]
    error:nil
  ] ;
  if (array.count == 0) {
    mRootObject = [NSEntityDescription insertNewObjectForEntityForName:@"MyRootEntity" inManagedObjectContext:moc] ;
    [self hookOfRootObjectDidCreate] ;
  }else{
    mRootObject = [array objectAtIndex:0] ;
  }
}

//----------------------------------------------------------------------------*
//    windowControllerDidLoadNib                                              *
//----------------------------------------------------------------------------*

- (void) windowControllerDidLoadNib: (NSWindowController *) inWindowController { 
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  [super windowControllerDidLoadNib:inWindowController] ;
//--------------------------- Controller instanciation
//--------------------------- Controller bindings
//--------------------------- Outlet bindings
//--- Outlet myTextField
  if (nil == myTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextField' outlet is nil") ;
  }
  [myTextField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myString"
    options:nil
  ] ;
//--- Outlet myTextMajField
  if (nil == myTextMajField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextMajField' outlet is nil") ;
  }
  [myTextMajField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myStringMaj"
    options:nil
  ] ;
//--- Outlet myTextMinField
  if (nil == myTextMinField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextMinField' outlet is nil") ;
  }
  [myTextMinField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myStringMin"
    options:nil
  ] ;
//--- Outlet myTextConcatField
  if (nil == myTextConcatField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextConcatField' outlet is nil") ;
  }
  [myTextConcatField
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myStringConcat"
    options:nil
  ] ;
//--- Outlet myMatrix
  if (nil == myMatrix) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myMatrix' outlet is nil") ;
  }
  [myMatrix
    bind:@"selectedIndex"
    toObject:mRootObject
    withKeyPath:@"myEnumeration"
    options:nil
  ] ;
//--- Outlet myColorWell
  if (nil == myColorWell) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myColorWell' outlet is nil") ;
  }
  [myColorWell
    bind:@"value"
    toObject:mRootObject
    withKeyPath:@"myColor"
    options:nil
  ] ;
//--------------------------- Add Transient observers
}

//----------------------------------------------------------------------------*
//   R E M O V E    W I N D O W    C O N T R O L L E R                        *
//----------------------------------------------------------------------------*

- (void) removeWindowController:(NSWindowController *) inWindowController {
  //NSLog (@"%s", __PRETTY_FUNCTION__) ;
//--- Unbind Outlets
  [myTextField unbind:@"value"] ;
  [myTextMajField unbind:@"value"] ;
  [myTextMinField unbind:@"value"] ;
  [myTextConcatField unbind:@"value"] ;
  [myMatrix unbind:@"selectedIndex"] ;
  [myColorWell unbind:@"value"] ;
//--- Unbind Controllers
//--- Remove Transient observers
//---
  [super removeWindowController:inWindowController] ;
}


//--- START OF USER ZONE 2

//----------------------------------------------------------------------------*

- (void) hookOfRootObjectDidCreate {
}

//----------------------------------------------------------------------------*

- (void) monAction:(id)inSender {
}

//----------------------------------------------------------------------------*

- (void) autreAction:(id)inSender {
}

//----------------------------------------------------------------------------*

//--- END OF USER ZONE 2

@end
