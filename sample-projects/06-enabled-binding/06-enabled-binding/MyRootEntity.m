//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'MyRootEntity.m'                            *
//                    Generated by version 0.0.1 [debug]                     *
//                       july 2nd, 2013, at 12h40'24"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "easy-bindings-utilities.h"
#import "PMAllocationDebug.h"
#import "PMEntityManager.h"
#import "PMRelationshipDescription.h"
#import "PMAttributeDescription.h"
#import "PMTransientDependancyManager.h"
#import "load-store-functions.h"
#import "MyRootEntity.h"


//-----------------------------------------------------------------------------*

@implementation MyRootEntity

//-----------------------------------------------------------------------------*
//    Synthesize properties                                                    *
//-----------------------------------------------------------------------------*

//--- Attributes
@synthesize docBool ;

//--- To-one relationships

//--- To-many relationships

//-----------------------------------------------------------------------------*
//    Swizzle setters                                                          *
//-----------------------------------------------------------------------------*

+ (void) load {
  Method original ;
  Method swizzled ;
  original = class_getInstanceMethod (self, @selector (setDocBool:)) ;
  swizzled = class_getInstanceMethod (self, @selector (setDocBool_swizzled:)) ;
  macroCheckMethodSwizzling (original, swizzled) ;
  method_exchangeImplementations (original, swizzled) ;
}

//-----------------------------------------------------------------------------*
//    newInstanceWithManager:withDefaultValues:                                *
//-----------------------------------------------------------------------------*

+ (MyRootEntity *) newInstanceWithManager: (PMEntityManager *) inManager
                    withDefaultValues: (BOOL) inFlag {
  return [inManager newInstanceOfEntity:[MyRootEntity class] withDefaultValues:inFlag] ;
}

//-----------------------------------------------------------------------------*
//    init                                                                     *
//-----------------------------------------------------------------------------*

- (instancetype) init {
  self = [super init] ;
  if (self) {
  }
  return self ;
}

//-----------------------------------------------------------------------------*
//    buildAttributeDescriptionArray                                           *
//-----------------------------------------------------------------------------*

- (void) buildAttributeDescriptionArray: (NSMutableArray *) ioDescriptionArray {
  [super buildAttributeDescriptionArray:ioDescriptionArray] ;
  [ioDescriptionArray addObject:[PMAttributeDescription descriptionWithAttributeName:@"docBool"]] ;
}

//-----------------------------------------------------------------------------*
//    buildToOneRelationshipDescriptionArray                                   *
//-----------------------------------------------------------------------------*

- (void) buildToOneRelationshipDescriptionArray: (NSMutableArray *) ioDescriptionArray {
  [super buildToOneRelationshipDescriptionArray:ioDescriptionArray] ;
}

//-----------------------------------------------------------------------------*
//    buildToManyRelationshipDescriptionArray                                  *
//-----------------------------------------------------------------------------*

- (void) buildToManyRelationshipDescriptionArray: (NSMutableArray *) ioDescriptionArray {
  [super buildToManyRelationshipDescriptionArray:ioDescriptionArray] ;
}

//-----------------------------------------------------------------------------*
//    setUpWithDefaultValues                                                   *
//-----------------------------------------------------------------------------*

- (void) setUpWithDefaultValues {
  self.docBool = YES ;
  [super setUpWithDefaultValues] ;
}

//-----------------------------------------------------------------------------*
//    resetBeforeDeletion                                                      *
//-----------------------------------------------------------------------------*

- (void) resetBeforeDeletion {
  [super resetBeforeDeletion] ;
}

//-----------------------------------------------------------------------------*
//    saveIntoDictionary                                                       *
//-----------------------------------------------------------------------------*

- (void) saveIntoDictionary: (NSMutableDictionary *) ioDictionary {
  [super saveIntoDictionary:ioDictionary] ;
  storeBOOLInDictionary (self.docBool, @"docBool", ioDictionary) ;
}

//-----------------------------------------------------------------------------*
//    setUpWithDictionary                                                      *
//-----------------------------------------------------------------------------*

- (void) setUpWithDictionary: (NSDictionary *) inDictionary
         withManagedEntityArray: (NSArray *) inManagedEntityArray {
  [super
    setUpWithDictionary:inDictionary
    withManagedEntityArray:inManagedEntityArray
  ] ;
  self.docBool = readBOOLFromDictionary (@"docBool", inDictionary) ;
}

//-----------------------------------------------------------------------------*
//    setDocBool_swizzled       *
//-----------------------------------------------------------------------------*

- (void) setDocBool_swizzled: (BOOL) inNewValue {
  if (inNewValue != self.docBool) {
  //--- Register old value in undo manager
    [[self.undoManager prepareWithInvocationTarget:self]
      setDocBool:self.docBool
    ] ;
  //--- Store new value
    [self setDocBool_swizzled :inNewValue] ;
  //--- Notify observers
    [docBool_observers makeObjectsPerformSelector:@selector (entity_2E_MyRootEntity_2E_docBool_didChange)] ;
  }
}

//-----------------------------------------------------------------------------*
//    willChangeValueForKey:                                                  *
//-----------------------------------------------------------------------------*

/*- (void) willChangeValueForKey: (NSString *) inKey {
  [super willChangeValueForKey:inKey] ;
}*/

//-----------------------------------------------------------------------------*
//    didChangeValueForKey:                                                   *
//-----------------------------------------------------------------------------*

/*- (void) didChangeValueForKey: (NSString *) inKey {
  [super didChangeValueForKey:inKey] ;
  if (! self.isFault) {
    [self pmKeyDidChange:inKey] ;
  }
}*/

//-----------------------------------------------------------------------------*
//    willChangeValueForKey:withSetMutation:usingObjects:                     *
//-----------------------------------------------------------------------------*

/*- (void) willChangeValueForKey: (NSString *) inKey
         withSetMutation: (NSKeyValueSetMutationKind) inMutationKind
         usingObjects: (NSSet *) inObjects {
  [super
    willChangeValueForKey:inKey
    withSetMutation: inMutationKind
    usingObjects: inObjects
  ] ;
}*/

//-----------------------------------------------------------------------------*
//    didChangeValueForKey:withSetMutation:usingObjects:                      *
//-----------------------------------------------------------------------------*

/*- (void) didChangeValueForKey: (NSString *) inKey
         withSetMutation: (NSKeyValueSetMutationKind) inMutationKind
         usingObjects: (NSSet *) inObjects {
  [super
    didChangeValueForKey:inKey
    withSetMutation: inMutationKind
    usingObjects: inObjects
  ] ;
  if (! self.isFault) {
    [self pmKeyDidChange:inKey] ;
  }
}*/

//-----------------------------------------------------------------------------*
//    pmKeyDidChange:                                                         *
//-----------------------------------------------------------------------------*

/*- (void) pmKeyDidChange: (NSString *) inKey {
  if ([inKey isEqualToString:@"docBool"]) {
    [docBool_observers makeObjectsPerformSelector:@selector (entity_2E_MyRootEntity_2E_docBool_didChange)] ;
  }
}*/

//-----------------------------------------------------------------------------*
//    docBool Observer                                               *
//-----------------------------------------------------------------------------*

- (void) addObserverOf_docBool: (NSObject *) inObserver {
  if (nil == docBool_observers) {
    docBool_observers = [NSMutableSet new] ;
  }
  [docBool_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (entity_2E_MyRootEntity_2E_docBool_didChange)] ;
}

//-----------------------------------------------------------------------------*

- (void) removeObserverOf_docBool: (NSObject *) inObserver {
  [docBool_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (entity_2E_MyRootEntity_2E_docBool_didChange)] ;
}

//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

@end
