//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'MyEntityClass.m'                           *
//                    Generated by version 0.0.1 [debug]                     *
//                     january 6th, 2013, at 12h43'32"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "easy-bindings-utilities.h"
#import "PMAllocationDebug.h"
#import "PMTransientDependancyManager.h"
#import "MyEntityClass.h"
#import "MyEntityClass-transient-computations.h"
#import "PMPrefs.h"


//----------------------------------------------------------------------------*

@implementation MyEntityClass

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

//--- Attributes
@dynamic docString ;

//--- To-one relationships

//--- To-many relationships

//----------------------------------------------------------------------------*
//    Creation Class Method                                                   *
//----------------------------------------------------------------------------*

+ (MyEntityClass *) pmInsertNewObjectIntoManagedObjectContext:(NSManagedObjectContext *) inContext {
  return [NSEntityDescription insertNewObjectForEntityForName:@"MyRootEntity" inManagedObjectContext:inContext] ;
}

//----------------------------------------------------------------------------*
//    initWithEntity:insertIntoManagedObjectContext:                          *
//----------------------------------------------------------------------------*

- (MyEntityClass *) initWithEntity:(NSEntityDescription *) inEntity
                    insertIntoManagedObjectContext:(NSManagedObjectContext *) inManagedObjectContext {
  self = [super 
    initWithEntity:inEntity
    insertIntoManagedObjectContext:inManagedObjectContext
  ] ;
  if (self) {
  //--- Add Transient observers
    [g_PMPrefs addObserverOf_myPrefString:self] ;
    [g_PMPrefs addObserverOf_myPrefString:self] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    didTurnIntoFault                                                        *
//----------------------------------------------------------------------------*

- (void) didTurnIntoFault {
//--- Remove Transient observers
  [g_PMPrefs removeObserverOf_myPrefString:self] ;
  [g_PMPrefs removeObserverOf_myPrefString:self] ;
//---
  [super didTurnIntoFault] ;
}

//----------------------------------------------------------------------------*
//    didChangeValueForKey:                                                   *
//----------------------------------------------------------------------------*

- (void) didChangeValueForKey: (NSString *) inKey {
  [super didChangeValueForKey:inKey] ;
  if (! self.isFault) {
    [self pmKeyDidChange:inKey] ;
  }
}

//----------------------------------------------------------------------------*
//    didChangeValueForKey:withSetMutation:usingObjects:                      *
//----------------------------------------------------------------------------*

- (void) didChangeValueForKey: (NSString *) inKey
         withSetMutation: (NSKeyValueSetMutationKind) inMutationKind
         usingObjects: (NSSet *) inObjects {
  [super
    didChangeValueForKey:inKey
    withSetMutation: inMutationKind
    usingObjects: inObjects
  ] ;
  if (! self.isFault) {
    [self pmKeyDidChange:inKey] ;
  }
}

//----------------------------------------------------------------------------*
//    pmKeyDidChange:                                                         *
//----------------------------------------------------------------------------*

- (void) pmKeyDidChange: (NSString *) inKey {
  if ([inKey isEqualToString:@"docString"]) {
    [docString_observers makeObjectsPerformSelector:@selector (entity_2E_MyRootEntity_2E_docString_didChange)] ;
  //--- Trigger 'transientConcatString transient'
    if (transientConcatString__computed) {
      transientConcatString__computed = NO ;
      [PMTransientDependancyManager
        enterTriggerForObject:self
        transientIndex:entity_2E_MyRootEntity_2E_transientConcatString
      ] ;
    }
  }
}

//----------------------------------------------------------------------------*
//    docString Observer                                               *
//----------------------------------------------------------------------------*

- (void) addObserverOf_docString: (NSObject *) inObserver {
  if (nil == docString_observers) {
    docString_observers = [NSMutableSet new] ;
  }
  [docString_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (MyEntityClass_docString_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserverOf_docString: (NSObject *) inObserver {
  [docString_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (MyEntityClass_docString_didChange)] ;
}

//----------------------------------------------------------------------------*
//  preference_2E_PMPrefs_2E_myPrefString_didChange   *
//----------------------------------------------------------------------------*

- (void) preference_2E_PMPrefs_2E_myPrefString_didChange {
  //--- Trigger 'transientConcatString transient'
  if (transientConcatString__computed) {
    transientConcatString__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:entity_2E_MyRootEntity_2E_transientConcatString
    ] ;
  }
  //--- Trigger 'otherTransientConcatString transient'
  if (otherTransientConcatString__computed) {
    otherTransientConcatString__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:entity_2E_MyRootEntity_2E_otherTransientConcatString
    ] ;
  }
}

//----------------------------------------------------------------------------*
// Cache routine of 'transientConcatString' transient     *
//----------------------------------------------------------------------------*

- (NSString *) transientConcatString {
  if (! transientConcatString__computed) {
    transientConcatString__cache = compute_MyEntityClass_transientConcatString (self.docString, g_PMPrefs.myPrefString, g_PMPrefs.prefTransientString) ;
    transientConcatString__computed = YES ;
  }
  return transientConcatString__cache.copy ;
}

//----------------------------------------------------------------------------*
// Cache routine of 'otherTransientConcatString' transient     *
//----------------------------------------------------------------------------*

- (NSString *) otherTransientConcatString {
  if (! otherTransientConcatString__computed) {
    otherTransientConcatString__cache = compute_MyEntityClass_otherTransientConcatString (g_PMPrefs.myPrefString) ;
    otherTransientConcatString__computed = YES ;
  }
  return otherTransientConcatString__cache.copy ;
}

//----------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

@end
