//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'MyRootEntity.m'                            *
//                    Generated by version 0.0.1 [debug]                     *
//                       july 2nd, 2013, at 11h30'34"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "easy-bindings-utilities.h"
#import "PMAllocationDebug.h"
#import "PMEntityManager.h"
#import "PMRelationshipDescription.h"
#import "PMAttributeDescription.h"
#import "PMTransientDependancyManager.h"
#import "load-store-functions.h"
#import "MyRootEntity.h"
#import "MyRootEntity-transient-computations.h"
#import "MyPrefs.h"


//-----------------------------------------------------------------------------*

@implementation MyRootEntity

//-----------------------------------------------------------------------------*
//    Synthesize properties                                                    *
//-----------------------------------------------------------------------------*

//--- Attributes
@synthesize docString ;

//--- To-one relationships

//--- To-many relationships

//-----------------------------------------------------------------------------*
//    Swizzle setters                                                          *
//-----------------------------------------------------------------------------*

+ (void) load {
  Method original ;
  Method swizzled ;
  original = class_getInstanceMethod (self, @selector (setDocString:)) ;
  swizzled = class_getInstanceMethod (self, @selector (setDocString_swizzled:)) ;
  macroCheckMethodSwizzling (original, swizzled) ;
  method_exchangeImplementations (original, swizzled) ;
}

//-----------------------------------------------------------------------------*
//    newInstanceWithManager:withDefaultValues:                                *
//-----------------------------------------------------------------------------*

+ (MyRootEntity *) newInstanceWithManager: (PMEntityManager *) inManager
                    withDefaultValues: (BOOL) inFlag {
  return [inManager newInstanceOfEntity:[MyRootEntity class] withDefaultValues:inFlag] ;
}

//-----------------------------------------------------------------------------*
//    init                                                                     *
//-----------------------------------------------------------------------------*

- (instancetype) init {
  self = [super init] ;
  if (self) {
  //--- Add Transient observers
    [g_MyPrefs addObserverOf_myPrefString:self] ;
    [g_MyPrefs addObserverOf_myPrefString:self] ;
  }
  return self ;
}

//-----------------------------------------------------------------------------*
//    buildAttributeDescriptionArray                                           *
//-----------------------------------------------------------------------------*

- (void) buildAttributeDescriptionArray: (NSMutableArray *) ioDescriptionArray {
  [super buildAttributeDescriptionArray:ioDescriptionArray] ;
  [ioDescriptionArray addObject:[PMAttributeDescription descriptionWithAttributeName:@"docString"]] ;
}

//-----------------------------------------------------------------------------*
//    buildToOneRelationshipDescriptionArray                                   *
//-----------------------------------------------------------------------------*

- (void) buildToOneRelationshipDescriptionArray: (NSMutableArray *) ioDescriptionArray {
  [super buildToOneRelationshipDescriptionArray:ioDescriptionArray] ;
}

//-----------------------------------------------------------------------------*
//    buildToManyRelationshipDescriptionArray                                  *
//-----------------------------------------------------------------------------*

- (void) buildToManyRelationshipDescriptionArray: (NSMutableArray *) ioDescriptionArray {
  [super buildToManyRelationshipDescriptionArray:ioDescriptionArray] ;
}

//-----------------------------------------------------------------------------*
//    setUpWithDefaultValues                                                   *
//-----------------------------------------------------------------------------*

- (void) setUpWithDefaultValues {
  self.docString = @"doc string" ;
  [super setUpWithDefaultValues] ;
}

//-----------------------------------------------------------------------------*
//    resetBeforeDeletion                                                      *
//-----------------------------------------------------------------------------*

- (void) resetBeforeDeletion {
//--- Remove Transient observers
  [g_MyPrefs removeObserverOf_myPrefString:self] ;
  [g_MyPrefs removeObserverOf_myPrefString:self] ;
  [super resetBeforeDeletion] ;
}

//-----------------------------------------------------------------------------*
//    saveIntoDictionary                                                       *
//-----------------------------------------------------------------------------*

- (void) saveIntoDictionary: (NSMutableDictionary *) ioDictionary {
  [super saveIntoDictionary:ioDictionary] ;
  storeNSStringInDictionary (self.docString, @"docString", ioDictionary) ;
}

//-----------------------------------------------------------------------------*
//    setUpWithDictionary                                                      *
//-----------------------------------------------------------------------------*

- (void) setUpWithDictionary: (NSDictionary *) inDictionary
         withManagedEntityArray: (NSArray *) inManagedEntityArray {
  [super
    setUpWithDictionary:inDictionary
    withManagedEntityArray:inManagedEntityArray
  ] ;
  self.docString = readNSStringFromDictionary (@"docString", inDictionary) ;
}

//-----------------------------------------------------------------------------*
//    setDocString_swizzled       *
//-----------------------------------------------------------------------------*

- (void) setDocString_swizzled: (NSString *) inNewValue {
  if (! [inNewValue isEqualToString:self.docString]) {
  //--- Register old value in undo manager
    [self.undoManager
      registerUndoWithTarget:self
      selector:@selector (setDocString:)
      object:self.docString
    ] ;
  //--- Store new value
    [self setDocString_swizzled :inNewValue] ;
  //--- Notify observers
    [docString_observers makeObjectsPerformSelector:@selector (entity_2E_MyRootEntity_2E_docString_didChange)] ;
  //--- Trigger 'transientConcatString transient'
    if (transientConcatString__computed) {
      transientConcatString__computed = NO ;
      [PMTransientDependancyManager
        enterTriggerForObject:self
        transientIndex:entity_2E_MyRootEntity_2E_transientConcatString
      ] ;
    }
  }
}

//-----------------------------------------------------------------------------*
//    willChangeValueForKey:                                                  *
//-----------------------------------------------------------------------------*

/*- (void) willChangeValueForKey: (NSString *) inKey {
  [super willChangeValueForKey:inKey] ;
}*/

//-----------------------------------------------------------------------------*
//    didChangeValueForKey:                                                   *
//-----------------------------------------------------------------------------*

/*- (void) didChangeValueForKey: (NSString *) inKey {
  [super didChangeValueForKey:inKey] ;
  if (! self.isFault) {
    [self pmKeyDidChange:inKey] ;
  }
}*/

//-----------------------------------------------------------------------------*
//    willChangeValueForKey:withSetMutation:usingObjects:                     *
//-----------------------------------------------------------------------------*

/*- (void) willChangeValueForKey: (NSString *) inKey
         withSetMutation: (NSKeyValueSetMutationKind) inMutationKind
         usingObjects: (NSSet *) inObjects {
  [super
    willChangeValueForKey:inKey
    withSetMutation: inMutationKind
    usingObjects: inObjects
  ] ;
}*/

//-----------------------------------------------------------------------------*
//    didChangeValueForKey:withSetMutation:usingObjects:                      *
//-----------------------------------------------------------------------------*

/*- (void) didChangeValueForKey: (NSString *) inKey
         withSetMutation: (NSKeyValueSetMutationKind) inMutationKind
         usingObjects: (NSSet *) inObjects {
  [super
    didChangeValueForKey:inKey
    withSetMutation: inMutationKind
    usingObjects: inObjects
  ] ;
  if (! self.isFault) {
    [self pmKeyDidChange:inKey] ;
  }
}*/

//-----------------------------------------------------------------------------*
//    pmKeyDidChange:                                                         *
//-----------------------------------------------------------------------------*

/*- (void) pmKeyDidChange: (NSString *) inKey {
  if ([inKey isEqualToString:@"docString"]) {
    [docString_observers makeObjectsPerformSelector:@selector (entity_2E_MyRootEntity_2E_docString_didChange)] ;
  //--- Trigger 'transientConcatString transient'
    if (transientConcatString__computed) {
      transientConcatString__computed = NO ;
      [PMTransientDependancyManager
        enterTriggerForObject:self
        transientIndex:entity_2E_MyRootEntity_2E_transientConcatString
      ] ;
    }
  }
}*/

//-----------------------------------------------------------------------------*
//    docString Observer                                               *
//-----------------------------------------------------------------------------*

- (void) addObserverOf_docString: (NSObject *) inObserver {
  if (nil == docString_observers) {
    docString_observers = [NSMutableSet new] ;
  }
  [docString_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (entity_2E_MyRootEntity_2E_docString_didChange)] ;
}

//-----------------------------------------------------------------------------*

- (void) removeObserverOf_docString: (NSObject *) inObserver {
  [docString_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (entity_2E_MyRootEntity_2E_docString_didChange)] ;
}

//----------------------------------------------------------------------------*
//  preference_2E_MyPrefs_2E_myPrefString_didChange   *
//----------------------------------------------------------------------------*

- (void) preference_2E_MyPrefs_2E_myPrefString_didChange {
  //--- Trigger 'transientConcatString transient'
  if (transientConcatString__computed) {
    transientConcatString__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:entity_2E_MyRootEntity_2E_transientConcatString
    ] ;
  }
  //--- Trigger 'otherTransientConcatString transient'
  if (otherTransientConcatString__computed) {
    otherTransientConcatString__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:entity_2E_MyRootEntity_2E_otherTransientConcatString
    ] ;
  }
}

//----------------------------------------------------------------------------*
// Cache routine of 'transientConcatString' transient     *
//----------------------------------------------------------------------------*

- (NSString *) transientConcatString {
  if (! transientConcatString__computed) {
    transientConcatString__cache = compute_MyRootEntity_transientConcatString (self.docString, g_MyPrefs.myPrefString, g_MyPrefs.prefTransientString) ;
    transientConcatString__computed = YES ;
  }
  return transientConcatString__cache.copy ;
}

//----------------------------------------------------------------------------*
// Cache routine of 'otherTransientConcatString' transient     *
//----------------------------------------------------------------------------*

- (NSString *) otherTransientConcatString {
  if (! otherTransientConcatString__computed) {
    otherTransientConcatString__cache = compute_MyRootEntity_otherTransientConcatString (g_MyPrefs.myPrefString) ;
    otherTransientConcatString__computed = YES ;
  }
  return otherTransientConcatString__cache.copy ;
}

//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

@end
