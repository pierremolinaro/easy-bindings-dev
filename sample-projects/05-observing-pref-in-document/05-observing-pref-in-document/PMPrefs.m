//---------------------------------------------------------------------------*
//                                                                           *
//                             File 'PMPrefs.m'                              *
//                        Generated by version 0.0.1                         *
//                    november 16th, 2012, at 16h33'57"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#import "easy-bindings-utilities.h"
#import "PMTransientDependancyManager.h"
#import "PMPrefs.h"
#import "PMPrefs-computations.h"
#import <objc/runtime.h>

//----------------------------------------------------------------------------*

PMPrefs * g_PMPrefs ;

//----------------------------------------------------------------------------*

@implementation PMPrefs

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

@synthesize myPrefString ;

//----------------------------------------------------------------------------*
//    Init                                                                    *
//----------------------------------------------------------------------------*

- (id) init {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  self = [super init] ;
  if (self) {
    #ifdef PM_COCOA_DEBUG
      objectHasBeenAllocated (self) ;
    #endif
    g_PMPrefs = self ;
  //---
    NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;
    id value ;
    value = [ud objectForKey:@"PMPrefs:myPrefString"] ;
    if (nil == value) {
      self.myPrefString = @"pref string" ;
    }else{
      self.myPrefString =  (value) ;
    }
  //---
    [[NSNotificationCenter defaultCenter]
      addObserver:self
      selector:@selector(applicationWillTerminateAction:)
      name:NSApplicationWillTerminateNotification
      object:nil
    ] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    applicationWillTerminateAction:                                         *
//----------------------------------------------------------------------------*

- (void) applicationWillTerminateAction: (NSNotification *) inNotification {
  NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;
  [ud setObject: (myPrefString) forKey:@"PMPrefs:myPrefString"] ;
}

//----------------------------------------------------------------------------*
//    awakeFromNib                                                            *
//----------------------------------------------------------------------------*

- (void) awakeFromNib {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
//--- check myPrefStringTextField' outlet not nil
  if (nil == myPrefStringTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myPrefStringTextField' outlet is nil") ;
  }
  [myPrefStringTextField
    bind:@"value"
    toObject:self
    withKeyPath:@"myPrefString"
    options:nil
  ] ;

}


//----------------------------------------------------------------------------*
//    Swizzle                                                                 *
//----------------------------------------------------------------------------*

+ (void) load {
  Method original, swizzled ;
  original = class_getInstanceMethod (self, @selector (setMyPrefString:));
  swizzled = class_getInstanceMethod (self, @selector (setMyPrefString_swizzle:));
  method_exchangeImplementations (original, swizzled) ;
}
//----------------------------------------------------------------------------*
//    'myPrefString' attribute                                            *
//----------------------------------------------------------------------------*

- (void) setMyPrefString_swizzle: (NSString *) inObject {
  if (! [self.myPrefString isEqualToString:inObject]) {
    [self setMyPrefString_swizzle:inObject] ;
    [myPrefString_observers makeObjectsPerformSelector:@selector (PMPrefs_myPrefString_didChange)] ;
    prefTransientString__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:preferences_2F_PMPrefs_2E_prefTransientString
    ] ;
  }
}

//----------------------------------------------------------------------------*

- (void) addObserver_myPrefString: (id) inObserver {
  if (nil == myPrefString_observers) {
    myPrefString_observers = [NSMutableSet new] ;
  }
  [myPrefString_observers addObject:inObserver] ;
  [inObserver performSelector:@selector (PMPrefs_myPrefString_didChange)] ;
}

//----------------------------------------------------------------------------*

- (void) removeObserver_myPrefString: (id) inObserver {
  [myPrefString_observers removeObject:inObserver] ;
  [inObserver performSelector:@selector (PMPrefs_myPrefString_didChange)] ;
}

//----------------------------------------------------------------------------*
// Cache routine of 'prefTransientString' transient     *
//----------------------------------------------------------------------------*

- (NSString *) prefTransientString {
  if (! prefTransientString__computed) {
    prefTransientString__cache = compute_PMPrefs_prefTransientString (self.myPrefString) ;
    prefTransientString__computed = YES ;
  }
  return prefTransientString__cache.copy ;
}

//----------------------------------------------------------------------------*
//    Actions                                                                 *
//----------------------------------------------------------------------------*



//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

@end

