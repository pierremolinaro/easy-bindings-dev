semantics preferencesGeneration :
  import "easyBindings_options.gOption" ;
  import "transientGeneration.gSemantics" ;

#----------------------------------------------------------------------------*

filewrapper prefsGenerationTemplate in "../generation-templates/preferences-generation" {
}{
}{
  template preferencesInSwift "preferences.swift.gTemplate"
    ?@string PREFERENCES_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_GENERATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@stringset INCLUSION_SET
    ?@preferencesPropertyArrayMap ARRAY_MAP
    ?@controllerMap CONTROLLER_MAP
  ;
  
}

#----------------------------------------------------------------------------*

override method @preferenceTypeGeneration generate
  ??@string inOutputDirectory
:
  const @string s := [filewrapper prefsGenerationTemplate.preferencesInSwift
    !mGenerationName
    !mAttributeListForImplementation
    !mTransientListForImplementation
    !mOutletDeclarationList
    !mFileInclusionSet->mImplementationFileInclusionSet
    !mArrayMap
    !mControllerMap
  ] ;
  [@string generateFileWithPattern
    !inOutputDirectory
    !mGenerationName . ".swift"
    !"//"
    !"\n\n" # Defaut user zone1
    !s
    !"\n\n" # Defaut user zone2
    !"\n\n"
  ] ;
end method ;

#----------------------------------------------------------------------------*


end semantics ;
