semantics preferencesGeneration :
  import "easyBindings_options.gOption" ;
  import "transientGeneration.gSemantics" ;

#----------------------------------------------------------------------------*

local filewrapper prefsGenerationTemplate in "../generation-templates/preferences-generation" {
}{
}{
  template preferencesDeclarationPart1 "preferences-1.h.gTemplate"
    ?@string PREFERENCES_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_GENERATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@lstringlist ACTION_LIST
    ?@stringset HEADER_INCLUSION_SET
    ?@stringset CLASS_PREDECLARATION_SET
    ?@controllerMap CONTROLLER_MAP
  ;
  
  template preferencesDeclarationPart2 "preferences-2.h.gTemplate"
    ?@string PREFERENCES_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_GENERATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@lstringlist ACTION_LIST
    ?@preferenceArrayMap ARRAY_MAP
    ?@controllerMap CONTROLLER_MAP
  ;
  
  template preferencesImplementation "preferences.m.gTemplate"
    ?@string PREFERENCES_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_GENERATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@lstringlist ACTION_LIST
    ?@stringset INCLUSION_SET
    ?@2stringlist TRANSIENT_DEPENDENCY_ARCS
    ?@preferenceArrayMap ARRAY_MAP
    ?@controllerMap CONTROLLER_MAP
  ;
  
  template preferencesTransientComputationsHeaderFile "preferences-computations.h.gTemplate"
    ?@string PREFERENCES_NAME
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
  ;
  
  template preferencesTransientComputationImplementationFile "preferences-transient-computation-function.m.gTemplate"
    ?@string PREFERENCES_NAME
    ?@easyBindingType RESULT_TYPE
    ?@string TRANSIENT_NAME
    ?@directDependancyList DIRECT_DEPENDANCY_LIST
  ;

  template preferencesActionImplementationFile "preferences-action.m.gTemplate"
    ?@string PREFERENCES_NAME
    ?@string ACTION_NAME
  ;
}

#----------------------------------------------------------------------------*

routine generatePreferencesCode
  ??@2stringlist inTransientDependencyArcList
  ??@preferencesMap inPreferencesMap
  ??@string inOutputDirectory
:
  if [@uint errorCount] == 0 then
    foreach inPreferencesMap do
    #--- Header
      @string s := [filewrapper prefsGenerationTemplate.preferencesDeclarationPart1
        ![lkey string]
        !mAttributeListForImplementation
        !mTransientListForImplementation
        !mOutletDeclarationList
        !mActionList
        !mHeaderFileInclusionSet
        !mImplementationFileInclusionSet
        !mControllerMap
      ] ;
      @string s2 := [filewrapper prefsGenerationTemplate.preferencesDeclarationPart2
        ![lkey string]
        !mAttributeListForImplementation
        !mTransientListForImplementation
        !mOutletDeclarationList
        !mActionList
        !mArrayMap
        !mControllerMap
      ] ;
      [@string generateFileWithPattern
        !inOutputDirectory
        ![lkey string] . ".h"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n}\n\n" # Defaut user zone2
        !s2
      ] ;
    #--- Implementation
      s := [filewrapper prefsGenerationTemplate.preferencesImplementation
        ![lkey string]
        !mAttributeListForImplementation
        !mTransientListForImplementation
        !mOutletDeclarationList
        !mActionList
        !mImplementationFileInclusionSet
        !inTransientDependencyArcList
        !mArrayMap
        !mControllerMap
      ] ;
      [@string generateFileWithPattern
        !inOutputDirectory
        ![lkey string] . ".m"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n" # Defaut user zone2
        !"@end\n\n"
      ] ;
    #--- Transient computation function header file
      if [mTransientListForImplementation length] > 0 then
        s := [filewrapper prefsGenerationTemplate.preferencesTransientComputationsHeaderFile
          ![lkey string]
          !mTransientListForImplementation
        ] ;
        [@string generateFileWithPattern
          !inOutputDirectory
          ![lkey string] . "-computations.h"
          !"//"
          !"\n\n" # Defaut user zone1
          !s
          !"\n\n" # Defaut user zone2
          !"\n"
        ] ;
      end if ;
    #--- Transient computation function implementation files
      foreach mTransientListForImplementation do
          s := [filewrapper prefsGenerationTemplate.preferencesTransientComputationImplementationFile
            ![lkey string]
            !mTransientType
            !mTransientName
            !mDependencyList
          ] ;
          [@string generateFileWithPattern
            !inOutputDirectory
            !"compute_" . [lkey string] . "_" . mTransientName . ".m"
            !"//"
            !"\n\n" # Defaut user zone1
            !s
            !"  return what ? ; // ADD YOUR CODE HERE\n" # Defaut user zone2
            !"}\n\n" . "//----------------------------------------------------------------------------*\n"
          ] ;
      end foreach ;
    end foreach ;
  end if ;
end routine ;

#----------------------------------------------------------------------------*


end semantics ;
