semantics outletClassGeneration :
  import "easyBindings_options.gOption" ;
  import "decoratedTypes.gSemantics" ;

#----------------------------------------------------------------------------*

local filewrapper outletClassGenerationTemplate in "../generation-templates/outlet-class-generation" {
}{
}{
  template outletClassDeclaration "outlet-class.h.gTemplate"
    ?@string OUTLET_CLASS_NAME
    ?@string SUPER_CLASS_NAME
    ?@protocolList ADOPTED_PROTOCOL_LIST
    ?@outletClassBindingMap BINDING_MAP
  ;
  
  template outletClassImplementation "outlet-class.m.gTemplate"
    ?@string OUTLET_CLASS_NAME
    ?@string SUPER_CLASS_NAME
    ?@outletClassBindingMap BINDING_MAP
  ;
}

#----------------------------------------------------------------------------*

override method @outletClassGeneration generate
??@string inOutputDirectory
:
#--- Header
  @string s := [filewrapper outletClassGenerationTemplate.outletClassDeclaration
    !mGenerationName
    !mSuperClassName
    !mAdoptedProtocolList
    !mCurrentBindingMap
  ] ;
  [@string generateFileWithPattern
    !inOutputDirectory
    !mGenerationName . ".h"
    !"//"
    !"\n\n" # Defaut user zone1
    !s
    !"\n\n" # Defaut user zone2
    !"@end\n"
  ] ;
#--- Implementation
  s := [filewrapper outletClassGenerationTemplate.outletClassImplementation
    !mGenerationName
    !mSuperClassName
    !mCurrentBindingMap
  ] ;
  [@string generateFileWithPattern
    !inOutputDirectory
    !mGenerationName . ".m"
    !"//"
    !"\n\n" # Defaut user zone1
    !s
    !"\n\n" # Defaut user zone2
    !"@end\n"
  ] ;
end method ;

#----------------------------------------------------------------------------*


end semantics ;
