semantics enumAnalysis :
  import "easyBindings_options.gOption" ;
  import "decoratedTypes.gSemantics" ;

#----------------------------------------------------------------------------*

override method @enumDeclaration typeInventory
  ?!@unifiedTypeMap ioUnifiedTypeMap
:
#  @enumConstantMap enumConstantMap [emptyMap] ;
#  @structFieldList fieldList [emptyList] ;
#  [@unifiedTypeProxy makeProxy
#    !?ioUnifiedTypeMap
#    !mEnumTypeName
#    ?@unifiedTypeProxy enumTypeProxy
#  ] ;
#  foreach mEnumConstantNameList do
#    [!?enumConstantMap insertKey !mValue] ;
#    fieldList += !enumTypeProxy !mValue ;
#  end foreach ;
  [!?ioUnifiedTypeMap insertKey
    !mEnumTypeName
    ![@ebType new !mEnumTypeName ![@typeKind enumType]]
    !selfcopy
  ] ;
end method ;

#----------------------------------------------------------------------------*

override method @enumDeclaration buildObservablePropertyMap
  ??@unifiedTypeMap unused inUnifiedTypeMap
  ?!@observablePropertyMapMap unused ioObservablePropertyMapMap
  ?!@transientDependencyGraph unused ioTransientDependencyGraph
:
end method ;

#----------------------------------------------------------------------------*

override method @enumDeclaration semanticAnalysis
  ??@unifiedTypeMap unused inUnifiedTypeMap
  ?!@contextAnalysisStruct ioContextAnalysisStruct
  ?!@generationList ioGenerationList
:
  @enumConstantMap enumConstantMap [emptyMap] ;
  foreach mEnumConstantNameList do
    [!?enumConstantMap insertKey !mValue] ;
    [!?ioContextAnalysisStruct->mGlobalEnumConstantMap insertKey !mValue !mEnumTypeName] ;
  end foreach ;
#---
  [!?ioContextAnalysisStruct->mEnumMap insertKey
    !mEnumTypeName
    !mEnumConstantNameList
    !enumConstantMap
  ] ;
#---
  ioGenerationList += ![@enumTypeGeneration new
    !mEnumTypeName->string
    !mEnumConstantNameList
  ] ;
end method ;


#----------------------------------------------------------------------------*

#routine enumAnalysis
#  ??@enumList inEnumList
#  ?!@contextAnalysisStruct ioContextAnalysisStruct
#:
#  foreach inEnumList do
#    @enumConstantMap enumConstantMap [emptyMap] ;
#    foreach mEnumConstantNameList do
#      [!?enumConstantMap insertKey !mValue] ;
#    end foreach ;
#    [!?ioContextAnalysisStruct->mEnumMap insertKey !mEnumTypeName !mEnumConstantNameList !enumConstantMap] ;
#  end foreach ;
##---
#  foreach ioContextAnalysisStruct->mEnumMap do
#    foreach mConstantOrderedList do
#      [!?ioContextAnalysisStruct->mGlobalEnumConstantMap insertKey !mValue !lkey] ;
#    end foreach ;
#  end foreach ;
#end routine ;

#----------------------------------------------------------------------------*

end semantics ;
