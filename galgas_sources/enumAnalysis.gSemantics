semantics enumAnalysis :
  import "easyBindings_options.gOption" ;
  import "decoratedTypes.gSemantics" ;

#----------------------------------------------------------------------------*

routine enumEnterType
  ??@enumList inEnumList
  ?!@unifiedTypeMap ioUnifiedTypeMap
:
  foreach inEnumList do
    @enumConstantMap enumConstantMap [emptyMap] ;
    foreach mEnumConstantNameList do
      [!?enumConstantMap insertKey !mValue] ;
    end foreach ;
    [!?ioUnifiedTypeMap insertKey
      !mEnumTypeName
      ![@unifiedTypeKind enumerationType]
      ![@unifiedTypeProxy null]
      !enumConstantMap
      ![@unifiedTypeProxyList emptyList]
      ![@outletClassBindingMap emptyMap]
    ] ;
  end foreach ;
end routine ;

#----------------------------------------------------------------------------*

routine enumAnalysis
  ??@enumList inEnumList
  ?!@contextAnalysisStruct ioContextAnalysisStruct
:
  foreach inEnumList do
    @enumConstantMap enumConstantMap [emptyMap] ;
    foreach mEnumConstantNameList do
      [!?enumConstantMap insertKey !mValue] ;
    end foreach ;
    [!?ioContextAnalysisStruct->mEnumMap insertKey !mEnumTypeName !mEnumConstantNameList !enumConstantMap] ;
  end foreach ;
#---
  foreach ioContextAnalysisStruct->mEnumMap do
    foreach mConstantOrderedList do
      [!?ioContextAnalysisStruct->mGlobalEnumConstantMap insertKey !mValue !lkey] ;
    end foreach ;
  end foreach ;
end routine ;

#----------------------------------------------------------------------------*

end semantics ;
