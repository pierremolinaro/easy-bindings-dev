semantics enumAnalysis :
  import "easyBindings_options.gOption" ;
  import "decoratedTypes.gSemantics" ;

#----------------------------------------------------------------------------*

override method @EXenumDeclaration EXTypeInventory
  ?!@EXunifiedTypeMap ioUnifiedTypeMap
:
  [!?ioUnifiedTypeMap insertKey
    !mEnumTypeName
    ![@EXebType new !mEnumTypeName ![@EXTypeKind enumType]]
    !selfcopy
    !@EXentityRelationshipMap {}
  ] ;
end method ;

#----------------------------------------------------------------------------*

override method @EXenumDeclaration buildObservablePropertyMap
  ??@EXunifiedTypeMap unused inUnifiedTypeMap
  ?!@EXobservablePropertyMapMap unused ioObservablePropertyMapMap
  ?!@EXtransientDependencyGraph unused ioTransientDependencyGraph
:
end method ;

#----------------------------------------------------------------------------*

override method @EXenumDeclaration semanticAnalysis
  ??@EXunifiedTypeMap unused inUnifiedTypeMap
  ?!@EXcontextAnalysisStruct ioContextAnalysisStruct
  ?!@generationList ioGenerationList
:
  @enumConstantMap enumConstantMap [emptyMap] ;
  foreach mEnumConstantNameList do
    [!?enumConstantMap insertKey !mValue] ;
    [!?ioContextAnalysisStruct->mGlobalEnumConstantMap insertKey !mValue !mEnumTypeName] ;
  end foreach ;
#---
  [!?ioContextAnalysisStruct->mEnumMap insertKey
    !mEnumTypeName
    !mEnumConstantNameList
    !enumConstantMap
  ] ;
#---
  ioGenerationList += ![@enumTypeGeneration new
    !mEnumTypeName->string
    !mEnumConstantNameList
  ] ;
end method ;


#----------------------------------------------------------------------------*

end semantics ;
