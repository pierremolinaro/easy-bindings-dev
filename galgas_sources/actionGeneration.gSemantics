semantics actionGeneration :
  import "decoratedTypes.gSemantics" ;

#----------------------------------------------------------------------------*

routine generateActions
  ??@string inSourceFile
  ??@actionListForGeneration inActionListForGeneration
:
  const outputDirectory := [inSourceFile stringByDeletingLastPathComponent] ;
  for () in inActionListForGeneration do
    const s := [filewrapper actionGenerationTemplate.actionGeneration
      !mClassName
      !mActionName
    ] ;
    [@string generateFileWithPattern
      !outputDirectory
      !mClassName . "+action+" . mActionName . ".swift"
      !"//"
      !"\n\n" # Defaut user zone1
      !s
      !"    NSBeep ()\n" # Defaut user zone2
      !"  }\n}\n\n//----------------------------------------------------------------------------*\n"
    ] ;
  end for ;
end routine ;

#----------------------------------------------------------------------------*

filewrapper actionGenerationTemplate in "../generation-templates" {
}{
}{
  template actionGeneration "action-extension.swift.gTemplate"
    ?@string EXTENDED_CLASS_NAME
    ?@string ACTION_NAME
  ;
 }

#----------------------------------------------------------------------------*

end semantics ;
