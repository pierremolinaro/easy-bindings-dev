//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'easyBindingType.cpp'                         *
//                        Generated by version 2.5.0                         *
//                       july 10th, 2013, at 19h12'3"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "easyBindingType.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "easyBindingType.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*



typeComparisonResult GALGAS_easyBindingType::objectCompare (const GALGAS_easyBindingType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType::GALGAS_easyBindingType (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType::GALGAS_easyBindingType (const cPtr_easyBindingType * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_easyBindingType) ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @easyBindingType class                  *
//---------------------------------------------------------------------------*

cPtr_easyBindingType::cPtr_easyBindingType (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @easyBindingType type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_easyBindingType ("easyBindingType",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_easyBindingType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_easyBindingType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_easyBindingType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_easyBindingType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_easyBindingType::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_easyBindingType result ;
  const GALGAS_easyBindingType * p = (const GALGAS_easyBindingType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_easyBindingType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("easyBindingType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_arrayType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_arrayType::objectCompare (const GALGAS_arrayType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_arrayType::GALGAS_arrayType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_arrayType GALGAS_arrayType::constructor_default (LOCATION_ARGS) {
  return GALGAS_arrayType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_arrayType::GALGAS_arrayType (const cPtr_arrayType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_arrayType) ;
}

//---------------------------------------------------------------------------*

GALGAS_arrayType GALGAS_arrayType::constructor_new (LOCATION_ARGS) {
  GALGAS_arrayType result ;
  macroMyNew (result.mObjectPtr, cPtr_arrayType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @arrayType class                     *
//---------------------------------------------------------------------------*

cPtr_arrayType::cPtr_arrayType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_arrayType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayType ;
}

void cPtr_arrayType::description (C_String & ioString,
                                  const PMSInt32 /* inIndentation */) const {
  ioString << "[@arrayType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @arrayType type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_arrayType ("arrayType",
                                  & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_arrayType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_arrayType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_arrayType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_arrayType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_arrayType GALGAS_arrayType::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_arrayType result ;
  const GALGAS_arrayType * p = (const GALGAS_arrayType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_arrayType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("arrayType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_bezierPathType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_bezierPathType::objectCompare (const GALGAS_bezierPathType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bezierPathType::GALGAS_bezierPathType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_bezierPathType GALGAS_bezierPathType::constructor_default (LOCATION_ARGS) {
  return GALGAS_bezierPathType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bezierPathType::GALGAS_bezierPathType (const cPtr_bezierPathType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_bezierPathType) ;
}

//---------------------------------------------------------------------------*

GALGAS_bezierPathType GALGAS_bezierPathType::constructor_new (LOCATION_ARGS) {
  GALGAS_bezierPathType result ;
  macroMyNew (result.mObjectPtr, cPtr_bezierPathType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                  Pointer class for @bezierPathType class                  *
//---------------------------------------------------------------------------*

cPtr_bezierPathType::cPtr_bezierPathType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_bezierPathType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bezierPathType ;
}

void cPtr_bezierPathType::description (C_String & ioString,
                                       const PMSInt32 /* inIndentation */) const {
  ioString << "[@bezierPathType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @bezierPathType type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bezierPathType ("bezierPathType",
                                       & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bezierPathType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bezierPathType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bezierPathType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bezierPathType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bezierPathType GALGAS_bezierPathType::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_bezierPathType result ;
  const GALGAS_bezierPathType * p = (const GALGAS_bezierPathType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bezierPathType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bezierPathType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_boolType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_boolType::objectCompare (const GALGAS_boolType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_boolType::GALGAS_boolType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_boolType GALGAS_boolType::constructor_default (LOCATION_ARGS) {
  return GALGAS_boolType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_boolType::GALGAS_boolType (const cPtr_boolType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_boolType) ;
}

//---------------------------------------------------------------------------*

GALGAS_boolType GALGAS_boolType::constructor_new (LOCATION_ARGS) {
  GALGAS_boolType result ;
  macroMyNew (result.mObjectPtr, cPtr_boolType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @boolType class                     *
//---------------------------------------------------------------------------*

cPtr_boolType::cPtr_boolType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_boolType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_boolType ;
}

void cPtr_boolType::description (C_String & ioString,
                                 const PMSInt32 /* inIndentation */) const {
  ioString << "[@boolType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @boolType type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_boolType ("boolType",
                                 & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_boolType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_boolType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_boolType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_boolType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_boolType GALGAS_boolType::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_boolType result ;
  const GALGAS_boolType * p = (const GALGAS_boolType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_boolType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("boolType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_colorType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_colorType::objectCompare (const GALGAS_colorType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_colorType::GALGAS_colorType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_colorType GALGAS_colorType::constructor_default (LOCATION_ARGS) {
  return GALGAS_colorType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_colorType::GALGAS_colorType (const cPtr_colorType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_colorType) ;
}

//---------------------------------------------------------------------------*

GALGAS_colorType GALGAS_colorType::constructor_new (LOCATION_ARGS) {
  GALGAS_colorType result ;
  macroMyNew (result.mObjectPtr, cPtr_colorType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @colorType class                     *
//---------------------------------------------------------------------------*

cPtr_colorType::cPtr_colorType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_colorType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_colorType ;
}

void cPtr_colorType::description (C_String & ioString,
                                  const PMSInt32 /* inIndentation */) const {
  ioString << "[@colorType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @colorType type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_colorType ("colorType",
                                  & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_colorType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_colorType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_colorType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_colorType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_colorType GALGAS_colorType::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_colorType result ;
  const GALGAS_colorType * p = (const GALGAS_colorType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_colorType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("colorType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_dataType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_dataType::objectCompare (const GALGAS_dataType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_dataType::GALGAS_dataType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_dataType GALGAS_dataType::constructor_default (LOCATION_ARGS) {
  return GALGAS_dataType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_dataType::GALGAS_dataType (const cPtr_dataType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_dataType) ;
}

//---------------------------------------------------------------------------*

GALGAS_dataType GALGAS_dataType::constructor_new (LOCATION_ARGS) {
  GALGAS_dataType result ;
  macroMyNew (result.mObjectPtr, cPtr_dataType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @dataType class                     *
//---------------------------------------------------------------------------*

cPtr_dataType::cPtr_dataType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_dataType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dataType ;
}

void cPtr_dataType::description (C_String & ioString,
                                 const PMSInt32 /* inIndentation */) const {
  ioString << "[@dataType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @dataType type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_dataType ("dataType",
                                 & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_dataType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dataType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_dataType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_dataType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_dataType GALGAS_dataType::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_dataType result ;
  const GALGAS_dataType * p = (const GALGAS_dataType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_dataType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("dataType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_dateType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_dateType::objectCompare (const GALGAS_dateType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_dateType::GALGAS_dateType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_dateType GALGAS_dateType::constructor_default (LOCATION_ARGS) {
  return GALGAS_dateType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_dateType::GALGAS_dateType (const cPtr_dateType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_dateType) ;
}

//---------------------------------------------------------------------------*

GALGAS_dateType GALGAS_dateType::constructor_new (LOCATION_ARGS) {
  GALGAS_dateType result ;
  macroMyNew (result.mObjectPtr, cPtr_dateType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @dateType class                     *
//---------------------------------------------------------------------------*

cPtr_dateType::cPtr_dateType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_dateType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dateType ;
}

void cPtr_dateType::description (C_String & ioString,
                                 const PMSInt32 /* inIndentation */) const {
  ioString << "[@dateType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @dateType type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_dateType ("dateType",
                                 & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_dateType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_dateType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_dateType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_dateType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_dateType GALGAS_dateType::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_dateType result ;
  const GALGAS_dateType * p = (const GALGAS_dateType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_dateType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("dateType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_decimalType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_decimalType::objectCompare (const GALGAS_decimalType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_decimalType::GALGAS_decimalType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_decimalType GALGAS_decimalType::constructor_default (LOCATION_ARGS) {
  return GALGAS_decimalType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_decimalType::GALGAS_decimalType (const cPtr_decimalType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_decimalType) ;
}

//---------------------------------------------------------------------------*

GALGAS_decimalType GALGAS_decimalType::constructor_new (LOCATION_ARGS) {
  GALGAS_decimalType result ;
  macroMyNew (result.mObjectPtr, cPtr_decimalType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                   Pointer class for @decimalType class                    *
//---------------------------------------------------------------------------*

cPtr_decimalType::cPtr_decimalType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_decimalType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_decimalType ;
}

void cPtr_decimalType::description (C_String & ioString,
                                    const PMSInt32 /* inIndentation */) const {
  ioString << "[@decimalType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @decimalType type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_decimalType ("decimalType",
                                    & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_decimalType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_decimalType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_decimalType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_decimalType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_decimalType GALGAS_decimalType::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_decimalType result ;
  const GALGAS_decimalType * p = (const GALGAS_decimalType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_decimalType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("decimalType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_doubleType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_doubleType::objectCompare (const GALGAS_doubleType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_doubleType::GALGAS_doubleType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_doubleType GALGAS_doubleType::constructor_default (LOCATION_ARGS) {
  return GALGAS_doubleType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_doubleType::GALGAS_doubleType (const cPtr_doubleType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_doubleType) ;
}

//---------------------------------------------------------------------------*

GALGAS_doubleType GALGAS_doubleType::constructor_new (LOCATION_ARGS) {
  GALGAS_doubleType result ;
  macroMyNew (result.mObjectPtr, cPtr_doubleType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @doubleType class                    *
//---------------------------------------------------------------------------*

cPtr_doubleType::cPtr_doubleType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_doubleType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_doubleType ;
}

void cPtr_doubleType::description (C_String & ioString,
                                   const PMSInt32 /* inIndentation */) const {
  ioString << "[@doubleType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @doubleType type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_doubleType ("doubleType",
                                   & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_doubleType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_doubleType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_doubleType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_doubleType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_doubleType GALGAS_doubleType::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_doubleType result ;
  const GALGAS_doubleType * p = (const GALGAS_doubleType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_doubleType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("doubleType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_enumType::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_enumType * p = (const cPtr_enumType *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_enumType) ;
  if (kOperandEqual == result) {
    result = mAttribute_mEnumTypeName.objectCompare (p->mAttribute_mEnumTypeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_enumType::objectCompare (const GALGAS_enumType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumType::GALGAS_enumType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_enumType GALGAS_enumType::constructor_default (LOCATION_ARGS) {
  return GALGAS_enumType::constructor_new (GALGAS_lstring::constructor_default (HERE)
                                           COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_enumType::GALGAS_enumType (const cPtr_enumType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_enumType) ;
}

//---------------------------------------------------------------------------*

GALGAS_enumType GALGAS_enumType::constructor_new (const GALGAS_lstring & inAttribute_mEnumTypeName
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_enumType result ;
  if (inAttribute_mEnumTypeName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_enumType (inAttribute_mEnumTypeName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_enumType::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_enumType * p = (cPtr_enumType *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_enumType) ;
    cPtr_enumType * r = NULL ;
    macroMyNew (r, cPtr_enumType (p->mAttribute_mEnumTypeName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_enumType::reader_mEnumTypeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstring result ;
  if (NULL != mObjectPtr) {
    const cPtr_enumType * p = (const cPtr_enumType *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_enumType) ;
    result = p->mAttribute_mEnumTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cPtr_enumType::reader_mEnumTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumTypeName ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @enumType class                     *
//---------------------------------------------------------------------------*

cPtr_enumType::cPtr_enumType (const GALGAS_lstring & in_mEnumTypeName
                              COMMA_LOCATION_ARGS) :
cPtr_easyBindingType (THERE),
mAttribute_mEnumTypeName (in_mEnumTypeName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_enumType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumType ;
}

void cPtr_enumType::description (C_String & ioString,
                                 const PMSInt32 inIndentation) const {
  ioString << "[@enumType:" ;
  mAttribute_mEnumTypeName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @enumType type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumType ("enumType",
                                 & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumType GALGAS_enumType::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_enumType result ;
  const GALGAS_enumType * p = (const GALGAS_enumType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_fontType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_fontType::objectCompare (const GALGAS_fontType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fontType::GALGAS_fontType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_fontType GALGAS_fontType::constructor_default (LOCATION_ARGS) {
  return GALGAS_fontType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_fontType::GALGAS_fontType (const cPtr_fontType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_fontType) ;
}

//---------------------------------------------------------------------------*

GALGAS_fontType GALGAS_fontType::constructor_new (LOCATION_ARGS) {
  GALGAS_fontType result ;
  macroMyNew (result.mObjectPtr, cPtr_fontType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @fontType class                     *
//---------------------------------------------------------------------------*

cPtr_fontType::cPtr_fontType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_fontType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_fontType ;
}

void cPtr_fontType::description (C_String & ioString,
                                 const PMSInt32 /* inIndentation */) const {
  ioString << "[@fontType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @fontType type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_fontType ("fontType",
                                 & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_fontType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_fontType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_fontType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_fontType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fontType GALGAS_fontType::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_fontType result ;
  const GALGAS_fontType * p = (const GALGAS_fontType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_fontType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("fontType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_imageType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_imageType::objectCompare (const GALGAS_imageType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_imageType::GALGAS_imageType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_imageType GALGAS_imageType::constructor_default (LOCATION_ARGS) {
  return GALGAS_imageType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_imageType::GALGAS_imageType (const cPtr_imageType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_imageType) ;
}

//---------------------------------------------------------------------------*

GALGAS_imageType GALGAS_imageType::constructor_new (LOCATION_ARGS) {
  GALGAS_imageType result ;
  macroMyNew (result.mObjectPtr, cPtr_imageType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @imageType class                     *
//---------------------------------------------------------------------------*

cPtr_imageType::cPtr_imageType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_imageType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_imageType ;
}

void cPtr_imageType::description (C_String & ioString,
                                  const PMSInt32 /* inIndentation */) const {
  ioString << "[@imageType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @imageType type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_imageType ("imageType",
                                  & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_imageType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_imageType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_imageType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_imageType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_imageType GALGAS_imageType::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_imageType result ;
  const GALGAS_imageType * p = (const GALGAS_imageType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_imageType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("imageType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_integerType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_integerType::objectCompare (const GALGAS_integerType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_integerType::GALGAS_integerType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_integerType GALGAS_integerType::constructor_default (LOCATION_ARGS) {
  return GALGAS_integerType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_integerType::GALGAS_integerType (const cPtr_integerType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_integerType) ;
}

//---------------------------------------------------------------------------*

GALGAS_integerType GALGAS_integerType::constructor_new (LOCATION_ARGS) {
  GALGAS_integerType result ;
  macroMyNew (result.mObjectPtr, cPtr_integerType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                   Pointer class for @integerType class                    *
//---------------------------------------------------------------------------*

cPtr_integerType::cPtr_integerType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_integerType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_integerType ;
}

void cPtr_integerType::description (C_String & ioString,
                                    const PMSInt32 /* inIndentation */) const {
  ioString << "[@integerType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @integerType type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_integerType ("integerType",
                                    & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_integerType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_integerType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_integerType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_integerType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_integerType GALGAS_integerType::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_integerType result ;
  const GALGAS_integerType * p = (const GALGAS_integerType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_integerType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("integerType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_menuType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_menuType::objectCompare (const GALGAS_menuType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_menuType::GALGAS_menuType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_menuType GALGAS_menuType::constructor_default (LOCATION_ARGS) {
  return GALGAS_menuType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_menuType::GALGAS_menuType (const cPtr_menuType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_menuType) ;
}

//---------------------------------------------------------------------------*

GALGAS_menuType GALGAS_menuType::constructor_new (LOCATION_ARGS) {
  GALGAS_menuType result ;
  macroMyNew (result.mObjectPtr, cPtr_menuType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                     Pointer class for @menuType class                     *
//---------------------------------------------------------------------------*

cPtr_menuType::cPtr_menuType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_menuType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_menuType ;
}

void cPtr_menuType::description (C_String & ioString,
                                 const PMSInt32 /* inIndentation */) const {
  ioString << "[@menuType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @menuType type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_menuType ("menuType",
                                 & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_menuType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_menuType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_menuType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_menuType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_menuType GALGAS_menuType::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_menuType result ;
  const GALGAS_menuType * p = (const GALGAS_menuType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_menuType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("menuType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_objectArrayType::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_objectArrayType * p = (const cPtr_objectArrayType *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_objectArrayType) ;
  if (kOperandEqual == result) {
    result = mAttribute_mClassName.objectCompare (p->mAttribute_mClassName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_objectArrayType::objectCompare (const GALGAS_objectArrayType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_objectArrayType::GALGAS_objectArrayType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_objectArrayType GALGAS_objectArrayType::constructor_default (LOCATION_ARGS) {
  return GALGAS_objectArrayType::constructor_new (GALGAS_string::constructor_default (HERE)
                                                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_objectArrayType::GALGAS_objectArrayType (const cPtr_objectArrayType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_objectArrayType) ;
}

//---------------------------------------------------------------------------*

GALGAS_objectArrayType GALGAS_objectArrayType::constructor_new (const GALGAS_string & inAttribute_mClassName
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_objectArrayType result ;
  if (inAttribute_mClassName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_objectArrayType (inAttribute_mClassName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_objectArrayType::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_objectArrayType * p = (cPtr_objectArrayType *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_objectArrayType) ;
    cPtr_objectArrayType * r = NULL ;
    macroMyNew (r, cPtr_objectArrayType (p->mAttribute_mClassName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_objectArrayType::reader_mClassName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_objectArrayType * p = (const cPtr_objectArrayType *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_objectArrayType) ;
    result = p->mAttribute_mClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_objectArrayType::reader_mClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mClassName ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @objectArrayType class                  *
//---------------------------------------------------------------------------*

cPtr_objectArrayType::cPtr_objectArrayType (const GALGAS_string & in_mClassName
                                            COMMA_LOCATION_ARGS) :
cPtr_easyBindingType (THERE),
mAttribute_mClassName (in_mClassName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_objectArrayType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_objectArrayType ;
}

void cPtr_objectArrayType::description (C_String & ioString,
                                        const PMSInt32 inIndentation) const {
  ioString << "[@objectArrayType:" ;
  mAttribute_mClassName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @objectArrayType type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_objectArrayType ("objectArrayType",
                                        & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_objectArrayType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_objectArrayType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_objectArrayType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_objectArrayType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_objectArrayType GALGAS_objectArrayType::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_objectArrayType result ;
  const GALGAS_objectArrayType * p = (const GALGAS_objectArrayType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_objectArrayType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("objectArrayType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_stringType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_stringType::objectCompare (const GALGAS_stringType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringType::GALGAS_stringType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_stringType GALGAS_stringType::constructor_default (LOCATION_ARGS) {
  return GALGAS_stringType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_stringType::GALGAS_stringType (const cPtr_stringType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_stringType) ;
}

//---------------------------------------------------------------------------*

GALGAS_stringType GALGAS_stringType::constructor_new (LOCATION_ARGS) {
  GALGAS_stringType result ;
  macroMyNew (result.mObjectPtr, cPtr_stringType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @stringType class                    *
//---------------------------------------------------------------------------*

cPtr_stringType::cPtr_stringType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_stringType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_stringType ;
}

void cPtr_stringType::description (C_String & ioString,
                                   const PMSInt32 /* inIndentation */) const {
  ioString << "[@stringType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @stringType type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_stringType ("stringType",
                                   & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_stringType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_stringType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_stringType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_stringType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringType GALGAS_stringType::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_stringType result ;
  const GALGAS_stringType * p = (const GALGAS_stringType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_stringType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("stringType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_toManyEntitiesType::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_toManyEntitiesType * p = (const cPtr_toManyEntitiesType *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_toManyEntitiesType) ;
  if (kOperandEqual == result) {
    result = mAttribute_mEntityName.objectCompare (p->mAttribute_mEntityName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_toManyEntitiesType::objectCompare (const GALGAS_toManyEntitiesType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_toManyEntitiesType::GALGAS_toManyEntitiesType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_toManyEntitiesType GALGAS_toManyEntitiesType::constructor_default (LOCATION_ARGS) {
  return GALGAS_toManyEntitiesType::constructor_new (GALGAS_string::constructor_default (HERE)
                                                     COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_toManyEntitiesType::GALGAS_toManyEntitiesType (const cPtr_toManyEntitiesType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_toManyEntitiesType) ;
}

//---------------------------------------------------------------------------*

GALGAS_toManyEntitiesType GALGAS_toManyEntitiesType::constructor_new (const GALGAS_string & inAttribute_mEntityName
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_toManyEntitiesType result ;
  if (inAttribute_mEntityName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_toManyEntitiesType (inAttribute_mEntityName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_toManyEntitiesType::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_toManyEntitiesType * p = (cPtr_toManyEntitiesType *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_toManyEntitiesType) ;
    cPtr_toManyEntitiesType * r = NULL ;
    macroMyNew (r, cPtr_toManyEntitiesType (p->mAttribute_mEntityName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_toManyEntitiesType::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_toManyEntitiesType * p = (const cPtr_toManyEntitiesType *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_toManyEntitiesType) ;
    result = p->mAttribute_mEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_toManyEntitiesType::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityName ;
}

//---------------------------------------------------------------------------*
//                Pointer class for @toManyEntitiesType class                *
//---------------------------------------------------------------------------*

cPtr_toManyEntitiesType::cPtr_toManyEntitiesType (const GALGAS_string & in_mEntityName
                                                  COMMA_LOCATION_ARGS) :
cPtr_easyBindingType (THERE),
mAttribute_mEntityName (in_mEntityName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_toManyEntitiesType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_toManyEntitiesType ;
}

void cPtr_toManyEntitiesType::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "[@toManyEntitiesType:" ;
  mAttribute_mEntityName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @toManyEntitiesType type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_toManyEntitiesType ("toManyEntitiesType",
                                           & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_toManyEntitiesType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_toManyEntitiesType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_toManyEntitiesType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_toManyEntitiesType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_toManyEntitiesType GALGAS_toManyEntitiesType::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_toManyEntitiesType result ;
  const GALGAS_toManyEntitiesType * p = (const GALGAS_toManyEntitiesType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_toManyEntitiesType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("toManyEntitiesType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_toOneEntityType::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_toOneEntityType * p = (const cPtr_toOneEntityType *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_toOneEntityType) ;
  if (kOperandEqual == result) {
    result = mAttribute_mEntityName.objectCompare (p->mAttribute_mEntityName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_toOneEntityType::objectCompare (const GALGAS_toOneEntityType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_toOneEntityType::GALGAS_toOneEntityType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_toOneEntityType GALGAS_toOneEntityType::constructor_default (LOCATION_ARGS) {
  return GALGAS_toOneEntityType::constructor_new (GALGAS_string::constructor_default (HERE)
                                                  COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_toOneEntityType::GALGAS_toOneEntityType (const cPtr_toOneEntityType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_toOneEntityType) ;
}

//---------------------------------------------------------------------------*

GALGAS_toOneEntityType GALGAS_toOneEntityType::constructor_new (const GALGAS_string & inAttribute_mEntityName
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_toOneEntityType result ;
  if (inAttribute_mEntityName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_toOneEntityType (inAttribute_mEntityName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_toOneEntityType::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_toOneEntityType * p = (cPtr_toOneEntityType *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_toOneEntityType) ;
    cPtr_toOneEntityType * r = NULL ;
    macroMyNew (r, cPtr_toOneEntityType (p->mAttribute_mEntityName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_toOneEntityType::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_toOneEntityType * p = (const cPtr_toOneEntityType *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_toOneEntityType) ;
    result = p->mAttribute_mEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_toOneEntityType::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityName ;
}

//---------------------------------------------------------------------------*
//                 Pointer class for @toOneEntityType class                  *
//---------------------------------------------------------------------------*

cPtr_toOneEntityType::cPtr_toOneEntityType (const GALGAS_string & in_mEntityName
                                            COMMA_LOCATION_ARGS) :
cPtr_easyBindingType (THERE),
mAttribute_mEntityName (in_mEntityName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_toOneEntityType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_toOneEntityType ;
}

void cPtr_toOneEntityType::description (C_String & ioString,
                                        const PMSInt32 inIndentation) const {
  ioString << "[@toOneEntityType:" ;
  mAttribute_mEntityName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @toOneEntityType type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_toOneEntityType ("toOneEntityType",
                                        & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_toOneEntityType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_toOneEntityType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_toOneEntityType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_toOneEntityType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_toOneEntityType GALGAS_toOneEntityType::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_toOneEntityType result ;
  const GALGAS_toOneEntityType * p = (const GALGAS_toOneEntityType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_toOneEntityType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("toOneEntityType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_uintegerType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_uintegerType::objectCompare (const GALGAS_uintegerType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uintegerType::GALGAS_uintegerType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_uintegerType GALGAS_uintegerType::constructor_default (LOCATION_ARGS) {
  return GALGAS_uintegerType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_uintegerType::GALGAS_uintegerType (const cPtr_uintegerType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_uintegerType) ;
}

//---------------------------------------------------------------------------*

GALGAS_uintegerType GALGAS_uintegerType::constructor_new (LOCATION_ARGS) {
  GALGAS_uintegerType result ;
  macroMyNew (result.mObjectPtr, cPtr_uintegerType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                   Pointer class for @uintegerType class                   *
//---------------------------------------------------------------------------*

cPtr_uintegerType::cPtr_uintegerType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_uintegerType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_uintegerType ;
}

void cPtr_uintegerType::description (C_String & ioString,
                                     const PMSInt32 /* inIndentation */) const {
  ioString << "[@uintegerType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @uintegerType type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_uintegerType ("uintegerType",
                                     & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_uintegerType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_uintegerType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_uintegerType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_uintegerType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_uintegerType GALGAS_uintegerType::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_uintegerType result ;
  const GALGAS_uintegerType * p = (const GALGAS_uintegerType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_uintegerType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("uintegerType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_valueType::dynamicObjectCompare (const acPtr_class * /* inOperandPtr */) const {
  return kOperandEqual ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_valueType::objectCompare (const GALGAS_valueType & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_valueType::GALGAS_valueType (void) :
GALGAS_easyBindingType () {
}

//---------------------------------------------------------------------------*

GALGAS_valueType GALGAS_valueType::constructor_default (LOCATION_ARGS) {
  return GALGAS_valueType::constructor_new (THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_valueType::GALGAS_valueType (const cPtr_valueType * inSourcePtr) :
GALGAS_easyBindingType (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_valueType) ;
}

//---------------------------------------------------------------------------*

GALGAS_valueType GALGAS_valueType::constructor_new (LOCATION_ARGS) {
  GALGAS_valueType result ;
  macroMyNew (result.mObjectPtr, cPtr_valueType (THERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*
//                    Pointer class for @valueType class                     *
//---------------------------------------------------------------------------*

cPtr_valueType::cPtr_valueType (LOCATION_ARGS) :
cPtr_easyBindingType (THERE) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_valueType::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_valueType ;
}

void cPtr_valueType::description (C_String & ioString,
                                  const PMSInt32 /* inIndentation */) const {
  ioString << "[@valueType]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @valueType type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_valueType ("valueType",
                                  & kTypeDescriptor_GALGAS_easyBindingType) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_valueType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_valueType ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_valueType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_valueType (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_valueType GALGAS_valueType::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_valueType result ;
  const GALGAS_valueType * p = (const GALGAS_valueType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_valueType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("valueType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Abstract category reader '@easyBindingType ebTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_ebTypeName> gCategoryReaderTable_easyBindingType_ebTypeName ;

//---------------------------------------------------------------------------*

void enterCategoryReader_ebTypeName (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_ebTypeName inReader) {
  gCategoryReaderTable_easyBindingType_ebTypeName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_ebTypeName (void) {
  gCategoryReaderTable_easyBindingType_ebTypeName.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_ebTypeName (NULL,
                                                       freeCategoryReader_easyBindingType_ebTypeName) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_ebTypeName (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_ebTypeName f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_ebTypeName.count ()) {
      f = gCategoryReaderTable_easyBindingType_ebTypeName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_ebTypeName.count ()) {
           f = gCategoryReaderTable_easyBindingType_ebTypeName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_ebTypeName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@boolType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("BOOL") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                  categoryReader_boolType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_ebTypeName (defineCategoryReader_boolType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@integerType ebTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                  categoryReader_integerType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_ebTypeName (defineCategoryReader_integerType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@uintegerType ebTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uintegerType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSUInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                                  categoryReader_uintegerType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_ebTypeName (defineCategoryReader_uintegerType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@decimalType ebTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("decimal") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                  categoryReader_decimalType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_ebTypeName (defineCategoryReader_decimalType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@doubleType ebTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("double") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                  categoryReader_doubleType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_ebTypeName (defineCategoryReader_doubleType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@stringType ebTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSString") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                  categoryReader_stringType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_ebTypeName (defineCategoryReader_stringType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dataType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                  categoryReader_dataType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_ebTypeName (defineCategoryReader_dataType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dateType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSDate") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                  categoryReader_dateType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_ebTypeName (defineCategoryReader_dateType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@fontType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSFont") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                  categoryReader_fontType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_ebTypeName (defineCategoryReader_fontType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@imageType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSImage") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                  categoryReader_imageType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_ebTypeName (defineCategoryReader_imageType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@colorType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSColor") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                  categoryReader_colorType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_ebTypeName (defineCategoryReader_colorType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@valueType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                  categoryReader_valueType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_ebTypeName (defineCategoryReader_valueType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@arrayType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                  categoryReader_arrayType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_ebTypeName (defineCategoryReader_arrayType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@objectArrayType ebTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                  categoryReader_objectArrayType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_ebTypeName (defineCategoryReader_objectArrayType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@bezierPathType ebTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSBezierPath") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                  categoryReader_bezierPathType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_ebTypeName (defineCategoryReader_bezierPathType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@menuType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSMenu") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                  categoryReader_menuType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_ebTypeName (defineCategoryReader_menuType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@toOneEntityType ebTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toOneEntityType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("PMManagedEntity") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                                  categoryReader_toOneEntityType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_ebTypeName (defineCategoryReader_toOneEntityType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@toManyEntitiesType ebTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_ebTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                  categoryReader_toManyEntitiesType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_ebTypeName (defineCategoryReader_toManyEntitiesType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@enumType ebTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_ebTypeName (const cPtr_easyBindingType * inObject,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_enumType * object = (const cPtr_enumType *) inObject ;
  macroValidSharedObject (object, const cPtr_enumType) ;
  result_outResult = object->mAttribute_mEnumTypeName.mAttribute_string ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_ebTypeName (void) {
  enterCategoryReader_ebTypeName (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                  categoryReader_enumType_ebTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_ebTypeName (defineCategoryReader_enumType_ebTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Abstract category reader '@easyBindingType isClass'            *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isClass> gCategoryReaderTable_easyBindingType_isClass ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isClass (const PMSInt32 inClassIndex,
                                  categoryReaderSignature_easyBindingType_isClass inReader) {
  gCategoryReaderTable_easyBindingType_isClass.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isClass (void) {
  gCategoryReaderTable_easyBindingType_isClass.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isClass (NULL,
                                                    freeCategoryReader_easyBindingType_isClass) ;

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isClass (const cPtr_easyBindingType * inObject,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isClass f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isClass.count ()) {
      f = gCategoryReaderTable_easyBindingType_isClass (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isClass.count ()) {
           f = gCategoryReaderTable_easyBindingType_isClass (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isClass.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@boolType isClass'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_boolType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_boolType.mSlotID,
                               categoryReader_boolType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_isClass (defineCategoryReader_boolType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@decimalType isClass'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_decimalType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                               categoryReader_decimalType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_isClass (defineCategoryReader_decimalType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@integerType isClass'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_integerType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_integerType.mSlotID,
                               categoryReader_integerType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_isClass (defineCategoryReader_integerType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@uintegerType isClass'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_uintegerType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                        C_Compiler * /* inCompiler */
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                               categoryReader_uintegerType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_isClass (defineCategoryReader_uintegerType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@doubleType isClass'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_doubleType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                               categoryReader_doubleType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_isClass (defineCategoryReader_doubleType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@stringType isClass'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_stringType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_stringType.mSlotID,
                               categoryReader_stringType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_isClass (defineCategoryReader_stringType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@fontType isClass'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_fontType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_fontType.mSlotID,
                               categoryReader_fontType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_isClass (defineCategoryReader_fontType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@imageType isClass'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_imageType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_imageType.mSlotID,
                               categoryReader_imageType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_isClass (defineCategoryReader_imageType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@toOneEntityType isClass'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_toOneEntityType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                               categoryReader_toOneEntityType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_isClass (defineCategoryReader_toOneEntityType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@toManyEntitiesType isClass'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_toManyEntitiesType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                               categoryReader_toManyEntitiesType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_isClass (defineCategoryReader_toManyEntitiesType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@colorType isClass'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_colorType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_colorType.mSlotID,
                               categoryReader_colorType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_isClass (defineCategoryReader_colorType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@dataType isClass'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_dataType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_dataType.mSlotID,
                               categoryReader_dataType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_isClass (defineCategoryReader_dataType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@dateType isClass'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_dateType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_dateType.mSlotID,
                               categoryReader_dateType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_isClass (defineCategoryReader_dateType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@arrayType isClass'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_arrayType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                               categoryReader_arrayType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_isClass (defineCategoryReader_arrayType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@valueType isClass'              *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_valueType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_valueType.mSlotID,
                               categoryReader_valueType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_isClass (defineCategoryReader_valueType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@objectArrayType isClass'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_objectArrayType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                               categoryReader_objectArrayType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_isClass (defineCategoryReader_objectArrayType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@bezierPathType isClass'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_bezierPathType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                               categoryReader_bezierPathType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_isClass (defineCategoryReader_bezierPathType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@menuType isClass'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_menuType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_menuType.mSlotID,
                               categoryReader_menuType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_isClass (defineCategoryReader_menuType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Overriding category reader '@enumType isClass'               *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_enumType_isClass (const cPtr_easyBindingType * /* inObject */,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_isClass (void) {
  enterCategoryReader_isClass (kTypeDescriptor_GALGAS_enumType.mSlotID,
                               categoryReader_enumType_isClass) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_isClass (defineCategoryReader_enumType_isClass, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@easyBindingType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_preferencesGetterTransformerFunctionName> gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName ;

//---------------------------------------------------------------------------*

void enterCategoryReader_preferencesGetterTransformerFunctionName (const PMSInt32 inClassIndex,
                                                                   categoryReaderSignature_easyBindingType_preferencesGetterTransformerFunctionName inReader) {
  gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * inObject,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_preferencesGetterTransformerFunctionName f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName.count ()) {
      f = gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName.count ()) {
           f = gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                              C_Compiler * /* inCompiler */
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                                                categoryReader_easyBindingType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_preferencesGetterTransformerFunctionName (void) {
  gCategoryReaderTable_easyBindingType_preferencesGetterTransformerFunctionName.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_preferencesGetterTransformerFunctionName (defineCategoryReader_easyBindingType_preferencesGetterTransformerFunctionName,
                                                                                     freeCategoryReader_easyBindingType_preferencesGetterTransformerFunctionName) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@boolType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("boolFromNSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                                                categoryReader_boolType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_preferencesGetterTransformerFunctionName (defineCategoryReader_boolType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@integerType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSIntegerFromNSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                                                categoryReader_integerType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_preferencesGetterTransformerFunctionName (defineCategoryReader_integerType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@enumType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * inObject,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_enumType * object = (const cPtr_enumType *) inObject ;
  macroValidSharedObject (object, const cPtr_enumType) ;
  result_outResult = GALGAS_string ("(").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (92)) COMMA_SOURCE_FILE_AT_LINE (92)).operator_concat (GALGAS_string (") NSIntegerFromNSNumber") COMMA_SOURCE_FILE_AT_LINE (92)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                                                categoryReader_enumType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_preferencesGetterTransformerFunctionName (defineCategoryReader_enumType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@doubleType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("doubleFromNSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                                                categoryReader_doubleType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_preferencesGetterTransformerFunctionName (defineCategoryReader_doubleType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@fontType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("fontFromData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                                                categoryReader_fontType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_preferencesGetterTransformerFunctionName (defineCategoryReader_fontType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@colorType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("valueFromData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                                                categoryReader_colorType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_preferencesGetterTransformerFunctionName (defineCategoryReader_colorType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@arrayType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("valueFromData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                                                categoryReader_arrayType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_preferencesGetterTransformerFunctionName (defineCategoryReader_arrayType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@valueType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("valueFromData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                                                categoryReader_valueType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_preferencesGetterTransformerFunctionName (defineCategoryReader_valueType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@bezierPathType preferencesGetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_preferencesGetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("valueFromData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_preferencesGetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesGetterTransformerFunctionName (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                                                categoryReader_bezierPathType_preferencesGetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_preferencesGetterTransformerFunctionName (defineCategoryReader_bezierPathType_preferencesGetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Category reader '@easyBindingType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_preferencesSetterTransformerFunctionName> gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName ;

//---------------------------------------------------------------------------*

void enterCategoryReader_preferencesSetterTransformerFunctionName (const PMSInt32 inClassIndex,
                                                                   categoryReaderSignature_easyBindingType_preferencesSetterTransformerFunctionName inReader) {
  gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * inObject,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_preferencesSetterTransformerFunctionName f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName.count ()) {
      f = gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName.count ()) {
           f = gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                              C_Compiler * /* inCompiler */
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                                                categoryReader_easyBindingType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_preferencesSetterTransformerFunctionName (void) {
  gCategoryReaderTable_easyBindingType_preferencesSetterTransformerFunctionName.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_preferencesSetterTransformerFunctionName (defineCategoryReader_easyBindingType_preferencesSetterTransformerFunctionName,
                                                                                     freeCategoryReader_easyBindingType_preferencesSetterTransformerFunctionName) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@boolType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("numberEncodedBool") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                                                categoryReader_boolType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_preferencesSetterTransformerFunctionName (defineCategoryReader_boolType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@integerType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("numberEncodedNSInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                                                categoryReader_integerType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_preferencesSetterTransformerFunctionName (defineCategoryReader_integerType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@enumType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("numberEncodedNSInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                                                categoryReader_enumType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_preferencesSetterTransformerFunctionName (defineCategoryReader_enumType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@doubleType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                         C_Compiler * /* inCompiler */
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("numberEncodedDouble") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                                                categoryReader_doubleType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_preferencesSetterTransformerFunctionName (defineCategoryReader_doubleType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@fontType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("dataFromFont") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                                                categoryReader_fontType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_preferencesSetterTransformerFunctionName (defineCategoryReader_fontType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@colorType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("dataEncodedValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                                                categoryReader_colorType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_preferencesSetterTransformerFunctionName (defineCategoryReader_colorType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@arrayType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("dataEncodedValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                                                categoryReader_arrayType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_preferencesSetterTransformerFunctionName (defineCategoryReader_arrayType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@valueType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                        C_Compiler * /* inCompiler */
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("dataEncodedValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                                                categoryReader_valueType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_preferencesSetterTransformerFunctionName (defineCategoryReader_valueType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@bezierPathType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                             C_Compiler * /* inCompiler */
                                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("dataEncodedValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                                                categoryReader_bezierPathType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_preferencesSetterTransformerFunctionName (defineCategoryReader_bezierPathType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@menuType preferencesSetterTransformerFunctionName'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_preferencesSetterTransformerFunctionName (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("dataEncodedValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_preferencesSetterTransformerFunctionName (void) {
  enterCategoryReader_preferencesSetterTransformerFunctionName (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                                                categoryReader_menuType_preferencesSetterTransformerFunctionName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_preferencesSetterTransformerFunctionName (defineCategoryReader_menuType_preferencesSetterTransformerFunctionName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@easyBindingType propertyAttributeString'         *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_propertyAttributeString> gCategoryReaderTable_easyBindingType_propertyAttributeString ;

//---------------------------------------------------------------------------*

void enterCategoryReader_propertyAttributeString (const PMSInt32 inClassIndex,
                                                  categoryReaderSignature_easyBindingType_propertyAttributeString inReader) {
  gCategoryReaderTable_easyBindingType_propertyAttributeString.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_propertyAttributeString (const cPtr_easyBindingType * inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_propertyAttributeString f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_propertyAttributeString.count ()) {
      f = gCategoryReaderTable_easyBindingType_propertyAttributeString (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_propertyAttributeString.count ()) {
           f = gCategoryReaderTable_easyBindingType_propertyAttributeString (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_propertyAttributeString.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                               categoryReader_easyBindingType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_propertyAttributeString (void) {
  gCategoryReaderTable_easyBindingType_propertyAttributeString.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_propertyAttributeString (defineCategoryReader_easyBindingType_propertyAttributeString,
                                                                    freeCategoryReader_easyBindingType_propertyAttributeString) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@stringType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                               categoryReader_stringType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_propertyAttributeString (defineCategoryReader_stringType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@arrayType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                               categoryReader_arrayType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_propertyAttributeString (defineCategoryReader_arrayType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@valueType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                               categoryReader_valueType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_propertyAttributeString (defineCategoryReader_valueType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@bezierPathType propertyAttributeString'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                               categoryReader_bezierPathType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_propertyAttributeString (defineCategoryReader_bezierPathType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@menuType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                               categoryReader_menuType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_propertyAttributeString (defineCategoryReader_menuType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@colorType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                               categoryReader_colorType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_propertyAttributeString (defineCategoryReader_colorType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@dateType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                               categoryReader_dateType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_propertyAttributeString (defineCategoryReader_dateType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@fontType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string (" (copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                               categoryReader_fontType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_propertyAttributeString (defineCategoryReader_fontType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Category reader '@easyBindingType requiredCellTypeInTableColumnBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_requiredCellTypeInTableColumnBinding> gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_requiredCellTypeInTableColumnBinding (const PMSInt32 inClassIndex,
                                                               categoryReaderSignature_easyBindingType_requiredCellTypeInTableColumnBinding inReader) {
  gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * inObject,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_requiredCellTypeInTableColumnBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding.count ()) {
      f = gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding.count ()) {
           f = gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                                            categoryReader_easyBindingType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_requiredCellTypeInTableColumnBinding (void) {
  gCategoryReaderTable_easyBindingType_requiredCellTypeInTableColumnBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_requiredCellTypeInTableColumnBinding (defineCategoryReader_easyBindingType_requiredCellTypeInTableColumnBinding,
                                                                                 freeCategoryReader_easyBindingType_requiredCellTypeInTableColumnBinding) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@boolType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSButtonCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                                            categoryReader_boolType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_requiredCellTypeInTableColumnBinding (defineCategoryReader_boolType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@integerType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSTextFieldCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                                            categoryReader_integerType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_requiredCellTypeInTableColumnBinding (defineCategoryReader_integerType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@uintegerType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uintegerType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSTextFieldCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                                                            categoryReader_uintegerType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_requiredCellTypeInTableColumnBinding (defineCategoryReader_uintegerType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@decimalType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSTextFieldCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                                            categoryReader_decimalType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_requiredCellTypeInTableColumnBinding (defineCategoryReader_decimalType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@doubleType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                     C_Compiler * /* inCompiler */
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSTextFieldCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                                            categoryReader_doubleType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_requiredCellTypeInTableColumnBinding (defineCategoryReader_doubleType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@stringType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                     C_Compiler * /* inCompiler */
                                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSTextFieldCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                                            categoryReader_stringType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_requiredCellTypeInTableColumnBinding (defineCategoryReader_stringType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@dateType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSDateFieldCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                                            categoryReader_dateType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_requiredCellTypeInTableColumnBinding (defineCategoryReader_dateType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@imageType requiredCellTypeInTableColumnBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_requiredCellTypeInTableColumnBinding (const cPtr_easyBindingType * /* inObject */,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSImageCell") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_requiredCellTypeInTableColumnBinding (void) {
  enterCategoryReader_requiredCellTypeInTableColumnBinding (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                                            categoryReader_imageType_requiredCellTypeInTableColumnBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_requiredCellTypeInTableColumnBinding (defineCategoryReader_imageType_requiredCellTypeInTableColumnBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@easyBindingType equalMethod'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_equalMethod> gCategoryReaderTable_easyBindingType_equalMethod ;

//---------------------------------------------------------------------------*

void enterCategoryReader_equalMethod (const PMSInt32 inClassIndex,
                                      categoryReaderSignature_easyBindingType_equalMethod inReader) {
  gCategoryReaderTable_easyBindingType_equalMethod.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_equalMethod (const cPtr_easyBindingType * inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_equalMethod f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_equalMethod.count ()) {
      f = gCategoryReaderTable_easyBindingType_equalMethod (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_equalMethod.count ()) {
           f = gCategoryReaderTable_easyBindingType_equalMethod (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_equalMethod.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                   categoryReader_easyBindingType_equalMethod) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_equalMethod (void) {
  gCategoryReaderTable_easyBindingType_equalMethod.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_equalMethod (defineCategoryReader_easyBindingType_equalMethod,
                                                        freeCategoryReader_easyBindingType_equalMethod) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@stringType equalMethod'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqualToString") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                   categoryReader_stringType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_equalMethod (defineCategoryReader_stringType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@dataType equalMethod'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                   categoryReader_dataType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_equalMethod (defineCategoryReader_dataType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@dateType equalMethod'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                   categoryReader_dateType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_equalMethod (defineCategoryReader_dateType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@fontType equalMethod'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                   categoryReader_fontType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_equalMethod (defineCategoryReader_fontType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@imageType equalMethod'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                   categoryReader_imageType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_equalMethod (defineCategoryReader_imageType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@colorType equalMethod'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                   categoryReader_colorType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_equalMethod (defineCategoryReader_colorType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@arrayType equalMethod'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                   categoryReader_arrayType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_equalMethod (defineCategoryReader_arrayType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@valueType equalMethod'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                   categoryReader_valueType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_equalMethod (defineCategoryReader_valueType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@objectArrayType equalMethod'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                   categoryReader_objectArrayType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_equalMethod (defineCategoryReader_objectArrayType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@bezierPathType equalMethod'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                   categoryReader_bezierPathType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_equalMethod (defineCategoryReader_bezierPathType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@menuType equalMethod'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_equalMethod (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("isEqual") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_equalMethod (void) {
  enterCategoryReader_equalMethod (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                   categoryReader_menuType_equalMethod) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_equalMethod (defineCategoryReader_menuType_equalMethod, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Category reader '@easyBindingType hasCustomExplorerFunction'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_hasCustomExplorerFunction> gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction ;

//---------------------------------------------------------------------------*

void enterCategoryReader_hasCustomExplorerFunction (const PMSInt32 inClassIndex,
                                                    categoryReaderSignature_easyBindingType_hasCustomExplorerFunction inReader) {
  gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_hasCustomExplorerFunction (const cPtr_easyBindingType * inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_hasCustomExplorerFunction f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction.count ()) {
      f = gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction.count ()) {
           f = gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_hasCustomExplorerFunction (const cPtr_easyBindingType * /* inObject */,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_hasCustomExplorerFunction (void) {
  enterCategoryReader_hasCustomExplorerFunction (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                                 categoryReader_easyBindingType_hasCustomExplorerFunction) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_hasCustomExplorerFunction (void) {
  gCategoryReaderTable_easyBindingType_hasCustomExplorerFunction.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_hasCustomExplorerFunction (defineCategoryReader_easyBindingType_hasCustomExplorerFunction,
                                                                      freeCategoryReader_easyBindingType_hasCustomExplorerFunction) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@boolType hasCustomExplorerFunction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_boolType_hasCustomExplorerFunction (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_hasCustomExplorerFunction (void) {
  enterCategoryReader_hasCustomExplorerFunction (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                                 categoryReader_boolType_hasCustomExplorerFunction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_hasCustomExplorerFunction (defineCategoryReader_boolType_hasCustomExplorerFunction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@enumType hasCustomExplorerFunction'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_enumType_hasCustomExplorerFunction (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_hasCustomExplorerFunction (void) {
  enterCategoryReader_hasCustomExplorerFunction (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                                 categoryReader_enumType_hasCustomExplorerFunction) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_hasCustomExplorerFunction (defineCategoryReader_enumType_hasCustomExplorerFunction, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category reader '@easyBindingType notEqualExpression'       *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_notEqualExpression> gCategoryReaderTable_easyBindingType_notEqualExpression ;

//---------------------------------------------------------------------------*

void enterCategoryReader_notEqualExpression (const PMSInt32 inClassIndex,
                                             categoryReaderSignature_easyBindingType_notEqualExpression inReader) {
  gCategoryReaderTable_easyBindingType_notEqualExpression.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_notEqualExpression (void) {
  gCategoryReaderTable_easyBindingType_notEqualExpression.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_notEqualExpression (NULL,
                                                               freeCategoryReader_easyBindingType_notEqualExpression) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_notEqualExpression (const cPtr_easyBindingType * inObject,
                                                     const GALGAS_string & in_inExp_31_,
                                                     const GALGAS_string & in_inExp_32_,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_notEqualExpression f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_notEqualExpression.count ()) {
      f = gCategoryReaderTable_easyBindingType_notEqualExpression (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_notEqualExpression.count ()) {
           f = gCategoryReaderTable_easyBindingType_notEqualExpression (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_notEqualExpression.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inExp_31_, in_inExp_32_, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category reader '@integerType notEqualExpression'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                    const GALGAS_string & constinArgument_inExp_31_,
                                                                    const GALGAS_string & constinArgument_inExp_32_,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (204)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                          categoryReader_integerType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_notEqualExpression (defineCategoryReader_integerType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category reader '@uintegerType notEqualExpression'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uintegerType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                     const GALGAS_string & constinArgument_inExp_31_,
                                                                     const GALGAS_string & constinArgument_inExp_32_,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (214)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (214)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                                          categoryReader_uintegerType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_notEqualExpression (defineCategoryReader_uintegerType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@boolType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                 const GALGAS_string & constinArgument_inExp_31_,
                                                                 const GALGAS_string & constinArgument_inExp_32_,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (224)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (224)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                          categoryReader_boolType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_notEqualExpression (defineCategoryReader_boolType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@doubleType notEqualExpression'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                   const GALGAS_string & constinArgument_inExp_31_,
                                                                   const GALGAS_string & constinArgument_inExp_32_,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (234)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (234)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                          categoryReader_doubleType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_notEqualExpression (defineCategoryReader_doubleType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@enumType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                 const GALGAS_string & constinArgument_inExp_31_,
                                                                 const GALGAS_string & constinArgument_inExp_32_,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (244)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (244)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                          categoryReader_enumType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_notEqualExpression (defineCategoryReader_enumType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@toOneEntityType notEqualExpression'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toOneEntityType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                        const GALGAS_string & constinArgument_inExp_31_,
                                                                        const GALGAS_string & constinArgument_inExp_32_,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" != ") COMMA_SOURCE_FILE_AT_LINE (254)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (254)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                                          categoryReader_toOneEntityType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_notEqualExpression (defineCategoryReader_toOneEntityType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category reader '@decimalType notEqualExpression'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                    const GALGAS_string & constinArgument_inExp_31_,
                                                                    const GALGAS_string & constinArgument_inExp_32_,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (264)).operator_concat (GALGAS_string (" isEqualToString:") COMMA_SOURCE_FILE_AT_LINE (264)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (264)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (264)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                          categoryReader_decimalType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_notEqualExpression (defineCategoryReader_decimalType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@toManyEntitiesType notEqualExpression'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                           const GALGAS_string & constinArgument_inExp_31_,
                                                                           const GALGAS_string & constinArgument_inExp_32_,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (274)).operator_concat (GALGAS_string (" isEqualToString:") COMMA_SOURCE_FILE_AT_LINE (274)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (274)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (274)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                          categoryReader_toManyEntitiesType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_notEqualExpression (defineCategoryReader_toManyEntitiesType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@stringType notEqualExpression'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                   const GALGAS_string & constinArgument_inExp_31_,
                                                                   const GALGAS_string & constinArgument_inExp_32_,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (284)).operator_concat (GALGAS_string (" isEqualToString:") COMMA_SOURCE_FILE_AT_LINE (284)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (284)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (284)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                          categoryReader_stringType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_notEqualExpression (defineCategoryReader_stringType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@dataType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                 const GALGAS_string & constinArgument_inExp_31_,
                                                                 const GALGAS_string & constinArgument_inExp_32_,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (294)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (294)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                          categoryReader_dataType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_notEqualExpression (defineCategoryReader_dataType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@dateType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                 const GALGAS_string & constinArgument_inExp_31_,
                                                                 const GALGAS_string & constinArgument_inExp_32_,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (304)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (304)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (304)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (304)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                          categoryReader_dateType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_notEqualExpression (defineCategoryReader_dateType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@fontType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                 const GALGAS_string & constinArgument_inExp_31_,
                                                                 const GALGAS_string & constinArgument_inExp_32_,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (314)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (314)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (314)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (314)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                          categoryReader_fontType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_notEqualExpression (defineCategoryReader_fontType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@imageType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                  const GALGAS_string & constinArgument_inExp_31_,
                                                                  const GALGAS_string & constinArgument_inExp_32_,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (324)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (324)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (324)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (324)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                          categoryReader_imageType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_notEqualExpression (defineCategoryReader_imageType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@colorType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                  const GALGAS_string & constinArgument_inExp_31_,
                                                                  const GALGAS_string & constinArgument_inExp_32_,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (334)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (334)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (334)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (334)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                          categoryReader_colorType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_notEqualExpression (defineCategoryReader_colorType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@arrayType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                  const GALGAS_string & constinArgument_inExp_31_,
                                                                  const GALGAS_string & constinArgument_inExp_32_,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (344)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (344)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (344)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (344)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                          categoryReader_arrayType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_notEqualExpression (defineCategoryReader_arrayType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@valueType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                  const GALGAS_string & constinArgument_inExp_31_,
                                                                  const GALGAS_string & constinArgument_inExp_32_,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (354)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (354)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                          categoryReader_valueType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_notEqualExpression (defineCategoryReader_valueType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@objectArrayType notEqualExpression'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                        const GALGAS_string & constinArgument_inExp_31_,
                                                                        const GALGAS_string & constinArgument_inExp_32_,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (364)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (364)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (364)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (364)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                          categoryReader_objectArrayType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_notEqualExpression (defineCategoryReader_objectArrayType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@bezierPathType notEqualExpression'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                       const GALGAS_string & constinArgument_inExp_31_,
                                                                       const GALGAS_string & constinArgument_inExp_32_,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (374)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (374)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (374)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (374)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                          categoryReader_bezierPathType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_notEqualExpression (defineCategoryReader_bezierPathType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@menuType notEqualExpression'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_notEqualExpression (const cPtr_easyBindingType * /* inObject */,
                                                                 const GALGAS_string & constinArgument_inExp_31_,
                                                                 const GALGAS_string & constinArgument_inExp_32_,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("! [").operator_concat (constinArgument_inExp_31_ COMMA_SOURCE_FILE_AT_LINE (384)).operator_concat (GALGAS_string (" isEqual:") COMMA_SOURCE_FILE_AT_LINE (384)).operator_concat (constinArgument_inExp_32_ COMMA_SOURCE_FILE_AT_LINE (384)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (384)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_notEqualExpression (void) {
  enterCategoryReader_notEqualExpression (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                          categoryReader_menuType_notEqualExpression) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_notEqualExpression (defineCategoryReader_menuType_notEqualExpression, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Abstract category reader '@easyBindingType ebTypeIdentifier'        *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_ebTypeIdentifier> gCategoryReaderTable_easyBindingType_ebTypeIdentifier ;

//---------------------------------------------------------------------------*

void enterCategoryReader_ebTypeIdentifier (const PMSInt32 inClassIndex,
                                           categoryReaderSignature_easyBindingType_ebTypeIdentifier inReader) {
  gCategoryReaderTable_easyBindingType_ebTypeIdentifier.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_ebTypeIdentifier (void) {
  gCategoryReaderTable_easyBindingType_ebTypeIdentifier.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_ebTypeIdentifier (NULL,
                                                             freeCategoryReader_easyBindingType_ebTypeIdentifier) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_ebTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_ebTypeIdentifier f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_ebTypeIdentifier.count ()) {
      f = gCategoryReaderTable_easyBindingType_ebTypeIdentifier (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_ebTypeIdentifier.count ()) {
           f = gCategoryReaderTable_easyBindingType_ebTypeIdentifier (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_ebTypeIdentifier.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@boolType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("bool") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                        categoryReader_boolType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_ebTypeIdentifier (defineCategoryReader_boolType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@integerType ebTypeIdentifier'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("integer") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                        categoryReader_integerType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_ebTypeIdentifier (defineCategoryReader_integerType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@uintegerType ebTypeIdentifier'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uintegerType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("unsignedInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                                        categoryReader_uintegerType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_ebTypeIdentifier (defineCategoryReader_uintegerType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@decimalType ebTypeIdentifier'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                  C_Compiler * /* inCompiler */
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("decimal") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                        categoryReader_decimalType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_ebTypeIdentifier (defineCategoryReader_decimalType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@doubleType ebTypeIdentifier'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("double") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                        categoryReader_doubleType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_ebTypeIdentifier (defineCategoryReader_doubleType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@stringType ebTypeIdentifier'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSString") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                        categoryReader_stringType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_ebTypeIdentifier (defineCategoryReader_stringType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@dataType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                        categoryReader_dataType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_ebTypeIdentifier (defineCategoryReader_dataType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@dateType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSDate") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                        categoryReader_dateType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_ebTypeIdentifier (defineCategoryReader_dateType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@fontType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSFont") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                        categoryReader_fontType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_ebTypeIdentifier (defineCategoryReader_fontType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@imageType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSImage") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                        categoryReader_imageType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_ebTypeIdentifier (defineCategoryReader_imageType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@colorType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSColor") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                        categoryReader_colorType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_ebTypeIdentifier (defineCategoryReader_colorType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@arrayType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                        categoryReader_arrayType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_ebTypeIdentifier (defineCategoryReader_arrayType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@valueType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                        categoryReader_valueType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_ebTypeIdentifier (defineCategoryReader_valueType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@menuType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSMenu") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                        categoryReader_menuType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_ebTypeIdentifier (defineCategoryReader_menuType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category reader '@bezierPathType ebTypeIdentifier'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_ebTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSBezierPath") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                        categoryReader_bezierPathType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_ebTypeIdentifier (defineCategoryReader_bezierPathType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@toOneEntityType ebTypeIdentifier'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toOneEntityType_ebTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_toOneEntityType * object = (const cPtr_toOneEntityType *) inObject ;
  macroValidSharedObject (object, const cPtr_toOneEntityType) ;
  result_outResult = GALGAS_string ("toOne[").operator_concat (object->mAttribute_mEntityName COMMA_SOURCE_FILE_AT_LINE (408)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (408)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                                        categoryReader_toOneEntityType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_ebTypeIdentifier (defineCategoryReader_toOneEntityType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@toManyEntitiesType ebTypeIdentifier'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_ebTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_toManyEntitiesType * object = (const cPtr_toManyEntitiesType *) inObject ;
  macroValidSharedObject (object, const cPtr_toManyEntitiesType) ;
  result_outResult = GALGAS_string ("toMany[").operator_concat (object->mAttribute_mEntityName COMMA_SOURCE_FILE_AT_LINE (409)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (409)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                        categoryReader_toManyEntitiesType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_ebTypeIdentifier (defineCategoryReader_toManyEntitiesType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@objectArrayType ebTypeIdentifier'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_ebTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_objectArrayType * object = (const cPtr_objectArrayType *) inObject ;
  macroValidSharedObject (object, const cPtr_objectArrayType) ;
  result_outResult = GALGAS_string ("array[").operator_concat (object->mAttribute_mClassName COMMA_SOURCE_FILE_AT_LINE (410)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (410)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                        categoryReader_objectArrayType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_ebTypeIdentifier (defineCategoryReader_objectArrayType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@enumType ebTypeIdentifier'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_ebTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_enumType * object = (const cPtr_enumType *) inObject ;
  macroValidSharedObject (object, const cPtr_enumType) ;
  result_outResult = GALGAS_string ("enum[").operator_concat (object->mAttribute_mEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (412)) COMMA_SOURCE_FILE_AT_LINE (412)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (412)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_ebTypeIdentifier (void) {
  enterCategoryReader_ebTypeIdentifier (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                        categoryReader_enumType_ebTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_ebTypeIdentifier (defineCategoryReader_enumType_ebTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Category reader '@easyBindingType ebGenericTypeIdentifier'         *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_ebGenericTypeIdentifier> gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier ;

//---------------------------------------------------------------------------*

void enterCategoryReader_ebGenericTypeIdentifier (const PMSInt32 inClassIndex,
                                                  categoryReaderSignature_easyBindingType_ebGenericTypeIdentifier inReader) {
  gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_ebGenericTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                          const GALGAS_string & in_inTypeName,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_ebGenericTypeIdentifier f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier.count ()) {
      f = gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier.count ()) {
           f = gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inTypeName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_ebGenericTypeIdentifier (const cPtr_easyBindingType * inObject,
                                                                             const GALGAS_string & /* constinArgument_inTypeName */,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_easyBindingType * object = inObject ;
  macroValidSharedObject (object, const cPtr_easyBindingType) ;
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_easyBindingType temp_0 = object ;
  result_outResult = callCategoryReader_ebTypeIdentifier ((const cPtr_easyBindingType *) temp_0.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (418)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_ebGenericTypeIdentifier (void) {
  enterCategoryReader_ebGenericTypeIdentifier (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                               categoryReader_easyBindingType_ebGenericTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_ebGenericTypeIdentifier (void) {
  gCategoryReaderTable_easyBindingType_ebGenericTypeIdentifier.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_ebGenericTypeIdentifier (defineCategoryReader_easyBindingType_ebGenericTypeIdentifier,
                                                                    freeCategoryReader_easyBindingType_ebGenericTypeIdentifier) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@toManyEntitiesType ebGenericTypeIdentifier'  *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_ebGenericTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                                const GALGAS_string & constinArgument_inTypeName,
                                                                                C_Compiler * /* inCompiler */
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("toMany[").operator_concat (constinArgument_inTypeName COMMA_SOURCE_FILE_AT_LINE (425)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (425)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_ebGenericTypeIdentifier (void) {
  enterCategoryReader_ebGenericTypeIdentifier (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                               categoryReader_toManyEntitiesType_ebGenericTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_ebGenericTypeIdentifier (defineCategoryReader_toManyEntitiesType_ebGenericTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@objectArrayType ebGenericTypeIdentifier'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_ebGenericTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                             const GALGAS_string & constinArgument_inTypeName,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("array[").operator_concat (constinArgument_inTypeName COMMA_SOURCE_FILE_AT_LINE (432)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (432)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_ebGenericTypeIdentifier (void) {
  enterCategoryReader_ebGenericTypeIdentifier (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                               categoryReader_objectArrayType_ebGenericTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_ebGenericTypeIdentifier (defineCategoryReader_objectArrayType_ebGenericTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@enumType ebGenericTypeIdentifier'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_ebGenericTypeIdentifier (const cPtr_easyBindingType * /* inObject */,
                                                                      const GALGAS_string & constinArgument_inTypeName,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("enum[").operator_concat (constinArgument_inTypeName COMMA_SOURCE_FILE_AT_LINE (439)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (439)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_ebGenericTypeIdentifier (void) {
  enterCategoryReader_ebGenericTypeIdentifier (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                               categoryReader_enumType_ebGenericTypeIdentifier) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_ebGenericTypeIdentifier (defineCategoryReader_enumType_ebGenericTypeIdentifier, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Abstract category reader '@easyBindingType ocTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_ocTypeName> gCategoryReaderTable_easyBindingType_ocTypeName ;

//---------------------------------------------------------------------------*

void enterCategoryReader_ocTypeName (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_ocTypeName inReader) {
  gCategoryReaderTable_easyBindingType_ocTypeName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_ocTypeName (void) {
  gCategoryReaderTable_easyBindingType_ocTypeName.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_ocTypeName (NULL,
                                                       freeCategoryReader_easyBindingType_ocTypeName) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_ocTypeName (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_ocTypeName f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_ocTypeName.count ()) {
      f = gCategoryReaderTable_easyBindingType_ocTypeName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_ocTypeName.count ()) {
           f = gCategoryReaderTable_easyBindingType_ocTypeName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_ocTypeName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@boolType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("BOOL") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                  categoryReader_boolType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_ocTypeName (defineCategoryReader_boolType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@integerType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                  categoryReader_integerType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_ocTypeName (defineCategoryReader_integerType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@uintegerType ocTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uintegerType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSUInteger") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                                  categoryReader_uintegerType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_ocTypeName (defineCategoryReader_uintegerType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@decimalType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSDecimal") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                  categoryReader_decimalType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_ocTypeName (defineCategoryReader_decimalType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@doubleType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("double") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                  categoryReader_doubleType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_ocTypeName (defineCategoryReader_doubleType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@stringType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSString *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                  categoryReader_stringType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_ocTypeName (defineCategoryReader_stringType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@fontType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSFont *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                  categoryReader_fontType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_ocTypeName (defineCategoryReader_fontType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@imageType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSImage *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                  categoryReader_imageType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_ocTypeName (defineCategoryReader_imageType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@colorType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSColor *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                  categoryReader_colorType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_ocTypeName (defineCategoryReader_colorType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dataType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSData *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                  categoryReader_dataType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_ocTypeName (defineCategoryReader_dataType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dateType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSDate *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                  categoryReader_dateType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_ocTypeName (defineCategoryReader_dateType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@arrayType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                  categoryReader_arrayType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_ocTypeName (defineCategoryReader_arrayType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@objectArrayType ocTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                  categoryReader_objectArrayType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_ocTypeName (defineCategoryReader_objectArrayType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@valueType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSValue *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                  categoryReader_valueType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_ocTypeName (defineCategoryReader_valueType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@menuType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSMenu *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                  categoryReader_menuType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_ocTypeName (defineCategoryReader_menuType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@bezierPathType ocTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSBezierPath *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                  categoryReader_bezierPathType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_ocTypeName (defineCategoryReader_bezierPathType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@toOneEntityType ocTypeName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toOneEntityType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("\?\?") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                                  categoryReader_toOneEntityType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_ocTypeName (defineCategoryReader_toOneEntityType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@toManyEntitiesType ocTypeName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("\?\?") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                  categoryReader_toManyEntitiesType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_ocTypeName (defineCategoryReader_toManyEntitiesType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@enumType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_ocTypeName (const cPtr_easyBindingType * inObject,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_enumType * object = (const cPtr_enumType *) inObject ;
  macroValidSharedObject (object, const cPtr_enumType) ;
  result_outResult = object->mAttribute_mEnumTypeName.mAttribute_string ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                  categoryReader_enumType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_ocTypeName (defineCategoryReader_enumType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Abstract category reader '@easyBindingType ocClassName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_ocClassName> gCategoryReaderTable_easyBindingType_ocClassName ;

//---------------------------------------------------------------------------*

void enterCategoryReader_ocClassName (const PMSInt32 inClassIndex,
                                      categoryReaderSignature_easyBindingType_ocClassName inReader) {
  gCategoryReaderTable_easyBindingType_ocClassName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_ocClassName (void) {
  gCategoryReaderTable_easyBindingType_ocClassName.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_ocClassName (NULL,
                                                        freeCategoryReader_easyBindingType_ocClassName) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_ocClassName (const cPtr_easyBindingType * inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_ocClassName f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_ocClassName.count ()) {
      f = gCategoryReaderTable_easyBindingType_ocClassName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_ocClassName.count ()) {
           f = gCategoryReaderTable_easyBindingType_ocClassName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_ocClassName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@boolType ocClassName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                   categoryReader_boolType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_ocClassName (defineCategoryReader_boolType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@integerType ocClassName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integerType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                   categoryReader_integerType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_ocClassName (defineCategoryReader_integerType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@uintegerType ocClassName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_uintegerType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_uintegerType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_uintegerType.mSlotID,
                                   categoryReader_uintegerType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_uintegerType_ocClassName (defineCategoryReader_uintegerType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@decimalType ocClassName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                   categoryReader_decimalType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_ocClassName (defineCategoryReader_decimalType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@doubleType ocClassName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSNumber") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                   categoryReader_doubleType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_ocClassName (defineCategoryReader_doubleType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@stringType ocClassName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSString") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                   categoryReader_stringType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_ocClassName (defineCategoryReader_stringType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@fontType ocClassName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSFont") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                   categoryReader_fontType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_ocClassName (defineCategoryReader_fontType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@imageType ocClassName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSImage") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                   categoryReader_imageType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_ocClassName (defineCategoryReader_imageType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@colorType ocClassName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSColor") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                   categoryReader_colorType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_ocClassName (defineCategoryReader_colorType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@dataType ocClassName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSData") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                   categoryReader_dataType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_ocClassName (defineCategoryReader_dataType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@dateType ocClassName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSDate") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                   categoryReader_dateType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_ocClassName (defineCategoryReader_dateType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@arrayType ocClassName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_arrayType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                   categoryReader_arrayType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_ocClassName (defineCategoryReader_arrayType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@objectArrayType ocClassName'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_objectArrayType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSArray") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                   categoryReader_objectArrayType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_ocClassName (defineCategoryReader_objectArrayType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@valueType ocClassName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_valueType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSValue") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                   categoryReader_valueType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_ocClassName (defineCategoryReader_valueType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@menuType ocClassName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_menuType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSMenu") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                   categoryReader_menuType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_ocClassName (defineCategoryReader_menuType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@bezierPathType ocClassName'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_bezierPathType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("NSBezierPath") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                   categoryReader_bezierPathType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_ocClassName (defineCategoryReader_bezierPathType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@toOneEntityType ocClassName'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toOneEntityType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("\?\?") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                                   categoryReader_toOneEntityType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_ocClassName (defineCategoryReader_toOneEntityType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category reader '@toManyEntitiesType ocClassName'        *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_ocClassName (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("\?\?") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                   categoryReader_toManyEntitiesType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_ocClassName (defineCategoryReader_toManyEntitiesType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@enumType ocClassName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_enumType_ocClassName (const cPtr_easyBindingType * inObject,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_enumType * object = (const cPtr_enumType *) inObject ;
  macroValidSharedObject (object, const cPtr_enumType) ;
  result_outResult = object->mAttribute_mEnumTypeName.mAttribute_string ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_ocClassName (void) {
  enterCategoryReader_ocClassName (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                   categoryReader_enumType_ocClassName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_ocClassName (defineCategoryReader_enumType_ocClassName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@easyBindingType copyOnAssign'              *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_copyOnAssign> gCategoryReaderTable_easyBindingType_copyOnAssign ;

//---------------------------------------------------------------------------*

void enterCategoryReader_copyOnAssign (const PMSInt32 inClassIndex,
                                       categoryReaderSignature_easyBindingType_copyOnAssign inReader) {
  gCategoryReaderTable_easyBindingType_copyOnAssign.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_copyOnAssign (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_copyOnAssign f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_copyOnAssign.count ()) {
      f = gCategoryReaderTable_easyBindingType_copyOnAssign (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_copyOnAssign.count ()) {
           f = gCategoryReaderTable_easyBindingType_copyOnAssign (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_copyOnAssign.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                    categoryReader_easyBindingType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_copyOnAssign (void) {
  gCategoryReaderTable_easyBindingType_copyOnAssign.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_copyOnAssign (defineCategoryReader_easyBindingType_copyOnAssign,
                                                         freeCategoryReader_easyBindingType_copyOnAssign) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@stringType copyOnAssign'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_stringType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                    categoryReader_stringType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_copyOnAssign (defineCategoryReader_stringType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@arrayType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_arrayType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_arrayType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_arrayType.mSlotID,
                                    categoryReader_arrayType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_arrayType_copyOnAssign (defineCategoryReader_arrayType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@valueType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_valueType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_valueType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_valueType.mSlotID,
                                    categoryReader_valueType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_valueType_copyOnAssign (defineCategoryReader_valueType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Overriding category reader '@objectArrayType copyOnAssign'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_objectArrayType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_objectArrayType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_objectArrayType.mSlotID,
                                    categoryReader_objectArrayType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_objectArrayType_copyOnAssign (defineCategoryReader_objectArrayType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@bezierPathType copyOnAssign'         *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_bezierPathType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_bezierPathType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_bezierPathType.mSlotID,
                                    categoryReader_bezierPathType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_bezierPathType_copyOnAssign (defineCategoryReader_bezierPathType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@menuType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_menuType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_menuType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_menuType.mSlotID,
                                    categoryReader_menuType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_menuType_copyOnAssign (defineCategoryReader_menuType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Category reader '@easyBindingType isToManyEntitiesType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isToManyEntitiesType> gCategoryReaderTable_easyBindingType_isToManyEntitiesType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isToManyEntitiesType (const PMSInt32 inClassIndex,
                                               categoryReaderSignature_easyBindingType_isToManyEntitiesType inReader) {
  gCategoryReaderTable_easyBindingType_isToManyEntitiesType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isToManyEntitiesType (const cPtr_easyBindingType * inObject,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isToManyEntitiesType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isToManyEntitiesType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isToManyEntitiesType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isToManyEntitiesType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isToManyEntitiesType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isToManyEntitiesType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isToManyEntitiesType (const cPtr_easyBindingType * /* inObject */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isToManyEntitiesType (void) {
  enterCategoryReader_isToManyEntitiesType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                            categoryReader_easyBindingType_isToManyEntitiesType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isToManyEntitiesType (void) {
  gCategoryReaderTable_easyBindingType_isToManyEntitiesType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isToManyEntitiesType (defineCategoryReader_easyBindingType_isToManyEntitiesType,
                                                                 freeCategoryReader_easyBindingType_isToManyEntitiesType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@toManyEntitiesType isToManyEntitiesType'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_toManyEntitiesType_isToManyEntitiesType (const cPtr_easyBindingType * /* inObject */,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_isToManyEntitiesType (void) {
  enterCategoryReader_isToManyEntitiesType (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                            categoryReader_toManyEntitiesType_isToManyEntitiesType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_isToManyEntitiesType (defineCategoryReader_toManyEntitiesType_isToManyEntitiesType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@easyBindingType isBoolType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isBoolType> gCategoryReaderTable_easyBindingType_isBoolType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isBoolType (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_isBoolType inReader) {
  gCategoryReaderTable_easyBindingType_isBoolType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isBoolType (const cPtr_easyBindingType * inObject,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isBoolType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isBoolType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isBoolType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isBoolType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isBoolType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isBoolType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isBoolType (const cPtr_easyBindingType * /* inObject */,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isBoolType (void) {
  enterCategoryReader_isBoolType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                  categoryReader_easyBindingType_isBoolType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isBoolType (void) {
  gCategoryReaderTable_easyBindingType_isBoolType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isBoolType (defineCategoryReader_easyBindingType_isBoolType,
                                                       freeCategoryReader_easyBindingType_isBoolType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@boolType isBoolType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_boolType_isBoolType (const cPtr_easyBindingType * /* inObject */,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_isBoolType (void) {
  enterCategoryReader_isBoolType (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                  categoryReader_boolType_isBoolType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_isBoolType (defineCategoryReader_boolType_isBoolType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Category reader '@easyBindingType isIntegerType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isIntegerType> gCategoryReaderTable_easyBindingType_isIntegerType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isIntegerType (const PMSInt32 inClassIndex,
                                        categoryReaderSignature_easyBindingType_isIntegerType inReader) {
  gCategoryReaderTable_easyBindingType_isIntegerType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isIntegerType (const cPtr_easyBindingType * inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isIntegerType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isIntegerType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isIntegerType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isIntegerType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isIntegerType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isIntegerType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isIntegerType (const cPtr_easyBindingType * /* inObject */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isIntegerType (void) {
  enterCategoryReader_isIntegerType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                     categoryReader_easyBindingType_isIntegerType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isIntegerType (void) {
  gCategoryReaderTable_easyBindingType_isIntegerType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isIntegerType (defineCategoryReader_easyBindingType_isIntegerType,
                                                          freeCategoryReader_easyBindingType_isIntegerType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@integerType isIntegerType'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_integerType_isIntegerType (const cPtr_easyBindingType * /* inObject */,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integerType_isIntegerType (void) {
  enterCategoryReader_isIntegerType (kTypeDescriptor_GALGAS_integerType.mSlotID,
                                     categoryReader_integerType_isIntegerType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integerType_isIntegerType (defineCategoryReader_integerType_isIntegerType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@easyBindingType isDoubleType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isDoubleType> gCategoryReaderTable_easyBindingType_isDoubleType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isDoubleType (const PMSInt32 inClassIndex,
                                       categoryReaderSignature_easyBindingType_isDoubleType inReader) {
  gCategoryReaderTable_easyBindingType_isDoubleType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isDoubleType (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isDoubleType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isDoubleType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isDoubleType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isDoubleType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isDoubleType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isDoubleType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isDoubleType (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isDoubleType (void) {
  enterCategoryReader_isDoubleType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                    categoryReader_easyBindingType_isDoubleType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isDoubleType (void) {
  gCategoryReaderTable_easyBindingType_isDoubleType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isDoubleType (defineCategoryReader_easyBindingType_isDoubleType,
                                                         freeCategoryReader_easyBindingType_isDoubleType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@doubleType isDoubleType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_doubleType_isDoubleType (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_isDoubleType (void) {
  enterCategoryReader_isDoubleType (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                    categoryReader_doubleType_isDoubleType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_isDoubleType (defineCategoryReader_doubleType_isDoubleType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@easyBindingType isStringType'              *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isStringType> gCategoryReaderTable_easyBindingType_isStringType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isStringType (const PMSInt32 inClassIndex,
                                       categoryReaderSignature_easyBindingType_isStringType inReader) {
  gCategoryReaderTable_easyBindingType_isStringType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isStringType (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isStringType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isStringType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isStringType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isStringType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isStringType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isStringType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isStringType (const cPtr_easyBindingType * /* inObject */,
                                                                C_Compiler * /* inCompiler */
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isStringType (void) {
  enterCategoryReader_isStringType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                    categoryReader_easyBindingType_isStringType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isStringType (void) {
  gCategoryReaderTable_easyBindingType_isStringType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isStringType (defineCategoryReader_easyBindingType_isStringType,
                                                         freeCategoryReader_easyBindingType_isStringType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@stringType isStringType'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_stringType_isStringType (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_isStringType (void) {
  enterCategoryReader_isStringType (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                    categoryReader_stringType_isStringType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_isStringType (defineCategoryReader_stringType_isStringType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//              Category reader '@easyBindingType isColorType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isColorType> gCategoryReaderTable_easyBindingType_isColorType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isColorType (const PMSInt32 inClassIndex,
                                      categoryReaderSignature_easyBindingType_isColorType inReader) {
  gCategoryReaderTable_easyBindingType_isColorType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isColorType (const cPtr_easyBindingType * inObject,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isColorType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isColorType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isColorType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isColorType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isColorType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isColorType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isColorType (const cPtr_easyBindingType * /* inObject */,
                                                               C_Compiler * /* inCompiler */
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isColorType (void) {
  enterCategoryReader_isColorType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                   categoryReader_easyBindingType_isColorType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isColorType (void) {
  gCategoryReaderTable_easyBindingType_isColorType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isColorType (defineCategoryReader_easyBindingType_isColorType,
                                                        freeCategoryReader_easyBindingType_isColorType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@colorType isColorType'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_colorType_isColorType (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_isColorType (void) {
  enterCategoryReader_isColorType (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                   categoryReader_colorType_isColorType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_isColorType (defineCategoryReader_colorType_isColorType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@easyBindingType isDateType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isDateType> gCategoryReaderTable_easyBindingType_isDateType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isDateType (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_isDateType inReader) {
  gCategoryReaderTable_easyBindingType_isDateType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isDateType (const cPtr_easyBindingType * inObject,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isDateType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isDateType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isDateType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isDateType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isDateType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isDateType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isDateType (const cPtr_easyBindingType * /* inObject */,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isDateType (void) {
  enterCategoryReader_isDateType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                  categoryReader_easyBindingType_isDateType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isDateType (void) {
  gCategoryReaderTable_easyBindingType_isDateType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isDateType (defineCategoryReader_easyBindingType_isDateType,
                                                       freeCategoryReader_easyBindingType_isDateType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dateType isDateType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_dateType_isDateType (const cPtr_easyBindingType * /* inObject */,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_isDateType (void) {
  enterCategoryReader_isDateType (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                  categoryReader_dateType_isDateType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_isDateType (defineCategoryReader_dateType_isDateType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@easyBindingType isFontType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isFontType> gCategoryReaderTable_easyBindingType_isFontType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isFontType (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_isFontType inReader) {
  gCategoryReaderTable_easyBindingType_isFontType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isFontType (const cPtr_easyBindingType * inObject,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isFontType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isFontType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isFontType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isFontType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isFontType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isFontType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isFontType (const cPtr_easyBindingType * /* inObject */,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isFontType (void) {
  enterCategoryReader_isFontType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                  categoryReader_easyBindingType_isFontType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isFontType (void) {
  gCategoryReaderTable_easyBindingType_isFontType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isFontType (defineCategoryReader_easyBindingType_isFontType,
                                                       freeCategoryReader_easyBindingType_isFontType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@fontType isFontType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_fontType_isFontType (const cPtr_easyBindingType * /* inObject */,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_isFontType (void) {
  enterCategoryReader_isFontType (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                  categoryReader_fontType_isFontType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_isFontType (defineCategoryReader_fontType_isFontType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Category reader '@easyBindingType isEnumType'               *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_isEnumType> gCategoryReaderTable_easyBindingType_isEnumType ;

//---------------------------------------------------------------------------*

void enterCategoryReader_isEnumType (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_isEnumType inReader) {
  gCategoryReaderTable_easyBindingType_isEnumType.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_isEnumType (const cPtr_easyBindingType * inObject,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_isEnumType f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_isEnumType.count ()) {
      f = gCategoryReaderTable_easyBindingType_isEnumType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_isEnumType.count ()) {
           f = gCategoryReaderTable_easyBindingType_isEnumType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_isEnumType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_easyBindingType_isEnumType (const cPtr_easyBindingType * /* inObject */,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_isEnumType (void) {
  enterCategoryReader_isEnumType (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                  categoryReader_easyBindingType_isEnumType) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_isEnumType (void) {
  gCategoryReaderTable_easyBindingType_isEnumType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_isEnumType (defineCategoryReader_easyBindingType_isEnumType,
                                                       freeCategoryReader_easyBindingType_isEnumType) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@enumType isEnumType'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_enumType_isEnumType (const cPtr_easyBindingType * /* inObject */,
                                                       C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_enumType_isEnumType (void) {
  enterCategoryReader_isEnumType (kTypeDescriptor_GALGAS_enumType.mSlotID,
                                  categoryReader_enumType_isEnumType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_enumType_isEnumType (defineCategoryReader_enumType_isEnumType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Category reader '@easyBindingType functionForComputingSignature'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_functionForComputingSignature> gCategoryReaderTable_easyBindingType_functionForComputingSignature ;

//---------------------------------------------------------------------------*

void enterCategoryReader_functionForComputingSignature (const PMSInt32 inClassIndex,
                                                        categoryReaderSignature_easyBindingType_functionForComputingSignature inReader) {
  gCategoryReaderTable_easyBindingType_functionForComputingSignature.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_functionForComputingSignature (const cPtr_easyBindingType * inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_functionForComputingSignature f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_functionForComputingSignature.count ()) {
      f = gCategoryReaderTable_easyBindingType_functionForComputingSignature (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_functionForComputingSignature.count ()) {
           f = gCategoryReaderTable_easyBindingType_functionForComputingSignature (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_functionForComputingSignature.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_easyBindingType_functionForComputingSignature (const cPtr_easyBindingType * /* inObject */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("computeIntegerSignature") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_easyBindingType_functionForComputingSignature (void) {
  enterCategoryReader_functionForComputingSignature (kTypeDescriptor_GALGAS_easyBindingType.mSlotID,
                                                     categoryReader_easyBindingType_functionForComputingSignature) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_functionForComputingSignature (void) {
  gCategoryReaderTable_easyBindingType_functionForComputingSignature.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_functionForComputingSignature (defineCategoryReader_easyBindingType_functionForComputingSignature,
                                                                          freeCategoryReader_easyBindingType_functionForComputingSignature) ;

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category reader '@stringType functionForComputingSignature'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_functionForComputingSignature (const cPtr_easyBindingType * /* inObject */,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("computeNSStringSignature") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_functionForComputingSignature (void) {
  enterCategoryReader_functionForComputingSignature (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                                     categoryReader_stringType_functionForComputingSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_functionForComputingSignature (defineCategoryReader_stringType_functionForComputingSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@toOneEntityType functionForComputingSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toOneEntityType_functionForComputingSignature (const cPtr_easyBindingType * /* inObject */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("computeToOneEntitySignature") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toOneEntityType_functionForComputingSignature (void) {
  enterCategoryReader_functionForComputingSignature (kTypeDescriptor_GALGAS_toOneEntityType.mSlotID,
                                                     categoryReader_toOneEntityType_functionForComputingSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toOneEntityType_functionForComputingSignature (defineCategoryReader_toOneEntityType_functionForComputingSignature, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@toManyEntitiesType functionForComputingSignature'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_toManyEntitiesType_functionForComputingSignature (const cPtr_easyBindingType * /* inObject */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  result_outResult = GALGAS_string ("computeToManyEntitySignature") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_toManyEntitiesType_functionForComputingSignature (void) {
  enterCategoryReader_functionForComputingSignature (kTypeDescriptor_GALGAS_toManyEntitiesType.mSlotID,
                                                     categoryReader_toManyEntitiesType_functionForComputingSignature) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_toManyEntitiesType_functionForComputingSignature (defineCategoryReader_toManyEntitiesType_functionForComputingSignature, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


