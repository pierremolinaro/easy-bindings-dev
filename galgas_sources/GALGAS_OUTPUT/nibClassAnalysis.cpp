//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'nibClassAnalysis.cpp'                         *
//                        Generated by version 2.5.0                         *
//                      july 19th, 2013, at 12h45'10"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "nibClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "nibClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@nibClassDeclaration typeInventory'      *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nibClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                              GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                              C_Compiler * inCompiler
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nibClassDeclaration * object = (const cPtr_nibClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_nibClassDeclaration) ;
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (12)) ;
  cEnumerator_lstringlist enumerator_478 (object->mAttribute_mActionDeclarationList, kEnumeration_up) ;
  while (enumerator_478.hasCurrentObject ()) {
    {
    var_actionMap.modifier_insertKey (enumerator_478.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (14)) ;
    }
    enumerator_478.gotoNextObject () ;
  }
  cEnumerator_attributeList enumerator_623 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_623.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_716_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_623.current_mAttributeTypeName (HERE), joker_716_0 COMMA_SOURCE_FILE_AT_LINE (18)) ;
    }
    enumerator_623.gotoNextObject () ;
  }
  cEnumerator_classArrayList enumerator_816 (object->mAttribute_mArrayList, kEnumeration_up) ;
  while (enumerator_816.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_908_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_816.current_mElementClassName (HERE), joker_908_0 COMMA_SOURCE_FILE_AT_LINE (26)) ;
    }
    enumerator_816.gotoNextObject () ;
  }
  cEnumerator_controllerList enumerator_1033 (object->mAttribute_mControllerList, kEnumeration_up) ;
  while (enumerator_1033.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_1128_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1033.current_mControllerClassName (HERE), joker_1128_0 COMMA_SOURCE_FILE_AT_LINE (34)) ;
    }
    enumerator_1033.gotoNextObject () ;
  }
  cEnumerator_transientList enumerator_1245 (object->mAttribute_mTransientList, kEnumeration_up) ;
  while (enumerator_1245.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_1338_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1245.current_mTransientTypeName (HERE), joker_1338_0 COMMA_SOURCE_FILE_AT_LINE (42)) ;
    }
    enumerator_1245.gotoNextObject () ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_nibClassDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mClassName, GALGAS_ebType::constructor_new (object->mAttribute_mClassName, GALGAS_typeKind::constructor_nibClassType (SOURCE_FILE_AT_LINE (51)) COMMA_SOURCE_FILE_AT_LINE (51)), temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (49)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nibClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_nibClassDeclaration.mSlotID,
                                     categoryMethod_nibClassDeclaration_typeInventory) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nibClassDeclaration_typeInventory (defineCategoryMethod_nibClassDeclaration_typeInventory, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@nibClassDeclaration buildObservablePropertyMap'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nibClassDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                                           const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                           GALGAS_observablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                           GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_nibClassDeclaration * object = (const cPtr_nibClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_nibClassDeclaration) ;
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (63)) ;
  {
  routine_buildObservablePropertyMap (object->mAttribute_mAttributeList, object->mAttribute_mArrayList, object->mAttribute_mTransientList, object->mAttribute_mControllerList, GALGAS_controllerObservablePropertyList::constructor_emptyList (SOURCE_FILE_AT_LINE (70)), ioArgument_ioObservablePropertyMapMap, ioArgument_ioTransientDependencyGraph, constinArgument_inUnifiedTypeMap, GALGAS_string ("nibclass.").operator_concat (object->mAttribute_mClassName.reader_string (SOURCE_FILE_AT_LINE (74)) COMMA_SOURCE_FILE_AT_LINE (74)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mClassName, GALGAS_typeKind::constructor_nibClassType (SOURCE_FILE_AT_LINE (80)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (78)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nibClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_nibClassDeclaration.mSlotID,
                                                  categoryMethod_nibClassDeclaration_buildObservablePropertyMap) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nibClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_nibClassDeclaration_buildObservablePropertyMap, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@nibClassDeclaration semanticAnalysis'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_nibClassDeclaration_semanticAnalysis (const cPtr_astDeclaration * /* inObject */,
                                                                 const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                 GALGAS_contextAnalysisStruct & /* ioArgument_ioContextAnalysisStruct */,
                                                                 GALGAS_generationList & /* ioArgument_ioGenerationList */,
                                                                 C_Compiler * /* inCompiler */
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_nibClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_nibClassDeclaration.mSlotID,
                                        categoryMethod_nibClassDeclaration_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_nibClassDeclaration_semanticAnalysis (defineCategoryMethod_nibClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


