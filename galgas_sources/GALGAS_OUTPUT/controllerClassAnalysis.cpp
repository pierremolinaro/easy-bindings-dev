//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'controllerClassAnalysis.cpp'                     *
//                        Generated by version 2.5.0                         *
//                      july 18th, 2013, at 19h21'38"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "controllerClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "controllerClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@controllerClassDeclaration typeInventory'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                                     GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_controllerClassDeclaration * object = (const cPtr_controllerClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_controllerClassDeclaration) ;
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (10)) ;
  cEnumerator_lstringlist enumerator_363 (object->mAttribute_mActionDeclarationList, kEnumeration_up) ;
  while (enumerator_363.hasCurrentObject ()) {
    {
    var_actionMap.modifier_insertKey (enumerator_363.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (12)) ;
    }
    enumerator_363.gotoNextObject () ;
  }
  GALGAS_outletClassBindingMap var_bindingMap ;
  {
  routine_buildBindingCapabilitiesMap (object->mAttribute_mBindingList, ioArgument_ioUnifiedTypeMap, var_bindingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (15)) ;
  }
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (21)) ;
  cEnumerator_controllerObservablePropertyList enumerator_700 (object->mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  while (enumerator_700.hasCurrentObject ()) {
    GALGAS_unifiedTypeProxy var_attributeTypeProxy ;
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_700.current (HERE).mAttribute_mTypeName, var_attributeTypeProxy COMMA_SOURCE_FILE_AT_LINE (23)) ;
    }
    {
    var_observablePropertyMap.modifier_insertKey (enumerator_700.current (HERE).mAttribute_mPropertyName, var_attributeTypeProxy, GALGAS_bool (false), GALGAS_string ("controller.").operator_concat (object->mAttribute_mControllerClassName.reader_string (SOURCE_FILE_AT_LINE (32)) COMMA_SOURCE_FILE_AT_LINE (32)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (32)).operator_concat (enumerator_700.current (HERE).mAttribute_mPropertyName.reader_string (SOURCE_FILE_AT_LINE (32)) COMMA_SOURCE_FILE_AT_LINE (32)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (28)) ;
    }
    enumerator_700.gotoNextObject () ;
  }
  GALGAS_outletClassBindingOptionMap var_controlledObjectAvailableBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (37)) ;
  cEnumerator_bindingOptionList enumerator_1235 (object->mAttribute_mControlledObjectBindingOptionList, kEnumeration_up) ;
  while (enumerator_1235.hasCurrentObject ()) {
    GALGAS_unifiedTypeProxyList var_acceptableTypeList = GALGAS_unifiedTypeProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (39)) ;
    cEnumerator_lstringlist enumerator_1329 (enumerator_1235.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
    while (enumerator_1329.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxy var_type ;
      {
      GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1329.current_mValue (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (41)) ;
      }
      var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (46)) ;
      enumerator_1329.gotoNextObject () ;
    }
    {
    var_controlledObjectAvailableBindingOptionMap.modifier_insertKey (enumerator_1235.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (48)) ;
    }
    enumerator_1235.gotoNextObject () ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_controllerClassDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mControllerClassName, temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                     categoryMethod_controllerClassDeclaration_typeInventory) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_typeInventory (defineCategoryMethod_controllerClassDeclaration_typeInventory, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


