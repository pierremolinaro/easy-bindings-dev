//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'controllerClassAnalysis.cpp'                     *
//                        Generated by version 2.4.3                         *
//                    december 22th, 2012, at 15h26'29"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "controllerClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "controllerClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeControllerClass'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClass (const GALGAS_controllerClassList_2E_element constinArgument0,
                                     GALGAS_transientDependencyGraph & ioArgument1,
                                     GALGAS_controllerClassMap & ioArgument2,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeControllerClass'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClass (const GALGAS_controllerClassList_2E_element constinArgument_inController,
                                     GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                     GALGAS_controllerClassMap & ioArgument_ioControllerClassMap,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (12)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_458 (constinArgument_inController.mAttribute_mActionDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_458.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_actionMap.modifier_insertKey (enumerator_458.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (14)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_458.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (17)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletClassBindingList enumerator_614 (constinArgument_inController.mAttribute_mBindingList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_614.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (19)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_bindingOptionList enumerator_722 (enumerator_614.current_mBindingOptionList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_722.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_722.current_mBindingOptionName (HERE), enumerator_722.current_mAcceptableTypeList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (21)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_722.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_bindingMap.modifier_insertKey (enumerator_614.current_mBindingName (HERE), enumerator_614.current_mAcceptableTypeFormatterList (HERE), var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (27)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_614.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (30)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerObservablePropertyList enumerator_1168 (constinArgument_inController.mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_1168.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("controller.").operator_concat (constinArgument_inController.mAttribute_mControllerClassName.reader_string (SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (33)).operator_concat (enumerator_1168.current (HERE).mAttribute_mPropertyName.reader_string (SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)), enumerator_1168.current (HERE).mAttribute_mPropertyName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (32)) ;
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (36)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_observablePropertyMap.modifier_insertKey (enumerator_1168.current (HERE).mAttribute_mPropertyName, enumerator_1168.current (HERE).mAttribute_mType, GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (40)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_1168.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioControllerClassMap.modifier_insertKey (constinArgument_inController.mAttribute_mControllerClassName, constinArgument_inController.mAttribute_mControllerKind, constinArgument_inController.mAttribute_mGenerationKind, var_bindingMap, var_actionMap, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (48)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeControllerClasses'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClasses (const GALGAS_controllerClassList constinArgument_inControllerClassList,
                                       GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                       GALGAS_controllerClassMap & outArgument_outControllerClassMap,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outControllerClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outControllerClassMap = GALGAS_controllerClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (65)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerClassList enumerator_2262 (constinArgument_inControllerClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_2262.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeControllerClass (enumerator_2262.current (HERE), ioArgument_ioTransientDependencyGraph, outArgument_outControllerClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (67)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_2262.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


