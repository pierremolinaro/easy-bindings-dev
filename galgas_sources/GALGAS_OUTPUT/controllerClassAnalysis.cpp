//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'controllerClassAnalysis.cpp'                     *
//                        Generated by version 2.5.0                         *
//                       july 16th, 2013, at 20h9'29"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "controllerClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "controllerClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeControllerClass'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClass (const GALGAS_controllerClassList_2E_element constinArgument0,
                                     const GALGAS_contextAnalysisStruct constinArgument1,
                                     GALGAS_transientDependencyGraph & ioArgument2,
                                     GALGAS_controllerClassMap & ioArgument3,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeControllerClass'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClass (const GALGAS_controllerClassList_2E_element constinArgument_inController,
                                     const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                     GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                     GALGAS_controllerClassMap & ioArgument_ioControllerClassMap,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (13)) ;
  cEnumerator_lstringlist enumerator_509 (constinArgument_inController.mAttribute_mActionDeclarationList, kEnumeration_up) ;
  while (enumerator_509.hasCurrentObject ()) {
    {
    var_actionMap.modifier_insertKey (enumerator_509.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (15)) ;
    }
    enumerator_509.gotoNextObject () ;
  }
  GALGAS_EXoutletClassBindingMap var_bindingMap = GALGAS_EXoutletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (18)) ;
  cEnumerator_outletClassBindingList enumerator_667 (constinArgument_inController.mAttribute_mBindingList, kEnumeration_up) ;
  while (enumerator_667.hasCurrentObject ()) {
    GALGAS_EXoutletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_EXoutletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (20)) ;
    cEnumerator_bindingOptionList enumerator_777 (enumerator_667.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_777.hasCurrentObject ()) {
      GALGAS_easyBindingTypeList var_acceptableTypeList = GALGAS_easyBindingTypeList::constructor_emptyList (SOURCE_FILE_AT_LINE (22)) ;
      cEnumerator_attributeASTTypeList enumerator_874 (enumerator_777.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_874.hasCurrentObject ()) {
        GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_874.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (24)) ;
        var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (25)) ;
        enumerator_874.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_777.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (27)) ;
      }
      enumerator_777.gotoNextObject () ;
    }
    GALGAS_EXeasyBindingTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_EXeasyBindingTypeAndFormatterList::constructor_emptyList (SOURCE_FILE_AT_LINE (29)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_1241 (enumerator_667.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_1241.hasCurrentObject ()) {
      GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_1241.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (31)) ;
      var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_1241.current_mRequiredFormatter (HERE) COMMA_SOURCE_FILE_AT_LINE (32)) ;
      enumerator_1241.gotoNextObject () ;
    }
    {
    var_bindingMap.modifier_insertKey (enumerator_667.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (34)) ;
    }
    enumerator_667.gotoNextObject () ;
  }
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (37)) ;
  cEnumerator_controllerObservablePropertyList enumerator_1651 (constinArgument_inController.mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  while (enumerator_1651.hasCurrentObject ()) {
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("controller.").operator_concat (constinArgument_inController.mAttribute_mControllerClassName.reader_string (SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (40)).operator_concat (enumerator_1651.current (HERE).mAttribute_mPropertyName.reader_string (SOURCE_FILE_AT_LINE (40)) COMMA_SOURCE_FILE_AT_LINE (40)), enumerator_1651.current (HERE).mAttribute_mPropertyName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (39)) ;
    {
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (43)) ;
    }
    {
    var_observablePropertyMap.modifier_insertKey (enumerator_1651.current (HERE).mAttribute_mPropertyName, callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_1651.current (HERE).mAttribute_mType.ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (49)), GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) ;
    }
    enumerator_1651.gotoNextObject () ;
  }
  GALGAS_EXoutletClassBindingOptionMap var_controlledObjectAvailableBindingOptionMap = GALGAS_EXoutletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (55)) ;
  cEnumerator_bindingOptionList enumerator_2336 (constinArgument_inController.mAttribute_mControlledObjectBindingOptionList, kEnumeration_up) ;
  while (enumerator_2336.hasCurrentObject ()) {
    GALGAS_easyBindingTypeList var_acceptableTypeList = GALGAS_easyBindingTypeList::constructor_emptyList (SOURCE_FILE_AT_LINE (57)) ;
    cEnumerator_attributeASTTypeList enumerator_2429 (enumerator_2336.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
    while (enumerator_2429.hasCurrentObject ()) {
      GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_2429.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (59)) ;
      var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (60)) ;
      enumerator_2429.gotoNextObject () ;
    }
    {
    var_controlledObjectAvailableBindingOptionMap.modifier_insertKey (enumerator_2336.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (62)) ;
    }
    enumerator_2336.gotoNextObject () ;
  }
  {
  ioArgument_ioControllerClassMap.modifier_insertKey (constinArgument_inController.mAttribute_mControllerClassName, constinArgument_inController.mAttribute_mControllerKind, constinArgument_inController.mAttribute_mGenerationKind, var_bindingMap, var_actionMap, var_observablePropertyMap, var_controlledObjectAvailableBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (65)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeControllerClasses'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClasses (const GALGAS_controllerClassList constinArgument_inControllerClassList,
                                       const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                       GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                       GALGAS_controllerClassMap & outArgument_outControllerClassMap,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outControllerClassMap.drop () ; // Release 'out' argument
  outArgument_outControllerClassMap = GALGAS_controllerClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (84)) ;
  cEnumerator_controllerClassList enumerator_3372 (constinArgument_inControllerClassList, kEnumeration_up) ;
  while (enumerator_3372.hasCurrentObject ()) {
    {
    routine_analyzeControllerClass (enumerator_3372.current (HERE), constinArgument_inContextAnalysisStruct, ioArgument_ioTransientDependencyGraph, outArgument_outControllerClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (86)) ;
    }
    enumerator_3372.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


