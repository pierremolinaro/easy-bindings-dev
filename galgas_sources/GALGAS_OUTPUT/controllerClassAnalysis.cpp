//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'controllerClassAnalysis.cpp'                     *
//                        Generated by version 2.5.0                         *
//                       july 19th, 2013, at 14h20'3"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "controllerClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "controllerClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//  Overriding category method '@controllerClassDeclaration typeInventory'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                                     GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_controllerClassDeclaration * object = (const cPtr_controllerClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_controllerClassDeclaration) ;
  cEnumerator_controllerObservablePropertyList enumerator_764 (object->mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  while (enumerator_764.hasCurrentObject ()) {
    GALGAS_unifiedTypeProxy var_attributeTypeProxy ;
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_764.current (HERE).mAttribute_mTypeName, var_attributeTypeProxy COMMA_SOURCE_FILE_AT_LINE (24)) ;
    }
    enumerator_764.gotoNextObject () ;
  }
  cEnumerator_bindingOptionList enumerator_1307 (object->mAttribute_mControlledObjectBindingOptionList, kEnumeration_up) ;
  while (enumerator_1307.hasCurrentObject ()) {
    cEnumerator_lstringlist enumerator_1402 (enumerator_1307.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
    while (enumerator_1402.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxy var_type ;
      {
      GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1402.current_mValue (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (42)) ;
      }
      enumerator_1402.gotoNextObject () ;
    }
    enumerator_1307.gotoNextObject () ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_controllerClassDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mControllerClassName, GALGAS_ebType::constructor_new (object->mAttribute_mControllerClassName, GALGAS_typeKind::constructor_controllerClassType (SOURCE_FILE_AT_LINE (54)) COMMA_SOURCE_FILE_AT_LINE (54)), temp_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (52)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                     categoryMethod_controllerClassDeclaration_typeInventory) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_typeInventory (defineCategoryMethod_controllerClassDeclaration_typeInventory, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@controllerClassDeclaration buildObservablePropertyMap'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                                                  const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                                  GALGAS_observablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                                  GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_controllerClassDeclaration * object = (const cPtr_controllerClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_controllerClassDeclaration) ;
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (67)) ;
  {
  routine_buildObservablePropertyMap (GALGAS_attributeList::constructor_emptyList (SOURCE_FILE_AT_LINE (70)), GALGAS_classArrayList::constructor_emptyList (SOURCE_FILE_AT_LINE (71)), GALGAS_transientList::constructor_emptyList (SOURCE_FILE_AT_LINE (72)), GALGAS_controllerList::constructor_emptyList (SOURCE_FILE_AT_LINE (73)), object->mAttribute_mControllerObservablePropertyList, ioArgument_ioObservablePropertyMapMap, ioArgument_ioTransientDependencyGraph, constinArgument_inUnifiedTypeMap, GALGAS_string ("controllerclass.").operator_concat (object->mAttribute_mControllerClassName.reader_string (SOURCE_FILE_AT_LINE (78)) COMMA_SOURCE_FILE_AT_LINE (78)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (69)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mControllerClassName, GALGAS_typeKind::constructor_controllerClassType (SOURCE_FILE_AT_LINE (84)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (82)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                                  categoryMethod_controllerClassDeclaration_buildObservablePropertyMap) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_controllerClassDeclaration_buildObservablePropertyMap, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@controllerClassDeclaration semanticAnalysis' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_semanticAnalysis (const cPtr_astDeclaration * /* inObject */,
                                                                        const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                        GALGAS_contextAnalysisStruct & /* ioArgument_ioContextAnalysisStruct */,
                                                                        GALGAS_generationList & /* ioArgument_ioGenerationList */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                        categoryMethod_controllerClassDeclaration_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_semanticAnalysis (defineCategoryMethod_controllerClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


