//-----------------------------------------------------------------------------*
//                                                                             *
//                     File 'controllerClassAnalysis.cpp'                      *
//                         Generated by version 2.7.0                          *
//                       august 7th, 2014, at 22h22'4"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "controllerClassAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@controllerClassDeclaration typeInventory'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_typeInventory (const cPtr_astDeclaration * /* inObject */,
                                                                     GALGAS_unifiedTypeMap & /* ioArgument_ioUnifiedTypeMap */,
                                                                     C_Compiler * /* inCompiler */
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                     categoryMethod_controllerClassDeclaration_typeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_typeInventory (defineCategoryMethod_controllerClassDeclaration_typeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@controllerClassDeclaration EXTypeInventory'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_EXTypeInventory (const cPtr_astDeclaration * inObject,
                                                                       GALGAS_EXunifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_controllerClassDeclaration * object = (const cPtr_controllerClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_controllerClassDeclaration) ;
  cEnumerator_controllerObservablePropertyList enumerator_959 (object->mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  while (enumerator_959.hasCurrentObject ()) {
    GALGAS_EXunifiedTypeProxy var_attributeTypeProxy ;
    {
    GALGAS_EXunifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_959.current (HERE).mAttribute_mTypeName, var_attributeTypeProxy COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 32)) ;
    }
    enumerator_959.gotoNextObject () ;
  }
  cEnumerator_bindingOptionList enumerator_1506 (object->mAttribute_mControlledObjectBindingOptionList, kEnumeration_up) ;
  while (enumerator_1506.hasCurrentObject ()) {
    cEnumerator_lstringlist enumerator_1603 (enumerator_1506.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
    while (enumerator_1603.hasCurrentObject ()) {
      GALGAS_EXunifiedTypeProxy var_type ;
      {
      GALGAS_EXunifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1603.current_mValue (HERE), var_type COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 50)) ;
      }
      enumerator_1603.gotoNextObject () ;
    }
    enumerator_1506.gotoNextObject () ;
  }
  {
  const GALGAS_controllerClassDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mControllerClassName, GALGAS_EXebType::constructor_new (object->mAttribute_mControllerClassName, GALGAS_EXTypeKind::constructor_controllerClassType (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 62))  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 62)), temp_0, GALGAS_EXentityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 64)), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 60)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_EXTypeInventory (void) {
  enterCategoryMethod_EXTypeInventory (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                       categoryMethod_controllerClassDeclaration_EXTypeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_EXTypeInventory (defineCategoryMethod_controllerClassDeclaration_EXTypeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@controllerClassDeclaration buildObservablePropertyMap'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                                                  const GALGAS_EXunifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                                  GALGAS_EXobservablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                                  GALGAS_EXtransientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_controllerClassDeclaration * object = (const cPtr_controllerClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_controllerClassDeclaration) ;
  GALGAS_EXobservablePropertyMap var_observablePropertyMap = GALGAS_EXobservablePropertyMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 76)) ;
  {
  routine_buildObservablePropertyMap (GALGAS_attributeList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 79)), GALGAS_classArrayList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 80)), GALGAS_transientList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 81)), GALGAS_controllerList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 82)), object->mAttribute_mControllerObservablePropertyList, ioArgument_ioObservablePropertyMapMap, ioArgument_ioTransientDependencyGraph, constinArgument_inUnifiedTypeMap, GALGAS_string ("controller.").operator_concat (object->mAttribute_mControllerClassName.reader_string (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 87))  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 87)), var_observablePropertyMap, inCompiler  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 78)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mControllerClassName, object->mAttribute_mUserDefined, GALGAS_EXTypeKind::constructor_controllerClassType (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 94)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 91)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                                  categoryMethod_controllerClassDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_controllerClassDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@controllerClassDeclaration semanticAnalysis'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_controllerClassDeclaration_semanticAnalysis (const cPtr_astDeclaration * inObject,
                                                                        const GALGAS_EXunifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                        GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                        GALGAS_generationList & ioArgument_ioGenerationList,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_controllerClassDeclaration * object = (const cPtr_controllerClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_controllerClassDeclaration) ;
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 107)) ;
  cEnumerator_lstringlist enumerator_3537 (object->mAttribute_mActionDeclarationList, kEnumeration_up) ;
  while (enumerator_3537.hasCurrentObject ()) {
    {
    var_actionMap.modifier_insertKey (enumerator_3537.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 109)) ;
    }
    enumerator_3537.gotoNextObject () ;
  }
  GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 112)) ;
  cEnumerator_outletClassBindingList enumerator_3679 (object->mAttribute_mBindingList, kEnumeration_up) ;
  while (enumerator_3679.hasCurrentObject ()) {
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 114)) ;
    cEnumerator_bindingOptionList enumerator_3787 (enumerator_3679.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_3787.hasCurrentObject ()) {
      GALGAS_EXebTypeList var_acceptableTypeList = GALGAS_EXebTypeList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 116)) ;
      cEnumerator_lstringlist enumerator_3877 (enumerator_3787.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_3877.hasCurrentObject ()) {
        GALGAS_EXebType var_type ;
        GALGAS_astDeclaration joker_3942_2 ; // Joker input parameter
        GALGAS_EXentityRelationshipMap joker_3942_1 ; // Joker input parameter
        constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_3877.current_mValue (HERE), var_type, joker_3942_2, joker_3942_1, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 118)) ;
        var_acceptableTypeList.addAssign_operation (var_type  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 119)) ;
        enumerator_3877.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_3787.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 121)) ;
      }
      enumerator_3787.gotoNextObject () ;
    }
    GALGAS_EXebTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_EXebTypeAndFormatterList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 123)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_4226 (enumerator_3679.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_4226.hasCurrentObject ()) {
      GALGAS_EXebType var_type ;
      GALGAS_astDeclaration joker_4292_2 ; // Joker input parameter
      GALGAS_EXentityRelationshipMap joker_4292_1 ; // Joker input parameter
      constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_4226.current_mTypeName (HERE), var_type, joker_4292_2, joker_4292_1, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 125)) ;
      var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_4226.current_mRequiredFormatter (HERE)  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 126)) ;
      enumerator_4226.gotoNextObject () ;
    }
    {
    var_bindingMap.modifier_insertKey (enumerator_3679.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 128)) ;
    }
    enumerator_3679.gotoNextObject () ;
  }
  GALGAS_outletClassBindingOptionMap var_controlledObjectAvailableBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 131)) ;
  cEnumerator_bindingOptionList enumerator_4635 (object->mAttribute_mControlledObjectBindingOptionList, kEnumeration_up) ;
  while (enumerator_4635.hasCurrentObject ()) {
    GALGAS_EXebTypeList var_acceptableTypeList = GALGAS_EXebTypeList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 133)) ;
    cEnumerator_lstringlist enumerator_4721 (enumerator_4635.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
    while (enumerator_4721.hasCurrentObject ()) {
      GALGAS_EXebType var_type ;
      GALGAS_astDeclaration joker_4784_2 ; // Joker input parameter
      GALGAS_EXentityRelationshipMap joker_4784_1 ; // Joker input parameter
      constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_4721.current_mValue (HERE), var_type, joker_4784_2, joker_4784_1, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 135)) ;
      var_acceptableTypeList.addAssign_operation (var_type  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 136)) ;
      enumerator_4721.gotoNextObject () ;
    }
    {
    var_controlledObjectAvailableBindingOptionMap.modifier_insertKey (enumerator_4635.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 138)) ;
    }
    enumerator_4635.gotoNextObject () ;
  }
  GALGAS_EXobservablePropertyMap var_observablePropertyMap ;
  GALGAS_bool joker_5062_2 ; // Joker input parameter
  GALGAS_EXTypeKind joker_5062_1 ; // Joker input parameter
  ioArgument_ioContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (object->mAttribute_mControllerClassName, joker_5062_2, joker_5062_1, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 141)) ;
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mControllerClassMap.modifier_insertKey (object->mAttribute_mControllerClassName, object->mAttribute_mControllerKind, object->mAttribute_mGenerationKind, var_bindingMap, var_actionMap, var_observablePropertyMap, var_controlledObjectAvailableBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 147)) ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mGenerationKind.objectCompare (GALGAS_generationKind::constructor_fullGeneration (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 157)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    ioArgument_ioGenerationList.addAssign_operation (GALGAS_controllerClassGeneration::constructor_new (object->mAttribute_mControllerClassName.mAttribute_string, var_bindingMap, var_observablePropertyMap  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 158))  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 158)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_controllerClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_controllerClassDeclaration.mSlotID,
                                        categoryMethod_controllerClassDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_controllerClassDeclaration_semanticAnalysis (defineCategoryMethod_controllerClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


