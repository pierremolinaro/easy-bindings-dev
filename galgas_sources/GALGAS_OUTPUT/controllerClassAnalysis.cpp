//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'controllerClassAnalysis.cpp'                     *
//                        Generated by version 2.5.0                         *
//                      july 18th, 2013, at 14h39'42"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "controllerClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "controllerClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'enterControllerClass'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterControllerClass (const GALGAS_controllerClassList_2E_element constinArgument0,
                                   GALGAS_unifiedTypeMap & ioArgument1,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'enterControllerClass'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enterControllerClass (const GALGAS_controllerClassList_2E_element constinArgument_inController,
                                   GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (11)) ;
  cEnumerator_lstringlist enumerator_401 (constinArgument_inController.mAttribute_mActionDeclarationList, kEnumeration_up) ;
  while (enumerator_401.hasCurrentObject ()) {
    {
    var_actionMap.modifier_insertKey (enumerator_401.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (13)) ;
    }
    enumerator_401.gotoNextObject () ;
  }
  GALGAS_outletClassBindingMap var_bindingMap ;
  {
  routine_buildBindingCapabilitiesMap (constinArgument_inController.mAttribute_mBindingList, ioArgument_ioUnifiedTypeMap, var_bindingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (16)) ;
  }
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (22)) ;
  cEnumerator_controllerObservablePropertyList enumerator_766 (constinArgument_inController.mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  while (enumerator_766.hasCurrentObject ()) {
    GALGAS_unifiedTypeProxy var_attributeTypeProxy ;
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_766.current (HERE).mAttribute_mTypeName, var_attributeTypeProxy COMMA_SOURCE_FILE_AT_LINE (24)) ;
    }
    {
    var_observablePropertyMap.modifier_insertKey (enumerator_766.current (HERE).mAttribute_mPropertyName, var_attributeTypeProxy, GALGAS_bool (false), GALGAS_string ("controller.").operator_concat (constinArgument_inController.mAttribute_mControllerClassName.reader_string (SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (33)).operator_concat (enumerator_766.current (HERE).mAttribute_mPropertyName.reader_string (SOURCE_FILE_AT_LINE (33)) COMMA_SOURCE_FILE_AT_LINE (33)), GALGAS_bool (false), inCompiler COMMA_SOURCE_FILE_AT_LINE (29)) ;
    }
    enumerator_766.gotoNextObject () ;
  }
  GALGAS_outletClassBindingOptionMap var_controlledObjectAvailableBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (38)) ;
  cEnumerator_bindingOptionList enumerator_1329 (constinArgument_inController.mAttribute_mControlledObjectBindingOptionList, kEnumeration_up) ;
  while (enumerator_1329.hasCurrentObject ()) {
    GALGAS_unifiedTypeProxyList var_acceptableTypeList = GALGAS_unifiedTypeProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (40)) ;
    cEnumerator_lstringlist enumerator_1423 (enumerator_1329.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
    while (enumerator_1423.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxy var_type ;
      {
      GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1423.current_mValue (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (42)) ;
      }
      var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (47)) ;
      enumerator_1423.gotoNextObject () ;
    }
    {
    var_controlledObjectAvailableBindingOptionMap.modifier_insertKey (enumerator_1329.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (49)) ;
    }
    enumerator_1329.gotoNextObject () ;
  }
  {
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (constinArgument_inController.mAttribute_mControllerClassName, GALGAS_controllerClassType::constructor_new (constinArgument_inController.mAttribute_mControllerKind, constinArgument_inController.mAttribute_mGenerationKind, var_bindingMap, var_actionMap, var_observablePropertyMap, var_controlledObjectAvailableBindingOptionMap COMMA_SOURCE_FILE_AT_LINE (54)), inCompiler COMMA_SOURCE_FILE_AT_LINE (52)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'controllerClassesEnterType'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_controllerClassesEnterType (const GALGAS_controllerClassList constinArgument_inControllerClassList,
                                         GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_controllerClassList enumerator_2284 (constinArgument_inControllerClassList, kEnumeration_up) ;
  while (enumerator_2284.hasCurrentObject ()) {
    {
    routine_enterControllerClass (enumerator_2284.current (HERE), ioArgument_ioUnifiedTypeMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (72)) ;
    }
    enumerator_2284.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


