//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         File 'controllerClassAnalysis.cpp'                                          *
//                                             Generated by version 2.7.0                                              *
//                                          august 16th, 2014, at 18h30'31"                                            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "controllerClassAnalysis.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Filewrapper 'controllerTemplates'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- File '/PMTextField.string.txt'

const char * gWrapperFileContent_0_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMTextField_string)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMTextField_string : NSObject, PMTriggerProtocol, NSTextFieldDelegate {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMTextField\? = nil\n"
  "  var mSendContinously : Bool\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMTextField\?, file : String, line : Int, sendContinously : Bool) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    mSendContinously = sendContinously\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if mOutlet != nil {\n"
  "      mOutlet!.target = self\n"
  "      mOutlet!.action = \"action:\"\n"
  "      if mSendContinously {\n"
  "        NSNotificationCenter.defaultCenter().addObserver (self,\n"
  "          selector: \"continouslySendAction:\",\n"
  "          name: NSControlTextDidChangeNotification,\n"
  "          object: mOutlet\n"
  "        )\n"
  "      }\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    if mSendContinously {\n"
  "      NSNotificationCenter.defaultCenter().removeObserver (self,\n"
  "        name: NSControlTextDidChangeNotification,\n"
  "        object: mOutlet\n"
  "      )\n"
  "    }\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func continouslySendAction (notification : NSNotification) {\n"
  "    updateModel ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.stringValue != mObject!.$MODEL$) {\n"
  "      mOutlet!.stringValue = mObject!.$MODEL$\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    updateModel ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func updateModel () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.stringValue != mObject!.$MODEL$) {\n"
  "      mObject!.$MODEL$ = mOutlet!.stringValue\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_0_controllerTemplates (
  "PMTextField.string.txt",
  "txt",
  true, // Text file
  2904, // Text length
  gWrapperFileContent_0_controllerTemplates
) ;

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_controllerTemplates_0 [2] = {
  & gWrapperFile_0_controllerTemplates,
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_controllerTemplates_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_controllerTemplates (
  "",
  1,
  gWrapperAllFiles_controllerTemplates_0,
  0,
  gWrapperAllDirectories_controllerTemplates_0
) ;


//---------------------------------------------------------------------------------------------------------------------*

cMapElement_templateControllerMap::cMapElement_templateControllerMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_string & in_mTemplateString,
                                                                      const GALGAS_unifiedTypeProxy & in_mModelTypeProxy
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTemplateString (in_mTemplateString),
mAttribute_mModelTypeProxy (in_mModelTypeProxy) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_templateControllerMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateString.isValid () && mAttribute_mModelTypeProxy.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_templateControllerMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_templateControllerMap (mAttribute_lkey, mAttribute_mTemplateString, mAttribute_mModelTypeProxy COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_templateControllerMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTemplateString" ":" ;
  mAttribute_mTemplateString.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mModelTypeProxy" ":" ;
  mAttribute_mModelTypeProxy.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_templateControllerMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_templateControllerMap * operand = (cMapElement_templateControllerMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTemplateString.objectCompare (operand->mAttribute_mTemplateString) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mModelTypeProxy.objectCompare (operand->mAttribute_mModelTypeProxy) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap::GALGAS_templateControllerMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap::GALGAS_templateControllerMap (const GALGAS_templateControllerMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap & GALGAS_templateControllerMap::operator = (const GALGAS_templateControllerMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_templateControllerMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::constructor_mapWithMapToOverride (const GALGAS_templateControllerMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_templateControllerMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_templateControllerMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & inArgument0,
                                                        const GALGAS_unifiedTypeProxy & inArgument1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_templateControllerMap * p = NULL ;
  macroMyNew (p, cMapElement_templateControllerMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@templateControllerMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_string inArgument0,
                                                       GALGAS_unifiedTypeProxy inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_templateControllerMap * p = NULL ;
  macroMyNew (p, cMapElement_templateControllerMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' template controller is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_templateControllerMap_searchKey = "there is no '%K' template controller" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_string & outArgument0,
                                                     GALGAS_unifiedTypeProxy & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_templateControllerMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    outArgument0 = p->mAttribute_mTemplateString ;
    outArgument1 = p->mAttribute_mModelTypeProxy ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_templateControllerMap::reader_mTemplateStringForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    result = p->mAttribute_mTemplateString ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_templateControllerMap::reader_mModelTypeProxyForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) attributes ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    result = p->mAttribute_mModelTypeProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_setMTemplateStringForKey (GALGAS_string inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateControllerMap * p = (cMapElement_templateControllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    p->mAttribute_mTemplateString = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_setMModelTypeProxyForKey (GALGAS_unifiedTypeProxy inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateControllerMap * p = (cMapElement_templateControllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    p->mAttribute_mModelTypeProxy = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_templateControllerMap * GALGAS_templateControllerMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                     const GALGAS_string & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_templateControllerMap * result = (cMapElement_templateControllerMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_templateControllerMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_templateControllerMap::cEnumerator_templateControllerMap (const GALGAS_templateControllerMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element cEnumerator_templateControllerMap::current (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return GALGAS_templateControllerMap_2D_element (p->mAttribute_lkey, p->mAttribute_mTemplateString, p->mAttribute_mModelTypeProxy) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_templateControllerMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_templateControllerMap::current_mTemplateString (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return p->mAttribute_mTemplateString ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_templateControllerMap::current_mModelTypeProxy (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return p->mAttribute_mModelTypeProxy ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @templateControllerMap type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_templateControllerMap ("templateControllerMap",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_templateControllerMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_templateControllerMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_templateControllerMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_templateControllerMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_templateControllerMap result ;
  const GALGAS_templateControllerMap * p = (const GALGAS_templateControllerMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_templateControllerMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("templateControllerMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'buildControllerTemplateMap'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildControllerTemplateMap (const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                         const GALGAS_controllerTemplateList constinArgument_inControllerTemplateList,
                                         GALGAS_templateControllerMap & outArgument_outTemplateControllerMap,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outTemplateControllerMap.drop () ; // Release 'out' argument
  outArgument_outTemplateControllerMap = GALGAS_templateControllerMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 33)) ;
  GALGAS_filewrapper var_fw = GALGAS_filewrapper (gWrapperDirectory_0_controllerTemplates) ;
  cEnumerator_controllerTemplateList enumerator_1112 (constinArgument_inControllerTemplateList, kEnumeration_up) ;
  while (enumerator_1112.hasCurrentObject ()) {
    GALGAS_lstring var_templateName = GALGAS_lstring::constructor_new (enumerator_1112.current_mOutletClassName (HERE).mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 36)).add_operation (enumerator_1112.current_mBindingName (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 36)), enumerator_1112.current_mBindingName (HERE).mAttribute_location  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 36)) ;
    GALGAS_string var_templateText = var_fw.reader_textFileContentsAtPath (GALGAS_string ("/").add_operation (var_templateName.reader_string (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 37)), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 37)).add_operation (GALGAS_string (".txt"), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 37)), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 37)) ;
    GALGAS_unifiedTypeProxy var_modelTypeProxy = GALGAS_unifiedTypeProxy::constructor_searchKey (constinArgument_inUnifiedTypeMap, enumerator_1112.current_mModelTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 38)) ;
    {
    outArgument_outTemplateControllerMap.modifier_insertKey (var_templateName, var_templateText, var_modelTypeProxy, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 39)) ;
    }
    enumerator_1112.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element::GALGAS_templateControllerMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mTemplateString (),
mAttribute_mModelTypeProxy () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element::~ GALGAS_templateControllerMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element::GALGAS_templateControllerMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_string & inOperand1,
                                                                                  const GALGAS_unifiedTypeProxy & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mTemplateString (inOperand1),
mAttribute_mModelTypeProxy (inOperand2) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element GALGAS_templateControllerMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_templateControllerMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_string::constructor_default (HERE),
                                                  GALGAS_unifiedTypeProxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element GALGAS_templateControllerMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_string & inOperand1,
                                                                                                  const GALGAS_unifiedTypeProxy & inOperand2 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_templateControllerMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_templateControllerMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_templateControllerMap_2D_element::objectCompare (const GALGAS_templateControllerMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTemplateString.objectCompare (inOperand.mAttribute_mTemplateString) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelTypeProxy.objectCompare (inOperand.mAttribute_mModelTypeProxy) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_templateControllerMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateString.isValid () && mAttribute_mModelTypeProxy.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mTemplateString.drop () ;
  mAttribute_mModelTypeProxy.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @templateControllerMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTemplateString.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelTypeProxy.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_templateControllerMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_templateControllerMap_2D_element::reader_mTemplateString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTemplateString ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_templateControllerMap_2D_element::reader_mModelTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelTypeProxy ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @templateControllerMap-element type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_templateControllerMap_2D_element ("templateControllerMap-element",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_templateControllerMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_templateControllerMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_templateControllerMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_templateControllerMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element GALGAS_templateControllerMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_templateControllerMap_2D_element result ;
  const GALGAS_templateControllerMap_2D_element * p = (const GALGAS_templateControllerMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_templateControllerMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("templateControllerMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


