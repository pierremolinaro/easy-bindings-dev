//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         File 'controllerClassAnalysis.cpp'                                          *
//                                             Generated by version 3.0.0                                              *
//                                         september 3rd, 2014, at 19h40'17"                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "controllerClassAnalysis.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                          Filewrapper 'controllerTemplates'                                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- File '/PMColorWell.color.Color.model.txt'

const char * gWrapperFileContent_0_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMColorWell_color)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMColorWell_color : NSObject, PMTriggerProtocol {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMColorWell\? = nil\n"
  "  var mSendContinously : Bool\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMColorWell\?, file : String, line : Int, sendContinously : Bool) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    mSendContinously = sendContinously\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if let outlet = mOutlet {\n"
  "      outlet.target = self\n"
  "      outlet.action = \"action:\"\n"
  "      outlet.continuous = true\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.color != mObject!.$MODEL$) {\n"
  "      mOutlet!.color = mObject!.$MODEL$\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.color != mObject!.$MODEL$) {\n"
  "      mObject!.$MODEL$ = mOutlet!.color\n"
  "      if mSendContinously {\n"
  "        runTriggers ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_0_controllerTemplates (
  "PMColorWell.color.Color.model.txt",
  "txt",
  true, // Text file
  2157, // Text length
  gWrapperFileContent_0_controllerTemplates
) ;

//--- File '/PMColorWell.color.NSColor.model.txt'

const char * gWrapperFileContent_1_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMColorWell_color)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMColorWell_color : NSObject, PMTriggerProtocol {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMColorWell\? = nil\n"
  "  var mSendContinously : Bool\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMColorWell\?, file : String, line : Int, sendContinously : Bool) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    mSendContinously = sendContinously\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if let outlet = mOutlet {\n"
  "      outlet.target = self\n"
  "      outlet.action = \"action:\"\n"
  "      outlet.continuous = true\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.color != mObject!.$MODEL$) {\n"
  "      mOutlet!.color = mObject!.$MODEL$\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.color != mObject!.$MODEL$) {\n"
  "      mObject!.$MODEL$ = mOutlet!.color\n"
  "      if mSendContinously {\n"
  "        runTriggers ()\n"
  "      }\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_1_controllerTemplates (
  "PMColorWell.color.NSColor.model.txt",
  "txt",
  true, // Text file
  2157, // Text length
  gWrapperFileContent_1_controllerTemplates
) ;

//--- File '/PMDatePicker.date.Date.model.txt'

const char * gWrapperFileContent_2_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMDatePicker_date)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMDatePicker_date : NSObject, PMTriggerProtocol {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMDatePicker\? = nil\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMDatePicker\?, file : String, line : Int) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if let outlet = mOutlet {\n"
  "      outlet.target = self\n"
  "      outlet.action = \"action:\"\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && !mOutlet!.dateValue.isEqualToDate (mObject!.$MODEL$) {\n"
  "      mOutlet!.dateValue = mObject!.$MODEL$\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    if (mOutlet != nil) && (mObject != nil) && !mOutlet!.dateValue.isEqualToDate (mObject!.$MODEL$) {\n"
  "      mObject!.$MODEL$ = mOutlet!.dateValue\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_2_controllerTemplates (
  "PMDatePicker.date.Date.model.txt",
  "txt",
  true, // Text file
  2016, // Text length
  gWrapperFileContent_2_controllerTemplates
) ;

//--- File '/PMDatePicker.date.NSDate.model.txt'

const char * gWrapperFileContent_3_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMDatePicker_date)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMDatePicker_date : NSObject, PMTriggerProtocol {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMDatePicker\? = nil\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMDatePicker\?, file : String, line : Int) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if let outlet = mOutlet {\n"
  "      outlet.target = self\n"
  "      outlet.action = \"action:\"\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && !mOutlet!.dateValue.isEqualToDate (mObject!.$MODEL$) {\n"
  "      mOutlet!.dateValue = mObject!.$MODEL$\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    if (mOutlet != nil) && (mObject != nil) && !mOutlet!.dateValue.isEqualToDate (mObject!.$MODEL$) {\n"
  "      mObject!.$MODEL$ = mOutlet!.dateValue\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_3_controllerTemplates (
  "PMDatePicker.date.NSDate.model.txt",
  "txt",
  true, // Text file
  2016, // Text length
  gWrapperFileContent_3_controllerTemplates
) ;

//--- File '/PMTextField.value.Integer.model.txt'

const char * gWrapperFileContent_4_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMTextField_value)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMTextField_value : NSObject, PMTriggerProtocol, NSTextFieldDelegate {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMTextField\? = nil\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMTextField\?, file : String, line : Int) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if let outlet = mOutlet {\n"
  "      outlet.target = self\n"
  "      outlet.action = \"action:\"\n"
  "      outlet.delegate = self // For calling control: didFailToFormatString:errorDescription\n"
  "      if outlet.formatter == nil {\n"
  "        presentErrorWindow (file, line, \"the outlet has no formatter\")\n"
  "      }else{\n"
  "        let formatter : NSFormatter = outlet.formatter as NSFormatter\n"
  "        if !formatter.isKindOfClass (NSNumberFormatter) {\n"
  "          presentErrorWindow (file, line, \"the formatter should be an NSNumberFormatter\")\n"
  "        }\n"
  "      }\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mOutlet\?.delegate = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.integerValue != Int (mObject!.$MODEL$)) {\n"
  "      mOutlet!.integerValue = Int (mObject!.$MODEL$)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.integerValue != Int (mObject!.$MODEL$)) {\n"
  "      mObject!.$MODEL$ = Int64 (mOutlet!.integerValue)\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  //    NSTextFieldDelegate delegate function                                                                          *\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  func control (control: NSControl!,\n"
  "                didFailToFormatString string: String!,\n"
  "                errorDescription error: String!) -> Bool {\n"
  "    let alert = NSAlert ()\n"
  "    alert.messageText = error\n"
  "    alert.informativeText = \"Please provide a valid value.\"\n"
  "    alert.addButtonWithTitle (\"Ok\")\n"
  "    alert.addButtonWithTitle (\"Discard Change\")\n"
  "    alert.beginSheetModalForWindow (mOutlet!.window, completionHandler:{(response : NSModalResponse) -> Void in\n"
  "      if response == NSAlertSecondButtonReturn { // Discard Change\n"
  "        self.mOutlet!.integerValue = Int (self.mObject!.$MODEL$)\n"
  "      }\n"
  "    })\n"
  "    return false\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_4_controllerTemplates (
  "PMTextField.value.Integer.model.txt",
  "txt",
  true, // Text file
  3523, // Text length
  gWrapperFileContent_4_controllerTemplates
) ;

//--- File '/PMTextField.value.String.model.txt'

const char * gWrapperFileContent_5_controllerTemplates = "@objc(Controller_$OBJECTCLASS$_$MODEL$_PMTextField_value)\n"
  "class Controller_$OBJECTCLASS$_$MODEL$_PMTextField_value : NSObject, PMTriggerProtocol {\n"
  "\n"
  "  weak var mObject : $OBJECTCLASS$\? = nil\n"
  "  weak var mOutlet: PMTextField\? = nil\n"
  "  var mSendContinously : Bool\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  init (object : $OBJECTCLASS$, outlet : PMTextField\?, file : String, line : Int, sendContinously : Bool) {\n"
  "    mObject = object\n"
  "    mOutlet = outlet\n"
  "    mSendContinously = sendContinously\n"
  "    super.init ()\n"
  "    noteObjectAllocation (self)\n"
  "    if let outlet = mOutlet {\n"
  "      outlet.target = self\n"
  "      outlet.action = \"action:\"\n"
  "      if outlet.formatter != nil {\n"
  "        presentErrorWindow (file, line, \"the outlet has a formatter\")\n"
  "      }\n"
  "      if mSendContinously {\n"
  "        NSNotificationCenter.defaultCenter().addObserver (self,\n"
  "          selector: \"continouslySendAction:\",\n"
  "          name: NSControlTextDidChangeNotification,\n"
  "          object: mOutlet\n"
  "        )\n"
  "      }\n"
  "    }\n"
  "    mObject\?.addObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "  \n"
  "  deinit {\n"
  "    if mSendContinously {\n"
  "      NSNotificationCenter.defaultCenter().removeObserver (self,\n"
  "        name: NSControlTextDidChangeNotification,\n"
  "        object: mOutlet\n"
  "      )\n"
  "    }\n"
  "    noteObjectDeallocation (self)\n"
  "    mOutlet\?.target = nil\n"
  "    mOutlet\?.action = nil\n"
  "    mObject\?.removeObserverOf_$MODEL$ (self)\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func continouslySendAction (notification : NSNotification) {\n"
  "    updateModel ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func trigger () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.stringValue != mObject!.$MODEL$) {\n"
  "      mOutlet!.stringValue = mObject!.$MODEL$\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func action (sender : AnyObject!) {\n"
  "    updateModel ()\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func updateModel () {\n"
  "    if (mOutlet != nil) && (mObject != nil) && (mOutlet!.stringValue != mObject!.$MODEL$) {\n"
  "      mObject!.$MODEL$ = mOutlet!.stringValue\n"
  "    }\n"
  "  }\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  var mTransientIndex = kTriggerOutletDisplay\n"
  "\n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "\n"
  "  func noteTransientChanged () {\n"
  "  }\n"
  "  \n"
  "  //-------------------------------------------------------------------------------------------------------------------*\n"
  "}\n"
  "\n" ;

const cRegularFileWrapper gWrapperFile_5_controllerTemplates (
  "PMTextField.value.String.model.txt",
  "txt",
  true, // Text file
  2996, // Text length
  gWrapperFileContent_5_controllerTemplates
) ;

//--- All files of '' directory

static const cRegularFileWrapper * gWrapperAllFiles_controllerTemplates_0 [7] = {
  & gWrapperFile_0_controllerTemplates,
  & gWrapperFile_1_controllerTemplates,
  & gWrapperFile_2_controllerTemplates,
  & gWrapperFile_3_controllerTemplates,
  & gWrapperFile_4_controllerTemplates,
  & gWrapperFile_5_controllerTemplates,
  NULL
} ;

//--- All sub-directories of '' directory

static const cDirectoryWrapper * gWrapperAllDirectories_controllerTemplates_0 [1] = {
  NULL
} ;

//--- Directory ''

const cDirectoryWrapper gWrapperDirectory_0_controllerTemplates (
  "",
  6,
  gWrapperAllFiles_controllerTemplates_0,
  0,
  gWrapperAllDirectories_controllerTemplates_0
) ;


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Class for element of '@controllerBindingOptionDecoratedList' list                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

class cCollectionElement_controllerBindingOptionDecoratedList : public cCollectionElement {
  public : GALGAS_controllerBindingOptionDecoratedList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_controllerBindingOptionDecoratedList (const GALGAS_lstring & in_mOptionName,
                                                                    const GALGAS_unifiedTypeProxy & in_mOptionType
                                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement_controllerBindingOptionDecoratedList::cCollectionElement_controllerBindingOptionDecoratedList (const GALGAS_lstring & in_mOptionName,
                                                                                                                  const GALGAS_unifiedTypeProxy & in_mOptionType
                                                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOptionName, in_mOptionType) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cCollectionElement_controllerBindingOptionDecoratedList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_controllerBindingOptionDecoratedList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_controllerBindingOptionDecoratedList (mObject.mAttribute_mOptionName, mObject.mAttribute_mOptionType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cCollectionElement_controllerBindingOptionDecoratedList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionName" ":" ;
  mObject.mAttribute_mOptionName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionType" ":" ;
  mObject.mAttribute_mOptionType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_controllerBindingOptionDecoratedList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_controllerBindingOptionDecoratedList * operand = (cCollectionElement_controllerBindingOptionDecoratedList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_controllerBindingOptionDecoratedList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList::GALGAS_controllerBindingOptionDecoratedList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList::GALGAS_controllerBindingOptionDecoratedList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_controllerBindingOptionDecoratedList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::constructor_listWithValue (const GALGAS_lstring & inOperand0,
                                                                                                                    const GALGAS_unifiedTypeProxy & inOperand1
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_controllerBindingOptionDecoratedList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_controllerBindingOptionDecoratedList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                             const GALGAS_lstring & in_mOptionName,
                                                                             const GALGAS_unifiedTypeProxy & in_mOptionType
                                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_controllerBindingOptionDecoratedList * p = NULL ;
  macroMyNew (p, cCollectionElement_controllerBindingOptionDecoratedList (in_mOptionName,
                                                                          in_mOptionType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::addAssign_operation (const GALGAS_lstring & inOperand0,
                                                                       const GALGAS_unifiedTypeProxy & inOperand1
                                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_controllerBindingOptionDecoratedList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::modifier_insertAtIndex (const GALGAS_lstring inOperand0,
                                                                          const GALGAS_unifiedTypeProxy inOperand1,
                                                                          const GALGAS_uint inInsertionIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_controllerBindingOptionDecoratedList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::modifier_removeAtIndex (GALGAS_lstring & outOperand0,
                                                                          GALGAS_unifiedTypeProxy & outOperand1,
                                                                          const GALGAS_uint inRemoveIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
      outOperand0 = p->mObject.mAttribute_mOptionName ;
      outOperand1 = p->mObject.mAttribute_mOptionType ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::modifier_popFirst (GALGAS_lstring & outOperand0,
                                                                     GALGAS_unifiedTypeProxy & outOperand1,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mOptionType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::modifier_popLast (GALGAS_lstring & outOperand0,
                                                                    GALGAS_unifiedTypeProxy & outOperand1,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mOptionType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::method_first (GALGAS_lstring & outOperand0,
                                                                GALGAS_unifiedTypeProxy & outOperand1,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mOptionType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::method_last (GALGAS_lstring & outOperand0,
                                                               GALGAS_unifiedTypeProxy & outOperand1,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mOptionType ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::operator_concat (const GALGAS_controllerBindingOptionDecoratedList & inOperand
                                                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerBindingOptionDecoratedList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::add_operation (const GALGAS_controllerBindingOptionDecoratedList & inOperand,
                                                                                                        C_Compiler * /* inCompiler */
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerBindingOptionDecoratedList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_controllerBindingOptionDecoratedList result = GALGAS_controllerBindingOptionDecoratedList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_controllerBindingOptionDecoratedList result = GALGAS_controllerBindingOptionDecoratedList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList::dotAssign_operation (const GALGAS_controllerBindingOptionDecoratedList inOperand
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerBindingOptionDecoratedList::reader_mOptionNameAtIndex (const GALGAS_uint & inIndex,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
    result = p->mObject.mAttribute_mOptionName ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_controllerBindingOptionDecoratedList::reader_mOptionTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_controllerBindingOptionDecoratedList * p = (cCollectionElement_controllerBindingOptionDecoratedList *) attributes.ptr () ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
    result = p->mObject.mAttribute_mOptionType ;
  }
  return result ;
}



//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_controllerBindingOptionDecoratedList::cEnumerator_controllerBindingOptionDecoratedList (const GALGAS_controllerBindingOptionDecoratedList & inEnumeratedObject,
                                                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element cEnumerator_controllerBindingOptionDecoratedList::current (LOCATION_ARGS) const {
  const cCollectionElement_controllerBindingOptionDecoratedList * p = (const cCollectionElement_controllerBindingOptionDecoratedList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerBindingOptionDecoratedList::current_mOptionName (LOCATION_ARGS) const {
  const cCollectionElement_controllerBindingOptionDecoratedList * p = (const cCollectionElement_controllerBindingOptionDecoratedList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
  return p->mObject.mAttribute_mOptionName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_controllerBindingOptionDecoratedList::current_mOptionType (LOCATION_ARGS) const {
  const cCollectionElement_controllerBindingOptionDecoratedList * p = (const cCollectionElement_controllerBindingOptionDecoratedList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_controllerBindingOptionDecoratedList) ;
  return p->mObject.mAttribute_mOptionType ;
}




//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                     @controllerBindingOptionDecoratedList type                                      *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerBindingOptionDecoratedList ("controllerBindingOptionDecoratedList",
                                                             NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerBindingOptionDecoratedList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerBindingOptionDecoratedList ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerBindingOptionDecoratedList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerBindingOptionDecoratedList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_controllerBindingOptionDecoratedList::extractObject (const GALGAS_object & inObject,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_controllerBindingOptionDecoratedList result ;
  const GALGAS_controllerBindingOptionDecoratedList * p = (const GALGAS_controllerBindingOptionDecoratedList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerBindingOptionDecoratedList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerBindingOptionDecoratedList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_templateControllerMap::cMapElement_templateControllerMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_string & in_mTemplateString,
                                                                      const GALGAS_unifiedTypeProxy & in_mModelTypeProxy,
                                                                      const GALGAS_lstring & in_mModelSelector,
                                                                      const GALGAS_controllerBindingOptionDecoratedList & in_mControllerBindingOptionDecoratedList
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTemplateString (in_mTemplateString),
mAttribute_mModelTypeProxy (in_mModelTypeProxy),
mAttribute_mModelSelector (in_mModelSelector),
mAttribute_mControllerBindingOptionDecoratedList (in_mControllerBindingOptionDecoratedList) {
}

//---------------------------------------------------------------------------------------------------------------------*

bool cMapElement_templateControllerMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateString.isValid () && mAttribute_mModelTypeProxy.isValid () && mAttribute_mModelSelector.isValid () && mAttribute_mControllerBindingOptionDecoratedList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement * cMapElement_templateControllerMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_templateControllerMap (mAttribute_lkey, mAttribute_mTemplateString, mAttribute_mModelTypeProxy, mAttribute_mModelSelector, mAttribute_mControllerBindingOptionDecoratedList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void cMapElement_templateControllerMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTemplateString" ":" ;
  mAttribute_mTemplateString.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mModelTypeProxy" ":" ;
  mAttribute_mModelTypeProxy.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mModelSelector" ":" ;
  mAttribute_mModelSelector.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerBindingOptionDecoratedList" ":" ;
  mAttribute_mControllerBindingOptionDecoratedList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult cMapElement_templateControllerMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_templateControllerMap * operand = (cMapElement_templateControllerMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTemplateString.objectCompare (operand->mAttribute_mTemplateString) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mModelTypeProxy.objectCompare (operand->mAttribute_mModelTypeProxy) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mModelSelector.objectCompare (operand->mAttribute_mModelSelector) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerBindingOptionDecoratedList.objectCompare (operand->mAttribute_mControllerBindingOptionDecoratedList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap::GALGAS_templateControllerMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap::GALGAS_templateControllerMap (const GALGAS_templateControllerMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap & GALGAS_templateControllerMap::operator = (const GALGAS_templateControllerMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_templateControllerMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::constructor_mapWithMapToOverride (const GALGAS_templateControllerMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_templateControllerMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_templateControllerMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & inArgument0,
                                                        const GALGAS_unifiedTypeProxy & inArgument1,
                                                        const GALGAS_lstring & inArgument2,
                                                        const GALGAS_controllerBindingOptionDecoratedList & inArgument3,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_templateControllerMap * p = NULL ;
  macroMyNew (p, cMapElement_templateControllerMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@templateControllerMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_string inArgument0,
                                                       GALGAS_unifiedTypeProxy inArgument1,
                                                       GALGAS_lstring inArgument2,
                                                       GALGAS_controllerBindingOptionDecoratedList inArgument3,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_templateControllerMap * p = NULL ;
  macroMyNew (p, cMapElement_templateControllerMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller template is already declared in %L" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

const char * kSearchErrorMessage_templateControllerMap_searchKey = "there is no '%K' controller template" ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_string & outArgument0,
                                                     GALGAS_unifiedTypeProxy & outArgument1,
                                                     GALGAS_lstring & outArgument2,
                                                     GALGAS_controllerBindingOptionDecoratedList & outArgument3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_templateControllerMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    outArgument0 = p->mAttribute_mTemplateString ;
    outArgument1 = p->mAttribute_mModelTypeProxy ;
    outArgument2 = p->mAttribute_mModelSelector ;
    outArgument3 = p->mAttribute_mControllerBindingOptionDecoratedList ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_templateControllerMap::reader_mTemplateStringForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    result = p->mAttribute_mTemplateString ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_templateControllerMap::reader_mModelTypeProxyForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) attributes ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    result = p->mAttribute_mModelTypeProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_templateControllerMap::reader_mModelSelectorForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    result = p->mAttribute_mModelSelector ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_templateControllerMap::reader_mControllerBindingOptionDecoratedListForKey (const GALGAS_string & inKey,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) attributes ;
  GALGAS_controllerBindingOptionDecoratedList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    result = p->mAttribute_mControllerBindingOptionDecoratedList ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_setMTemplateStringForKey (GALGAS_string inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateControllerMap * p = (cMapElement_templateControllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    p->mAttribute_mTemplateString = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_setMModelTypeProxyForKey (GALGAS_unifiedTypeProxy inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateControllerMap * p = (cMapElement_templateControllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    p->mAttribute_mModelTypeProxy = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_setMModelSelectorForKey (GALGAS_lstring inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateControllerMap * p = (cMapElement_templateControllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    p->mAttribute_mModelSelector = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap::modifier_setMControllerBindingOptionDecoratedListForKey (GALGAS_controllerBindingOptionDecoratedList inAttributeValue,
                                                                                            GALGAS_string inKey,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_templateControllerMap * p = (cMapElement_templateControllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_templateControllerMap) ;
    p->mAttribute_mControllerBindingOptionDecoratedList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------------------------------------------------*

cMapElement_templateControllerMap * GALGAS_templateControllerMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                     const GALGAS_string & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_templateControllerMap * result = (cMapElement_templateControllerMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_templateControllerMap) ;
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

cEnumerator_templateControllerMap::cEnumerator_templateControllerMap (const GALGAS_templateControllerMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element cEnumerator_templateControllerMap::current (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return GALGAS_templateControllerMap_2D_element (p->mAttribute_lkey, p->mAttribute_mTemplateString, p->mAttribute_mModelTypeProxy, p->mAttribute_mModelSelector, p->mAttribute_mControllerBindingOptionDecoratedList) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_templateControllerMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string cEnumerator_templateControllerMap::current_mTemplateString (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return p->mAttribute_mTemplateString ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_templateControllerMap::current_mModelTypeProxy (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return p->mAttribute_mModelTypeProxy ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_templateControllerMap::current_mModelSelector (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return p->mAttribute_mModelSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList cEnumerator_templateControllerMap::current_mControllerBindingOptionDecoratedList (LOCATION_ARGS) const {
  const cMapElement_templateControllerMap * p = (const cMapElement_templateControllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_templateControllerMap) ;
  return p->mAttribute_mControllerBindingOptionDecoratedList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             @templateControllerMap type                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_templateControllerMap ("templateControllerMap",
                                              NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_templateControllerMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_templateControllerMap ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_templateControllerMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_templateControllerMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap GALGAS_templateControllerMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_templateControllerMap result ;
  const GALGAS_templateControllerMap * p = (const GALGAS_templateControllerMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_templateControllerMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("templateControllerMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'buildControllerTemplateMap'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildControllerTemplateMap (const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                         const GALGAS_controllerTemplateList constinArgument_inControllerTemplateList,
                                         GALGAS_templateControllerMap & outArgument_outTemplateControllerMap,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outTemplateControllerMap.drop () ; // Release 'out' argument
  outArgument_outTemplateControllerMap = GALGAS_templateControllerMap::constructor_emptyMap (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 37)) ;
  GALGAS_filewrapper var_fw = GALGAS_filewrapper (gWrapperDirectory_0_controllerTemplates) ;
  cEnumerator_controllerTemplateList enumerator_1293 (constinArgument_inControllerTemplateList, kEnumeration_up) ;
  while (enumerator_1293.hasCurrentObject ()) {
    GALGAS_lstring var_templateName = GALGAS_lstring::constructor_new (enumerator_1293.current_mOutletClassName (HERE).mAttribute_string.add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 41)).add_operation (enumerator_1293.current_mBindingName (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 41)).add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 41)).add_operation (enumerator_1293.current_mModelTypeName (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 41)).add_operation (GALGAS_string ("."), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 41)).add_operation (enumerator_1293.current_mModelSelector (HERE).mAttribute_string, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 41)), enumerator_1293.current_mBindingName (HERE).mAttribute_location  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 40)) ;
    GALGAS_string var_templateText = var_fw.reader_textFileContentsAtPath (GALGAS_string ("/").add_operation (var_templateName.reader_string (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 44)), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 44)).add_operation (GALGAS_string (".txt"), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 44)), inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 44)) ;
    GALGAS_unifiedTypeProxy var_modelTypeProxy = GALGAS_unifiedTypeProxy::constructor_searchKey (constinArgument_inUnifiedTypeMap, enumerator_1293.current_mModelTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 45)) ;
    GALGAS_controllerBindingOptionDecoratedList var_controllerBindingOptionDecoratedList = GALGAS_controllerBindingOptionDecoratedList::constructor_emptyList (SOURCE_FILE ("controllerClassAnalysis.gSemantics", 46)) ;
    cEnumerator_controllerBindingOptionList enumerator_1796 (enumerator_1293.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_1796.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxy var_bindingOptionTypeProxy = GALGAS_unifiedTypeProxy::constructor_searchKey (constinArgument_inUnifiedTypeMap, enumerator_1796.current_mOptionTypeName (HERE), inCompiler  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 48)) ;
      var_controllerBindingOptionDecoratedList.addAssign_operation (enumerator_1796.current_mOptionName (HERE), var_bindingOptionTypeProxy  COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 49)) ;
      enumerator_1796.gotoNextObject () ;
    }
    {
    outArgument_outTemplateControllerMap.modifier_insertKey (var_templateName, var_templateText, var_modelTypeProxy, enumerator_1293.current_mModelSelector (HERE), var_controllerBindingOptionDecoratedList, inCompiler COMMA_SOURCE_FILE ("controllerClassAnalysis.gSemantics", 51)) ;
    }
    enumerator_1293.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element::GALGAS_controllerBindingOptionDecoratedList_2D_element (void) :
mAttribute_mOptionName (),
mAttribute_mOptionType () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element::~ GALGAS_controllerBindingOptionDecoratedList_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element::GALGAS_controllerBindingOptionDecoratedList_2D_element (const GALGAS_lstring & inOperand0,
                                                                                                                const GALGAS_unifiedTypeProxy & inOperand1) :
mAttribute_mOptionName (inOperand0),
mAttribute_mOptionType (inOperand1) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element GALGAS_controllerBindingOptionDecoratedList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerBindingOptionDecoratedList_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                                 GALGAS_unifiedTypeProxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element GALGAS_controllerBindingOptionDecoratedList_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                                const GALGAS_unifiedTypeProxy & inOperand1 
                                                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerBindingOptionDecoratedList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_controllerBindingOptionDecoratedList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerBindingOptionDecoratedList_2D_element::objectCompare (const GALGAS_controllerBindingOptionDecoratedList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOptionName.objectCompare (inOperand.mAttribute_mOptionName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOptionType.objectCompare (inOperand.mAttribute_mOptionType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_controllerBindingOptionDecoratedList_2D_element::isValid (void) const {
  return mAttribute_mOptionName.isValid () && mAttribute_mOptionType.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList_2D_element::drop (void) {
  mAttribute_mOptionName.drop () ;
  mAttribute_mOptionType.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_controllerBindingOptionDecoratedList_2D_element::description (C_String & ioString,
                                                                          const int32_t inIndentation) const {
  ioString << "<struct @controllerBindingOptionDecoratedList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOptionName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOptionType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerBindingOptionDecoratedList_2D_element::reader_mOptionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionName ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_controllerBindingOptionDecoratedList_2D_element::reader_mOptionType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionType ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                 @controllerBindingOptionDecoratedList-element type                                  *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerBindingOptionDecoratedList_2D_element ("controllerBindingOptionDecoratedList-element",
                                                                        NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerBindingOptionDecoratedList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerBindingOptionDecoratedList_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerBindingOptionDecoratedList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerBindingOptionDecoratedList_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList_2D_element GALGAS_controllerBindingOptionDecoratedList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_controllerBindingOptionDecoratedList_2D_element result ;
  const GALGAS_controllerBindingOptionDecoratedList_2D_element * p = (const GALGAS_controllerBindingOptionDecoratedList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerBindingOptionDecoratedList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerBindingOptionDecoratedList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element::GALGAS_templateControllerMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mTemplateString (),
mAttribute_mModelTypeProxy (),
mAttribute_mModelSelector (),
mAttribute_mControllerBindingOptionDecoratedList () {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element::~ GALGAS_templateControllerMap_2D_element (void) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element::GALGAS_templateControllerMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_string & inOperand1,
                                                                                  const GALGAS_unifiedTypeProxy & inOperand2,
                                                                                  const GALGAS_lstring & inOperand3,
                                                                                  const GALGAS_controllerBindingOptionDecoratedList & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mTemplateString (inOperand1),
mAttribute_mModelTypeProxy (inOperand2),
mAttribute_mModelSelector (inOperand3),
mAttribute_mControllerBindingOptionDecoratedList (inOperand4) {
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element GALGAS_templateControllerMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_templateControllerMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_string::constructor_default (HERE),
                                                  GALGAS_unifiedTypeProxy::constructor_null (HERE),
                                                  GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_controllerBindingOptionDecoratedList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element GALGAS_templateControllerMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_string & inOperand1,
                                                                                                  const GALGAS_unifiedTypeProxy & inOperand2,
                                                                                                  const GALGAS_lstring & inOperand3,
                                                                                                  const GALGAS_controllerBindingOptionDecoratedList & inOperand4 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_templateControllerMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_templateControllerMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_templateControllerMap_2D_element::objectCompare (const GALGAS_templateControllerMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTemplateString.objectCompare (inOperand.mAttribute_mTemplateString) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelTypeProxy.objectCompare (inOperand.mAttribute_mModelTypeProxy) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mModelSelector.objectCompare (inOperand.mAttribute_mModelSelector) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerBindingOptionDecoratedList.objectCompare (inOperand.mAttribute_mControllerBindingOptionDecoratedList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

bool GALGAS_templateControllerMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTemplateString.isValid () && mAttribute_mModelTypeProxy.isValid () && mAttribute_mModelSelector.isValid () && mAttribute_mControllerBindingOptionDecoratedList.isValid () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mTemplateString.drop () ;
  mAttribute_mModelTypeProxy.drop () ;
  mAttribute_mModelSelector.drop () ;
  mAttribute_mControllerBindingOptionDecoratedList.drop () ;
}

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_templateControllerMap_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @templateControllerMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTemplateString.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelTypeProxy.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mModelSelector.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerBindingOptionDecoratedList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_templateControllerMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_string GALGAS_templateControllerMap_2D_element::reader_mTemplateString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTemplateString ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_templateControllerMap_2D_element::reader_mModelTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelTypeProxy ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_lstring GALGAS_templateControllerMap_2D_element::reader_mModelSelector (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mModelSelector ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_controllerBindingOptionDecoratedList GALGAS_templateControllerMap_2D_element::reader_mControllerBindingOptionDecoratedList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerBindingOptionDecoratedList ;
}



//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                         @templateControllerMap-element type                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_templateControllerMap_2D_element ("templateControllerMap-element",
                                                         NULL) ;

//---------------------------------------------------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_templateControllerMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_templateControllerMap_2D_element ;
}

//---------------------------------------------------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_templateControllerMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_templateControllerMap_2D_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------------------------------------------------*

GALGAS_templateControllerMap_2D_element GALGAS_templateControllerMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_templateControllerMap_2D_element result ;
  const GALGAS_templateControllerMap_2D_element * p = (const GALGAS_templateControllerMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_templateControllerMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("templateControllerMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


