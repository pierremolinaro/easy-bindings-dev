//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticAnalysis.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      june 24th, 2011, at 19h55'52"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "easyBindings_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*

cMapElement_classObservablePropertyMap::cMapElement_classObservablePropertyMap (const GALGAS_lstring & inKey,
                                                                                const GALGAS_easyBindingType & in_mType,
                                                                                const GALGAS_stringlist & in_mPropertyDependancyList
                                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mPropertyDependancyList (in_mPropertyDependancyList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_classObservablePropertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mPropertyDependancyList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_classObservablePropertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classObservablePropertyMap (mAttribute_lkey, mAttribute_mType, mAttribute_mPropertyDependancyList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_classObservablePropertyMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyDependancyList" ":" ;
  mAttribute_mPropertyDependancyList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_classObservablePropertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classObservablePropertyMap * operand = (cMapElement_classObservablePropertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyDependancyList.objectCompare (operand->mAttribute_mPropertyDependancyList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap::GALGAS_classObservablePropertyMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap::GALGAS_classObservablePropertyMap (const GALGAS_classObservablePropertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap & GALGAS_classObservablePropertyMap::operator = (const GALGAS_classObservablePropertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap GALGAS_classObservablePropertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classObservablePropertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap GALGAS_classObservablePropertyMap::constructor_mapWithMapToOverride (const GALGAS_classObservablePropertyMap & inMapToOverride
                                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_classObservablePropertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap GALGAS_classObservablePropertyMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_classObservablePropertyMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_classObservablePropertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                                            GALGAS_easyBindingType inArgument0,
                                                            GALGAS_stringlist inArgument1,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cMapElement_classObservablePropertyMap * p = NULL ;
  macroMyNew (p, cMapElement_classObservablePropertyMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class property is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_classObservablePropertyMap_searchKey = "the '%K' class property is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_classObservablePropertyMap::method_searchKey (GALGAS_lstring inKey,
                                                          GALGAS_easyBindingType & outArgument0,
                                                          GALGAS_stringlist & outArgument1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cMapElement_classObservablePropertyMap * p = (const cMapElement_classObservablePropertyMap *) performSearch (inKey,
                                                                                                                       inCompiler,
                                                                                                                       kSearchErrorMessage_classObservablePropertyMap_searchKey
                                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_classObservablePropertyMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mPropertyDependancyList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_classObservablePropertyMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classObservablePropertyMap * p = (const cMapElement_classObservablePropertyMap *) attributes ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classObservablePropertyMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_classObservablePropertyMap::reader_mPropertyDependancyListForKey (const GALGAS_string & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classObservablePropertyMap * p = (const cMapElement_classObservablePropertyMap *) attributes ;
  GALGAS_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classObservablePropertyMap) ;
    result = p->mAttribute_mPropertyDependancyList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_classObservablePropertyMap::modifier_setMTypeForKey (GALGAS_easyBindingType inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classObservablePropertyMap * p = (cMapElement_classObservablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classObservablePropertyMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classObservablePropertyMap::modifier_setMPropertyDependancyListForKey (GALGAS_stringlist inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classObservablePropertyMap * p = (cMapElement_classObservablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classObservablePropertyMap) ;
    p->mAttribute_mPropertyDependancyList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_classObservablePropertyMap * GALGAS_classObservablePropertyMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                      const GALGAS_string & inKey
                                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classObservablePropertyMap * result = (cMapElement_classObservablePropertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classObservablePropertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classObservablePropertyMap * GALGAS_classObservablePropertyMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                         const GALGAS_lstring & inKey
                                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_classObservablePropertyMap_searchKey COMMA_THERE) ;
  cMapElement_classObservablePropertyMap * result = (cMapElement_classObservablePropertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classObservablePropertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_classObservablePropertyMap::cEnumerator_classObservablePropertyMap (const GALGAS_classObservablePropertyMap & inEnumeratedObject,
                                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classObservablePropertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_classObservablePropertyMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_classObservablePropertyMap * p = (const cMapElement_classObservablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classObservablePropertyMap) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_stringlist cEnumerator_classObservablePropertyMap::current_mPropertyDependancyList (LOCATION_ARGS) const {
  const cMapElement_classObservablePropertyMap * p = (const cMapElement_classObservablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classObservablePropertyMap) ;
  return p->mAttribute_mPropertyDependancyList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @classObservablePropertyMap type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classObservablePropertyMap ("classObservablePropertyMap",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classObservablePropertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classObservablePropertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classObservablePropertyMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap GALGAS_classObservablePropertyMap::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_classObservablePropertyMap result ;
  const GALGAS_classObservablePropertyMap * p = (const GALGAS_classObservablePropertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classObservablePropertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "classObservablePropertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@propertyListForImplementation' list         *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_propertyListForImplementation : public cCollectionElement {
//--- List attributes
  public : GALGAS_easyBindingType mAttribute_mType ;
  public : GALGAS_string mAttribute_mPropertyName ;
  public : GALGAS_string mAttribute_mDefaultValueAsObjectiveCObject ;

//--- Constructor
  public : cCollectionElement_propertyListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                             const GALGAS_string & in_mPropertyName,
                                                             const GALGAS_string & in_mDefaultValueAsObjectiveCObject
                                                             COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_propertyListForImplementation::cCollectionElement_propertyListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                                                                    const GALGAS_string & in_mPropertyName,
                                                                                                    const GALGAS_string & in_mDefaultValueAsObjectiveCObject
                                                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mType (in_mType),
mAttribute_mPropertyName (in_mPropertyName),
mAttribute_mDefaultValueAsObjectiveCObject (in_mDefaultValueAsObjectiveCObject) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_propertyListForImplementation::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mPropertyName.isValid () && mAttribute_mDefaultValueAsObjectiveCObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_propertyListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_propertyListForImplementation (mAttribute_mType, mAttribute_mPropertyName, mAttribute_mDefaultValueAsObjectiveCObject COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_propertyListForImplementation::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyName" ":" ;
  mAttribute_mPropertyName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefaultValueAsObjectiveCObject" ":" ;
  mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_propertyListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_propertyListForImplementation * operand = (cCollectionElement_propertyListForImplementation *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyName.objectCompare (operand->mAttribute_mPropertyName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDefaultValueAsObjectiveCObject.objectCompare (operand->mAttribute_mDefaultValueAsObjectiveCObject) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation::GALGAS_propertyListForImplementation (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation::GALGAS_propertyListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_propertyListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_propertyListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_propertyListForImplementation::constructor_listWithValue (const GALGAS_easyBindingType & inOperand0,
                                                                                                      const GALGAS_string & inOperand1,
                                                                                                      const GALGAS_string & inOperand2
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_propertyListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_propertyListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                      const GALGAS_easyBindingType & in_mType,
                                                                      const GALGAS_string & in_mPropertyName,
                                                                      const GALGAS_string & in_mDefaultValueAsObjectiveCObject
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_propertyListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_propertyListForImplementation (in_mType,
                                                                      in_mPropertyName,
                                                                      in_mDefaultValueAsObjectiveCObject COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::addAssign_operation (const GALGAS_easyBindingType & inOperand0,
                                                                const GALGAS_string & inOperand1,
                                                                const GALGAS_string & inOperand2
                                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_propertyListForImplementation (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::modifier_prependValue (GALGAS_easyBindingType inOperand0,
                                                                  GALGAS_string inOperand1,
                                                                  GALGAS_string inOperand2
                                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_propertyListForImplementation (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::modifier_popFirst (GALGAS_easyBindingType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_string & outOperand2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mPropertyName ;
    outOperand2 = p->mAttribute_mDefaultValueAsObjectiveCObject ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::modifier_popLast (GALGAS_easyBindingType & outOperand0,
                                                             GALGAS_string & outOperand1,
                                                             GALGAS_string & outOperand2,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mPropertyName ;
    outOperand2 = p->mAttribute_mDefaultValueAsObjectiveCObject ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::method_first (GALGAS_easyBindingType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_string & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mPropertyName ;
    outOperand2 = p->mAttribute_mDefaultValueAsObjectiveCObject ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::method_last (GALGAS_easyBindingType & outOperand0,
                                                        GALGAS_string & outOperand1,
                                                        GALGAS_string & outOperand2,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mPropertyName ;
    outOperand2 = p->mAttribute_mDefaultValueAsObjectiveCObject ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_propertyListForImplementation::operator_concat (const GALGAS_propertyListForImplementation & inOperand
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_propertyListForImplementation::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                                    const GALGAS_uint & inLength,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_propertyListForImplementation result = GALGAS_propertyListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_propertyListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_propertyListForImplementation result = GALGAS_propertyListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::dotAssign_operation (const GALGAS_propertyListForImplementation inOperand
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::modifier_setMTypeAtIndex (GALGAS_easyBindingType inOperand,
                                                                     GALGAS_uint inIndex,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    p->mAttribute_mType = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::modifier_setMPropertyNameAtIndex (GALGAS_string inOperand,
                                                                             GALGAS_uint inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    p->mAttribute_mPropertyName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_propertyListForImplementation::modifier_setMDefaultValueAsObjectiveCObjectAtIndex (GALGAS_string inOperand,
                                                                                               GALGAS_uint inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    p->mAttribute_mDefaultValueAsObjectiveCObject = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_propertyListForImplementation::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_propertyListForImplementation::reader_mPropertyNameAtIndex (const GALGAS_uint & inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    result = p->mAttribute_mPropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_propertyListForImplementation::reader_mDefaultValueAsObjectiveCObjectAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_propertyListForImplementation * p = (cCollectionElement_propertyListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_propertyListForImplementation) ;
    result = p->mAttribute_mDefaultValueAsObjectiveCObject ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_propertyListForImplementation::cEnumerator_propertyListForImplementation (const GALGAS_propertyListForImplementation & inEnumeratedObject,
                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_propertyListForImplementation::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_propertyListForImplementation * p = (const cCollectionElement_propertyListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_propertyListForImplementation) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_propertyListForImplementation::current_mPropertyName (LOCATION_ARGS) const {
  const cCollectionElement_propertyListForImplementation * p = (const cCollectionElement_propertyListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_propertyListForImplementation) ;
  return p->mAttribute_mPropertyName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_propertyListForImplementation::current_mDefaultValueAsObjectiveCObject (LOCATION_ARGS) const {
  const cCollectionElement_propertyListForImplementation * p = (const cCollectionElement_propertyListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_propertyListForImplementation) ;
  return p->mAttribute_mDefaultValueAsObjectiveCObject ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                    @propertyListForImplementation type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyListForImplementation ("propertyListForImplementation",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyListForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyListForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_propertyListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler,
                                                                                          const GALGAS_location & inErrorLocation
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_propertyListForImplementation result ;
  const GALGAS_propertyListForImplementation * p = (const GALGAS_propertyListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "propertyListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@directDependancyList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_directDependancyList : public cCollectionElement {
//--- List attributes
  public : GALGAS_easyBindingType mAttribute_mMasterType ;
  public : GALGAS_string mAttribute_mMasterName ;

//--- Constructor
  public : cCollectionElement_directDependancyList (const GALGAS_easyBindingType & in_mMasterType,
                                                    const GALGAS_string & in_mMasterName
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_directDependancyList::cCollectionElement_directDependancyList (const GALGAS_easyBindingType & in_mMasterType,
                                                                                  const GALGAS_string & in_mMasterName
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mMasterType (in_mMasterType),
mAttribute_mMasterName (in_mMasterName) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_directDependancyList::isValid (void) const {
  return mAttribute_mMasterType.isValid () && mAttribute_mMasterName.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_directDependancyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_directDependancyList (mAttribute_mMasterType, mAttribute_mMasterName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_directDependancyList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMasterType" ":" ;
  mAttribute_mMasterType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mMasterName" ":" ;
  mAttribute_mMasterName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_directDependancyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_directDependancyList * operand = (cCollectionElement_directDependancyList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterType.objectCompare (operand->mAttribute_mMasterType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterName.objectCompare (operand->mAttribute_mMasterName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList::GALGAS_directDependancyList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList::GALGAS_directDependancyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::constructor_listWithValue (const GALGAS_easyBindingType & inOperand0,
                                                                                    const GALGAS_string & inOperand1
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_directDependancyList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_easyBindingType & in_mMasterType,
                                                             const GALGAS_string & in_mMasterName
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_directDependancyList * p = NULL ;
  macroMyNew (p, cCollectionElement_directDependancyList (in_mMasterType,
                                                             in_mMasterName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::addAssign_operation (const GALGAS_easyBindingType & inOperand0,
                                                       const GALGAS_string & inOperand1
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_directDependancyList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_prependValue (GALGAS_easyBindingType inOperand0,
                                                         GALGAS_string inOperand1
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_directDependancyList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_popFirst (GALGAS_easyBindingType & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mAttribute_mMasterType ;
    outOperand1 = p->mAttribute_mMasterName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_popLast (GALGAS_easyBindingType & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mAttribute_mMasterType ;
    outOperand1 = p->mAttribute_mMasterName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::method_first (GALGAS_easyBindingType & outOperand0,
                                                GALGAS_string & outOperand1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mAttribute_mMasterType ;
    outOperand1 = p->mAttribute_mMasterName ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::method_last (GALGAS_easyBindingType & outOperand0,
                                               GALGAS_string & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mAttribute_mMasterType ;
    outOperand1 = p->mAttribute_mMasterName ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::operator_concat (const GALGAS_directDependancyList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_directDependancyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                  const GALGAS_uint & inLength,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_directDependancyList result = GALGAS_directDependancyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_directDependancyList result = GALGAS_directDependancyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::dotAssign_operation (const GALGAS_directDependancyList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_setMMasterTypeAtIndex (GALGAS_easyBindingType inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    p->mAttribute_mMasterType = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_setMMasterNameAtIndex (GALGAS_string inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    p->mAttribute_mMasterName = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_directDependancyList::reader_mMasterTypeAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    result = p->mAttribute_mMasterType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_directDependancyList::reader_mMasterNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    result = p->mAttribute_mMasterName ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_directDependancyList::cEnumerator_directDependancyList (const GALGAS_directDependancyList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_directDependancyList::current_mMasterType (LOCATION_ARGS) const {
  const cCollectionElement_directDependancyList * p = (const cCollectionElement_directDependancyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_directDependancyList) ;
  return p->mAttribute_mMasterType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_directDependancyList::current_mMasterName (LOCATION_ARGS) const {
  const cCollectionElement_directDependancyList * p = (const cCollectionElement_directDependancyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_directDependancyList) ;
  return p->mAttribute_mMasterName ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @directDependancyList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_directDependancyList ("directDependancyList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_directDependancyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_directDependancyList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_directDependancyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_directDependancyList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  const GALGAS_directDependancyList * p = (const GALGAS_directDependancyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_directDependancyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "directDependancyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@transientListForImplementation' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_transientListForImplementation : public cCollectionElement {
//--- List attributes
  public : GALGAS_easyBindingType mAttribute_mType ;
  public : GALGAS_string mAttribute_mTransientName ;
  public : GALGAS_directDependancyList mAttribute_mDependencyList ;

//--- Constructor
  public : cCollectionElement_transientListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                              const GALGAS_string & in_mTransientName,
                                                              const GALGAS_directDependancyList & in_mDependencyList
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_transientListForImplementation::cCollectionElement_transientListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                                                                      const GALGAS_string & in_mTransientName,
                                                                                                      const GALGAS_directDependancyList & in_mDependencyList
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mType (in_mType),
mAttribute_mTransientName (in_mTransientName),
mAttribute_mDependencyList (in_mDependencyList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_transientListForImplementation::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mTransientName.isValid () && mAttribute_mDependencyList.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_transientListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_transientListForImplementation (mAttribute_mType, mAttribute_mTransientName, mAttribute_mDependencyList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_transientListForImplementation::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientName" ":" ;
  mAttribute_mTransientName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDependencyList" ":" ;
  mAttribute_mDependencyList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_transientListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_transientListForImplementation * operand = (cCollectionElement_transientListForImplementation *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientName.objectCompare (operand->mAttribute_mTransientName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDependencyList.objectCompare (operand->mAttribute_mDependencyList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation::GALGAS_transientListForImplementation (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation::GALGAS_transientListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::constructor_listWithValue (const GALGAS_easyBindingType & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_directDependancyList & inOperand2
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_transientListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_easyBindingType & in_mType,
                                                                       const GALGAS_string & in_mTransientName,
                                                                       const GALGAS_directDependancyList & in_mDependencyList
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_transientListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_transientListForImplementation (in_mType,
                                                                       in_mTransientName,
                                                                       in_mDependencyList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::addAssign_operation (const GALGAS_easyBindingType & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_directDependancyList & inOperand2
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_transientListForImplementation (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_prependValue (GALGAS_easyBindingType inOperand0,
                                                                   GALGAS_string inOperand1,
                                                                   GALGAS_directDependancyList inOperand2
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_transientListForImplementation (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_popFirst (GALGAS_easyBindingType & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_directDependancyList & outOperand2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mTransientName ;
    outOperand2 = p->mAttribute_mDependencyList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_popLast (GALGAS_easyBindingType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_directDependancyList & outOperand2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mTransientName ;
    outOperand2 = p->mAttribute_mDependencyList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::method_first (GALGAS_easyBindingType & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_directDependancyList & outOperand2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mTransientName ;
    outOperand2 = p->mAttribute_mDependencyList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::method_last (GALGAS_easyBindingType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_directDependancyList & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mAttribute_mType ;
    outOperand1 = p->mAttribute_mTransientName ;
    outOperand2 = p->mAttribute_mDependencyList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::operator_concat (const GALGAS_transientListForImplementation & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                                      const GALGAS_uint & inLength,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result = GALGAS_transientListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result = GALGAS_transientListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::dotAssign_operation (const GALGAS_transientListForImplementation inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_setMTypeAtIndex (GALGAS_easyBindingType inOperand,
                                                                      GALGAS_uint inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    p->mAttribute_mType = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_setMTransientNameAtIndex (GALGAS_string inOperand,
                                                                               GALGAS_uint inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    p->mAttribute_mTransientName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_setMDependencyListAtIndex (GALGAS_directDependancyList inOperand,
                                                                                GALGAS_uint inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    p->mAttribute_mDependencyList = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_transientListForImplementation::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientListForImplementation::reader_mTransientNameAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mAttribute_mTransientName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_transientListForImplementation::reader_mDependencyListAtIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_directDependancyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mAttribute_mDependencyList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_transientListForImplementation::cEnumerator_transientListForImplementation (const GALGAS_transientListForImplementation & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_transientListForImplementation::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_transientListForImplementation::current_mTransientName (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mAttribute_mTransientName ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList cEnumerator_transientListForImplementation::current_mDependencyList (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mAttribute_mDependencyList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @transientListForImplementation type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientListForImplementation ("transientListForImplementation",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientListForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientListForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  const GALGAS_transientListForImplementation * p = (const GALGAS_transientListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "transientListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys::GALGAS_triggeredKeys (void) :
AC_GALGAS_listmap () {
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys GALGAS_triggeredKeys::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_triggeredKeys result ;
  result.makeNewEmptyListMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_triggeredKeys::addAssign_operation (const GALGAS_string & inKey,
                                                const GALGAS_string & inOperand0
                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inKey.isValid () && inOperand0.isValid ()) {
    capCollectionElement attributes ;
    GALGAS_stringlist::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    addObjectInListMap (inKey.stringValue (), attributes) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_triggeredKeys::reader_listForKey (const GALGAS_string & inKey
                                                           COMMA_UNUSED_LOCATION_ARGS) const {
  return GALGAS_stringlist (listForKey (inKey)) ;
}

//---------------------------------------------------------------------------*

cEnumerator_triggeredKeys::cEnumerator_triggeredKeys (const GALGAS_triggeredKeys & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_triggeredKeys::current_key (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cListMapElement) ;
  return GALGAS_string (p->mKey) ;
}

//---------------------------------------------------------------------------*

GALGAS_stringlist cEnumerator_triggeredKeys::current_mList (LOCATION_ARGS) const {
  const cListMapElement * p = (const cListMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cListMapElement) ;
  return GALGAS_stringlist (p->mSharedListMapList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                            @triggeredKeys type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_triggeredKeys ("triggeredKeys",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_triggeredKeys::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_triggeredKeys ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_triggeredKeys::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_triggeredKeys (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys GALGAS_triggeredKeys::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_triggeredKeys result ;
  const GALGAS_triggeredKeys * p = (const GALGAS_triggeredKeys *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_triggeredKeys *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "triggeredKeys", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap::cMapElement_classMap (const GALGAS_lstring & inKey,
                                            const GALGAS_string & in_mSuperClassName,
                                            const GALGAS_classObservablePropertyMap & in_mPropertyMap,
                                            const GALGAS_propertyListForImplementation & in_mPropertyListForInitMethodHeader,
                                            const GALGAS_propertyListForImplementation & in_mInheritedPropertyListForImplementation,
                                            const GALGAS_propertyListForImplementation & in_mPropertyListForImplementation,
                                            const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                            const GALGAS_triggeredKeys & in_mTriggeredKeys
                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mPropertyMap (in_mPropertyMap),
mAttribute_mPropertyListForInitMethodHeader (in_mPropertyListForInitMethodHeader),
mAttribute_mInheritedPropertyListForImplementation (in_mInheritedPropertyListForImplementation),
mAttribute_mPropertyListForImplementation (in_mPropertyListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mTriggeredKeys (in_mTriggeredKeys) {
}

//---------------------------------------------------------------------------*

bool cMapElement_classMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mPropertyListForInitMethodHeader.isValid () && mAttribute_mInheritedPropertyListForImplementation.isValid () && mAttribute_mPropertyListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mTriggeredKeys.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_classMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classMap (mAttribute_lkey, mAttribute_mSuperClassName, mAttribute_mPropertyMap, mAttribute_mPropertyListForInitMethodHeader, mAttribute_mInheritedPropertyListForImplementation, mAttribute_mPropertyListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mTriggeredKeys COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_classMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyMap" ":" ;
  mAttribute_mPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyListForInitMethodHeader" ":" ;
  mAttribute_mPropertyListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedPropertyListForImplementation" ":" ;
  mAttribute_mInheritedPropertyListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyListForImplementation" ":" ;
  mAttribute_mPropertyListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTriggeredKeys" ":" ;
  mAttribute_mTriggeredKeys.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_classMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classMap * operand = (cMapElement_classMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyMap.objectCompare (operand->mAttribute_mPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyListForInitMethodHeader.objectCompare (operand->mAttribute_mPropertyListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedPropertyListForImplementation.objectCompare (operand->mAttribute_mInheritedPropertyListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyListForImplementation.objectCompare (operand->mAttribute_mPropertyListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTriggeredKeys.objectCompare (operand->mAttribute_mTriggeredKeys) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (const GALGAS_classMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap & GALGAS_classMap::operator = (const GALGAS_classMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_mapWithMapToOverride (const GALGAS_classMap & inMapToOverride
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_classMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_insertKey (GALGAS_lstring inKey,
                                          GALGAS_string inArgument0,
                                          GALGAS_classObservablePropertyMap inArgument1,
                                          GALGAS_propertyListForImplementation inArgument2,
                                          GALGAS_propertyListForImplementation inArgument3,
                                          GALGAS_propertyListForImplementation inArgument4,
                                          GALGAS_transientListForImplementation inArgument5,
                                          GALGAS_triggeredKeys inArgument6,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_classMap * p = NULL ;
  macroMyNew (p, cMapElement_classMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_classMap_searchKey = "the '%K' class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_classMap::method_searchKey (GALGAS_lstring inKey,
                                        GALGAS_string & outArgument0,
                                        GALGAS_classObservablePropertyMap & outArgument1,
                                        GALGAS_propertyListForImplementation & outArgument2,
                                        GALGAS_propertyListForImplementation & outArgument3,
                                        GALGAS_propertyListForImplementation & outArgument4,
                                        GALGAS_transientListForImplementation & outArgument5,
                                        GALGAS_triggeredKeys & outArgument6,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) performSearch (inKey,
                                                                                   inCompiler,
                                                                                   kSearchErrorMessage_classMap_searchKey
                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_classMap) ;
    outArgument0 = p->mAttribute_mSuperClassName ;
    outArgument1 = p->mAttribute_mPropertyMap ;
    outArgument2 = p->mAttribute_mPropertyListForInitMethodHeader ;
    outArgument3 = p->mAttribute_mInheritedPropertyListForImplementation ;
    outArgument4 = p->mAttribute_mPropertyListForImplementation ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mTriggeredKeys ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap GALGAS_classMap::reader_mPropertyMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_classObservablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_classMap::reader_mPropertyListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_propertyListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mPropertyListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_classMap::reader_mInheritedPropertyListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_propertyListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mInheritedPropertyListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_classMap::reader_mPropertyListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_propertyListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mPropertyListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys GALGAS_classMap::reader_mTriggeredKeysForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_triggeredKeys result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mTriggeredKeys ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMPropertyMapForKey (GALGAS_classObservablePropertyMap inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMPropertyListForInitMethodHeaderForKey (GALGAS_propertyListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mPropertyListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMInheritedPropertyListForImplementationForKey (GALGAS_propertyListForImplementation inAttributeValue,
                                                                                 GALGAS_string inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mInheritedPropertyListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMPropertyListForImplementationForKey (GALGAS_propertyListForImplementation inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mPropertyListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMTriggeredKeysForKey (GALGAS_triggeredKeys inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mTriggeredKeys = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                  const GALGAS_string & inKey
                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                     const GALGAS_lstring & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_classMap_searchKey COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_classMap::cEnumerator_classMap (const GALGAS_classMap & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_classMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap cEnumerator_classMap::current_mPropertyMap (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation cEnumerator_classMap::current_mPropertyListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mPropertyListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation cEnumerator_classMap::current_mInheritedPropertyListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mInheritedPropertyListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation cEnumerator_classMap::current_mPropertyListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mPropertyListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_classMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys cEnumerator_classMap::current_mTriggeredKeys (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mTriggeredKeys ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @classMap type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap ("classMap",
                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler,
                                                const GALGAS_location & inErrorLocation
                                                COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  const GALGAS_classMap * p = (const GALGAS_classMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "classMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap::cMapElement_entityMap (const GALGAS_lstring & inKey,
                                              const GALGAS_string & in_mSuperEntityName,
                                              const GALGAS_string & in_mImplementationClassName,
                                              const GALGAS_string & in_mSuperImplementationClassName,
                                              const GALGAS_classObservablePropertyMap & in_mPropertyMap,
                                              const GALGAS_propertyListForImplementation & in_mPropertyListForInitMethodHeader,
                                              const GALGAS_propertyListForImplementation & in_mInheritedPropertyListForImplementation,
                                              const GALGAS_propertyListForImplementation & in_mPropertyListForImplementation,
                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                              const GALGAS_triggeredKeys & in_mTriggeredKeys
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperEntityName (in_mSuperEntityName),
mAttribute_mImplementationClassName (in_mImplementationClassName),
mAttribute_mSuperImplementationClassName (in_mSuperImplementationClassName),
mAttribute_mPropertyMap (in_mPropertyMap),
mAttribute_mPropertyListForInitMethodHeader (in_mPropertyListForInitMethodHeader),
mAttribute_mInheritedPropertyListForImplementation (in_mInheritedPropertyListForImplementation),
mAttribute_mPropertyListForImplementation (in_mPropertyListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mTriggeredKeys (in_mTriggeredKeys) {
}

//---------------------------------------------------------------------------*

bool cMapElement_entityMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mImplementationClassName.isValid () && mAttribute_mSuperImplementationClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mPropertyListForInitMethodHeader.isValid () && mAttribute_mInheritedPropertyListForImplementation.isValid () && mAttribute_mPropertyListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mTriggeredKeys.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_entityMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_entityMap (mAttribute_lkey, mAttribute_mSuperEntityName, mAttribute_mImplementationClassName, mAttribute_mSuperImplementationClassName, mAttribute_mPropertyMap, mAttribute_mPropertyListForInitMethodHeader, mAttribute_mInheritedPropertyListForImplementation, mAttribute_mPropertyListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mTriggeredKeys COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_entityMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationClassName" ":" ;
  mAttribute_mImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperImplementationClassName" ":" ;
  mAttribute_mSuperImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyMap" ":" ;
  mAttribute_mPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyListForInitMethodHeader" ":" ;
  mAttribute_mPropertyListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedPropertyListForImplementation" ":" ;
  mAttribute_mInheritedPropertyListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyListForImplementation" ":" ;
  mAttribute_mPropertyListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTriggeredKeys" ":" ;
  mAttribute_mTriggeredKeys.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_entityMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_entityMap * operand = (cMapElement_entityMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperEntityName.objectCompare (operand->mAttribute_mSuperEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationClassName.objectCompare (operand->mAttribute_mImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperImplementationClassName.objectCompare (operand->mAttribute_mSuperImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyMap.objectCompare (operand->mAttribute_mPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyListForInitMethodHeader.objectCompare (operand->mAttribute_mPropertyListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedPropertyListForImplementation.objectCompare (operand->mAttribute_mInheritedPropertyListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyListForImplementation.objectCompare (operand->mAttribute_mPropertyListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTriggeredKeys.objectCompare (operand->mAttribute_mTriggeredKeys) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (const GALGAS_entityMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap & GALGAS_entityMap::operator = (const GALGAS_entityMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_mapWithMapToOverride (const GALGAS_entityMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_entityMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_string inArgument0,
                                           GALGAS_string inArgument1,
                                           GALGAS_string inArgument2,
                                           GALGAS_classObservablePropertyMap inArgument3,
                                           GALGAS_propertyListForImplementation inArgument4,
                                           GALGAS_propertyListForImplementation inArgument5,
                                           GALGAS_propertyListForImplementation inArgument6,
                                           GALGAS_transientListForImplementation inArgument7,
                                           GALGAS_triggeredKeys inArgument8,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * p = NULL ;
  macroMyNew (p, cMapElement_entityMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entity is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_entityMap_searchKey = "the '%K' entity is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_entityMap::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_string & outArgument0,
                                         GALGAS_string & outArgument1,
                                         GALGAS_string & outArgument2,
                                         GALGAS_classObservablePropertyMap & outArgument3,
                                         GALGAS_propertyListForImplementation & outArgument4,
                                         GALGAS_propertyListForImplementation & outArgument5,
                                         GALGAS_propertyListForImplementation & outArgument6,
                                         GALGAS_transientListForImplementation & outArgument7,
                                         GALGAS_triggeredKeys & outArgument8,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_entityMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    outArgument0 = p->mAttribute_mSuperEntityName ;
    outArgument1 = p->mAttribute_mImplementationClassName ;
    outArgument2 = p->mAttribute_mSuperImplementationClassName ;
    outArgument3 = p->mAttribute_mPropertyMap ;
    outArgument4 = p->mAttribute_mPropertyListForInitMethodHeader ;
    outArgument5 = p->mAttribute_mInheritedPropertyListForImplementation ;
    outArgument6 = p->mAttribute_mPropertyListForImplementation ;
    outArgument7 = p->mAttribute_mTransientListForImplementation ;
    outArgument8 = p->mAttribute_mTriggeredKeys ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperEntityNameForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap GALGAS_entityMap::reader_mPropertyMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_classObservablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_entityMap::reader_mPropertyListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mPropertyListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_entityMap::reader_mInheritedPropertyListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mInheritedPropertyListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation GALGAS_entityMap::reader_mPropertyListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mPropertyListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys GALGAS_entityMap::reader_mTriggeredKeysForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_triggeredKeys result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mTriggeredKeys ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperEntityNameForKey (GALGAS_string inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMPropertyMapForKey (GALGAS_classObservablePropertyMap inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMPropertyListForInitMethodHeaderForKey (GALGAS_propertyListForImplementation inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mPropertyListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMInheritedPropertyListForImplementationForKey (GALGAS_propertyListForImplementation inAttributeValue,
                                                                                  GALGAS_string inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mInheritedPropertyListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMPropertyListForImplementationForKey (GALGAS_propertyListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mPropertyListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMTriggeredKeysForKey (GALGAS_triggeredKeys inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mTriggeredKeys = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_entityMap_searchKey COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_entityMap::cEnumerator_entityMap (const GALGAS_entityMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_entityMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperEntityName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_classObservablePropertyMap cEnumerator_entityMap::current_mPropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation cEnumerator_entityMap::current_mPropertyListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mPropertyListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation cEnumerator_entityMap::current_mInheritedPropertyListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mInheritedPropertyListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyListForImplementation cEnumerator_entityMap::current_mPropertyListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mPropertyListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_triggeredKeys cEnumerator_entityMap::current_mTriggeredKeys (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mTriggeredKeys ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @entityMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap ("entityMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  const GALGAS_entityMap * p = (const GALGAS_entityMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "entityMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@outletBindingListForGeneration' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_outletBindingListForGeneration : public cCollectionElement {
//--- List attributes
  public : GALGAS_string mAttribute_mBindingName ;
  public : GALGAS_string mAttribute_mRootObservablePropertyName ;
  public : GALGAS__32_stringlist mAttribute_mOutletBindingOptionList ;

//--- Constructor
  public : cCollectionElement_outletBindingListForGeneration (const GALGAS_string & in_mBindingName,
                                                              const GALGAS_string & in_mRootObservablePropertyName,
                                                              const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_outletBindingListForGeneration::cCollectionElement_outletBindingListForGeneration (const GALGAS_string & in_mBindingName,
                                                                                                      const GALGAS_string & in_mRootObservablePropertyName,
                                                                                                      const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mBindingName (in_mBindingName),
mAttribute_mRootObservablePropertyName (in_mRootObservablePropertyName),
mAttribute_mOutletBindingOptionList (in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_outletBindingListForGeneration::isValid (void) const {
  return mAttribute_mBindingName.isValid () && mAttribute_mRootObservablePropertyName.isValid () && mAttribute_mOutletBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletBindingListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletBindingListForGeneration (mAttribute_mBindingName, mAttribute_mRootObservablePropertyName, mAttribute_mOutletBindingOptionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_outletBindingListForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingName" ":" ;
  mAttribute_mBindingName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootObservablePropertyName" ":" ;
  mAttribute_mRootObservablePropertyName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingOptionList" ":" ;
  mAttribute_mOutletBindingOptionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletBindingListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletBindingListForGeneration * operand = (cCollectionElement_outletBindingListForGeneration *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mBindingName.objectCompare (operand->mAttribute_mBindingName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRootObservablePropertyName.objectCompare (operand->mAttribute_mRootObservablePropertyName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (operand->mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS__32_stringlist & inOperand2
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_string & in_mBindingName,
                                                                       const GALGAS_string & in_mRootObservablePropertyName,
                                                                       const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_outletBindingListForGeneration (in_mBindingName,
                                                                       in_mRootObservablePropertyName,
                                                                       in_mOutletBindingOptionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS__32_stringlist & inOperand2
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_prependValue (GALGAS_string inOperand0,
                                                                   GALGAS_string inOperand1,
                                                                   GALGAS__32_stringlist inOperand2
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS__32_stringlist & outOperand2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mAttribute_mBindingName ;
    outOperand1 = p->mAttribute_mRootObservablePropertyName ;
    outOperand2 = p->mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS__32_stringlist & outOperand2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mAttribute_mBindingName ;
    outOperand1 = p->mAttribute_mRootObservablePropertyName ;
    outOperand2 = p->mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_first (GALGAS_string & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS__32_stringlist & outOperand2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mAttribute_mBindingName ;
    outOperand1 = p->mAttribute_mRootObservablePropertyName ;
    outOperand2 = p->mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_last (GALGAS_string & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS__32_stringlist & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mAttribute_mBindingName ;
    outOperand1 = p->mAttribute_mRootObservablePropertyName ;
    outOperand2 = p->mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::operator_concat (const GALGAS_outletBindingListForGeneration & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                                      const GALGAS_uint & inLength,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::dotAssign_operation (const GALGAS_outletBindingListForGeneration inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_setMBindingNameAtIndex (GALGAS_string inOperand,
                                                                             GALGAS_uint inIndex,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    p->mAttribute_mBindingName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_setMRootObservablePropertyNameAtIndex (GALGAS_string inOperand,
                                                                                            GALGAS_uint inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    p->mAttribute_mRootObservablePropertyName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_setMOutletBindingOptionListAtIndex (GALGAS__32_stringlist inOperand,
                                                                                         GALGAS_uint inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    p->mAttribute_mOutletBindingOptionList = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletBindingListForGeneration::reader_mBindingNameAtIndex (const GALGAS_uint & inIndex,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    result = p->mAttribute_mBindingName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletBindingListForGeneration::reader_mRootObservablePropertyNameAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    result = p->mAttribute_mRootObservablePropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_outletBindingListForGeneration::reader_mOutletBindingOptionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    result = p->mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_outletBindingListForGeneration::cEnumerator_outletBindingListForGeneration (const GALGAS_outletBindingListForGeneration & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletBindingListForGeneration::current_mBindingName (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mAttribute_mBindingName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletBindingListForGeneration::current_mRootObservablePropertyName (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mAttribute_mRootObservablePropertyName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_outletBindingListForGeneration::current_mOutletBindingOptionList (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mAttribute_mOutletBindingOptionList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @outletBindingListForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration ("outletBindingListForGeneration",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  const GALGAS_outletBindingListForGeneration * p = (const GALGAS_outletBindingListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletBindingListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@outletGenerationList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_outletGenerationList : public cCollectionElement {
//--- List attributes
  public : GALGAS_string mAttribute_mOutletType ;
  public : GALGAS_string mAttribute_mOutletName ;
  public : GALGAS_outletBindingListForGeneration mAttribute_mOutletBindingList ;

//--- Constructor
  public : cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                    const GALGAS_string & in_mOutletName,
                                                    const GALGAS_outletBindingListForGeneration & in_mOutletBindingList
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_outletGenerationList::cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                                                  const GALGAS_string & in_mOutletName,
                                                                                  const GALGAS_outletBindingListForGeneration & in_mOutletBindingList
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mAttribute_mOutletType (in_mOutletType),
mAttribute_mOutletName (in_mOutletName),
mAttribute_mOutletBindingList (in_mOutletBindingList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_outletGenerationList::isValid (void) const {
  return mAttribute_mOutletType.isValid () && mAttribute_mOutletName.isValid () && mAttribute_mOutletBindingList.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletGenerationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletGenerationList (mAttribute_mOutletType, mAttribute_mOutletName, mAttribute_mOutletBindingList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_outletGenerationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletType" ":" ;
  mAttribute_mOutletType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletName" ":" ;
  mAttribute_mOutletName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingList" ":" ;
  mAttribute_mOutletBindingList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletGenerationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletGenerationList * operand = (cCollectionElement_outletGenerationList *) inOperand ;
  typeComparisonResult result = kOperandEqual ;
  if (kOperandEqual == result) {
    result = mAttribute_mOutletType.objectCompare (operand->mAttribute_mOutletType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletName.objectCompare (operand->mAttribute_mOutletName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletBindingList.objectCompare (operand->mAttribute_mOutletBindingList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                    const GALGAS_string & inOperand1,
                                                                                    const GALGAS_outletBindingListForGeneration & inOperand2
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletGenerationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_string & in_mOutletType,
                                                             const GALGAS_string & in_mOutletName,
                                                             const GALGAS_outletBindingListForGeneration & in_mOutletBindingList
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = NULL ;
  macroMyNew (p, cCollectionElement_outletGenerationList (in_mOutletType,
                                                             in_mOutletName,
                                                             in_mOutletBindingList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                       const GALGAS_string & inOperand1,
                                                       const GALGAS_outletBindingListForGeneration & inOperand2
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_prependValue (GALGAS_string inOperand0,
                                                         GALGAS_string inOperand1,
                                                         GALGAS_outletBindingListForGeneration inOperand2
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     GALGAS_outletBindingListForGeneration & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mAttribute_mOutletType ;
    outOperand1 = p->mAttribute_mOutletName ;
    outOperand2 = p->mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    GALGAS_outletBindingListForGeneration & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mAttribute_mOutletType ;
    outOperand1 = p->mAttribute_mOutletName ;
    outOperand2 = p->mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_first (GALGAS_string & outOperand0,
                                                GALGAS_string & outOperand1,
                                                GALGAS_outletBindingListForGeneration & outOperand2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mAttribute_mOutletType ;
    outOperand1 = p->mAttribute_mOutletName ;
    outOperand2 = p->mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_last (GALGAS_string & outOperand0,
                                               GALGAS_string & outOperand1,
                                               GALGAS_outletBindingListForGeneration & outOperand2,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mAttribute_mOutletType ;
    outOperand1 = p->mAttribute_mOutletName ;
    outOperand2 = p->mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::operator_concat (const GALGAS_outletGenerationList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListWithRange (const GALGAS_uint & inIndex,
                                                                                  const GALGAS_uint & inLength,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inIndex, inLength, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::dotAssign_operation (const GALGAS_outletGenerationList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_setMOutletTypeAtIndex (GALGAS_string inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    p->mAttribute_mOutletType = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_setMOutletNameAtIndex (GALGAS_string inOperand,
                                                                  GALGAS_uint inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    p->mAttribute_mOutletName = inOperand ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_setMOutletBindingListAtIndex (GALGAS_outletBindingListForGeneration inOperand,
                                                                         GALGAS_uint inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) objectPointerAtIndex (inIndex, inCompiler COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    p->mAttribute_mOutletBindingList = inOperand ;
  }
}


//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletTypeAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mAttribute_mOutletType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mAttribute_mOutletName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList::reader_mOutletBindingListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mAttribute_mOutletBindingList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_outletGenerationList::cEnumerator_outletGenerationList (const GALGAS_outletGenerationList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletType (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mAttribute_mOutletType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletName (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_outletGenerationList::current_mOutletBindingList (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mAttribute_mOutletBindingList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletGenerationList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList ("outletGenerationList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  const GALGAS_outletGenerationList * p = (const GALGAS_outletGenerationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletGenerationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap::cMapElement_preferencesMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_string & in_mRootEntityName,
                                                        const GALGAS_string & in_mRootEntityImplementationClassName,
                                                        const GALGAS_outletGenerationList & in_mOutletDeclarationList
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRootEntityName (in_mRootEntityName),
mAttribute_mRootEntityImplementationClassName (in_mRootEntityImplementationClassName),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_preferencesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mRootEntityImplementationClassName.isValid () && mAttribute_mOutletDeclarationList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_preferencesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_preferencesMap (mAttribute_lkey, mAttribute_mRootEntityName, mAttribute_mRootEntityImplementationClassName, mAttribute_mOutletDeclarationList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_preferencesMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityName" ":" ;
  mAttribute_mRootEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityImplementationClassName" ":" ;
  mAttribute_mRootEntityImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_preferencesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_preferencesMap * operand = (cMapElement_preferencesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityName.objectCompare (operand->mAttribute_mRootEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityImplementationClassName.objectCompare (operand->mAttribute_mRootEntityImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (const GALGAS_preferencesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap & GALGAS_preferencesMap::operator = (const GALGAS_preferencesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_mapWithMapToOverride (const GALGAS_preferencesMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_preferencesMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_string inArgument0,
                                                GALGAS_string inArgument1,
                                                GALGAS_outletGenerationList inArgument2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_preferencesMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' preferences are already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_preferencesMap_searchKey = "the '%K' preferences are not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_string & outArgument0,
                                              GALGAS_string & outArgument1,
                                              GALGAS_outletGenerationList & outArgument2,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_preferencesMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    outArgument0 = p->mAttribute_mRootEntityName ;
    outArgument1 = p->mAttribute_mRootEntityImplementationClassName ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_preferencesMap::reader_mRootEntityNameForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mRootEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_preferencesMap::reader_mRootEntityImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mRootEntityImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMRootEntityNameForKey (GALGAS_string inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mRootEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMRootEntityImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                                  GALGAS_string inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mRootEntityImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_preferencesMap_searchKey COMMA_THERE) ;
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_preferencesMap::cEnumerator_preferencesMap (const GALGAS_preferencesMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_preferencesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_preferencesMap::current_mRootEntityName (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_preferencesMap::current_mRootEntityImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mRootEntityImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_preferencesMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @preferencesMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap ("preferencesMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  const GALGAS_preferencesMap * p = (const GALGAS_preferencesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "preferencesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap::cMapElement_outletClassBindingOptionMap (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_easyBindingTypeList & in_mAcceptableTypeList
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingOptionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingOptionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingOptionMap (mAttribute_lkey, mAttribute_mAcceptableTypeList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingOptionMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingOptionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingOptionMap * operand = (cMapElement_outletClassBindingOptionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap & GALGAS_outletClassBindingOptionMap::operator = (const GALGAS_outletClassBindingOptionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingOptionMap & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingOptionMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_easyBindingTypeList inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding option is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingOptionMap_searchKey = "the '%K' binding option is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_easyBindingTypeList & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_outletClassBindingOptionMap_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_outletClassBindingOptionMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) attributes ;
  GALGAS_easyBindingTypeList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeList inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * p = (cMapElement_outletClassBindingOptionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                        const GALGAS_string & inKey
                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingOptionMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingOptionMap::cEnumerator_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingOptionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList cEnumerator_outletClassBindingOptionMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @outletClassBindingOptionMap type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap ("outletClassBindingOptionMap",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  const GALGAS_outletClassBindingOptionMap * p = (const GALGAS_outletClassBindingOptionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingOptionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap::cMapElement_outletClassBindingMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_easyBindingTypeList & in_mAcceptableTypeList,
                                                                      const GALGAS_outletClassBindingOptionMap & in_mOutletClassBindingOptionMap
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList),
mAttribute_mOutletClassBindingOptionMap (in_mOutletClassBindingOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingMap (mAttribute_lkey, mAttribute_mAcceptableTypeList, mAttribute_mOutletClassBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingOptionMap" ":" ;
  mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingMap * operand = (cMapElement_outletClassBindingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (operand->mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (const GALGAS_outletClassBindingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap & GALGAS_outletClassBindingMap::operator = (const GALGAS_outletClassBindingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_easyBindingTypeList inArgument0,
                                                       GALGAS_outletClassBindingOptionMap inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingMap_searchKey = "the '%K' binding is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_easyBindingTypeList & outArgument0,
                                                     GALGAS_outletClassBindingOptionMap & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_outletClassBindingMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
    outArgument1 = p->mAttribute_mOutletClassBindingOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_outletClassBindingMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_easyBindingTypeList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap::reader_mOutletClassBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_outletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mOutletClassBindingOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMOutletClassBindingOptionMapForKey (GALGAS_outletClassBindingOptionMap inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mOutletClassBindingOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                            const GALGAS_string & inKey
                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                               const GALGAS_lstring & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingMap::cEnumerator_outletClassBindingMap (const GALGAS_outletClassBindingMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList cEnumerator_outletClassBindingMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap cEnumerator_outletClassBindingMap::current_mOutletClassBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletClassBindingMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap ("outletClassBindingMap",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  const GALGAS_outletClassBindingMap * p = (const GALGAS_outletClassBindingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap::cMapElement_outletClassMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_bool & in_mGenerateCode,
                                                        const GALGAS_outletClassBindingMap & in_mBindingMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerateCode (in_mGenerateCode),
mAttribute_mBindingMap (in_mBindingMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mBindingMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassMap (mAttribute_lkey, mAttribute_mGenerateCode, mAttribute_mBindingMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateCode" ":" ;
  mAttribute_mGenerateCode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassMap * operand = (cMapElement_outletClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateCode.objectCompare (operand->mAttribute_mGenerateCode) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (const GALGAS_outletClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap & GALGAS_outletClassMap::operator = (const GALGAS_outletClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_mapWithMapToOverride (const GALGAS_outletClassMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_bool inArgument0,
                                                GALGAS_outletClassBindingMap inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' outlet class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassMap_searchKey = "the '%K' outlet class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_bool & outArgument0,
                                              GALGAS_outletClassBindingMap & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_outletClassMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    outArgument0 = p->mAttribute_mGenerateCode ;
    outArgument1 = p->mAttribute_mBindingMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mGenerateCodeForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mGenerateCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMGenerateCodeForKey (GALGAS_bool inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mGenerateCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassMap::cEnumerator_outletClassMap (const GALGAS_outletClassMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mGenerateCode (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_outletClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mBindingMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @outletClassMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap ("outletClassMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  const GALGAS_outletClassMap * p = (const GALGAS_outletClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'semanticAnalysis'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysis (const GALGAS_ASTstruct constinArgument_inAST,
                               GALGAS_outletClassMap & outArgument_outOutletClassMap,
                               GALGAS_classMap & outArgument_outClassMap,
                               GALGAS_entityMap & outArgument_outEntityMap,
                               GALGAS_preferencesMap & outArgument_outPreferencesMap,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  outArgument_outClassMap.drop () ; // Release 'out' argument
  outArgument_outEntityMap.drop () ; // Release 'out' argument
  outArgument_outPreferencesMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outOutletClassMap = GALGAS_outletClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (173)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletClassList enumerator_6524 (constinArgument_inAST.mAttribute_mOutletClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_6524.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (176)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletClassBindingList enumerator_6621 (enumerator_6524.current_mOutletClassBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_6621.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (178)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingOptionList enumerator_6733 (enumerator_6621.current_mBindingOptionList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_6733.hasCurrentObject ()) {
        { //-------- @modifierCallInstructionForGeneration
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_6733.current_mBindingOptionName (HERE), enumerator_6733.current_mAcceptableTypeList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (180)) ;
        } //-------- END @typeMethodInstructionForGeneration
        enumerator_6733.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_bindingMap.modifier_insertKey (enumerator_6621.current_mBindingName (HERE), enumerator_6621.current_mAcceptableTypeList (HERE), var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (186)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_6621.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outOutletClassMap.modifier_insertKey (enumerator_6524.current_mOutletClassName (HERE), enumerator_6524.current_mGenerateCode (HERE), var_bindingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (189)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_6524.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outClassMap = GALGAS_classMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (192)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_classList enumerator_7301 (constinArgument_inAST.mAttribute_mClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_7301.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_classObservablePropertyMap var_classObservablePropertyMap ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_propertyListForImplementation var_propertyListForInitMethodHeader = GALGAS_propertyListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (195)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_7301.current_mSuperClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (196)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_7535_0 ; // Joker input parameter
      GALGAS_propertyListForImplementation joker_7599_4 ; // Joker input parameter
      GALGAS_propertyListForImplementation joker_7599_3 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_7599_2 ; // Joker input parameter
      GALGAS_triggeredKeys joker_7599_1 ; // Joker input parameter
      outArgument_outClassMap.method_searchKey (enumerator_7301.current_mSuperClassName (HERE), joker_7535_0, var_classObservablePropertyMap, var_propertyListForInitMethodHeader, joker_7599_4, joker_7599_3, joker_7599_2, joker_7599_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (197)) ;
      //-------- END @methodCallInstructionForGeneration
    }else if (kBoolFalse == test_0) {
      //-------- @assignmentInstructionForGeneration
      var_classObservablePropertyMap = GALGAS_classObservablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (199)) ;
      //-------- @assignmentInstructionForGeneration
      var_propertyListForInitMethodHeader = GALGAS_propertyListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (200)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_propertyListForImplementation var_propertyListForImplementation = GALGAS_propertyListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (202)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_transientListForImplementation var_transientListForImplementation = GALGAS_transientListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (203)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_propertyListForImplementation var_inheritedPropertyListForImplementation = var_propertyListForInitMethodHeader ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_triggeredKeys var_triggeredKeys = GALGAS_triggeredKeys::constructor_emptyMap (SOURCE_FILE_AT_LINE (205)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_classPropertyList enumerator_8140 (enumerator_7301.current_mPropertyList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_8140.hasCurrentObject ()) {
      //-------- @plusEqualnstructionForGeneration
      var_propertyListForImplementation.addAssign_operation (enumerator_8140.current_mType (HERE), enumerator_8140.current_mPropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (207)), enumerator_8140.current_mDefaultValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (207)) ;
      //-------- @plusEqualnstructionForGeneration
      var_propertyListForInitMethodHeader.addAssign_operation (enumerator_8140.current_mType (HERE), enumerator_8140.current_mPropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (208)), enumerator_8140.current_mDefaultValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (208)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_classObservablePropertyMap.modifier_insertKey (enumerator_8140.current_mPropertyName (HERE), enumerator_8140.current_mType (HERE), GALGAS_stringlist::constructor_listWithValue (enumerator_8140.current_mPropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (209)) COMMA_SOURCE_FILE_AT_LINE (209)), inCompiler COMMA_SOURCE_FILE_AT_LINE (209)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_8140.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_classTransientList enumerator_8564 (enumerator_7301.current_mClassTransientList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_8564.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_stringlist var_allPropertyDependancyList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (213)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_directDependancyList var_directDependancyList = GALGAS_directDependancyList::constructor_emptyList (SOURCE_FILE_AT_LINE (214)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_lstringlist enumerator_8718 (enumerator_8564.current_mDependencyList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_8718.hasCurrentObject ()) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_easyBindingType var_type ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_stringlist var_propertyDependancyList ;
        //-------- @methodCallInstructionForGeneration
        var_classObservablePropertyMap.method_searchKey (enumerator_8718.current_mValue (HERE), var_type, var_propertyDependancyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (218)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @plusEqualnstructionForGeneration
        var_directDependancyList.addAssign_operation (var_type, enumerator_8718.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (219)) COMMA_SOURCE_FILE_AT_LINE (219)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_stringlist enumerator_8981 (var_propertyDependancyList, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_8981.hasCurrentObject ()) {
          //-------- @plusEqualnstructionForGeneration
          var_triggeredKeys.addAssign_operation (enumerator_8981.current_mValue (HERE), enumerator_8564.current_mTransientName (HERE).reader_string (SOURCE_FILE_AT_LINE (221)) COMMA_SOURCE_FILE_AT_LINE (221)) ;
          enumerator_8981.gotoNextObject () ;
        }
        //-------- @concatInstructionForGeneration
        var_allPropertyDependancyList.dotAssign_operation (var_propertyDependancyList COMMA_SOURCE_FILE_AT_LINE (223)) ;
        enumerator_8718.gotoNextObject () ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_transientListForImplementation.addAssign_operation (enumerator_8564.current_mType (HERE), enumerator_8564.current_mTransientName (HERE).reader_string (SOURCE_FILE_AT_LINE (225)), var_directDependancyList COMMA_SOURCE_FILE_AT_LINE (225)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_classObservablePropertyMap.modifier_insertKey (enumerator_8564.current_mTransientName (HERE), enumerator_8564.current_mType (HERE), var_allPropertyDependancyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (226)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_8564.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outClassMap.modifier_insertKey (enumerator_7301.current_mClassName (HERE), enumerator_7301.current_mSuperClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (231)), var_classObservablePropertyMap, var_propertyListForInitMethodHeader, var_inheritedPropertyListForImplementation, var_propertyListForImplementation, var_transientListForImplementation, var_triggeredKeys, inCompiler COMMA_SOURCE_FILE_AT_LINE (229)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_7301.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outEntityMap = GALGAS_entityMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (241)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_entityList enumerator_9845 (constinArgument_inAST.mAttribute_mEntityList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_9845.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_classObservablePropertyMap var_classObservablePropertyMap ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_propertyListForImplementation var_propertyListForInitMethodHeader = GALGAS_propertyListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (244)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_implementationSuperClassName ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_9845.current_mSuperEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (246)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_10125_0 ; // Joker input parameter
      GALGAS_string joker_10158_0 ; // Joker input parameter
      GALGAS_propertyListForImplementation joker_10222_4 ; // Joker input parameter
      GALGAS_propertyListForImplementation joker_10222_3 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_10222_2 ; // Joker input parameter
      GALGAS_triggeredKeys joker_10222_1 ; // Joker input parameter
      outArgument_outEntityMap.method_searchKey (enumerator_9845.current_mSuperEntityName (HERE), joker_10125_0, var_implementationSuperClassName, joker_10158_0, var_classObservablePropertyMap, var_propertyListForInitMethodHeader, joker_10222_4, joker_10222_3, joker_10222_2, joker_10222_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (247)) ;
      //-------- END @methodCallInstructionForGeneration
    }else if (kBoolFalse == test_1) {
      //-------- @assignmentInstructionForGeneration
      var_classObservablePropertyMap = GALGAS_classObservablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (249)) ;
      //-------- @assignmentInstructionForGeneration
      var_propertyListForInitMethodHeader = GALGAS_propertyListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (250)) ;
      //-------- @assignmentInstructionForGeneration
      var_implementationSuperClassName = GALGAS_string::makeEmptyString () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_propertyListForImplementation var_propertyListForImplementation = GALGAS_propertyListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (253)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_transientListForImplementation var_transientListForImplementation = GALGAS_transientListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (254)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_propertyListForImplementation var_inheritedPropertyListForImplementation = var_propertyListForInitMethodHeader ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_triggeredKeys var_triggeredKeys = GALGAS_triggeredKeys::constructor_emptyMap (SOURCE_FILE_AT_LINE (256)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_classPropertyList enumerator_10806 (enumerator_9845.current_mPropertyList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_10806.hasCurrentObject ()) {
      //-------- @plusEqualnstructionForGeneration
      var_propertyListForImplementation.addAssign_operation (enumerator_10806.current_mType (HERE), enumerator_10806.current_mPropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (258)), enumerator_10806.current_mDefaultValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (258)) ;
      //-------- @plusEqualnstructionForGeneration
      var_propertyListForInitMethodHeader.addAssign_operation (enumerator_10806.current_mType (HERE), enumerator_10806.current_mPropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (259)), enumerator_10806.current_mDefaultValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (259)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_classObservablePropertyMap.modifier_insertKey (enumerator_10806.current_mPropertyName (HERE), enumerator_10806.current_mType (HERE), GALGAS_stringlist::constructor_listWithValue (enumerator_10806.current_mPropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (260)) COMMA_SOURCE_FILE_AT_LINE (260)), inCompiler COMMA_SOURCE_FILE_AT_LINE (260)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_10806.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_classTransientList enumerator_11230 (enumerator_9845.current_mClassTransientList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_11230.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_stringlist var_allPropertyDependancyList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (264)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_directDependancyList var_directDependancyList = GALGAS_directDependancyList::constructor_emptyList (SOURCE_FILE_AT_LINE (265)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_lstringlist enumerator_11384 (enumerator_11230.current_mDependencyList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_11384.hasCurrentObject ()) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_easyBindingType var_type ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_stringlist var_propertyDependancyList ;
        //-------- @methodCallInstructionForGeneration
        var_classObservablePropertyMap.method_searchKey (enumerator_11384.current_mValue (HERE), var_type, var_propertyDependancyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (269)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @plusEqualnstructionForGeneration
        var_directDependancyList.addAssign_operation (var_type, enumerator_11384.current_mValue (HERE).reader_string (SOURCE_FILE_AT_LINE (270)) COMMA_SOURCE_FILE_AT_LINE (270)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_stringlist enumerator_11647 (var_propertyDependancyList, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_11647.hasCurrentObject ()) {
          //-------- @plusEqualnstructionForGeneration
          var_triggeredKeys.addAssign_operation (enumerator_11647.current_mValue (HERE), enumerator_11230.current_mTransientName (HERE).reader_string (SOURCE_FILE_AT_LINE (272)) COMMA_SOURCE_FILE_AT_LINE (272)) ;
          enumerator_11647.gotoNextObject () ;
        }
        //-------- @concatInstructionForGeneration
        var_allPropertyDependancyList.dotAssign_operation (var_propertyDependancyList COMMA_SOURCE_FILE_AT_LINE (274)) ;
        enumerator_11384.gotoNextObject () ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_transientListForImplementation.addAssign_operation (enumerator_11230.current_mType (HERE), enumerator_11230.current_mTransientName (HERE).reader_string (SOURCE_FILE_AT_LINE (276)), var_directDependancyList COMMA_SOURCE_FILE_AT_LINE (276)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_classObservablePropertyMap.modifier_insertKey (enumerator_11230.current_mTransientName (HERE), enumerator_11230.current_mType (HERE), var_allPropertyDependancyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (277)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_11230.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outEntityMap.modifier_insertKey (enumerator_9845.current_mEntityName (HERE), enumerator_9845.current_mSuperEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (282)), enumerator_9845.current_mImplementationClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (283)), var_implementationSuperClassName, var_classObservablePropertyMap, var_propertyListForInitMethodHeader, var_inheritedPropertyListForImplementation, var_propertyListForImplementation, var_transientListForImplementation, var_triggeredKeys, inCompiler COMMA_SOURCE_FILE_AT_LINE (280)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_9845.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outPreferencesMap = GALGAS_preferencesMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (294)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_preferencesList enumerator_12611 (constinArgument_inAST.mAttribute_mPreferencesList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_12611.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_rootEntityImplementationClassName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_classObservablePropertyMap var_observablePropertyMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_12763_0 ; // Joker input parameter
    GALGAS_string joker_12802_0 ; // Joker input parameter
    GALGAS_propertyListForImplementation joker_12828_5 ; // Joker input parameter
    GALGAS_propertyListForImplementation joker_12828_4 ; // Joker input parameter
    GALGAS_propertyListForImplementation joker_12828_3 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_12828_2 ; // Joker input parameter
    GALGAS_triggeredKeys joker_12828_1 ; // Joker input parameter
    outArgument_outEntityMap.method_searchKey (enumerator_12611.current_mRootEntityName (HERE), joker_12763_0, var_rootEntityImplementationClassName, joker_12802_0, var_observablePropertyMap, joker_12828_5, joker_12828_4, joker_12828_3, joker_12828_2, joker_12828_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (298)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletGenerationList var_outletGenerationList = GALGAS_outletGenerationList::constructor_emptyList (SOURCE_FILE_AT_LINE (300)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletDeclarationList enumerator_12954 (enumerator_12611.current_mOutletDeclarationList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_12954.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_outletClassBindingMap var_bindingMap ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_13047_0 ; // Joker input parameter
      outArgument_outOutletClassMap.method_searchKey (enumerator_12954.current_mOutletType (HERE), joker_13047_0, var_bindingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (303)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletBindingListForGeneration var_outletBindingList = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (304)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_outletBindingList enumerator_13168 (enumerator_12954.current_mOutletBindingList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_13168.hasCurrentObject ()) {
        //-------- @localVariableDeclarationForGeneration
        GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
        //-------- @localVariableDeclarationForGeneration
        GALGAS_easyBindingTypeList var_acceptableTypeList ;
        //-------- @methodCallInstructionForGeneration
        var_bindingMap.method_searchKey (enumerator_13168.current_mBindingName (HERE), var_acceptableTypeList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (308)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @localVariableDeclarationForGeneration
        GALGAS_easyBindingType var_observablePropertyType ;
        //-------- @methodCallInstructionForGeneration
        GALGAS_stringlist joker_13576_0 ; // Joker input parameter
        var_observablePropertyMap.method_searchKey (enumerator_13168.current_mRootObservablePropertyName (HERE), var_observablePropertyType, joker_13576_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (311)) ;
        //-------- END @methodCallInstructionForGeneration
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_bool var_found = GALGAS_bool (false) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_13704 (var_acceptableTypeList, kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (314)).isValidAndTrue () ;
        if (enumerator_13704.hasCurrentObject () && bool_2) {
          while (enumerator_13704.hasCurrentObject () && bool_2) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_13704.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
            enumerator_13704.gotoNextObject () ;
            if (enumerator_13704.hasCurrentObject ()) {
              bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (314)).isValidAndTrue () ;
            }
          }
        }
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (317)).boolEnum () ;
        if (kBoolTrue == test_3) {
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (callCategoryReader_ebTypeName ((const cPtr_easyBindingType *) var_observablePropertyType.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (318)) COMMA_SOURCE_FILE_AT_LINE (318)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (318)) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_easyBindingTypeList enumerator_13983 (var_acceptableTypeList, kEnumeration_up) ;
          //--- complex foreach instruction
          bool bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (319)).isValidAndTrue () ;
          if (enumerator_13983.hasCurrentObject () && bool_4) {
            while (enumerator_13983.hasCurrentObject () && bool_4) {
              //-------- @concatInstructionForGeneration
              var_s.dotAssign_operation (GALGAS_string ("\n"
                "  - '").operator_concat (callCategoryReader_ebTypeName ((const cPtr_easyBindingType *) enumerator_13983.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (320)) COMMA_SOURCE_FILE_AT_LINE (320)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (320)) COMMA_SOURCE_FILE_AT_LINE (320)) ;
              enumerator_13983.gotoNextObject () ;
              if (enumerator_13983.hasCurrentObject ()) {
                bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (319)).isValidAndTrue () ;
              }
            }
          }
          //-------- @errorInstructionForGeneration
          GALGAS_location location_5 (enumerator_13168.current_mRootObservablePropertyName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, var_s COMMA_SOURCE_FILE_AT_LINE (322)) ;
        }
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (325)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_outletBindingOptionList enumerator_14263 (enumerator_13168.current_mOutletBindingOptionList (HERE), kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_14263.hasCurrentObject ()) {
          //-------- @localVariableDeclarationForGeneration
          GALGAS_easyBindingTypeList var_acceptableTypeList ;
          //-------- @methodCallInstructionForGeneration
          var_outletClassBindingOptionMap.method_searchKey (enumerator_14263.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (328)) ;
          //-------- END @methodCallInstructionForGeneration
          //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
          GALGAS_bool var_found = GALGAS_bool (false) ;
          //-------- @foreachInstructionForGeneration
          cEnumerator_easyBindingTypeList enumerator_14476 (var_acceptableTypeList, kEnumeration_up) ;
          //--- complex foreach instruction
          bool bool_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (330)).isValidAndTrue () ;
          if (enumerator_14476.hasCurrentObject () && bool_6) {
            while (enumerator_14476.hasCurrentObject () && bool_6) {
              //-------- @foreachInstructionForGeneration
              cEnumerator_easyBindingTypeList enumerator_14546 (enumerator_14263.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
              //--- complex foreach instruction
              bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (331)).isValidAndTrue () ;
              if (enumerator_14546.hasCurrentObject () && bool_7) {
                while (enumerator_14546.hasCurrentObject () && bool_7) {
                  //-------- @assignmentInstructionForGeneration
                  var_found = GALGAS_bool (kIsEqual, enumerator_14476.current_mType (HERE).objectCompare (enumerator_14546.current_mType (HERE))) ;
                  enumerator_14546.gotoNextObject () ;
                  if (enumerator_14546.hasCurrentObject ()) {
                    bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (331)).isValidAndTrue () ;
                  }
                }
              }
              enumerator_14476.gotoNextObject () ;
              if (enumerator_14476.hasCurrentObject ()) {
                bool_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (330)).isValidAndTrue () ;
              }
            }
          }
          //-------- @ifInstructionForGeneration
          const enumGalgasBool test_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (335)).boolEnum () ;
          if (kBoolTrue == test_8) {
            //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
            GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
            //-------- @foreachInstructionForGeneration
            cEnumerator_easyBindingTypeList enumerator_14821 (var_acceptableTypeList, kEnumeration_up) ;
            //--- complex foreach instruction
            bool bool_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (337)).isValidAndTrue () ;
            if (enumerator_14821.hasCurrentObject () && bool_9) {
              while (enumerator_14821.hasCurrentObject () && bool_9) {
                //-------- @concatInstructionForGeneration
                var_s.dotAssign_operation (GALGAS_string ("\n"
                  "  - '").operator_concat (callCategoryReader_ebTypeName ((const cPtr_easyBindingType *) enumerator_14821.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) COMMA_SOURCE_FILE_AT_LINE (338)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (338)) COMMA_SOURCE_FILE_AT_LINE (338)) ;
                enumerator_14821.gotoNextObject () ;
                if (enumerator_14821.hasCurrentObject ()) {
                  bool_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (337)).isValidAndTrue () ;
                }
              }
            }
            //-------- @errorInstructionForGeneration
            GALGAS_location location_10 (enumerator_14263.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_10, var_s COMMA_SOURCE_FILE_AT_LINE (340)) ;
          }
          //-------- @plusEqualnstructionForGeneration
          var_bindingOptionList.addAssign_operation (enumerator_14263.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (342)), enumerator_14263.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (342)) ;
          enumerator_14263.gotoNextObject () ;
        }
        //-------- @plusEqualnstructionForGeneration
        var_outletBindingList.addAssign_operation (enumerator_13168.current_mBindingName (HERE).reader_string (SOURCE_FILE_AT_LINE (344)), enumerator_13168.current_mRootObservablePropertyName (HERE).reader_string (SOURCE_FILE_AT_LINE (344)), var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (344)) ;
        enumerator_13168.gotoNextObject () ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_outletGenerationList.addAssign_operation (enumerator_12954.current_mOutletType (HERE).reader_string (SOURCE_FILE_AT_LINE (346)), enumerator_12954.current_mOutletName (HERE).reader_string (SOURCE_FILE_AT_LINE (346)), var_outletBindingList COMMA_SOURCE_FILE_AT_LINE (346)) ;
      enumerator_12954.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outPreferencesMap.modifier_insertKey (enumerator_12611.current_mPreferencesName (HERE), enumerator_12611.current_mRootEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (351)), var_rootEntityImplementationClassName, var_outletGenerationList, inCompiler COMMA_SOURCE_FILE_AT_LINE (349)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_12611.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//          Abstract category reader '@easyBindingType ocTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_ocTypeName> gCategoryReaderTable_easyBindingType_ocTypeName ;

//---------------------------------------------------------------------------*

void enterCategoryReader_ocTypeName (const PMSInt32 inClassIndex,
                                     categoryReaderSignature_easyBindingType_ocTypeName inReader) {
  gCategoryReaderTable_easyBindingType_ocTypeName.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_ocTypeName (void) {
  gCategoryReaderTable_easyBindingType_ocTypeName.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_ocTypeName (NULL,
                                                       freeCategoryReader_easyBindingType_ocTypeName) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_ocTypeName (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_ocTypeName f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_ocTypeName.count ()) {
      f = gCategoryReaderTable_easyBindingType_ocTypeName (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_ocTypeName.count ()) {
           f = gCategoryReaderTable_easyBindingType_ocTypeName (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_ocTypeName.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@boolType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("BOOL") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                  categoryReader_boolType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_ocTypeName (defineCategoryReader_boolType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@integer16Type ocTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integer_31__36_Type_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("SInt16") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_31__36_Type_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_integer_31__36_Type.mSlotID,
                                  categoryReader_integer_31__36_Type_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_31__36_Type_ocTypeName (defineCategoryReader_integer_31__36_Type_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@integer32Type ocTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integer_33__32_Type_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("SInt32") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_33__32_Type_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_integer_33__32_Type.mSlotID,
                                  categoryReader_integer_33__32_Type_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_33__32_Type_ocTypeName (defineCategoryReader_integer_33__32_Type_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@integer64Type ocTypeName'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integer_36__34_Type_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("SInt64") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_36__34_Type_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_integer_36__34_Type.mSlotID,
                                  categoryReader_integer_36__34_Type_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_36__34_Type_ocTypeName (defineCategoryReader_integer_36__34_Type_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@decimalType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSDecimal") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                  categoryReader_decimalType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_ocTypeName (defineCategoryReader_decimalType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@floatType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_floatType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("float") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_floatType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_floatType.mSlotID,
                                  categoryReader_floatType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_floatType_ocTypeName (defineCategoryReader_floatType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@doubleType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("double") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                  categoryReader_doubleType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_ocTypeName (defineCategoryReader_doubleType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@stringType ocTypeName'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSString *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                  categoryReader_stringType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_ocTypeName (defineCategoryReader_stringType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@fontType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSFont *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                  categoryReader_fontType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_ocTypeName (defineCategoryReader_fontType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@imageType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSImage *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                  categoryReader_imageType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_ocTypeName (defineCategoryReader_imageType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@colorType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSColor *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                  categoryReader_colorType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_ocTypeName (defineCategoryReader_colorType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dataType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSData *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                  categoryReader_dataType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_ocTypeName (defineCategoryReader_dataType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//             Overriding category reader '@dateType ocTypeName'             *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_ocTypeName (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("NSDate *") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_ocTypeName (void) {
  enterCategoryReader_ocTypeName (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                  categoryReader_dateType_ocTypeName) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_ocTypeName (defineCategoryReader_dateType_ocTypeName, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Abstract category reader '@easyBindingType propertyAttributeString'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_propertyAttributeString> gCategoryReaderTable_easyBindingType_propertyAttributeString ;

//---------------------------------------------------------------------------*

void enterCategoryReader_propertyAttributeString (const PMSInt32 inClassIndex,
                                                  categoryReaderSignature_easyBindingType_propertyAttributeString inReader) {
  gCategoryReaderTable_easyBindingType_propertyAttributeString.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_propertyAttributeString (void) {
  gCategoryReaderTable_easyBindingType_propertyAttributeString.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_propertyAttributeString (NULL,
                                                                    freeCategoryReader_easyBindingType_propertyAttributeString) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_propertyAttributeString (const cPtr_easyBindingType * inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_propertyAttributeString f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_propertyAttributeString.count ()) {
      f = gCategoryReaderTable_easyBindingType_propertyAttributeString (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_propertyAttributeString.count ()) {
           f = gCategoryReaderTable_easyBindingType_propertyAttributeString (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_propertyAttributeString.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@boolType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_boolType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                               categoryReader_boolType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_propertyAttributeString (defineCategoryReader_boolType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@integer16Type propertyAttributeString'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integer_31__36_Type_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_31__36_Type_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_integer_31__36_Type.mSlotID,
                                               categoryReader_integer_31__36_Type_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_31__36_Type_propertyAttributeString (defineCategoryReader_integer_31__36_Type_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@integer32Type propertyAttributeString'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integer_33__32_Type_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_33__32_Type_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_integer_33__32_Type.mSlotID,
                                               categoryReader_integer_33__32_Type_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_33__32_Type_propertyAttributeString (defineCategoryReader_integer_33__32_Type_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category reader '@integer64Type propertyAttributeString'    *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_integer_36__34_Type_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_36__34_Type_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_integer_36__34_Type.mSlotID,
                                               categoryReader_integer_36__34_Type_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_36__34_Type_propertyAttributeString (defineCategoryReader_integer_36__34_Type_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@floatType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_floatType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_floatType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_floatType.mSlotID,
                                               categoryReader_floatType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_floatType_propertyAttributeString (defineCategoryReader_floatType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@doubleType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_doubleType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                               categoryReader_doubleType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_propertyAttributeString (defineCategoryReader_doubleType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@decimalType propertyAttributeString'     *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_decimalType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                               categoryReader_decimalType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_propertyAttributeString (defineCategoryReader_decimalType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category reader '@stringType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_stringType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("(copy)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                               categoryReader_stringType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_propertyAttributeString (defineCategoryReader_stringType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@fontType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_fontType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                               categoryReader_fontType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_propertyAttributeString (defineCategoryReader_fontType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@imageType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_imageType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                               categoryReader_imageType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_propertyAttributeString (defineCategoryReader_imageType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@dataType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dataType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                               categoryReader_dataType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_propertyAttributeString (defineCategoryReader_dataType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@dateType propertyAttributeString'       *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_dateType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                      C_Compiler * /* inCompiler */
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                               categoryReader_dateType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_propertyAttributeString (defineCategoryReader_dateType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category reader '@colorType propertyAttributeString'      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_colorType_propertyAttributeString (const cPtr_easyBindingType * /* inObject */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("(assign)") ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_propertyAttributeString (void) {
  enterCategoryReader_propertyAttributeString (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                               categoryReader_colorType_propertyAttributeString) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_propertyAttributeString (defineCategoryReader_colorType_propertyAttributeString, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Abstract category reader '@easyBindingType copyOnAssign'          *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_easyBindingType_copyOnAssign> gCategoryReaderTable_easyBindingType_copyOnAssign ;

//---------------------------------------------------------------------------*

void enterCategoryReader_copyOnAssign (const PMSInt32 inClassIndex,
                                       categoryReaderSignature_easyBindingType_copyOnAssign inReader) {
  gCategoryReaderTable_easyBindingType_copyOnAssign.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_easyBindingType_copyOnAssign (void) {
  gCategoryReaderTable_easyBindingType_copyOnAssign.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_easyBindingType_copyOnAssign (NULL,
                                                         freeCategoryReader_easyBindingType_copyOnAssign) ;

//---------------------------------------------------------------------------*

GALGAS_bool callCategoryReader_copyOnAssign (const cPtr_easyBindingType * inObject,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  GALGAS_bool result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_easyBindingType) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_easyBindingType_copyOnAssign f = NULL ;
    if (classIndex < gCategoryReaderTable_easyBindingType_copyOnAssign.count ()) {
      f = gCategoryReaderTable_easyBindingType_copyOnAssign (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_easyBindingType_copyOnAssign.count ()) {
           f = gCategoryReaderTable_easyBindingType_copyOnAssign (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_easyBindingType_copyOnAssign.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    result = f (inObject, inCompiler COMMA_THERE) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@boolType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_boolType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_boolType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_boolType.mSlotID,
                                    categoryReader_boolType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_boolType_copyOnAssign (defineCategoryReader_boolType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@integer16Type copyOnAssign'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_integer_31__36_Type_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_31__36_Type_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_integer_31__36_Type.mSlotID,
                                    categoryReader_integer_31__36_Type_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_31__36_Type_copyOnAssign (defineCategoryReader_integer_31__36_Type_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@integer32Type copyOnAssign'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_integer_33__32_Type_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_33__32_Type_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_integer_33__32_Type.mSlotID,
                                    categoryReader_integer_33__32_Type_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_33__32_Type_copyOnAssign (defineCategoryReader_integer_33__32_Type_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//         Overriding category reader '@integer64Type copyOnAssign'          *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_integer_36__34_Type_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_integer_36__34_Type_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_integer_36__34_Type.mSlotID,
                                    categoryReader_integer_36__34_Type_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_integer_36__34_Type_copyOnAssign (defineCategoryReader_integer_36__34_Type_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@floatType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_floatType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_floatType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_floatType.mSlotID,
                                    categoryReader_floatType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_floatType_copyOnAssign (defineCategoryReader_floatType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@doubleType copyOnAssign'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_doubleType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_doubleType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_doubleType.mSlotID,
                                    categoryReader_doubleType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_doubleType_copyOnAssign (defineCategoryReader_doubleType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//          Overriding category reader '@decimalType copyOnAssign'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_decimalType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_decimalType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_decimalType.mSlotID,
                                    categoryReader_decimalType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_decimalType_copyOnAssign (defineCategoryReader_decimalType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@stringType copyOnAssign'           *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_stringType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                           C_Compiler * /* inCompiler */
                                                           COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (true) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_stringType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_stringType.mSlotID,
                                    categoryReader_stringType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_stringType_copyOnAssign (defineCategoryReader_stringType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@fontType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_fontType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_fontType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_fontType.mSlotID,
                                    categoryReader_fontType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_fontType_copyOnAssign (defineCategoryReader_fontType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@imageType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_imageType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_imageType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_imageType.mSlotID,
                                    categoryReader_imageType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_imageType_copyOnAssign (defineCategoryReader_imageType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Overriding category reader '@colorType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_colorType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                          C_Compiler * /* inCompiler */
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_colorType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_colorType.mSlotID,
                                    categoryReader_colorType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_colorType_copyOnAssign (defineCategoryReader_colorType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@dataType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_dataType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dataType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_dataType.mSlotID,
                                    categoryReader_dataType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dataType_copyOnAssign (defineCategoryReader_dataType_copyOnAssign, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Overriding category reader '@dateType copyOnAssign'            *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_bool categoryReader_dateType_copyOnAssign (const cPtr_easyBindingType * /* inObject */,
                                                         C_Compiler * /* inCompiler */
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_bool (false) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_dateType_copyOnAssign (void) {
  enterCategoryReader_copyOnAssign (kTypeDescriptor_GALGAS_dateType.mSlotID,
                                    categoryReader_dateType_copyOnAssign) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_dateType_copyOnAssign (defineCategoryReader_dateType_copyOnAssign, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


