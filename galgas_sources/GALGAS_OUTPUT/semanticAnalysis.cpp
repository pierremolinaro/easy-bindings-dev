//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticAnalysis.cpp'                         *
//             Generated by version version GALGAS_BETA_VERSION              *
//                      august 24th, 2012, at 23h8'30"                       *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "easyBindings_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeEntities'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeEntities (const GALGAS_entityList constinArgument0,
                              GALGAS_entityMap & outArgument1,
                              GALGAS_transientDependencyGraph & ioArgument2,
                              C_Compiler * inCompiler
                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzePreferences'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzePreferences (const GALGAS_entityMap constinArgument0,
                                 const GALGAS_preferencesDeclarationList constinArgument1,
                                 const GALGAS_outletClassMap constinArgument2,
                                 GALGAS_preferencesMap & outArgument3,
                                 GALGAS_transientDependencyGraph & ioArgument4,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'checkBindingOptions'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBindingOptions (const GALGAS_outletBindingOptionList constinArgument0,
                                  const GALGAS_outletClassBindingOptionMap constinArgument1,
                                  GALGAS__32_stringlist & outArgument2,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'analyzeDocuments'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeDocuments (const GALGAS_documentDeclarationList constinArgument0,
                               const GALGAS_outletClassMap constinArgument1,
                               const GALGAS_controllerClassMap constinArgument2,
                               const GALGAS_entityMap constinArgument3,
                               const GALGAS_preferencesMap constinArgument4,
                               GALGAS_documentMap & outArgument5,
                               GALGAS_transientDependencyGraph & ioArgument6,
                               C_Compiler * inCompiler
                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkDefaultValueType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDefaultValueType (const GALGAS_easyBindingTypeList constinArgument0,
                                    const GALGAS_easyBindingType constinArgument1,
                                    const GALGAS_lstring constinArgument2,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeClasses'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeClasses (const GALGAS_classList constinArgument0,
                             GALGAS_classMap & outArgument1,
                             GALGAS_transientDependencyGraph & ioArgument2,
                             C_Compiler * inCompiler
                             COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeOutletClasses'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeOutletClasses (const GALGAS_outletClassList constinArgument0,
                                   GALGAS_outletClassMap & outArgument1,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeControllerClasses'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClasses (const GALGAS_controllerClassList constinArgument0,
                                       GALGAS_controllerClassMap & outArgument1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@attributeListForImplementation' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_attributeListForImplementation : public cCollectionElement {
  public : GALGAS_attributeListForImplementation_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_attributeListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                              const GALGAS_string & in_mPropertyName,
                                                              const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                              const GALGAS_string & in_mDirectDefaultValue
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_attributeListForImplementation::cCollectionElement_attributeListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                                                                      const GALGAS_string & in_mPropertyName,
                                                                                                      const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                                                                      const GALGAS_string & in_mDirectDefaultValue
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mPropertyName, in_mDefaultValueAsObjectiveCObject, in_mDirectDefaultValue) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_attributeListForImplementation::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_attributeListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_attributeListForImplementation (mObject.mAttribute_mType, mObject.mAttribute_mPropertyName, mObject.mAttribute_mDefaultValueAsObjectiveCObject, mObject.mAttribute_mDirectDefaultValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_attributeListForImplementation::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyName" ":" ;
  mObject.mAttribute_mPropertyName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefaultValueAsObjectiveCObject" ":" ;
  mObject.mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDirectDefaultValue" ":" ;
  mObject.mAttribute_mDirectDefaultValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_attributeListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_attributeListForImplementation * operand = (cCollectionElement_attributeListForImplementation *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_attributeListForImplementation) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation::GALGAS_attributeListForImplementation (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation::GALGAS_attributeListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::constructor_listWithValue (const GALGAS_easyBindingType & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_string & inOperand2,
                                                                                                        const GALGAS_string & inOperand3
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_attributeListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_easyBindingType & in_mType,
                                                                       const GALGAS_string & in_mPropertyName,
                                                                       const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                                       const GALGAS_string & in_mDirectDefaultValue
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_attributeListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_attributeListForImplementation (in_mType,
                                                                    in_mPropertyName,
                                                                    in_mDefaultValueAsObjectiveCObject,
                                                                    in_mDirectDefaultValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::addAssign_operation (const GALGAS_easyBindingType & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_string & inOperand2,
                                                                 const GALGAS_string & inOperand3
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_attributeListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_prependValue (GALGAS_easyBindingType inOperand0,
                                                                   GALGAS_string inOperand1,
                                                                   GALGAS_string inOperand2,
                                                                   GALGAS_string inOperand3
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_attributeListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_popFirst (GALGAS_easyBindingType & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_string & outOperand2,
                                                               GALGAS_string & outOperand3,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_popLast (GALGAS_easyBindingType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_string & outOperand2,
                                                              GALGAS_string & outOperand3,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::method_first (GALGAS_easyBindingType & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_string & outOperand2,
                                                          GALGAS_string & outOperand3,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::method_last (GALGAS_easyBindingType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_string & outOperand2,
                                                         GALGAS_string & outOperand3,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mPropertyName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::operator_concat (const GALGAS_attributeListForImplementation & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result = GALGAS_attributeListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result = GALGAS_attributeListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::dotAssign_operation (const GALGAS_attributeListForImplementation inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_attributeListForImplementation::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mPropertyNameAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mPropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDefaultValueAsObjectiveCObjectAtIndex (const GALGAS_uint & inIndex,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDirectDefaultValueAtIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDirectDefaultValue ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_attributeListForImplementation::cEnumerator_attributeListForImplementation (const GALGAS_attributeListForImplementation & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element cEnumerator_attributeListForImplementation::current (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_attributeListForImplementation::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mPropertyName (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mPropertyName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDefaultValueAsObjectiveCObject (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDirectDefaultValue (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDirectDefaultValue ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @attributeListForImplementation type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeListForImplementation ("attributeListForImplementation",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeListForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeListForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  const GALGAS_attributeListForImplementation * p = (const GALGAS_attributeListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "attributeListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap::cMapElement_classMap (const GALGAS_lstring & inKey,
                                            const GALGAS_string & in_mSuperClassName,
                                            const GALGAS_observablePropertyMap & in_mPropertyMap,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                            const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                            const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                            const GALGAS_stringset & in_mImplementationFileInclusionSet
                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mPropertyMap (in_mPropertyMap),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_classMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_classMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classMap (mAttribute_lkey, mAttribute_mSuperClassName, mAttribute_mPropertyMap, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mImplementationFileInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_classMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyMap" ":" ;
  mAttribute_mPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_classMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classMap * operand = (cMapElement_classMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyMap.objectCompare (operand->mAttribute_mPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (const GALGAS_classMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap & GALGAS_classMap::operator = (const GALGAS_classMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_mapWithMapToOverride (const GALGAS_classMap & inMapToOverride
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_classMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_insertKey (GALGAS_lstring inKey,
                                          GALGAS_string inArgument0,
                                          GALGAS_observablePropertyMap inArgument1,
                                          GALGAS_attributeListForImplementation inArgument2,
                                          GALGAS_attributeListForImplementation inArgument3,
                                          GALGAS_attributeListForImplementation inArgument4,
                                          GALGAS_transientListForImplementation inArgument5,
                                          GALGAS_stringset inArgument6,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_classMap * p = NULL ;
  macroMyNew (p, cMapElement_classMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_classMap_searchKey = "the '%K' class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_classMap::method_searchKey (GALGAS_lstring inKey,
                                        GALGAS_string & outArgument0,
                                        GALGAS_observablePropertyMap & outArgument1,
                                        GALGAS_attributeListForImplementation & outArgument2,
                                        GALGAS_attributeListForImplementation & outArgument3,
                                        GALGAS_attributeListForImplementation & outArgument4,
                                        GALGAS_transientListForImplementation & outArgument5,
                                        GALGAS_stringset & outArgument6,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) performSearch (inKey,
                                                                                   inCompiler,
                                                                                   kSearchErrorMessage_classMap_searchKey
                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_classMap) ;
    outArgument0 = p->mAttribute_mSuperClassName ;
    outArgument1 = p->mAttribute_mPropertyMap ;
    outArgument2 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument3 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument4 = p->mAttribute_mAttributeListForImplementation ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mImplementationFileInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_classMap::reader_mPropertyMapForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_classMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMPropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                  GALGAS_string inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                  const GALGAS_string & inKey
                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                     const GALGAS_lstring & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_classMap_searchKey COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_classMap::cEnumerator_classMap (const GALGAS_classMap & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element cEnumerator_classMap::current (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return GALGAS_classMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSuperClassName, p->mAttribute_mPropertyMap, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mImplementationFileInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_classMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_classMap::current_mPropertyMap (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_classMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_classMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @classMap type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap ("classMap",
                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler,
                                                const GALGAS_location & inErrorLocation
                                                COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  const GALGAS_classMap * p = (const GALGAS_classMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "classMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap::cMapElement_entityMap (const GALGAS_lstring & inKey,
                                              const GALGAS_string & in_mSuperEntityName,
                                              const GALGAS_string & in_mImplementationClassName,
                                              const GALGAS_string & in_mSuperImplementationClassName,
                                              const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                              const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                              const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                              const GALGAS_relationshipList & in_mAllRelationshipList,
                                              const GALGAS_propertyMap & in_mAllPropertyMap,
                                              const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                              const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                              const GALGAS_stringset & in_mImplementationFileInclusionSet,
                                              const GALGAS__32_stringlist & in_mToManyRelationshipList
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperEntityName (in_mSuperEntityName),
mAttribute_mImplementationClassName (in_mImplementationClassName),
mAttribute_mSuperImplementationClassName (in_mSuperImplementationClassName),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mCurrentRelationshipList (in_mCurrentRelationshipList),
mAttribute_mAllRelationshipList (in_mAllRelationshipList),
mAttribute_mAllPropertyMap (in_mAllPropertyMap),
mAttribute_mCurrentRelationshipMap (in_mCurrentRelationshipMap),
mAttribute_mAllRelationshipMap (in_mAllRelationshipMap),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet),
mAttribute_mToManyRelationshipList (in_mToManyRelationshipList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_entityMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mImplementationClassName.isValid () && mAttribute_mSuperImplementationClassName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () && mAttribute_mToManyRelationshipList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_entityMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_entityMap (mAttribute_lkey, mAttribute_mSuperEntityName, mAttribute_mImplementationClassName, mAttribute_mSuperImplementationClassName, mAttribute_mObservablePropertyMap, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mCurrentRelationshipList, mAttribute_mAllRelationshipList, mAttribute_mAllPropertyMap, mAttribute_mCurrentRelationshipMap, mAttribute_mAllRelationshipMap, mAttribute_mImplementationFileInclusionSet, mAttribute_mToManyRelationshipList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_entityMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationClassName" ":" ;
  mAttribute_mImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperImplementationClassName" ":" ;
  mAttribute_mSuperImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipList" ":" ;
  mAttribute_mCurrentRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipList" ":" ;
  mAttribute_mAllRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllPropertyMap" ":" ;
  mAttribute_mAllPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipMap" ":" ;
  mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipMap" ":" ;
  mAttribute_mAllRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mToManyRelationshipList" ":" ;
  mAttribute_mToManyRelationshipList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_entityMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_entityMap * operand = (cMapElement_entityMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperEntityName.objectCompare (operand->mAttribute_mSuperEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationClassName.objectCompare (operand->mAttribute_mImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperImplementationClassName.objectCompare (operand->mAttribute_mSuperImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (operand->mAttribute_mCurrentRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipList.objectCompare (operand->mAttribute_mAllRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllPropertyMap.objectCompare (operand->mAttribute_mAllPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (operand->mAttribute_mCurrentRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipMap.objectCompare (operand->mAttribute_mAllRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mToManyRelationshipList.objectCompare (operand->mAttribute_mToManyRelationshipList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (const GALGAS_entityMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap & GALGAS_entityMap::operator = (const GALGAS_entityMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_mapWithMapToOverride (const GALGAS_entityMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_entityMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_string inArgument0,
                                           GALGAS_string inArgument1,
                                           GALGAS_string inArgument2,
                                           GALGAS_observablePropertyMap inArgument3,
                                           GALGAS_attributeListForImplementation inArgument4,
                                           GALGAS_attributeListForImplementation inArgument5,
                                           GALGAS_attributeListForImplementation inArgument6,
                                           GALGAS_transientListForImplementation inArgument7,
                                           GALGAS_relationshipList inArgument8,
                                           GALGAS_relationshipList inArgument9,
                                           GALGAS_propertyMap inArgument10,
                                           GALGAS_relationshipMap inArgument11,
                                           GALGAS_relationshipMap inArgument12,
                                           GALGAS_stringset inArgument13,
                                           GALGAS__32_stringlist inArgument14,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * p = NULL ;
  macroMyNew (p, cMapElement_entityMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10, inArgument11, inArgument12, inArgument13, inArgument14 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entity is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_entityMap_searchKey = "the '%K' entity is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_entityMap::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_string & outArgument0,
                                         GALGAS_string & outArgument1,
                                         GALGAS_string & outArgument2,
                                         GALGAS_observablePropertyMap & outArgument3,
                                         GALGAS_attributeListForImplementation & outArgument4,
                                         GALGAS_attributeListForImplementation & outArgument5,
                                         GALGAS_attributeListForImplementation & outArgument6,
                                         GALGAS_transientListForImplementation & outArgument7,
                                         GALGAS_relationshipList & outArgument8,
                                         GALGAS_relationshipList & outArgument9,
                                         GALGAS_propertyMap & outArgument10,
                                         GALGAS_relationshipMap & outArgument11,
                                         GALGAS_relationshipMap & outArgument12,
                                         GALGAS_stringset & outArgument13,
                                         GALGAS__32_stringlist & outArgument14,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_entityMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
    outArgument9.drop () ;
    outArgument10.drop () ;
    outArgument11.drop () ;
    outArgument12.drop () ;
    outArgument13.drop () ;
    outArgument14.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    outArgument0 = p->mAttribute_mSuperEntityName ;
    outArgument1 = p->mAttribute_mImplementationClassName ;
    outArgument2 = p->mAttribute_mSuperImplementationClassName ;
    outArgument3 = p->mAttribute_mObservablePropertyMap ;
    outArgument4 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument5 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument6 = p->mAttribute_mAttributeListForImplementation ;
    outArgument7 = p->mAttribute_mTransientListForImplementation ;
    outArgument8 = p->mAttribute_mCurrentRelationshipList ;
    outArgument9 = p->mAttribute_mAllRelationshipList ;
    outArgument10 = p->mAttribute_mAllPropertyMap ;
    outArgument11 = p->mAttribute_mCurrentRelationshipMap ;
    outArgument12 = p->mAttribute_mAllRelationshipMap ;
    outArgument13 = p->mAttribute_mImplementationFileInclusionSet ;
    outArgument14 = p->mAttribute_mToManyRelationshipList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperEntityNameForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mCurrentRelationshipListForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mAllRelationshipListForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap::reader_mAllPropertyMapForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mCurrentRelationshipMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mAllRelationshipMapForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_entityMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityMap::reader_mToManyRelationshipListForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mToManyRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperEntityNameForKey (GALGAS_string inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllPropertyMapForKey (GALGAS_propertyMap inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMToManyRelationshipListForKey (GALGAS__32_stringlist inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mToManyRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_entityMap_searchKey COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_entityMap::cEnumerator_entityMap (const GALGAS_entityMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element cEnumerator_entityMap::current (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return GALGAS_entityMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSuperEntityName, p->mAttribute_mImplementationClassName, p->mAttribute_mSuperImplementationClassName, p->mAttribute_mObservablePropertyMap, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mCurrentRelationshipList, p->mAttribute_mAllRelationshipList, p->mAttribute_mAllPropertyMap, p->mAttribute_mCurrentRelationshipMap, p->mAttribute_mAllRelationshipMap, p->mAttribute_mImplementationFileInclusionSet, p->mAttribute_mToManyRelationshipList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_entityMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperEntityName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_entityMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mCurrentRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mAllRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap cEnumerator_entityMap::current_mAllPropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mCurrentRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mAllRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_entityMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_entityMap::current_mToManyRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mToManyRelationshipList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @entityMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap ("entityMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  const GALGAS_entityMap * p = (const GALGAS_entityMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "entityMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Class for element of '@columnBindingForTableValueBindingForGeneration' list*
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_columnBindingForTableValueBindingForGeneration : public cCollectionElement {
  public : GALGAS_columnBindingForTableValueBindingForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                              const GALGAS_string & in_mRequiredCellClass,
                                                                              const GALGAS_string & in_mObservableAttributeName,
                                                                              const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_columnBindingForTableValueBindingForGeneration::cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                                                                                      const GALGAS_string & in_mRequiredCellClass,
                                                                                                                                      const GALGAS_string & in_mObservableAttributeName,
                                                                                                                                      const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mColumnIdentifier, in_mRequiredCellClass, in_mObservableAttributeName, in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_columnBindingForTableValueBindingForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_columnBindingForTableValueBindingForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_columnBindingForTableValueBindingForGeneration (mObject.mAttribute_mColumnIdentifier, mObject.mAttribute_mRequiredCellClass, mObject.mAttribute_mObservableAttributeName, mObject.mAttribute_mOutletBindingOptionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_columnBindingForTableValueBindingForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mColumnIdentifier" ":" ;
  mObject.mAttribute_mColumnIdentifier.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredCellClass" ":" ;
  mObject.mAttribute_mRequiredCellClass.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableAttributeName" ":" ;
  mObject.mAttribute_mObservableAttributeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingOptionList" ":" ;
  mObject.mAttribute_mOutletBindingOptionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_columnBindingForTableValueBindingForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * operand = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                                                        const GALGAS_string & inOperand1,
                                                                                                                                        const GALGAS_string & inOperand2,
                                                                                                                                        const GALGAS__32_stringlist & inOperand3
                                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                       const GALGAS_string & in_mColumnIdentifier,
                                                                                       const GALGAS_string & in_mRequiredCellClass,
                                                                                       const GALGAS_string & in_mObservableAttributeName,
                                                                                       const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (in_mColumnIdentifier,
                                                                                    in_mRequiredCellClass,
                                                                                    in_mObservableAttributeName,
                                                                                    in_mOutletBindingOptionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                                                 const GALGAS_string & inOperand1,
                                                                                 const GALGAS_string & inOperand2,
                                                                                 const GALGAS__32_stringlist & inOperand3
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_prependValue (GALGAS_string inOperand0,
                                                                                   GALGAS_string inOperand1,
                                                                                   GALGAS_string inOperand2,
                                                                                   GALGAS__32_stringlist inOperand3
                                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                                               GALGAS_string & outOperand1,
                                                                               GALGAS_string & outOperand2,
                                                                               GALGAS__32_stringlist & outOperand3,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                                              GALGAS_string & outOperand1,
                                                                              GALGAS_string & outOperand2,
                                                                              GALGAS__32_stringlist & outOperand3,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_first (GALGAS_string & outOperand0,
                                                                          GALGAS_string & outOperand1,
                                                                          GALGAS_string & outOperand2,
                                                                          GALGAS__32_stringlist & outOperand3,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_last (GALGAS_string & outOperand0,
                                                                         GALGAS_string & outOperand1,
                                                                         GALGAS_string & outOperand2,
                                                                         GALGAS__32_stringlist & outOperand3,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::operator_concat (const GALGAS_columnBindingForTableValueBindingForGeneration & inOperand
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::dotAssign_operation (const GALGAS_columnBindingForTableValueBindingForGeneration inOperand
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mColumnIdentifierAtIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mColumnIdentifier ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mRequiredCellClassAtIndex (const GALGAS_uint & inIndex,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mRequiredCellClass ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mObservableAttributeNameAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration::reader_mOutletBindingOptionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_columnBindingForTableValueBindingForGeneration::cEnumerator_columnBindingForTableValueBindingForGeneration (const GALGAS_columnBindingForTableValueBindingForGeneration & inEnumeratedObject,
                                                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element cEnumerator_columnBindingForTableValueBindingForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mColumnIdentifier (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mColumnIdentifier ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mRequiredCellClass (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mRequiredCellClass ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mObservableAttributeName (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_columnBindingForTableValueBindingForGeneration::current_mOutletBindingOptionList (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mOutletBindingOptionList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//           @columnBindingForTableValueBindingForGeneration type            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ("columnBindingForTableValueBindingForGeneration",
                                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler,
                                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration * p = (const GALGAS_columnBindingForTableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "columnBindingForTableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@outletBindingListForGeneration' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_outletBindingListForGeneration : public cCollectionElement {
  public : GALGAS_outletBindingListForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_outletBindingListForGeneration (const GALGAS_abstractBindingForGeneration & in_mBinding
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_outletBindingListForGeneration::cCollectionElement_outletBindingListForGeneration (const GALGAS_abstractBindingForGeneration & in_mBinding
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBinding) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_outletBindingListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletBindingListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletBindingListForGeneration (mObject.mAttribute_mBinding COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_outletBindingListForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBinding" ":" ;
  mObject.mAttribute_mBinding.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletBindingListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletBindingListForGeneration * operand = (cCollectionElement_outletBindingListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_outletBindingListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_listWithValue (const GALGAS_abstractBindingForGeneration & inOperand0
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_abstractBindingForGeneration & in_mBinding
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_outletBindingListForGeneration (in_mBinding COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::addAssign_operation (const GALGAS_abstractBindingForGeneration & inOperand0
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_prependValue (GALGAS_abstractBindingForGeneration inOperand0
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popFirst (GALGAS_abstractBindingForGeneration & outOperand0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popLast (GALGAS_abstractBindingForGeneration & outOperand0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_first (GALGAS_abstractBindingForGeneration & outOperand0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_last (GALGAS_abstractBindingForGeneration & outOperand0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::operator_concat (const GALGAS_outletBindingListForGeneration & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::dotAssign_operation (const GALGAS_outletBindingListForGeneration inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_outletBindingListForGeneration::reader_mBindingAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  GALGAS_abstractBindingForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    result = p->mObject.mAttribute_mBinding ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_outletBindingListForGeneration::cEnumerator_outletBindingListForGeneration (const GALGAS_outletBindingListForGeneration & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element cEnumerator_outletBindingListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration cEnumerator_outletBindingListForGeneration::current_mBinding (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mObject.mAttribute_mBinding ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @outletBindingListForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration ("outletBindingListForGeneration",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  const GALGAS_outletBindingListForGeneration * p = (const GALGAS_outletBindingListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletBindingListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@outletGenerationList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_outletGenerationList : public cCollectionElement {
  public : GALGAS_outletGenerationList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                    const GALGAS_string & in_mOutletName,
                                                    const GALGAS_outletBindingListForGeneration & in_mOutletBindingList
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_outletGenerationList::cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                                                  const GALGAS_string & in_mOutletName,
                                                                                  const GALGAS_outletBindingListForGeneration & in_mOutletBindingList
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOutletType, in_mOutletName, in_mOutletBindingList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_outletGenerationList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletGenerationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletGenerationList (mObject.mAttribute_mOutletType, mObject.mAttribute_mOutletName, mObject.mAttribute_mOutletBindingList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_outletGenerationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletType" ":" ;
  mObject.mAttribute_mOutletType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletName" ":" ;
  mObject.mAttribute_mOutletName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingList" ":" ;
  mObject.mAttribute_mOutletBindingList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletGenerationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletGenerationList * operand = (cCollectionElement_outletGenerationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_outletGenerationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                    const GALGAS_string & inOperand1,
                                                                                    const GALGAS_outletBindingListForGeneration & inOperand2
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletGenerationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_string & in_mOutletType,
                                                             const GALGAS_string & in_mOutletName,
                                                             const GALGAS_outletBindingListForGeneration & in_mOutletBindingList
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = NULL ;
  macroMyNew (p, cCollectionElement_outletGenerationList (in_mOutletType,
                                                          in_mOutletName,
                                                          in_mOutletBindingList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                       const GALGAS_string & inOperand1,
                                                       const GALGAS_outletBindingListForGeneration & inOperand2
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_prependValue (GALGAS_string inOperand0,
                                                         GALGAS_string inOperand1,
                                                         GALGAS_outletBindingListForGeneration inOperand2
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     GALGAS_outletBindingListForGeneration & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    GALGAS_outletBindingListForGeneration & outOperand2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_first (GALGAS_string & outOperand0,
                                                GALGAS_string & outOperand1,
                                                GALGAS_outletBindingListForGeneration & outOperand2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_last (GALGAS_string & outOperand0,
                                               GALGAS_string & outOperand1,
                                               GALGAS_outletBindingListForGeneration & outOperand2,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::operator_concat (const GALGAS_outletGenerationList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::dotAssign_operation (const GALGAS_outletGenerationList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletTypeAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList::reader_mOutletBindingListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletBindingList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_outletGenerationList::cEnumerator_outletGenerationList (const GALGAS_outletGenerationList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element cEnumerator_outletGenerationList::current (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletType (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletName (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_outletGenerationList::current_mOutletBindingList (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletBindingList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletGenerationList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList ("outletGenerationList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  const GALGAS_outletGenerationList * p = (const GALGAS_outletGenerationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletGenerationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap::cMapElement_preferencesMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                        const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                        const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                        const GALGAS_lstringlist & in_mActionList,
                                                        const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                        const GALGAS_stringset & in_mImplementationFileInclusionSet
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_preferencesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_preferencesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_preferencesMap (mAttribute_lkey, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mOutletDeclarationList, mAttribute_mActionList, mAttribute_mObservablePropertyMap, mAttribute_mImplementationFileInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_preferencesMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_preferencesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_preferencesMap * operand = (cMapElement_preferencesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (const GALGAS_preferencesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap & GALGAS_preferencesMap::operator = (const GALGAS_preferencesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_mapWithMapToOverride (const GALGAS_preferencesMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_preferencesMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_attributeListForImplementation inArgument0,
                                                GALGAS_transientListForImplementation inArgument1,
                                                GALGAS_outletGenerationList inArgument2,
                                                GALGAS_lstringlist inArgument3,
                                                GALGAS_observablePropertyMap inArgument4,
                                                GALGAS_stringset inArgument5,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_preferencesMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' preference is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_preferencesMap_searchKey = "the '%K' preference is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_attributeListForImplementation & outArgument0,
                                              GALGAS_transientListForImplementation & outArgument1,
                                              GALGAS_outletGenerationList & outArgument2,
                                              GALGAS_lstringlist & outArgument3,
                                              GALGAS_observablePropertyMap & outArgument4,
                                              GALGAS_stringset & outArgument5,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_preferencesMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    outArgument0 = p->mAttribute_mAttributeListForImplementation ;
    outArgument1 = p->mAttribute_mTransientListForImplementation ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mActionList ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mImplementationFileInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferencesMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferencesMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferencesMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_preferencesMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_preferencesMap_searchKey COMMA_THERE) ;
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_preferencesMap::cEnumerator_preferencesMap (const GALGAS_preferencesMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element cEnumerator_preferencesMap::current (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return GALGAS_preferencesMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mObservablePropertyMap, p->mAttribute_mImplementationFileInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_preferencesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_preferencesMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_preferencesMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_preferencesMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_preferencesMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_preferencesMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_preferencesMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @preferencesMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap ("preferencesMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  const GALGAS_preferencesMap * p = (const GALGAS_preferencesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "preferencesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_documentMap::cMapElement_documentMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_string & in_mRootEntityName,
                                                  const GALGAS_string & in_mRootEntityImplementationClassName,
                                                  const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                  const GALGAS_controllerMap & in_mControllerMap,
                                                  const GALGAS_lstringlist & in_mActionList,
                                                  const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                  const GALGAS_stringset & in_mImplementationFileInclusionSet
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRootEntityName (in_mRootEntityName),
mAttribute_mRootEntityImplementationClassName (in_mRootEntityImplementationClassName),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mActionList (in_mActionList),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_documentMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mRootEntityImplementationClassName.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mActionList.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_documentMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_documentMap (mAttribute_lkey, mAttribute_mRootEntityName, mAttribute_mRootEntityImplementationClassName, mAttribute_mOutletDeclarationList, mAttribute_mControllerMap, mAttribute_mActionList, mAttribute_mTransientListForImplementation, mAttribute_mImplementationFileInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_documentMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityName" ":" ;
  mAttribute_mRootEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityImplementationClassName" ":" ;
  mAttribute_mRootEntityImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_documentMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_documentMap * operand = (cMapElement_documentMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityName.objectCompare (operand->mAttribute_mRootEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityImplementationClassName.objectCompare (operand->mAttribute_mRootEntityImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap::GALGAS_documentMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap::GALGAS_documentMap (const GALGAS_documentMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap & GALGAS_documentMap::operator = (const GALGAS_documentMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_documentMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::constructor_mapWithMapToOverride (const GALGAS_documentMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_documentMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_documentMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_string inArgument0,
                                             GALGAS_string inArgument1,
                                             GALGAS_outletGenerationList inArgument2,
                                             GALGAS_controllerMap inArgument3,
                                             GALGAS_lstringlist inArgument4,
                                             GALGAS_transientListForImplementation inArgument5,
                                             GALGAS_stringset inArgument6,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_documentMap * p = NULL ;
  macroMyNew (p, cMapElement_documentMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' document is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_documentMap_searchKey = "the '%K' document is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_documentMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_string & outArgument0,
                                           GALGAS_string & outArgument1,
                                           GALGAS_outletGenerationList & outArgument2,
                                           GALGAS_controllerMap & outArgument3,
                                           GALGAS_lstringlist & outArgument4,
                                           GALGAS_transientListForImplementation & outArgument5,
                                           GALGAS_stringset & outArgument6,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_documentMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    outArgument0 = p->mAttribute_mRootEntityName ;
    outArgument1 = p->mAttribute_mRootEntityImplementationClassName ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mControllerMap ;
    outArgument4 = p->mAttribute_mActionList ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mImplementationFileInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap::reader_mRootEntityNameForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mRootEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap::reader_mRootEntityImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mRootEntityImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_documentMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMRootEntityNameForKey (GALGAS_string inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mRootEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMRootEntityImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mRootEntityImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_documentMap * GALGAS_documentMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * result = (cMapElement_documentMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_documentMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_documentMap * GALGAS_documentMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_documentMap_searchKey COMMA_THERE) ;
  cMapElement_documentMap * result = (cMapElement_documentMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_documentMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_documentMap::cEnumerator_documentMap (const GALGAS_documentMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element cEnumerator_documentMap::current (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return GALGAS_documentMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRootEntityName, p->mAttribute_mRootEntityImplementationClassName, p->mAttribute_mOutletDeclarationList, p->mAttribute_mControllerMap, p->mAttribute_mActionList, p->mAttribute_mTransientListForImplementation, p->mAttribute_mImplementationFileInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_documentMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_documentMap::current_mRootEntityName (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_documentMap::current_mRootEntityImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mRootEntityImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_documentMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_documentMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_documentMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_documentMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_documentMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @documentMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentMap ("documentMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_documentMap result ;
  const GALGAS_documentMap * p = (const GALGAS_documentMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "documentMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap::cMapElement_outletClassBindingOptionMap (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_easyBindingTypeList & in_mAcceptableTypeList
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingOptionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingOptionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingOptionMap (mAttribute_lkey, mAttribute_mAcceptableTypeList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingOptionMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingOptionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingOptionMap * operand = (cMapElement_outletClassBindingOptionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap & GALGAS_outletClassBindingOptionMap::operator = (const GALGAS_outletClassBindingOptionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingOptionMap & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingOptionMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_easyBindingTypeList inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding option is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingOptionMap_searchKey = "the '%K' binding option is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_easyBindingTypeList & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_outletClassBindingOptionMap_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_outletClassBindingOptionMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) attributes ;
  GALGAS_easyBindingTypeList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeList inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * p = (cMapElement_outletClassBindingOptionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                        const GALGAS_string & inKey
                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingOptionMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingOptionMap::cEnumerator_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element cEnumerator_outletClassBindingOptionMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return GALGAS_outletClassBindingOptionMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingOptionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList cEnumerator_outletClassBindingOptionMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @outletClassBindingOptionMap type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap ("outletClassBindingOptionMap",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  const GALGAS_outletClassBindingOptionMap * p = (const GALGAS_outletClassBindingOptionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingOptionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap::cMapElement_outletClassBindingMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_easyBindingTypeAndFormatterList & in_mAcceptableTypeList,
                                                                      const GALGAS_outletClassBindingOptionMap & in_mOutletClassBindingOptionMap
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList),
mAttribute_mOutletClassBindingOptionMap (in_mOutletClassBindingOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingMap (mAttribute_lkey, mAttribute_mAcceptableTypeList, mAttribute_mOutletClassBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingOptionMap" ":" ;
  mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingMap * operand = (cMapElement_outletClassBindingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (operand->mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (const GALGAS_outletClassBindingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap & GALGAS_outletClassBindingMap::operator = (const GALGAS_outletClassBindingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_easyBindingTypeAndFormatterList inArgument0,
                                                       GALGAS_outletClassBindingOptionMap inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingMap_searchKey = "the '%K' binding is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_easyBindingTypeAndFormatterList & outArgument0,
                                                     GALGAS_outletClassBindingOptionMap & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_outletClassBindingMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
    outArgument1 = p->mAttribute_mOutletClassBindingOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_outletClassBindingMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_easyBindingTypeAndFormatterList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap::reader_mOutletClassBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_outletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mOutletClassBindingOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeAndFormatterList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMOutletClassBindingOptionMapForKey (GALGAS_outletClassBindingOptionMap inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mOutletClassBindingOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                            const GALGAS_string & inKey
                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                               const GALGAS_lstring & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingMap::cEnumerator_outletClassBindingMap (const GALGAS_outletClassBindingMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element cEnumerator_outletClassBindingMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return GALGAS_outletClassBindingMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList, p->mAttribute_mOutletClassBindingOptionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList cEnumerator_outletClassBindingMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap cEnumerator_outletClassBindingMap::current_mOutletClassBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletClassBindingMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap ("outletClassBindingMap",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  const GALGAS_outletClassBindingMap * p = (const GALGAS_outletClassBindingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap::cMapElement_outletClassMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_bool & in_mGenerateCode,
                                                        const GALGAS_string & in_mSuperClassName,
                                                        const GALGAS_outletClassBindingMap & in_mBindingMap,
                                                        const GALGAS_bool & in_mHasTableValueBinding
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerateCode (in_mGenerateCode),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mHasTableValueBinding (in_mHasTableValueBinding) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassMap (mAttribute_lkey, mAttribute_mGenerateCode, mAttribute_mSuperClassName, mAttribute_mBindingMap, mAttribute_mHasTableValueBinding COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateCode" ":" ;
  mAttribute_mGenerateCode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHasTableValueBinding" ":" ;
  mAttribute_mHasTableValueBinding.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassMap * operand = (cMapElement_outletClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateCode.objectCompare (operand->mAttribute_mGenerateCode) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasTableValueBinding.objectCompare (operand->mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (const GALGAS_outletClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap & GALGAS_outletClassMap::operator = (const GALGAS_outletClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_mapWithMapToOverride (const GALGAS_outletClassMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_bool inArgument0,
                                                GALGAS_string inArgument1,
                                                GALGAS_outletClassBindingMap inArgument2,
                                                GALGAS_bool inArgument3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' outlet class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassMap_searchKey = "the '%K' outlet class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_bool & outArgument0,
                                              GALGAS_string & outArgument1,
                                              GALGAS_outletClassBindingMap & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_outletClassMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    outArgument0 = p->mAttribute_mGenerateCode ;
    outArgument1 = p->mAttribute_mSuperClassName ;
    outArgument2 = p->mAttribute_mBindingMap ;
    outArgument3 = p->mAttribute_mHasTableValueBinding ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mGenerateCodeForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mGenerateCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mHasTableValueBindingForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mHasTableValueBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMGenerateCodeForKey (GALGAS_bool inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mGenerateCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMHasTableValueBindingForKey (GALGAS_bool inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mHasTableValueBinding = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassMap::cEnumerator_outletClassMap (const GALGAS_outletClassMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element cEnumerator_outletClassMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return GALGAS_outletClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mGenerateCode, p->mAttribute_mSuperClassName, p->mAttribute_mBindingMap, p->mAttribute_mHasTableValueBinding) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mGenerateCode (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletClassMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_outletClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mHasTableValueBinding (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mHasTableValueBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @outletClassMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap ("outletClassMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  const GALGAS_outletClassMap * p = (const GALGAS_outletClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap::cMapElement_controllerClassMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_bool & in_mGenerateCode,
                                                                const GALGAS_outletClassBindingMap & in_mBindingMap,
                                                                const GALGAS_actionMap & in_mActionMap,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerateCode (in_mGenerateCode),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mActionMap (in_mActionMap),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_controllerClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_controllerClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerClassMap (mAttribute_lkey, mAttribute_mGenerateCode, mAttribute_mBindingMap, mAttribute_mActionMap, mAttribute_mObservablePropertyMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_controllerClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateCode" ":" ;
  mAttribute_mGenerateCode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerClassMap * operand = (cMapElement_controllerClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateCode.objectCompare (operand->mAttribute_mGenerateCode) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (const GALGAS_controllerClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap & GALGAS_controllerClassMap::operator = (const GALGAS_controllerClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_mapWithMapToOverride (const GALGAS_controllerClassMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerClassMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_bool inArgument0,
                                                    GALGAS_outletClassBindingMap inArgument1,
                                                    GALGAS_actionMap inArgument2,
                                                    GALGAS_observablePropertyMap inArgument3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_controllerClassMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerClassMap_searchKey = "the '%K' controller class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_bool & outArgument0,
                                                  GALGAS_outletClassBindingMap & outArgument1,
                                                  GALGAS_actionMap & outArgument2,
                                                  GALGAS_observablePropertyMap & outArgument3,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_controllerClassMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    outArgument0 = p->mAttribute_mGenerateCode ;
    outArgument1 = p->mAttribute_mBindingMap ;
    outArgument2 = p->mAttribute_mActionMap ;
    outArgument3 = p->mAttribute_mObservablePropertyMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerClassMap::reader_mGenerateCodeForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mGenerateCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMGenerateCodeForKey (GALGAS_bool inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mGenerateCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                      const GALGAS_string & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                         const GALGAS_lstring & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_controllerClassMap_searchKey COMMA_THERE) ;
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_controllerClassMap::cEnumerator_controllerClassMap (const GALGAS_controllerClassMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element cEnumerator_controllerClassMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return GALGAS_controllerClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mGenerateCode, p->mAttribute_mBindingMap, p->mAttribute_mActionMap, p->mAttribute_mObservablePropertyMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_controllerClassMap::current_mGenerateCode (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_controllerClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerClassMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_controllerClassMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @controllerClassMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap ("controllerClassMap",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  const GALGAS_controllerClassMap * p = (const GALGAS_controllerClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "controllerClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerMap::cMapElement_controllerMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_string & in_mControllerClassName,
                                                      const GALGAS_string & in_mControlledClassOrEntityName,
                                                      const GALGAS_outletBindingListForGeneration & in_mControllerBindingList,
                                                      const GALGAS_actionMap & in_mActionMap
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mControllerClassName (in_mControllerClassName),
mAttribute_mControlledClassOrEntityName (in_mControlledClassOrEntityName),
mAttribute_mControllerBindingList (in_mControllerBindingList),
mAttribute_mActionMap (in_mActionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_controllerMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerClassName.isValid () && mAttribute_mControlledClassOrEntityName.isValid () && mAttribute_mControllerBindingList.isValid () && mAttribute_mActionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_controllerMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerMap (mAttribute_lkey, mAttribute_mControllerClassName, mAttribute_mControlledClassOrEntityName, mAttribute_mControllerBindingList, mAttribute_mActionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_controllerMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerClassName" ":" ;
  mAttribute_mControllerClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControlledClassOrEntityName" ":" ;
  mAttribute_mControlledClassOrEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerBindingList" ":" ;
  mAttribute_mControllerBindingList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerMap * operand = (cMapElement_controllerMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerClassName.objectCompare (operand->mAttribute_mControllerClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControlledClassOrEntityName.objectCompare (operand->mAttribute_mControlledClassOrEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerBindingList.objectCompare (operand->mAttribute_mControllerBindingList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap::GALGAS_controllerMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap::GALGAS_controllerMap (const GALGAS_controllerMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap & GALGAS_controllerMap::operator = (const GALGAS_controllerMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::constructor_mapWithMapToOverride (const GALGAS_controllerMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_string inArgument0,
                                               GALGAS_string inArgument1,
                                               GALGAS_outletBindingListForGeneration inArgument2,
                                               GALGAS_actionMap inArgument3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_controllerMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerMap_searchKey = "the '%K' controller is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_string & outArgument0,
                                             GALGAS_string & outArgument1,
                                             GALGAS_outletBindingListForGeneration & outArgument2,
                                             GALGAS_actionMap & outArgument3,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_controllerMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    outArgument0 = p->mAttribute_mControllerClassName ;
    outArgument1 = p->mAttribute_mControlledClassOrEntityName ;
    outArgument2 = p->mAttribute_mControllerBindingList ;
    outArgument3 = p->mAttribute_mActionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap::reader_mControllerClassNameForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mControllerClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap::reader_mControlledClassOrEntityNameForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mControlledClassOrEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_controllerMap::reader_mControllerBindingListForKey (const GALGAS_string & inKey,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mControllerBindingList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControllerClassNameForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControllerClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControlledClassOrEntityNameForKey (GALGAS_string inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControlledClassOrEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControllerBindingListForKey (GALGAS_outletBindingListForGeneration inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControllerBindingList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_controllerMap * GALGAS_controllerMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * result = (cMapElement_controllerMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerMap * GALGAS_controllerMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_controllerMap_searchKey COMMA_THERE) ;
  cMapElement_controllerMap * result = (cMapElement_controllerMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_controllerMap::cEnumerator_controllerMap (const GALGAS_controllerMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element cEnumerator_controllerMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return GALGAS_controllerMap_2E_element (p->mAttribute_lkey, p->mAttribute_mControllerClassName, p->mAttribute_mControlledClassOrEntityName, p->mAttribute_mControllerBindingList, p->mAttribute_mActionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_controllerMap::current_mControllerClassName (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mControllerClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_controllerMap::current_mControlledClassOrEntityName (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mControlledClassOrEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_controllerMap::current_mControllerBindingList (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mControllerBindingList ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mActionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @controllerMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerMap ("controllerMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  const GALGAS_controllerMap * p = (const GALGAS_controllerMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "controllerMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap::cMapElement_relationshipMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_bool & in_mIsToMany,
                                                          const GALGAS_lstring & in_mDestinationEntityName,
                                                          const GALGAS_lstring & in_mInverseRelationshipName,
                                                          const GALGAS_deleteRuleEnum & in_mDeleteRule
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsToMany (in_mIsToMany),
mAttribute_mDestinationEntityName (in_mDestinationEntityName),
mAttribute_mInverseRelationshipName (in_mInverseRelationshipName),
mAttribute_mDeleteRule (in_mDeleteRule) {
}

//---------------------------------------------------------------------------*

bool cMapElement_relationshipMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_relationshipMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_relationshipMap (mAttribute_lkey, mAttribute_mIsToMany, mAttribute_mDestinationEntityName, mAttribute_mInverseRelationshipName, mAttribute_mDeleteRule COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_relationshipMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsToMany" ":" ;
  mAttribute_mIsToMany.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDestinationEntityName" ":" ;
  mAttribute_mDestinationEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInverseRelationshipName" ":" ;
  mAttribute_mInverseRelationshipName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeleteRule" ":" ;
  mAttribute_mDeleteRule.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_relationshipMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_relationshipMap * operand = (cMapElement_relationshipMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsToMany.objectCompare (operand->mAttribute_mIsToMany) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDestinationEntityName.objectCompare (operand->mAttribute_mDestinationEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInverseRelationshipName.objectCompare (operand->mAttribute_mInverseRelationshipName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDeleteRule.objectCompare (operand->mAttribute_mDeleteRule) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (const GALGAS_relationshipMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap & GALGAS_relationshipMap::operator = (const GALGAS_relationshipMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_mapWithMapToOverride (const GALGAS_relationshipMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_relationshipMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_bool inArgument0,
                                                 GALGAS_lstring inArgument1,
                                                 GALGAS_lstring inArgument2,
                                                 GALGAS_deleteRuleEnum inArgument3,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_relationshipMap * p = NULL ;
  macroMyNew (p, cMapElement_relationshipMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' relationship is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_relationshipMap_searchKey = "the '%K' relationship is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_bool & outArgument0,
                                               GALGAS_lstring & outArgument1,
                                               GALGAS_lstring & outArgument2,
                                               GALGAS_deleteRuleEnum & outArgument3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_relationshipMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    outArgument0 = p->mAttribute_mIsToMany ;
    outArgument1 = p->mAttribute_mDestinationEntityName ;
    outArgument2 = p->mAttribute_mInverseRelationshipName ;
    outArgument3 = p->mAttribute_mDeleteRule ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap::reader_mIsToManyForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mIsToMany ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mDestinationEntityNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mDestinationEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mInverseRelationshipNameForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mInverseRelationshipName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap::reader_mDeleteRuleForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_deleteRuleEnum result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mDeleteRule ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMIsToManyForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mIsToMany = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDestinationEntityNameForKey (GALGAS_lstring inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDestinationEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMInverseRelationshipNameForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mInverseRelationshipName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDeleteRuleForKey (GALGAS_deleteRuleEnum inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDeleteRule = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_relationshipMap_searchKey COMMA_THERE) ;
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_relationshipMap::cEnumerator_relationshipMap (const GALGAS_relationshipMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element cEnumerator_relationshipMap::current (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return GALGAS_relationshipMap_2E_element (p->mAttribute_lkey, p->mAttribute_mIsToMany, p->mAttribute_mDestinationEntityName, p->mAttribute_mInverseRelationshipName, p->mAttribute_mDeleteRule) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_relationshipMap::current_mIsToMany (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mDestinationEntityName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mInverseRelationshipName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum cEnumerator_relationshipMap::current_mDeleteRule (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mDeleteRule ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @relationshipMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap ("relationshipMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  const GALGAS_relationshipMap * p = (const GALGAS_relationshipMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "relationshipMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_propertyMap::cMapElement_propertyMap (const GALGAS_lstring & inKey
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_propertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_propertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_propertyMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_propertyMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_propertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_propertyMap * operand = (cMapElement_propertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (const GALGAS_propertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap & GALGAS_propertyMap::operator = (const GALGAS_propertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_mapWithMapToOverride (const GALGAS_propertyMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_propertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_propertyMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' property (attribute, transient or relationship)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_propertyMap * GALGAS_propertyMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_propertyMap * result = (cMapElement_propertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_propertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_propertyMap::cEnumerator_propertyMap (const GALGAS_propertyMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element cEnumerator_propertyMap::current (LOCATION_ARGS) const {
  const cMapElement_propertyMap * p = (const cMapElement_propertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_propertyMap) ;
  return GALGAS_propertyMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_propertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @propertyMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap ("propertyMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  const GALGAS_propertyMap * p = (const GALGAS_propertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "propertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_actionMap::cMapElement_actionMap (const GALGAS_lstring & inKey
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_actionMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_actionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_actionMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_actionMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_actionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_actionMap * operand = (cMapElement_actionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap::GALGAS_actionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap::GALGAS_actionMap (const GALGAS_actionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap & GALGAS_actionMap::operator = (const GALGAS_actionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_actionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::constructor_mapWithMapToOverride (const GALGAS_actionMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_actionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_actionMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_actionMap::modifier_insertKey (GALGAS_lstring inKey,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_actionMap * p = NULL ;
  macroMyNew (p, cMapElement_actionMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' action" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_actionMap_searchKey = "the '%K' action is not defined" ;

//---------------------------------------------------------------------------*

void GALGAS_actionMap::method_searchKey (GALGAS_lstring inKey,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_actionMap * p = (const cMapElement_actionMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_actionMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_actionMap) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_actionMap * GALGAS_actionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_actionMap * result = (cMapElement_actionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_actionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_actionMap * GALGAS_actionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_actionMap_searchKey COMMA_THERE) ;
  cMapElement_actionMap * result = (cMapElement_actionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_actionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_actionMap::cEnumerator_actionMap (const GALGAS_actionMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element cEnumerator_actionMap::current (LOCATION_ARGS) const {
  const cMapElement_actionMap * p = (const cMapElement_actionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_actionMap) ;
  return GALGAS_actionMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_actionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @actionMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionMap ("actionMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_actionMap result ;
  const GALGAS_actionMap * p = (const GALGAS_actionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "actionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeEntities'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeEntities (const GALGAS_entityList constinArgument_inEntityList,
                              GALGAS_entityMap & outArgument_outEntityMap,
                              GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outEntityMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outEntityMap = GALGAS_entityMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (377)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_entityList enumerator_15020 (constinArgument_inEntityList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_15020.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_attributeListForImplementation var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (380)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_relationshipList var_allRelationshipList ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_implementationSuperClassName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_propertyMap var_allPropertyMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_relationshipMap var_allRelationshipMap ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_15020.current_mSuperEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (385)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_15427_0 ; // Joker input parameter
      GALGAS_string joker_15476_0 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_15559_4 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_15559_3 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_15559_2 ; // Joker input parameter
      GALGAS_relationshipList joker_15559_1 ; // Joker input parameter
      GALGAS_relationshipMap joker_15624_0 ; // Joker input parameter
      GALGAS_stringset joker_15663_2 ; // Joker input parameter
      GALGAS__32_stringlist joker_15663_1 ; // Joker input parameter
      outArgument_outEntityMap.method_searchKey (enumerator_15020.current_mSuperEntityName (HERE), joker_15427_0, var_implementationSuperClassName, joker_15476_0, var_observablePropertyMap, var_propertyListForInitMethodHeader, joker_15559_4, joker_15559_3, joker_15559_2, joker_15559_1, var_allRelationshipList, var_allPropertyMap, joker_15624_0, var_allRelationshipMap, joker_15663_2, joker_15663_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (386)) ;
      //-------- END @methodCallInstructionForGeneration
    }else if (kBoolFalse == test_0) {
      //-------- @assignmentInstructionForGeneration
      var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (401)) ;
      //-------- @assignmentInstructionForGeneration
      var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (402)) ;
      //-------- @assignmentInstructionForGeneration
      var_implementationSuperClassName = GALGAS_string::makeEmptyString () ;
      //-------- @assignmentInstructionForGeneration
      var_allRelationshipList = GALGAS_relationshipList::constructor_emptyList (SOURCE_FILE_AT_LINE (404)) ;
      //-------- @assignmentInstructionForGeneration
      var_allPropertyMap = GALGAS_propertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (405)) ;
      //-------- @assignmentInstructionForGeneration
      var_allRelationshipMap = GALGAS_relationshipMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (406)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_attributeListForImplementation var_attributeListForImplementation = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (408)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_attributeListForImplementation var_inheritedAttributeListForImplementation = var_propertyListForInitMethodHeader ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_attributeList enumerator_16318 (enumerator_15020.current_mAttributeList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_16318.hasCurrentObject ()) {
      { //-------- @routineCallInstructionForGeneration
      routine_checkDefaultValueType (enumerator_16318.current_mDefaultValueCorrespondingAcceptableTypes (HERE), enumerator_16318.current_mType (HERE), enumerator_16318.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (412)) ;
      } //-------- @routineCallInstructionForGeneration
      { //-------- @modifierCallInstructionForGeneration
      var_allPropertyMap.modifier_insertKey (enumerator_16318.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (413)) ;
      } //-------- END @typeMethodInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_attributeListForImplementation.addAssign_operation (enumerator_16318.current_mType (HERE), enumerator_16318.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (414)), enumerator_16318.current_mDefaultValueObjectiveCObject (HERE), enumerator_16318.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (414)) ;
      //-------- @plusEqualnstructionForGeneration
      var_propertyListForInitMethodHeader.addAssign_operation (enumerator_16318.current_mType (HERE), enumerator_16318.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (415)), enumerator_16318.current_mDefaultValueObjectiveCObject (HERE), enumerator_16318.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (415)) ;
      { //-------- @modifierCallInstructionForGeneration
      ioArgument_ioTransientDependencyGraph.modifier_addNode (GALGAS_lstring::constructor_new (GALGAS_string ("entity.").operator_concat (enumerator_15020.current_mEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (416)) COMMA_SOURCE_FILE_AT_LINE (416)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (416)).operator_concat (enumerator_16318.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (416)) COMMA_SOURCE_FILE_AT_LINE (416)), enumerator_16318.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (416)), GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (416)) ;
      } //-------- END @typeMethodInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("entity/").operator_concat (enumerator_15020.current_mEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (418)) COMMA_SOURCE_FILE_AT_LINE (418)).operator_concat (GALGAS_string ("/self.") COMMA_SOURCE_FILE_AT_LINE (418)).operator_concat (enumerator_16318.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (418)) COMMA_SOURCE_FILE_AT_LINE (418)), enumerator_16318.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (417)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_observablePropertyMap.modifier_insertKey (enumerator_16318.current_mAttributeName (HERE), enumerator_16318.current_mType (HERE), GALGAS_stringlist::constructor_listWithValue (enumerator_16318.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (424)) COMMA_SOURCE_FILE_AT_LINE (424)), var_observationDependencyKey, inCompiler COMMA_SOURCE_FILE_AT_LINE (421)) ;
      } //-------- END @typeMethodInstructionForGeneration
      { //-------- @modifierCallInstructionForGeneration
      ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (427)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_16318.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_relationshipMap var_currentRelationshipMap = GALGAS_relationshipMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (433)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_relationshipList enumerator_17496 (enumerator_15020.current_mRelationshipList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_17496.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_allRelationshipMap.modifier_insertKey (enumerator_17496.current_mRelationshipName (HERE), enumerator_17496.current_mIsToMany (HERE), enumerator_17496.current_mDestinationEntityName (HERE), enumerator_17496.current_mInverseRelationshipName (HERE), enumerator_17496.current_mDeleteRule (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (435)) ;
      } //-------- END @typeMethodInstructionForGeneration
      { //-------- @modifierCallInstructionForGeneration
      var_currentRelationshipMap.modifier_insertKey (enumerator_17496.current_mRelationshipName (HERE), enumerator_17496.current_mIsToMany (HERE), enumerator_17496.current_mDestinationEntityName (HERE), enumerator_17496.current_mInverseRelationshipName (HERE), enumerator_17496.current_mDeleteRule (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (442)) ;
      } //-------- END @typeMethodInstructionForGeneration
      { //-------- @modifierCallInstructionForGeneration
      var_allPropertyMap.modifier_insertKey (enumerator_17496.current_mRelationshipName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (449)) ;
      } //-------- END @typeMethodInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("entity/").operator_concat (enumerator_15020.current_mEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (451)) COMMA_SOURCE_FILE_AT_LINE (451)).operator_concat (GALGAS_string ("/self.") COMMA_SOURCE_FILE_AT_LINE (451)).operator_concat (enumerator_17496.current_mRelationshipName (HERE).reader_string (SOURCE_FILE_AT_LINE (451)) COMMA_SOURCE_FILE_AT_LINE (451)), enumerator_17496.current_mRelationshipName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (450)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_observablePropertyMap.modifier_insertKey (enumerator_17496.current_mRelationshipName (HERE), GALGAS_easyBindingType::constructor_toManyEntitiesType (SOURCE_FILE_AT_LINE (456)), GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (457)), var_observationDependencyKey, inCompiler COMMA_SOURCE_FILE_AT_LINE (454)) ;
      } //-------- END @typeMethodInstructionForGeneration
      { //-------- @modifierCallInstructionForGeneration
      ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (460)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_17496.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (466)) ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_transientListForImplementation var_transientListForImplementation ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeTransientProperties (GALGAS_string ("entity/").operator_concat (enumerator_15020.current_mEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (469)) COMMA_SOURCE_FILE_AT_LINE (469)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (469)), enumerator_15020.current_mTransientList (HERE), GALGAS_observableObjectMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (471)), var_observablePropertyMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (468)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS__32_stringlist var_toManyRelationshipList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (478)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_relationshipList enumerator_18959 (enumerator_15020.current_mRelationshipList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_18959.hasCurrentObject ()) {
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_1 = enumerator_18959.current_mIsToMany (HERE).boolEnum () ;
      if (kBoolTrue == test_1) {
        //-------- @plusEqualnstructionForGeneration
        var_toManyRelationshipList.addAssign_operation (enumerator_18959.current_mRelationshipName (HERE).mAttribute_string, enumerator_18959.current_mDestinationEntityName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (481)) ;
      }
      enumerator_18959.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (486)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outEntityMap.modifier_insertKey (enumerator_15020.current_mEntityName (HERE), enumerator_15020.current_mSuperEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (489)), enumerator_15020.current_mImplementationClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (490)), var_implementationSuperClassName, var_observablePropertyMap, var_propertyListForInitMethodHeader, var_inheritedAttributeListForImplementation, var_attributeListForImplementation, var_transientListForImplementation, enumerator_15020.current_mRelationshipList (HERE), var_allRelationshipList.operator_concat (enumerator_15020.current_mRelationshipList (HERE) COMMA_SOURCE_FILE_AT_LINE (498)), var_allPropertyMap, var_currentRelationshipMap, var_allRelationshipMap, var_implementationFileInclusionSet, var_toManyRelationshipList, inCompiler COMMA_SOURCE_FILE_AT_LINE (487)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_15020.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_entityMap enumerator_19828 (outArgument_outEntityMap, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_19828.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_relationshipMap enumerator_19867 (enumerator_19828.current_mCurrentRelationshipMap (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_19867.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_relationshipMap var_destinationEntityRelationshipMap ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_19983_12 ; // Joker input parameter
      GALGAS_string joker_19983_11 ; // Joker input parameter
      GALGAS_string joker_19983_10 ; // Joker input parameter
      GALGAS_observablePropertyMap joker_19983_9 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_19983_8 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_19983_7 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_19983_6 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_19983_5 ; // Joker input parameter
      GALGAS_relationshipList joker_19983_4 ; // Joker input parameter
      GALGAS_relationshipList joker_19983_3 ; // Joker input parameter
      GALGAS_propertyMap joker_19983_2 ; // Joker input parameter
      GALGAS_relationshipMap joker_19983_1 ; // Joker input parameter
      GALGAS_stringset joker_20021_2 ; // Joker input parameter
      GALGAS__32_stringlist joker_20021_1 ; // Joker input parameter
      outArgument_outEntityMap.method_searchKey (enumerator_19867.current_mDestinationEntityName (HERE), joker_19983_12, joker_19983_11, joker_19983_10, joker_19983_9, joker_19983_8, joker_19983_7, joker_19983_6, joker_19983_5, joker_19983_4, joker_19983_3, joker_19983_2, joker_19983_1, var_destinationEntityRelationshipMap, joker_20021_2, joker_20021_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (510)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_inverseOfInverseRelationshipName ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_20154_2 ; // Joker input parameter
      GALGAS_lstring joker_20154_1 ; // Joker input parameter
      GALGAS_deleteRuleEnum joker_20192_0 ; // Joker input parameter
      var_destinationEntityRelationshipMap.method_searchKey (enumerator_19867.current_mInverseRelationshipName (HERE), joker_20154_2, joker_20154_1, var_inverseOfInverseRelationshipName, joker_20192_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (512)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, enumerator_19867.current_lkey (HERE).mAttribute_string.objectCompare (var_inverseOfInverseRelationshipName.mAttribute_string)).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_3 (enumerator_19867.current_mInverseRelationshipName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("the inverse relationship does not name '").operator_concat (enumerator_19867.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (514)) COMMA_SOURCE_FILE_AT_LINE (514)).operator_concat (GALGAS_string ("' relationship as inverse") COMMA_SOURCE_FILE_AT_LINE (514)) COMMA_SOURCE_FILE_AT_LINE (514)) ;
      }
      enumerator_19867.gotoNextObject () ;
    }
    enumerator_19828.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzePreferences'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzePreferences (const GALGAS_entityMap constinArgument_inEntityMap,
                                 const GALGAS_preferencesDeclarationList constinArgument_inPreferencesList,
                                 const GALGAS_outletClassMap constinArgument_inOutletClassMap,
                                 GALGAS_preferencesMap & outArgument_outPreferencesMap,
                                 GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outPreferencesMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outPreferencesMap = GALGAS_preferencesMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (802)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_preferencesDeclarationList enumerator_31558 (constinArgument_inPreferencesList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_31558.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_observablePropertyMap var_observableAttributeMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (804)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (806)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_31730 (enumerator_31558.current_mActionDeclarationList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_31730.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_actionMap.modifier_insertKey (enumerator_31730.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (808)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_31730.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_attributeListForImplementation var_attributeListForImplementation = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (811)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_attributeList enumerator_31933 (enumerator_31558.current_mAttributeList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_31933.hasCurrentObject ()) {
      { //-------- @routineCallInstructionForGeneration
      routine_checkDefaultValueType (enumerator_31933.current_mDefaultValueCorrespondingAcceptableTypes (HERE), enumerator_31933.current_mType (HERE), enumerator_31933.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (813)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_attributeListForImplementation.addAssign_operation (enumerator_31933.current_mType (HERE), enumerator_31933.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (814)), enumerator_31933.current_mDefaultValueObjectiveCObject (HERE), enumerator_31933.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (814)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstring var_observationDependancyKey = GALGAS_lstring::constructor_new (GALGAS_string ("preferences/").operator_concat (enumerator_31558.current_mPreferencesName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (816)).operator_concat (GALGAS_string ("/self.") COMMA_SOURCE_FILE_AT_LINE (816)).operator_concat (enumerator_31933.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (816)) COMMA_SOURCE_FILE_AT_LINE (816)), enumerator_31933.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (815)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_observableAttributeMap.modifier_insertKey (enumerator_31933.current_mAttributeName (HERE), enumerator_31933.current_mType (HERE), GALGAS_stringlist::constructor_listWithValue (enumerator_31933.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (822)) COMMA_SOURCE_FILE_AT_LINE (822)), var_observationDependancyKey, inCompiler COMMA_SOURCE_FILE_AT_LINE (819)) ;
      } //-------- END @typeMethodInstructionForGeneration
      { //-------- @modifierCallInstructionForGeneration
      ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependancyKey, var_observationDependancyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (825)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_31933.gotoNextObject () ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_transientListForImplementation var_transientListForImplementation ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (832)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeTransientProperties (GALGAS_string ("preferences/").operator_concat (enumerator_31558.current_mPreferencesName (HERE).reader_string (SOURCE_FILE_AT_LINE (834)) COMMA_SOURCE_FILE_AT_LINE (834)).operator_concat (GALGAS_string ("/self.") COMMA_SOURCE_FILE_AT_LINE (834)), enumerator_31558.current_mTransientList (HERE), GALGAS_observableObjectMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (836)), var_observableAttributeMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (833)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_observableObjectMap var_observableObjectMap = GALGAS_observableObjectMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (843)) ;
    { //-------- @modifierCallInstructionForGeneration
    var_observableObjectMap.modifier_insertKey (GALGAS_string ("self").reader_nowhere (SOURCE_FILE_AT_LINE (845)), GALGAS_string ("self"), GALGAS_string::makeEmptyString (), var_observableAttributeMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (844)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletGenerationList var_outletGenerationList = GALGAS_outletGenerationList::constructor_emptyList (SOURCE_FILE_AT_LINE (851)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletDeclarationList enumerator_33479 (enumerator_31558.current_mOutletDeclarationList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_33479.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_outletClassBindingMap var_bindingMap ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_bool var_hasTableValueBinding ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_33606_2 ; // Joker input parameter
      GALGAS_string joker_33606_1 ; // Joker input parameter
      constinArgument_inOutletClassMap.method_searchKey (enumerator_33479.current_mOutletType (HERE), joker_33606_2, joker_33606_1, var_bindingMap, var_hasTableValueBinding, inCompiler COMMA_SOURCE_FILE_AT_LINE (855)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletBindingListForGeneration var_outletBindingList = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (856)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingList enumerator_33750 (enumerator_33479.current_mOutletBindingList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_33750.hasCurrentObject ()) {
        //-------- @methodCallInstructionForGeneration
        callCategoryMethod_analyzeOutletBinding ((const cPtr_abstractBinding *) enumerator_33750.current_mBinding (HERE).ptr (), constinArgument_inEntityMap, var_observableObjectMap, var_bindingMap, GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (862)), var_actionMap, var_hasTableValueBinding, var_outletBindingList, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (858)) ;
        //-------- END @methodCallInstructionForGeneration
        enumerator_33750.gotoNextObject () ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_outletGenerationList.addAssign_operation (enumerator_33479.current_mOutletType (HERE).reader_string (SOURCE_FILE_AT_LINE (869)), enumerator_33479.current_mOutletName (HERE).reader_string (SOURCE_FILE_AT_LINE (869)), var_outletBindingList COMMA_SOURCE_FILE_AT_LINE (869)) ;
      enumerator_33479.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (872)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outPreferencesMap.modifier_insertKey (enumerator_31558.current_mPreferencesName (HERE), var_attributeListForImplementation, var_transientListForImplementation, var_outletGenerationList, enumerator_31558.current_mActionDeclarationList (HERE), var_observableAttributeMap, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (873)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_31558.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'checkBindingOptions'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBindingOptions (const GALGAS_outletBindingOptionList constinArgument_inBindingOptionListAST,
                                  const GALGAS_outletClassBindingOptionMap constinArgument_inAvailableBindingOptionMap,
                                  GALGAS__32_stringlist & outArgument_outBindingOptionListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outBindingOptionListForGeneration.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outBindingOptionListForGeneration = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (914)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_35855 (constinArgument_inBindingOptionListAST, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_35855.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    constinArgument_inAvailableBindingOptionMap.method_searchKey (enumerator_35855.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (917)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_36044 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (919)).isValidAndTrue () ;
    if (enumerator_36044.hasCurrentObject () && bool_0) {
      while (enumerator_36044.hasCurrentObject () && bool_0) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_36108 (enumerator_35855.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (920)).isValidAndTrue () ;
        if (enumerator_36108.hasCurrentObject () && bool_1) {
          while (enumerator_36108.hasCurrentObject () && bool_1) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_36044.current_mType (HERE).objectCompare (enumerator_36108.current_mType (HERE))) ;
            enumerator_36108.gotoNextObject () ;
            if (enumerator_36108.hasCurrentObject ()) {
              bool_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (920)).isValidAndTrue () ;
            }
          }
        }
        enumerator_36044.gotoNextObject () ;
        if (enumerator_36044.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (919)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (924)).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_36347 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (926)).isValidAndTrue () ;
      if (enumerator_36347.hasCurrentObject () && bool_3) {
        while (enumerator_36347.hasCurrentObject () && bool_3) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_36347.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (927)) COMMA_SOURCE_FILE_AT_LINE (927)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (927)) COMMA_SOURCE_FILE_AT_LINE (927)) ;
          enumerator_36347.gotoNextObject () ;
          if (enumerator_36347.hasCurrentObject ()) {
            bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (926)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_4 (enumerator_35855.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, var_s COMMA_SOURCE_FILE_AT_LINE (929)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    outArgument_outBindingOptionListForGeneration.addAssign_operation (enumerator_35855.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (931)), enumerator_35855.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (931)) ;
    enumerator_35855.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'analyzeDocuments'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeDocuments (const GALGAS_documentDeclarationList constinArgument_inDocumentDeclarationList,
                               const GALGAS_outletClassMap constinArgument_inOutletClassMap,
                               const GALGAS_controllerClassMap constinArgument_inControllerClassMap,
                               const GALGAS_entityMap constinArgument_inEntityMap,
                               const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                               GALGAS_documentMap & outArgument_outDocumentMap,
                               GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDocumentMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outDocumentMap = GALGAS_documentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1060)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_documentDeclarationList enumerator_41868 (constinArgument_inDocumentDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_41868.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_rootEntityImplementationClassName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_rootObjectObservablePropertyMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_relationshipMap var_allRelationshipMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_42078_0 ; // Joker input parameter
    GALGAS_string joker_42128_0 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_42176_8 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_42176_7 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_42176_6 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_42176_5 ; // Joker input parameter
    GALGAS_relationshipList joker_42176_4 ; // Joker input parameter
    GALGAS_relationshipList joker_42176_3 ; // Joker input parameter
    GALGAS_propertyMap joker_42176_2 ; // Joker input parameter
    GALGAS_relationshipMap joker_42176_1 ; // Joker input parameter
    GALGAS_stringset joker_42212_2 ; // Joker input parameter
    GALGAS__32_stringlist joker_42212_1 ; // Joker input parameter
    constinArgument_inEntityMap.method_searchKey (enumerator_41868.current_mRootEntityName (HERE), joker_42078_0, var_rootEntityImplementationClassName, joker_42128_0, var_rootObjectObservablePropertyMap, joker_42176_8, joker_42176_7, joker_42176_6, joker_42176_5, joker_42176_4, joker_42176_3, joker_42176_2, joker_42176_1, var_allRelationshipMap, joker_42212_2, joker_42212_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1065)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_observableObjectMap var_observableObjectMap = GALGAS_observableObjectMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1076)) ;
    { //-------- @modifierCallInstructionForGeneration
    var_observableObjectMap.modifier_insertKey (GALGAS_string ("root").reader_nowhere (SOURCE_FILE_AT_LINE (1078)), GALGAS_string ("mRootObject"), GALGAS_string::makeEmptyString (), var_rootObjectObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1077)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @foreachInstructionForGeneration
    cEnumerator_preferencesMap enumerator_42510 (constinArgument_inPreferencesMap, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_42510.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_observableObjectMap.modifier_insertKey (enumerator_42510.current (HERE).mAttribute_lkey, GALGAS_string ("g_").operator_concat (enumerator_42510.current (HERE).mAttribute_lkey.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1086)), enumerator_42510.current (HERE).mAttribute_lkey.mAttribute_string, enumerator_42510.current (HERE).mAttribute_mObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1084)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_42510.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1092)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_controllerMap var_controllerMap = GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1093)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_controllerList enumerator_42860 (enumerator_41868.current_mControllerList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_42860.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_outletClassBindingMap var_controllerClassBindingMap ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_actionMap var_controllerActionMap ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_observablePropertyMap var_controllerObservablePropertyMap ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_43098_0 ; // Joker input parameter
      constinArgument_inControllerClassMap.method_searchKey (enumerator_42860.current_mControllerClassName (HERE), joker_43098_0, var_controllerClassBindingMap, var_controllerActionMap, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1098)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_observablePropertyMap var_prefixedControllerObservablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1105)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_observablePropertyMap enumerator_43344 (var_controllerObservablePropertyMap, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_43344.hasCurrentObject ()) {
        //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
        GALGAS_lstring var_observedKey = GALGAS_lstring::constructor_new (GALGAS_string ("document/").operator_concat (enumerator_41868.current_mDocumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1108)) COMMA_SOURCE_FILE_AT_LINE (1108)).operator_concat (GALGAS_string ("/") COMMA_SOURCE_FILE_AT_LINE (1108)).operator_concat (enumerator_42860.current_mControllerName (HERE).reader_string (SOURCE_FILE_AT_LINE (1108)) COMMA_SOURCE_FILE_AT_LINE (1108)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1108)).operator_concat (enumerator_43344.current_mObservationDependancyKey (HERE).reader_string (SOURCE_FILE_AT_LINE (1108)) COMMA_SOURCE_FILE_AT_LINE (1108)), enumerator_43344.current_mObservationDependancyKey (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (1107)) ;
        { //-------- @modifierCallInstructionForGeneration
        var_prefixedControllerObservablePropertyMap.modifier_insertKey (enumerator_43344.current_lkey (HERE), enumerator_43344.current_mType (HERE), enumerator_43344.current_mPropertyDependancyList (HERE), var_observedKey, inCompiler COMMA_SOURCE_FILE_AT_LINE (1111)) ;
        } //-------- END @typeMethodInstructionForGeneration
        { //-------- @modifierCallInstructionForGeneration
        ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observedKey, var_observedKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1117)) ;
        } //-------- END @typeMethodInstructionForGeneration
        enumerator_43344.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_observableObjectMap.modifier_insertKey (enumerator_42860.current_mControllerName (HERE), enumerator_42860.current_mControllerName (HERE).mAttribute_string, GALGAS_string::makeEmptyString (), var_prefixedControllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1122)) ;
      } //-------- END @typeMethodInstructionForGeneration
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_44088_15 ; // Joker input parameter
      GALGAS_string joker_44088_14 ; // Joker input parameter
      GALGAS_string joker_44088_13 ; // Joker input parameter
      GALGAS_observablePropertyMap joker_44088_12 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_44088_11 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_44088_10 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_44088_9 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_44088_8 ; // Joker input parameter
      GALGAS_relationshipList joker_44088_7 ; // Joker input parameter
      GALGAS_relationshipList joker_44088_6 ; // Joker input parameter
      GALGAS_propertyMap joker_44088_5 ; // Joker input parameter
      GALGAS_relationshipMap joker_44088_4 ; // Joker input parameter
      GALGAS_relationshipMap joker_44088_3 ; // Joker input parameter
      GALGAS_stringset joker_44088_2 ; // Joker input parameter
      GALGAS__32_stringlist joker_44088_1 ; // Joker input parameter
      constinArgument_inEntityMap.method_searchKey (enumerator_42860.current_mControlledClassOrEntityName (HERE), joker_44088_15, joker_44088_14, joker_44088_13, joker_44088_12, joker_44088_11, joker_44088_10, joker_44088_9, joker_44088_8, joker_44088_7, joker_44088_6, joker_44088_5, joker_44088_4, joker_44088_3, joker_44088_2, joker_44088_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1128)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletBindingListForGeneration var_bindingListForGeneration = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1129)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingList enumerator_44209 (enumerator_42860.current_mControllerBindingList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_44209.hasCurrentObject ()) {
        //-------- @methodCallInstructionForGeneration
        callCategoryMethod_analyzeControllerBinding ((const cPtr_abstractBinding *) enumerator_44209.current_mBinding (HERE).ptr (), var_allRelationshipMap, var_controllerClassBindingMap, enumerator_42860.current_mControlledClassOrEntityName (HERE), var_observablePropertyMap, var_bindingListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1131)) ;
        //-------- END @methodCallInstructionForGeneration
        enumerator_44209.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_controllerMap.modifier_insertKey (enumerator_42860.current_mControllerName (HERE), enumerator_42860.current_mControllerClassName (HERE).mAttribute_string, enumerator_42860.current_mControlledClassOrEntityName (HERE).mAttribute_string, var_bindingListForGeneration, var_controllerActionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1139)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_42860.gotoNextObject () ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_transientListForImplementation var_transientListForImplementation ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1149)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeTransientProperties (GALGAS_string ("document/").operator_concat (enumerator_41868.current_mDocumentName (HERE).reader_string (SOURCE_FILE_AT_LINE (1151)) COMMA_SOURCE_FILE_AT_LINE (1151)).operator_concat (GALGAS_string ("/self.") COMMA_SOURCE_FILE_AT_LINE (1151)), enumerator_41868.current_mTransientList (HERE), var_observableObjectMap, var_observablePropertyMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1150)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_actionMap var_documentActionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1160)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_45249 (enumerator_41868.current_mActionDeclarationList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_45249.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_documentActionMap.modifier_insertKey (enumerator_45249.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1162)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_45249.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_observableObjectMap.modifier_insertKey (GALGAS_string ("self").reader_nowhere (SOURCE_FILE_AT_LINE (1166)), GALGAS_string ("self"), GALGAS_string::makeEmptyString (), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1165)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletGenerationList var_outletGenerationList = GALGAS_outletGenerationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1171)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletDeclarationList enumerator_45588 (enumerator_41868.current_mOutletDeclarationList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_45588.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_outletClassBindingMap var_bindingMap ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_bool var_hasTableValueBinding ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_45715_2 ; // Joker input parameter
      GALGAS_string joker_45715_1 ; // Joker input parameter
      constinArgument_inOutletClassMap.method_searchKey (enumerator_45588.current_mOutletType (HERE), joker_45715_2, joker_45715_1, var_bindingMap, var_hasTableValueBinding, inCompiler COMMA_SOURCE_FILE_AT_LINE (1175)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletBindingListForGeneration var_outletBindingList = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1176)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingList enumerator_45859 (enumerator_45588.current_mOutletBindingList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_45859.hasCurrentObject ()) {
        //-------- @methodCallInstructionForGeneration
        callCategoryMethod_analyzeOutletBinding ((const cPtr_abstractBinding *) enumerator_45859.current_mBinding (HERE).ptr (), constinArgument_inEntityMap, var_observableObjectMap, var_bindingMap, var_controllerMap, var_documentActionMap, var_hasTableValueBinding, var_outletBindingList, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1178)) ;
        //-------- END @methodCallInstructionForGeneration
        enumerator_45859.gotoNextObject () ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_outletGenerationList.addAssign_operation (enumerator_45588.current_mOutletType (HERE).reader_string (SOURCE_FILE_AT_LINE (1189)), enumerator_45588.current_mOutletName (HERE).reader_string (SOURCE_FILE_AT_LINE (1189)), var_outletBindingList COMMA_SOURCE_FILE_AT_LINE (1189)) ;
      enumerator_45588.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1192)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outDocumentMap.modifier_insertKey (enumerator_41868.current_mDocumentName (HERE), enumerator_41868.current_mRootEntityName (HERE).reader_string (SOURCE_FILE_AT_LINE (1195)), var_rootEntityImplementationClassName, var_outletGenerationList, var_controllerMap, enumerator_41868.current_mActionDeclarationList (HERE), var_transientListForImplementation, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1193)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_41868.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkDefaultValueType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDefaultValueType (const GALGAS_easyBindingTypeList constinArgument_inDefaultValueCorrespondingAcceptableTypes,
                                    const GALGAS_easyBindingType constinArgument_inAttributeActualType,
                                    const GALGAS_lstring constinArgument_inAttributeName,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeList enumerator_47002 (constinArgument_inDefaultValueCorrespondingAcceptableTypes, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1214)).isValidAndTrue () ;
  if (enumerator_47002.hasCurrentObject () && bool_0) {
    while (enumerator_47002.hasCurrentObject () && bool_0) {
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, constinArgument_inAttributeActualType.objectCompare (enumerator_47002.current_mType (HERE))) ;
      enumerator_47002.gotoNextObject () ;
      if (enumerator_47002.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1214)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (1217)).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_2 (constinArgument_inAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the default value is invalue for this attribute") COMMA_SOURCE_FILE_AT_LINE (1218)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeClasses'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeClasses (const GALGAS_classList constinArgument_inClassList,
                             GALGAS_classMap & outArgument_outClassMap,
                             GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outClassMap = GALGAS_classMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1229)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_classList enumerator_47487 (constinArgument_inClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_47487.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_attributeListForImplementation var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1232)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_47487.current_mSuperClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (1233)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_47712_0 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_47771_4 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_47771_3 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_47771_2 ; // Joker input parameter
      GALGAS_stringset joker_47771_1 ; // Joker input parameter
      outArgument_outClassMap.method_searchKey (enumerator_47487.current_mSuperClassName (HERE), joker_47712_0, var_observablePropertyMap, var_propertyListForInitMethodHeader, joker_47771_4, joker_47771_3, joker_47771_2, joker_47771_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1234)) ;
      //-------- END @methodCallInstructionForGeneration
    }else if (kBoolFalse == test_0) {
      //-------- @assignmentInstructionForGeneration
      var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1236)) ;
      //-------- @assignmentInstructionForGeneration
      var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1237)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_attributeListForImplementation var_attributeListForImplementation = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1239)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_attributeListForImplementation var_inheritedAttributeListForImplementation = var_propertyListForInitMethodHeader ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_attributeList enumerator_48181 (enumerator_47487.current_mAttributeList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_48181.hasCurrentObject ()) {
      { //-------- @routineCallInstructionForGeneration
      routine_checkDefaultValueType (enumerator_48181.current_mDefaultValueCorrespondingAcceptableTypes (HERE), enumerator_48181.current_mType (HERE), enumerator_48181.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1242)) ;
      } //-------- @routineCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      var_attributeListForImplementation.addAssign_operation (enumerator_48181.current_mType (HERE), enumerator_48181.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1243)), enumerator_48181.current_mDefaultValueObjectiveCObject (HERE), enumerator_48181.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1243)) ;
      //-------- @plusEqualnstructionForGeneration
      var_propertyListForInitMethodHeader.addAssign_operation (enumerator_48181.current_mType (HERE), enumerator_48181.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1244)), enumerator_48181.current_mDefaultValueObjectiveCObject (HERE), enumerator_48181.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1244)) ;
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("class.").operator_concat (enumerator_47487.current_mClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (1246)) COMMA_SOURCE_FILE_AT_LINE (1246)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1246)).operator_concat (enumerator_48181.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1246)) COMMA_SOURCE_FILE_AT_LINE (1246)), enumerator_48181.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (1245)) ;
      { //-------- @modifierCallInstructionForGeneration
      var_observablePropertyMap.modifier_insertKey (enumerator_48181.current_mAttributeName (HERE), enumerator_48181.current_mType (HERE), GALGAS_stringlist::constructor_listWithValue (enumerator_48181.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1252)) COMMA_SOURCE_FILE_AT_LINE (1252)), var_observationDependencyKey, inCompiler COMMA_SOURCE_FILE_AT_LINE (1249)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_48181.gotoNextObject () ;
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_transientListForImplementation var_transientListForImplementation ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1258)) ;
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeTransientProperties (GALGAS_string ("class/").operator_concat (enumerator_47487.current_mClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (1260)) COMMA_SOURCE_FILE_AT_LINE (1260)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1260)), enumerator_47487.current_mTransientList (HERE), GALGAS_observableObjectMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1262)), var_observablePropertyMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1259)) ;
    } //-------- @routineCallInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1269)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outClassMap.modifier_insertKey (enumerator_47487.current_mClassName (HERE), enumerator_47487.current_mSuperClassName (HERE).reader_string (SOURCE_FILE_AT_LINE (1272)), var_observablePropertyMap, var_propertyListForInitMethodHeader, var_inheritedAttributeListForImplementation, var_attributeListForImplementation, var_transientListForImplementation, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1270)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_47487.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeOutletClasses'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeOutletClasses (const GALGAS_outletClassList constinArgument_inOutletClassList,
                                   GALGAS_outletClassMap & outArgument_outOutletClassMap,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outOutletClassMap = GALGAS_outletClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1289)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletClassList enumerator_50010 (constinArgument_inOutletClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_50010.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1292)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletClassBindingList enumerator_50107 (enumerator_50010.current_mOutletClassBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_50107.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1294)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingOptionList enumerator_50219 (enumerator_50107.current_mBindingOptionList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_50219.hasCurrentObject ()) {
        { //-------- @modifierCallInstructionForGeneration
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_50219.current_mBindingOptionName (HERE), enumerator_50219.current_mAcceptableTypeList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1296)) ;
        } //-------- END @typeMethodInstructionForGeneration
        enumerator_50219.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_bindingMap.modifier_insertKey (enumerator_50107.current_mBindingName (HERE), enumerator_50107.current_mAcceptableTypeFormatterList (HERE), var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1302)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_50107.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outOutletClassMap.modifier_insertKey (enumerator_50010.current_mOutletClassName (HERE), enumerator_50010.current_mGenerateCode (HERE), enumerator_50010.current_mSuperClassName (HERE).mAttribute_string, var_bindingMap, enumerator_50010.current_mHasTableValueBinding (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1305)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_50010.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeControllerClasses'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClasses (const GALGAS_controllerClassList constinArgument_inControllerClassList,
                                       GALGAS_controllerClassMap & outArgument_outControllerClassMap,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outControllerClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outControllerClassMap = GALGAS_controllerClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1321)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerClassList enumerator_51051 (constinArgument_inControllerClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_51051.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1324)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_51160 (enumerator_51051.current_mActionDeclarationList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_51160.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_actionMap.modifier_insertKey (enumerator_51160.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1326)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_51160.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1329)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletClassBindingList enumerator_51312 (enumerator_51051.current_mBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_51312.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1331)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingOptionList enumerator_51424 (enumerator_51312.current_mBindingOptionList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_51424.hasCurrentObject ()) {
        { //-------- @modifierCallInstructionForGeneration
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_51424.current_mBindingOptionName (HERE), enumerator_51424.current_mAcceptableTypeList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1333)) ;
        } //-------- END @typeMethodInstructionForGeneration
        enumerator_51424.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_bindingMap.modifier_insertKey (enumerator_51312.current_mBindingName (HERE), enumerator_51312.current_mAcceptableTypeFormatterList (HERE), var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1339)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_51312.gotoNextObject () ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1342)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_controllerObservablePropertyList enumerator_51870 (enumerator_51051.current_mControllerObservablePropertyList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_51870.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_observablePropertyMap.modifier_insertKey (enumerator_51870.current (HERE).mAttribute_mPropertyName, enumerator_51870.current (HERE).mAttribute_mType, GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1351)), enumerator_51870.current (HERE).mAttribute_mPropertyName, inCompiler COMMA_SOURCE_FILE_AT_LINE (1348)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_51870.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outControllerClassMap.modifier_insertKey (enumerator_51051.current_mOutletClassName (HERE), enumerator_51051.current_mGenerateCode (HERE), var_bindingMap, var_actionMap, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1356)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_51051.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'semanticAnalysis'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysis (const GALGAS_ASTstruct constinArgument_inAST,
                               GALGAS_string inArgument_inSourceFilePath,
                               GALGAS_outletClassMap & outArgument_outOutletClassMap,
                               GALGAS_controllerClassMap & outArgument_outControllerClassMap,
                               GALGAS_classMap & outArgument_outClassMap,
                               GALGAS_entityMap & outArgument_outEntityMap,
                               GALGAS_preferencesMap & outArgument_outPreferencesMap,
                               GALGAS_documentMap & outArgument_outDocumentMap,
                               GALGAS_stringlist & outArgument_outSortedTransientOrderedList,
                               GALGAS__32_stringlist & outArgument_outTransientDependencyArcList,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  outArgument_outControllerClassMap.drop () ; // Release 'out' argument
  outArgument_outClassMap.drop () ; // Release 'out' argument
  outArgument_outEntityMap.drop () ; // Release 'out' argument
  outArgument_outPreferencesMap.drop () ; // Release 'out' argument
  outArgument_outDocumentMap.drop () ; // Release 'out' argument
  outArgument_outSortedTransientOrderedList.drop () ; // Release 'out' argument
  outArgument_outTransientDependencyArcList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outSortedTransientOrderedList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1380)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_transientDependencyGraph var_transientDependencyGraph = GALGAS_transientDependencyGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (1381)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeOutletClasses (constinArgument_inAST.mAttribute_mOutletClassList, outArgument_outOutletClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1382)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeControllerClasses (constinArgument_inAST.mAttribute_mControllerClassList, outArgument_outControllerClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1383)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeClasses (constinArgument_inAST.mAttribute_mClassList, outArgument_outClassMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1384)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeEntities (constinArgument_inAST.mAttribute_mEntityList, outArgument_outEntityMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1389)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzePreferences (outArgument_outEntityMap, constinArgument_inAST.mAttribute_mPreferencesList, outArgument_outOutletClassMap, outArgument_outPreferencesMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1394)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeDocuments (constinArgument_inAST.mAttribute_mDocumentDeclarationList, outArgument_outOutletClassMap, outArgument_outControllerClassMap, outArgument_outEntityMap, outArgument_outPreferencesMap, outArgument_outDocumentMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1401)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (1411)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_easyBindings_5F_options_outputTransientDependencyGraph.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (1411)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = var_transientDependencyGraph.reader_graphviz (SOURCE_FILE_AT_LINE (1412)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_path = inArgument_inSourceFilePath.operator_concat (GALGAS_string (".transientDependancyGraph.dot") COMMA_SOURCE_FILE_AT_LINE (1413)) ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_bool joker_54024_0 ; // Joker input parameter
    var_s.method_writeToFileWhenDifferentContents (var_path, joker_54024_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1414)) ;
    //-------- END @methodCallInstructionForGeneration
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outTransientDependencyArcList = var_transientDependencyGraph.reader_arcs (SOURCE_FILE_AT_LINE (1417)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (1418)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_transientDependencyGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (1419)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_54304 (var_transientDependencyGraph.reader_undefinedNodeKeyList (SOURCE_FILE_AT_LINE (1420)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_54304.hasCurrentObject ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inAST.mAttribute_mEndOfSourceFile, GALGAS_string ("the '").operator_concat (enumerator_54304.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1421)).operator_concat (GALGAS_string ("' property is not defined") COMMA_SOURCE_FILE_AT_LINE (1421)) COMMA_SOURCE_FILE_AT_LINE (1421)) ;
        enumerator_54304.gotoNextObject () ;
      }
    }else if (kBoolFalse == test_2) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_stringlist var_unsortedTransientList ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_lstringlist joker_54562_0 ; // Joker input parameter
      GALGAS_lstringlist joker_54604_0 ; // Joker input parameter
      var_transientDependencyGraph.method_topologicalSort (outArgument_outSortedTransientOrderedList, joker_54562_0, var_unsortedTransientList, joker_54604_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1425)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_unsortedTransientList.reader_length (SOURCE_FILE_AT_LINE (1431)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = var_unsortedTransientList.reader_length (SOURCE_FILE_AT_LINE (1432)).reader_string (SOURCE_FILE_AT_LINE (1432)).operator_concat (GALGAS_string (" transient declarations are involved in circular dependancies:") COMMA_SOURCE_FILE_AT_LINE (1432)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_stringlist enumerator_54834 (var_unsortedTransientList, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_54834.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "-  ").operator_concat (enumerator_54834.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1434)) COMMA_SOURCE_FILE_AT_LINE (1434)) ;
          enumerator_54834.gotoNextObject () ;
        }
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inAST.mAttribute_mEndOfSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (1436)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractBindingForGeneration::objectCompare (const GALGAS_abstractBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration::GALGAS_abstractBindingForGeneration (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration::GALGAS_abstractBindingForGeneration (const cPtr_abstractBindingForGeneration * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_abstractBindingForGeneration) ;
}

//---------------------------------------------------------------------------*
//           Pointer class for @abstractBindingForGeneration class           *
//---------------------------------------------------------------------------*

cPtr_abstractBindingForGeneration::cPtr_abstractBindingForGeneration (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @abstractBindingForGeneration type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractBindingForGeneration ("abstractBindingForGeneration",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_abstractBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler,
                                                                                        const GALGAS_location & inErrorLocation
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_abstractBindingForGeneration result ;
  const GALGAS_abstractBindingForGeneration * p = (const GALGAS_abstractBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "abstractBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_regularBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBindingName.objectCompare (p->mAttribute_mBindingName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredFormatter.objectCompare (p->mAttribute_mRequiredFormatter) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservedObjectName.objectCompare (p->mAttribute_mObservedObjectName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeName.objectCompare (p->mAttribute_mObservableAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (p->mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_regularBindingForGeneration::objectCompare (const GALGAS_regularBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (const cPtr_regularBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_regularBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mBindingName,
                                                                                        const GALGAS_formatterEnum & inAttribute_mRequiredFormatter,
                                                                                        const GALGAS_string & inAttribute_mObservedObjectName,
                                                                                        const GALGAS_string & inAttribute_mObservableAttributeName,
                                                                                        const GALGAS__32_stringlist & inAttribute_mOutletBindingOptionList
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  if (inAttribute_mBindingName.isValid () && inAttribute_mRequiredFormatter.isValid () && inAttribute_mObservedObjectName.isValid () && inAttribute_mObservableAttributeName.isValid () && inAttribute_mOutletBindingOptionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_regularBindingForGeneration (inAttribute_mBindingName, inAttribute_mRequiredFormatter, inAttribute_mObservedObjectName, inAttribute_mObservableAttributeName, inAttribute_mOutletBindingOptionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_regularBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_regularBindingForGeneration * p = (cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    cPtr_regularBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_regularBindingForGeneration (p->mAttribute_mBindingName, p->mAttribute_mRequiredFormatter, p->mAttribute_mObservedObjectName, p->mAttribute_mObservableAttributeName, p->mAttribute_mOutletBindingOptionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mBindingName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingName ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  GALGAS_formatterEnum result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mRequiredFormatter ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum cPtr_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredFormatter ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservedObjectName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedObjectName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  GALGAS__32_stringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cPtr_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}

//---------------------------------------------------------------------------*
//           Pointer class for @regularBindingForGeneration class            *
//---------------------------------------------------------------------------*

cPtr_regularBindingForGeneration::cPtr_regularBindingForGeneration (const GALGAS_string & in_mBindingName,
                                                                    const GALGAS_formatterEnum & in_mRequiredFormatter,
                                                                    const GALGAS_string & in_mObservedObjectName,
                                                                    const GALGAS_string & in_mObservableAttributeName,
                                                                    const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mBindingName (in_mBindingName),
mAttribute_mRequiredFormatter (in_mRequiredFormatter),
mAttribute_mObservedObjectName (in_mObservedObjectName),
mAttribute_mObservableAttributeName (in_mObservableAttributeName),
mAttribute_mOutletBindingOptionList (in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_regularBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

void cPtr_regularBindingForGeneration::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "[@regularBindingForGeneration:" ;
  mAttribute_mBindingName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRequiredFormatter.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservedObjectName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @regularBindingForGeneration type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_regularBindingForGeneration ("regularBindingForGeneration",
                                                    & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_regularBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_regularBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_regularBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  const GALGAS_regularBindingForGeneration * p = (const GALGAS_regularBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_regularBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "regularBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_runBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTargetName.objectCompare (p->mAttribute_mTargetName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionName.objectCompare (p->mAttribute_mActionName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_runBindingForGeneration::objectCompare (const GALGAS_runBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (const cPtr_runBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_runBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mTargetName,
                                                                                const GALGAS_string & inAttribute_mActionName
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  if (inAttribute_mTargetName.isValid () && inAttribute_mActionName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_runBindingForGeneration (inAttribute_mTargetName, inAttribute_mActionName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_runBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_runBindingForGeneration * p = (cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
    cPtr_runBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_runBindingForGeneration (p->mAttribute_mTargetName, p->mAttribute_mActionName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mTargetName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mActionName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionName ;
}

//---------------------------------------------------------------------------*
//             Pointer class for @runBindingForGeneration class              *
//---------------------------------------------------------------------------*

cPtr_runBindingForGeneration::cPtr_runBindingForGeneration (const GALGAS_string & in_mTargetName,
                                                            const GALGAS_string & in_mActionName
                                                            COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mTargetName (in_mTargetName),
mAttribute_mActionName (in_mActionName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_runBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

void cPtr_runBindingForGeneration::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "[@runBindingForGeneration:" ;
  mAttribute_mTargetName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @runBindingForGeneration type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_runBindingForGeneration ("runBindingForGeneration",
                                                & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_runBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_runBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_runBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  const GALGAS_runBindingForGeneration * p = (const GALGAS_runBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_runBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "runBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_tableValueBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mColumnBindingForTableValueBindingForGeneration.objectCompare (p->mAttribute_mColumnBindingForTableValueBindingForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_tableValueBindingForGeneration::objectCompare (const GALGAS_tableValueBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (const cPtr_tableValueBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_tableValueBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mControllerName,
                                                                                              const GALGAS_columnBindingForTableValueBindingForGeneration & inAttribute_mColumnBindingForTableValueBindingForGeneration
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  if (inAttribute_mControllerName.isValid () && inAttribute_mColumnBindingForTableValueBindingForGeneration.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_tableValueBindingForGeneration (inAttribute_mControllerName, inAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_tableValueBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_tableValueBindingForGeneration * p = (cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
    cPtr_tableValueBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_tableValueBindingForGeneration (p->mAttribute_mControllerName, p->mAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mColumnBindingForTableValueBindingForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration cPtr_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnBindingForTableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @tableValueBindingForGeneration class          *
//---------------------------------------------------------------------------*

cPtr_tableValueBindingForGeneration::cPtr_tableValueBindingForGeneration (const GALGAS_string & in_mControllerName,
                                                                          const GALGAS_columnBindingForTableValueBindingForGeneration & in_mColumnBindingForTableValueBindingForGeneration
                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mColumnBindingForTableValueBindingForGeneration (in_mColumnBindingForTableValueBindingForGeneration) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_tableValueBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

void cPtr_tableValueBindingForGeneration::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "[@tableValueBindingForGeneration:" ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mColumnBindingForTableValueBindingForGeneration.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @tableValueBindingForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_tableValueBindingForGeneration ("tableValueBindingForGeneration",
                                                       & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_tableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_tableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_tableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  const GALGAS_tableValueBindingForGeneration * p = (const GALGAS_tableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_tableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "tableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Category Reader '@easyBindingType propertyAttributeString'         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_propertyAttributeString (const GALGAS_easyBindingType & inObject,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //------- @switchInstructionForGeneration
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_easyBindingType temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_easyBindingType::kNotBuilt:
      break ;
    case GALGAS_easyBindingType::kEnum_boolType: case GALGAS_easyBindingType::kEnum_integer_31__36_Type: case GALGAS_easyBindingType::kEnum_integer_33__32_Type: case GALGAS_easyBindingType::kEnum_integer_36__34_Type: case GALGAS_easyBindingType::kEnum_uintegerType: case GALGAS_easyBindingType::kEnum_floatType: case GALGAS_easyBindingType::kEnum_doubleType: case GALGAS_easyBindingType::kEnum_decimalType: case GALGAS_easyBindingType::kEnum_toManyEntitiesType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_stringType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("(copy)") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_fontType: case GALGAS_easyBindingType::kEnum_imageType: case GALGAS_easyBindingType::kEnum_dataType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_colorType: case GALGAS_easyBindingType::kEnum_dateType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("(assign)") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//  Category Reader '@easyBindingType requiredCellTypeInTableColumnBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_requiredCellTypeInTableColumnBinding (const GALGAS_easyBindingType & inObject,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //------- @switchInstructionForGeneration
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_easyBindingType temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_easyBindingType::kNotBuilt:
      break ;
    case GALGAS_easyBindingType::kEnum_boolType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_integer_31__36_Type: case GALGAS_easyBindingType::kEnum_integer_33__32_Type: case GALGAS_easyBindingType::kEnum_integer_36__34_Type: case GALGAS_easyBindingType::kEnum_uintegerType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSTextFieldCell") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_decimalType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSTextFieldCell") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_floatType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSTextFieldCell") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_doubleType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSTextFieldCell") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_stringType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSTextFieldCell") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_dataType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_dateType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSDateFieldCell") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_fontType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_imageType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_colorType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    case GALGAS_easyBindingType::kEnum_toManyEntitiesType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category reader '@abstractBindingForGeneration generateBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateBinding> gCategoryReaderTable_abstractBindingForGeneration_generateBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateBinding (const PMSInt32 inClassIndex,
                                          categoryReaderSignature_abstractBindingForGeneration_generateBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateBinding (NULL,
                                                                         freeCategoryReader_abstractBindingForGeneration_generateBinding) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                  const GALGAS_string & in_inOutletName,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@runBindingForGeneration generateBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_runBindingForGeneration_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                             const GALGAS_string & constinArgument_inOutletName,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_runBindingForGeneration * object = (const cPtr_runBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_runBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("  ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (GALGAS_string (".target = ") COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (object->mAttribute_mTargetName COMMA_SOURCE_FILE_AT_LINE (140)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (140)) ;
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string (".action = @selector (") COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (object->mAttribute_mActionName COMMA_SOURCE_FILE_AT_LINE (141)).operator_concat (GALGAS_string (":) ;\n") COMMA_SOURCE_FILE_AT_LINE (141)) COMMA_SOURCE_FILE_AT_LINE (141)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_runBindingForGeneration_generateBinding (void) {
  enterCategoryReader_generateBinding (kTypeDescriptor_GALGAS_runBindingForGeneration.mSlotID,
                                       categoryReader_runBindingForGeneration_generateBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_runBindingForGeneration_generateBinding (defineCategoryReader_runBindingForGeneration_generateBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@tableValueBindingForGeneration generateBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_tableValueBindingForGeneration_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                    const GALGAS_string & constinArgument_inOutletName,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_tableValueBindingForGeneration * object = (const cPtr_tableValueBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_columnBindingForTableValueBindingForGeneration enumerator_5620 (object->mAttribute_mColumnBindingForTableValueBindingForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_5620.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("  if (nil == [").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (enumerator_5620.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string ("\"]) {\n") COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (GALGAS_string ("' NSTableView outlet has no formatter has no column with the ") COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (enumerator_5620.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (GALGAS_string (" identifier\") ;\n") COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (GALGAS_string ("  }else{\n") COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string ("    NSActionCell * cell = [") COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (enumerator_5620.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (GALGAS_string ("\"].dataCell ;\n") COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (GALGAS_string ("    if (! [cell isKindOfClass:[") COMMA_SOURCE_FILE_AT_LINE (156)).operator_concat (enumerator_5620.current (HERE).mAttribute_mRequiredCellClass COMMA_SOURCE_FILE_AT_LINE (156)).operator_concat (GALGAS_string (" class]]) {\n") COMMA_SOURCE_FILE_AT_LINE (156)).operator_concat (GALGAS_string ("      presentErrorWindow (__FILE__, __LINE__, @\"the dataCell is '") COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (enumerator_5620.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string ("' column of the '") COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string ("' should be an '") COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (enumerator_5620.current (HERE).mAttribute_mRequiredCellClass COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string (" instance\") ;\n") COMMA_SOURCE_FILE_AT_LINE (157)).operator_concat (GALGAS_string ("    }\n") COMMA_SOURCE_FILE_AT_LINE (158)).operator_concat (GALGAS_string ("  }\n") COMMA_SOURCE_FILE_AT_LINE (159)).operator_concat (GALGAS_string ("  [[") COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (enumerator_5620.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (GALGAS_string ("\"]\n") COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (GALGAS_string ("    bind:@\"value\"\n") COMMA_SOURCE_FILE_AT_LINE (161)).operator_concat (GALGAS_string ("    toObject:") COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (object->mAttribute_mControllerName COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (162)).operator_concat (GALGAS_string ("    withKeyPath:@\"arrangedObjects.") COMMA_SOURCE_FILE_AT_LINE (163)).operator_concat (enumerator_5620.current (HERE).mAttribute_mObservableAttributeName COMMA_SOURCE_FILE_AT_LINE (163)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (163)).operator_concat (GALGAS_string ("    options:") COMMA_SOURCE_FILE_AT_LINE (164)) COMMA_SOURCE_FILE_AT_LINE (152)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_5620.current (HERE).mAttribute_mOutletBindingOptionList.reader_length (SOURCE_FILE_AT_LINE (165)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("nil\n") COMMA_SOURCE_FILE_AT_LINE (166)) ;
    }else if (kBoolFalse == test_0) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("[NSDictionary dictionaryWithObjectsAndKeys:\n") COMMA_SOURCE_FILE_AT_LINE (168)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator__32_stringlist enumerator_6944 (enumerator_5620.current (HERE).mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_6944.hasCurrentObject ()) {
        //-------- @concatInstructionForGeneration
        result_outResult.dotAssign_operation (GALGAS_string ("      ").operator_concat (enumerator_6944.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (170)).operator_concat (GALGAS_string (", @") COMMA_SOURCE_FILE_AT_LINE (170)).operator_concat (enumerator_6944.current_mValue_30_ (HERE).reader_utf_38_Representation (SOURCE_FILE_AT_LINE (170)) COMMA_SOURCE_FILE_AT_LINE (170)).operator_concat (GALGAS_string (",\n") COMMA_SOURCE_FILE_AT_LINE (170)) COMMA_SOURCE_FILE_AT_LINE (170)) ;
        enumerator_6944.gotoNextObject () ;
      }
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("      nil\n"
        "    ]\n") COMMA_SOURCE_FILE_AT_LINE (172)) ;
    }
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("  ] ;\n") COMMA_SOURCE_FILE_AT_LINE (175)) ;
    enumerator_5620.gotoNextObject () ;
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_tableValueBindingForGeneration_generateBinding (void) {
  enterCategoryReader_generateBinding (kTypeDescriptor_GALGAS_tableValueBindingForGeneration.mSlotID,
                                       categoryReader_tableValueBindingForGeneration_generateBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_tableValueBindingForGeneration_generateBinding (defineCategoryReader_tableValueBindingForGeneration_generateBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@regularBindingForGeneration generateBinding' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_regularBindingForGeneration_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                 const GALGAS_string & constinArgument_inOutletName,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_regularBindingForGeneration * object = (const cPtr_regularBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_regularBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
  //------- @switchInstructionForGeneration
  if (object->mAttribute_mRequiredFormatter.isValid ()) {
    switch (object->mAttribute_mRequiredFormatter.enumValue ()) {
    case GALGAS_formatterEnum::kNotBuilt:
      break ;
    case GALGAS_formatterEnum::kEnum_noFormatter: {
      } break ;
    case GALGAS_formatterEnum::kEnum_numberFormatter: {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("  if ((nil != ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (189)).operator_concat (GALGAS_string (") && (nil == ") COMMA_SOURCE_FILE_AT_LINE (189)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (189)).operator_concat (GALGAS_string (".formatter)) {\n") COMMA_SOURCE_FILE_AT_LINE (189)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("' outlet has no formatter, it should have an NSNumberFormatter\") ;\n") COMMA_SOURCE_FILE_AT_LINE (190)).operator_concat (GALGAS_string ("  }else if ((nil != ") COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (GALGAS_string (") && ![") COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (GALGAS_string (".formatter isKindOfClass:[NSNumberFormatter class]]) {\n") COMMA_SOURCE_FILE_AT_LINE (191)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string (" outlet has a formatter that is not kind of NSNumberFormatter class\") ;\n") COMMA_SOURCE_FILE_AT_LINE (192)).operator_concat (GALGAS_string ("  }\n") COMMA_SOURCE_FILE_AT_LINE (193)) COMMA_SOURCE_FILE_AT_LINE (189)) ;
      } break ;
    case GALGAS_formatterEnum::kEnum_dateFormatter: {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("  if ((nil != ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string (") && (nil == ") COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string (".formatter)) {\n") COMMA_SOURCE_FILE_AT_LINE (195)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (196)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (196)).operator_concat (GALGAS_string ("' outlet has no formatter, it should have an NSDateFormatter\") ;\n") COMMA_SOURCE_FILE_AT_LINE (196)).operator_concat (GALGAS_string ("  }else if ((nil != ") COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string (") && ![") COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string (".formatter isKindOfClass:[NSDateFormatter class]]) {\n") COMMA_SOURCE_FILE_AT_LINE (197)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (198)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (198)).operator_concat (GALGAS_string ("' outlet has a formatter that is not kind of NSDateFormatter class\") ;\n") COMMA_SOURCE_FILE_AT_LINE (198)).operator_concat (GALGAS_string ("  }\n") COMMA_SOURCE_FILE_AT_LINE (199)) COMMA_SOURCE_FILE_AT_LINE (195)) ;
      } break ;
    }
  }
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (GALGAS_string ("  [").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (201)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (201)).operator_concat (GALGAS_string ("    bind:@\"") COMMA_SOURCE_FILE_AT_LINE (202)).operator_concat (object->mAttribute_mBindingName COMMA_SOURCE_FILE_AT_LINE (202)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (202)).operator_concat (GALGAS_string ("    toObject:") COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (object->mAttribute_mObservedObjectName COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (203)).operator_concat (GALGAS_string ("    withKeyPath:@\"") COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (object->mAttribute_mObservableAttributeName COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (204)).operator_concat (GALGAS_string ("    options:") COMMA_SOURCE_FILE_AT_LINE (205)) COMMA_SOURCE_FILE_AT_LINE (201)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mOutletBindingOptionList.reader_length (SOURCE_FILE_AT_LINE (206)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("nil\n") COMMA_SOURCE_FILE_AT_LINE (207)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("[NSDictionary dictionaryWithObjectsAndKeys:\n") COMMA_SOURCE_FILE_AT_LINE (209)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator__32_stringlist enumerator_9071 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_9071.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("      ").operator_concat (enumerator_9071.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (211)).operator_concat (GALGAS_string (", @") COMMA_SOURCE_FILE_AT_LINE (211)).operator_concat (enumerator_9071.current_mValue_30_ (HERE).reader_utf_38_Representation (SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (211)).operator_concat (GALGAS_string (",\n") COMMA_SOURCE_FILE_AT_LINE (211)) COMMA_SOURCE_FILE_AT_LINE (211)) ;
      enumerator_9071.gotoNextObject () ;
    }
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("      nil\n"
      "    ]\n") COMMA_SOURCE_FILE_AT_LINE (213)) ;
  }
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (GALGAS_string ("  ] ;\n") COMMA_SOURCE_FILE_AT_LINE (216)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_regularBindingForGeneration_generateBinding (void) {
  enterCategoryReader_generateBinding (kTypeDescriptor_GALGAS_regularBindingForGeneration.mSlotID,
                                       categoryReader_regularBindingForGeneration_generateBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_regularBindingForGeneration_generateBinding (defineCategoryReader_regularBindingForGeneration_generateBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category reader '@abstractBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding> gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateRemoveBinding (const PMSInt32 inClassIndex,
                                                categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateRemoveBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateRemoveBinding (NULL,
                                                                               freeCategoryReader_abstractBindingForGeneration_generateRemoveBinding) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                        const GALGAS_string & in_inOutletName,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@runBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_runBindingForGeneration_generateRemoveBinding (const cPtr_abstractBindingForGeneration * /* inObject */,
                                                                                   const GALGAS_string & /* constinArgument_inOutletName */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_runBindingForGeneration_generateRemoveBinding (void) {
  enterCategoryReader_generateRemoveBinding (kTypeDescriptor_GALGAS_runBindingForGeneration.mSlotID,
                                             categoryReader_runBindingForGeneration_generateRemoveBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_runBindingForGeneration_generateRemoveBinding (defineCategoryReader_runBindingForGeneration_generateRemoveBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@tableValueBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_tableValueBindingForGeneration_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                          const GALGAS_string & constinArgument_inOutletName,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_tableValueBindingForGeneration * object = (const cPtr_tableValueBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_columnBindingForTableValueBindingForGeneration enumerator_10016 (object->mAttribute_mColumnBindingForTableValueBindingForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_10016.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("  [[").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (243)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (243)).operator_concat (enumerator_10016.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (243)).operator_concat (GALGAS_string ("\"]\n") COMMA_SOURCE_FILE_AT_LINE (243)).operator_concat (GALGAS_string ("    unbind:@\"value\"\n") COMMA_SOURCE_FILE_AT_LINE (244)).operator_concat (GALGAS_string ("  ] ;\n") COMMA_SOURCE_FILE_AT_LINE (245)) COMMA_SOURCE_FILE_AT_LINE (243)) ;
    enumerator_10016.gotoNextObject () ;
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_tableValueBindingForGeneration_generateRemoveBinding (void) {
  enterCategoryReader_generateRemoveBinding (kTypeDescriptor_GALGAS_tableValueBindingForGeneration.mSlotID,
                                             categoryReader_tableValueBindingForGeneration_generateRemoveBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_tableValueBindingForGeneration_generateRemoveBinding (defineCategoryReader_tableValueBindingForGeneration_generateRemoveBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@regularBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_regularBindingForGeneration_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                       const GALGAS_string & constinArgument_inOutletName,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_regularBindingForGeneration * object = (const cPtr_regularBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_regularBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("  [").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (256)).operator_concat (GALGAS_string (" unbind:@\"") COMMA_SOURCE_FILE_AT_LINE (256)).operator_concat (object->mAttribute_mBindingName COMMA_SOURCE_FILE_AT_LINE (256)).operator_concat (GALGAS_string ("\"] ;\n") COMMA_SOURCE_FILE_AT_LINE (256)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_regularBindingForGeneration_generateRemoveBinding (void) {
  enterCategoryReader_generateRemoveBinding (kTypeDescriptor_GALGAS_regularBindingForGeneration.mSlotID,
                                             categoryReader_regularBindingForGeneration_generateRemoveBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_regularBindingForGeneration_generateRemoveBinding (defineCategoryReader_regularBindingForGeneration_generateRemoveBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@abstractBinding analyzeOutletBinding'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBinding_analyzeOutletBinding> gCategoryMethodTable_abstractBinding_analyzeOutletBinding ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeOutletBinding (const PMSInt32 inClassIndex,
                                               categoryMethodSignature_abstractBinding_analyzeOutletBinding inMethod) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBinding_analyzeOutletBinding (void) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBinding_analyzeOutletBinding (NULL,
                                                                 freeCategoryMethod_abstractBinding_analyzeOutletBinding) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                              const GALGAS_entityMap constin_inEntityMap,
                                              const GALGAS_observableObjectMap constin_inObservableObjectMap,
                                              const GALGAS_outletClassBindingMap constin_inBindingMap,
                                              const GALGAS_controllerMap constin_inControllerMap,
                                              const GALGAS_actionMap constin_inActionMap,
                                              const GALGAS_bool constin_inHasTableValueBinding,
                                              GALGAS_outletBindingListForGeneration & io_ioOutletBindingListForGeneration,
                                              GALGAS_stringset & io_ioImplementationFileInclusionSet,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBinding) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBinding_analyzeOutletBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
      f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
           f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inEntityMap, constin_inObservableObjectMap, constin_inBindingMap, constin_inControllerMap, constin_inActionMap, constin_inHasTableValueBinding, io_ioOutletBindingListForGeneration, io_ioImplementationFileInclusionSet, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@tableValueBinding analyzeOutletBinding'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_tableValueBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                   const GALGAS_entityMap constinArgument_inEntityMap,
                                                                   const GALGAS_observableObjectMap /* constinArgument_inObservableObjectMap */,
                                                                   const GALGAS_outletClassBindingMap /* constinArgument_inBindingMap */,
                                                                   const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                   const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                   const GALGAS_bool constinArgument_inHasTableValueBinding,
                                                                   GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                   GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_tableValueBinding * object = (const cPtr_tableValueBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBinding) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inHasTableValueBinding.operator_not (SOURCE_FILE_AT_LINE (545)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this outlet does not support $tableValue binding") COMMA_SOURCE_FILE_AT_LINE (546)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_controlledClassOrEntityName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_outletBindingListForGeneration var_controllerBindingList ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_21697_0 ; // Joker input parameter
    GALGAS_actionMap joker_21770_0 ; // Joker input parameter
    constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_21697_0, var_controlledClassOrEntityName, var_controllerBindingList, joker_21770_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (550)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_21871_3 ; // Joker input parameter
    GALGAS_string joker_21871_2 ; // Joker input parameter
    GALGAS_string joker_21871_1 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_21934_11 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_21934_10 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_21934_9 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_21934_8 ; // Joker input parameter
    GALGAS_relationshipList joker_21934_7 ; // Joker input parameter
    GALGAS_relationshipList joker_21934_6 ; // Joker input parameter
    GALGAS_propertyMap joker_21934_5 ; // Joker input parameter
    GALGAS_relationshipMap joker_21934_4 ; // Joker input parameter
    GALGAS_relationshipMap joker_21934_3 ; // Joker input parameter
    GALGAS_stringset joker_21934_2 ; // Joker input parameter
    GALGAS__32_stringlist joker_21934_1 ; // Joker input parameter
    constinArgument_inEntityMap.method_searchKey (GALGAS_lstring::constructor_new (var_controlledClassOrEntityName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (558)), joker_21871_3, joker_21871_2, joker_21871_1, var_observablePropertyMap, joker_21934_11, joker_21934_10, joker_21934_9, joker_21934_8, joker_21934_7, joker_21934_6, joker_21934_5, joker_21934_4, joker_21934_3, joker_21934_2, joker_21934_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (557)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_columnBindingForTableValueBindingForGeneration var_columnBindingForTableValueBindingForGeneration = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (563)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_tableValueColumnBinding enumerator_22102 (object->mAttribute_mTableValueColumnBinding, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_22102.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_easyBindingType var_type ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_stringlist joker_22232_2 ; // Joker input parameter
      GALGAS_lstring joker_22232_1 ; // Joker input parameter
      var_observablePropertyMap.method_searchKey (enumerator_22102.current (HERE).mAttribute_mBoundPropertyName, var_type, joker_22232_2, joker_22232_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (566)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_requiredCellTypeInTableColumnBinding = categoryReader_requiredCellTypeInTableColumnBinding (var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (571)) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_requiredCellTypeInTableColumnBinding.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_3 (enumerator_22102.current (HERE).mAttribute_mBoundPropertyName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("this property cannot be named in a $tableValue binding") COMMA_SOURCE_FILE_AT_LINE (573)) ;
      }else if (kBoolFalse == test_2) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_requiredCellTypeInTableColumnBinding.objectCompare (enumerator_22102.current (HERE).mAttribute_mCellTypeName.mAttribute_string)).boolEnum () ;
        if (kBoolTrue == test_4) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_5 (enumerator_22102.current (HERE).mAttribute_mCellTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("this property requires a ").operator_concat (var_requiredCellTypeInTableColumnBinding COMMA_SOURCE_FILE_AT_LINE (575)).operator_concat (GALGAS_string (" cell class") COMMA_SOURCE_FILE_AT_LINE (575)) COMMA_SOURCE_FILE_AT_LINE (575)) ;
        }
      }
      //-------- @plusEqualnstructionForGeneration
      var_columnBindingForTableValueBindingForGeneration.addAssign_operation (enumerator_22102.current (HERE).mAttribute_mColumnName.mAttribute_string, var_requiredCellTypeInTableColumnBinding, enumerator_22102.current (HERE).mAttribute_mBoundPropertyName.mAttribute_string, GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (581)) COMMA_SOURCE_FILE_AT_LINE (577)) ;
      enumerator_22102.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_tableValueBindingForGeneration::constructor_new (object->mAttribute_mControllerName.mAttribute_string, var_columnBindingForTableValueBindingForGeneration COMMA_SOURCE_FILE_AT_LINE (584)) COMMA_SOURCE_FILE_AT_LINE (584)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_tableValueBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_tableValueBinding.mSlotID,
                                            categoryMethod_tableValueBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_tableValueBinding_analyzeOutletBinding (defineCategoryMethod_tableValueBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@runBinding analyzeOutletBinding'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_runBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                            const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                            const GALGAS_observableObjectMap /* constinArgument_inObservableObjectMap */,
                                                            const GALGAS_outletClassBindingMap /* constinArgument_inBindingMap */,
                                                            const GALGAS_controllerMap constinArgument_inControllerMap,
                                                            const GALGAS_actionMap constinArgument_inActionMap,
                                                            const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                            GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                            GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_runBinding * object = (const cPtr_runBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_runBinding) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mTargetName.mAttribute_string.objectCompare (GALGAS_string ("self"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @methodCallInstructionForGeneration
    constinArgument_inActionMap.method_searchKey (object->mAttribute_mActionName, inCompiler COMMA_SOURCE_FILE_AT_LINE (604)) ;
    //-------- END @methodCallInstructionForGeneration
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_actionMap var_actionMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_23820_3 ; // Joker input parameter
    GALGAS_string joker_23820_2 ; // Joker input parameter
    GALGAS_outletBindingListForGeneration joker_23820_1 ; // Joker input parameter
    constinArgument_inControllerMap.method_searchKey (object->mAttribute_mTargetName, joker_23820_3, joker_23820_2, joker_23820_1, var_actionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (607)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @methodCallInstructionForGeneration
    var_actionMap.method_searchKey (object->mAttribute_mActionName, inCompiler COMMA_SOURCE_FILE_AT_LINE (608)) ;
    //-------- END @methodCallInstructionForGeneration
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_runBindingForGeneration::constructor_new (object->mAttribute_mTargetName.mAttribute_string, object->mAttribute_mActionName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (610)) COMMA_SOURCE_FILE_AT_LINE (610)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_runBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_runBinding.mSlotID,
                                            categoryMethod_runBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_runBinding_analyzeOutletBinding (defineCategoryMethod_runBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@regularBinding analyzeOutletBinding'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                const GALGAS_observableObjectMap constinArgument_inObservableObjectMap,
                                                                const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                GALGAS_stringset & ioArgument_ioImplementationFileInclusionSet,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularBinding * object = (const cPtr_regularBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (630)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_observedObjectOCName ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inObservableObjectMap.reader_hasKey (object->mAttribute_mObservedObjectName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (634)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_includeFile ;
    //-------- @methodCallInstructionForGeneration
    constinArgument_inObservableObjectMap.method_searchKey (GALGAS_lstring::constructor_new (object->mAttribute_mObservedObjectName.mAttribute_string, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (637)), var_observedObjectOCName, var_includeFile, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (636)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    ioArgument_ioImplementationFileInclusionSet.addAssign_operation (var_includeFile COMMA_SOURCE_FILE_AT_LINE (642)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mObservedObjectName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (object->mAttribute_mObservedObjectName.reader_string (SOURCE_FILE_AT_LINE (645)) COMMA_SOURCE_FILE_AT_LINE (645)).operator_concat (GALGAS_string ("' object is not observable") COMMA_SOURCE_FILE_AT_LINE (645)) COMMA_SOURCE_FILE_AT_LINE (644)) ;
    var_observedObjectOCName.drop () ; // Release error dropped variable
    var_observablePropertyMap.drop () ; // Release error dropped variable
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingType var_observablePropertyType ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_stringlist joker_25492_2 ; // Joker input parameter
  GALGAS_lstring joker_25492_1 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_observablePropertyType, joker_25492_2, joker_25492_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (650)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_observableKeyPath = object->mAttribute_mObservableAttributeName.mAttribute_string ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_2 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_2) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_observablePropertyType.objectCompare (GALGAS_easyBindingType::constructor_toManyEntitiesType (SOURCE_FILE_AT_LINE (654)))).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @concatInstructionForGeneration
      var_observableKeyPath.dotAssign_operation (GALGAS_string (".@count") COMMA_SOURCE_FILE_AT_LINE (655)) ;
      //-------- @assignmentInstructionForGeneration
      var_observablePropertyType = GALGAS_easyBindingType::constructor_uintegerType (SOURCE_FILE_AT_LINE (656)) ;
    }else if (kBoolFalse == test_3) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_4 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("the 'count' path is only allowed for to-many relationships") COMMA_SOURCE_FILE_AT_LINE (658)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (663)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_26092 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (664)).isValidAndTrue () ;
  if (enumerator_26092.hasCurrentObject () && bool_5) {
    while (enumerator_26092.hasCurrentObject () && bool_5) {
      //-------- @assignmentInstructionForGeneration
      var_requiredFormatter = enumerator_26092.current_mRequiredFormatter (HERE) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, enumerator_26092.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
      enumerator_26092.gotoNextObject () ;
      if (enumerator_26092.hasCurrentObject ()) {
        bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (664)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (668)).boolEnum () ;
  if (kBoolTrue == test_6) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (669)) COMMA_SOURCE_FILE_AT_LINE (669)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (669)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_26396 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (670)).isValidAndTrue () ;
    if (enumerator_26396.hasCurrentObject () && bool_7) {
      while (enumerator_26396.hasCurrentObject () && bool_7) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_26396.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (671)) COMMA_SOURCE_FILE_AT_LINE (671)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (671)) COMMA_SOURCE_FILE_AT_LINE (671)) ;
        enumerator_26396.gotoNextObject () ;
        if (enumerator_26396.hasCurrentObject ()) {
          bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (670)).isValidAndTrue () ;
        }
      }
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_8 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_8, var_s COMMA_SOURCE_FILE_AT_LINE (673)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (676)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_26631 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_26631.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    var_outletClassBindingOptionMap.method_searchKey (enumerator_26631.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (679)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_26820 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (681)).isValidAndTrue () ;
    if (enumerator_26820.hasCurrentObject () && bool_9) {
      while (enumerator_26820.hasCurrentObject () && bool_9) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_26884 (enumerator_26631.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (682)).isValidAndTrue () ;
        if (enumerator_26884.hasCurrentObject () && bool_10) {
          while (enumerator_26884.hasCurrentObject () && bool_10) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_26820.current_mType (HERE).objectCompare (enumerator_26884.current_mType (HERE))) ;
            enumerator_26884.gotoNextObject () ;
            if (enumerator_26884.hasCurrentObject ()) {
              bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (682)).isValidAndTrue () ;
            }
          }
        }
        enumerator_26820.gotoNextObject () ;
        if (enumerator_26820.hasCurrentObject ()) {
          bool_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (681)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_11 = var_found.operator_not (SOURCE_FILE_AT_LINE (686)).boolEnum () ;
    if (kBoolTrue == test_11) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_27123 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_12 = var_found.operator_not (SOURCE_FILE_AT_LINE (688)).isValidAndTrue () ;
      if (enumerator_27123.hasCurrentObject () && bool_12) {
        while (enumerator_27123.hasCurrentObject () && bool_12) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_27123.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (689)) COMMA_SOURCE_FILE_AT_LINE (689)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (689)) COMMA_SOURCE_FILE_AT_LINE (689)) ;
          enumerator_27123.gotoNextObject () ;
          if (enumerator_27123.hasCurrentObject ()) {
            bool_12 = var_found.operator_not (SOURCE_FILE_AT_LINE (688)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_13 (enumerator_26631.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_13, var_s COMMA_SOURCE_FILE_AT_LINE (691)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_bindingOptionList.addAssign_operation (enumerator_26631.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (693)), enumerator_26631.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (693)) ;
    enumerator_26631.gotoNextObject () ;
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (696)), var_requiredFormatter, var_observedObjectOCName, var_observableKeyPath, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (695)) COMMA_SOURCE_FILE_AT_LINE (695)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularBinding.mSlotID,
                                            categoryMethod_regularBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularBinding_analyzeOutletBinding (defineCategoryMethod_regularBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@multiValuedBinding analyzeOutletBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                    const GALGAS_observableObjectMap constinArgument_inObservableObjectMap,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                    const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_stringset & ioArgument_ioImplementationFileInclusionSet,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBinding * object = (const cPtr_multiValuedBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (718)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_generatedBindingName = object->mAttribute_mBindingName.mAttribute_string ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 1U) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_multiValuedBindingList enumerator_28422 (object->mAttribute_mMultiValuedBindingList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_28422.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_observedObjectOCName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = constinArgument_inObservableObjectMap.reader_hasKey (enumerator_28422.current_mBoundObjectName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (725)).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_string var_includeFile ;
      //-------- @methodCallInstructionForGeneration
      constinArgument_inObservableObjectMap.method_searchKey (GALGAS_lstring::constructor_new (enumerator_28422.current_mBoundObjectName (HERE).mAttribute_string, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (728)), var_observedObjectOCName, var_includeFile, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (727)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @plusEqualnstructionForGeneration
      ioArgument_ioImplementationFileInclusionSet.addAssign_operation (var_includeFile COMMA_SOURCE_FILE_AT_LINE (733)) ;
    }else if (kBoolFalse == test_0) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_1 (enumerator_28422.current_mBoundObjectName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (enumerator_28422.current_mBoundObjectName (HERE).reader_string (SOURCE_FILE_AT_LINE (736)) COMMA_SOURCE_FILE_AT_LINE (736)).operator_concat (GALGAS_string ("' object is not observable") COMMA_SOURCE_FILE_AT_LINE (736)) COMMA_SOURCE_FILE_AT_LINE (735)) ;
      var_observedObjectOCName.drop () ; // Release error dropped variable
      var_observablePropertyMap.drop () ; // Release error dropped variable
    }
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingType var_observablePropertyType ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_stringlist joker_29162_2 ; // Joker input parameter
    GALGAS_lstring joker_29162_1 ; // Joker input parameter
    var_observablePropertyMap.method_searchKey (enumerator_28422.current_mBoundPropertyName (HERE), var_observablePropertyType, joker_29162_2, joker_29162_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (741)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_observableKeyPath = enumerator_28422.current_mBoundPropertyName (HERE).mAttribute_string ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (745)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_29403 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (746)).isValidAndTrue () ;
    if (enumerator_29403.hasCurrentObject () && bool_2) {
      while (enumerator_29403.hasCurrentObject () && bool_2) {
        //-------- @assignmentInstructionForGeneration
        var_requiredFormatter = enumerator_29403.current_mRequiredFormatter (HERE) ;
        //-------- @assignmentInstructionForGeneration
        var_found = GALGAS_bool (kIsEqual, enumerator_29403.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
        enumerator_29403.gotoNextObject () ;
        if (enumerator_29403.hasCurrentObject ()) {
          bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (746)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (750)).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (751)) COMMA_SOURCE_FILE_AT_LINE (751)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (751)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeAndFormatterList enumerator_29719 (var_acceptableTypeFormatterList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (752)).isValidAndTrue () ;
      if (enumerator_29719.hasCurrentObject () && bool_4) {
        while (enumerator_29719.hasCurrentObject () && bool_4) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_29719.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (753)) COMMA_SOURCE_FILE_AT_LINE (753)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (753)) COMMA_SOURCE_FILE_AT_LINE (753)) ;
          enumerator_29719.gotoNextObject () ;
          if (enumerator_29719.hasCurrentObject ()) {
            bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (752)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_5 (enumerator_28422.current_mBoundPropertyName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, var_s COMMA_SOURCE_FILE_AT_LINE (755)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (758)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_6 = enumerator_28422.current_mNegate (HERE).boolEnum () ;
    if (kBoolTrue == test_6) {
      //-------- @plusEqualnstructionForGeneration
      var_bindingOptionList.addAssign_operation (GALGAS_string ("NSValueTransformerName"), GALGAS_string ("NSNegateBooleanTransformerName") COMMA_SOURCE_FILE_AT_LINE (760)) ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletBindingOptionList enumerator_30084 (enumerator_28422.current_mOutletBindingOptionList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_30084.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_easyBindingTypeList var_acceptableTypeList ;
      //-------- @methodCallInstructionForGeneration
      var_outletClassBindingOptionMap.method_searchKey (enumerator_30084.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (764)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_bool var_found = GALGAS_bool (false) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_30281 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (766)).isValidAndTrue () ;
      if (enumerator_30281.hasCurrentObject () && bool_7) {
        while (enumerator_30281.hasCurrentObject () && bool_7) {
          //-------- @foreachInstructionForGeneration
          cEnumerator_easyBindingTypeList enumerator_30347 (enumerator_30084.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
          //--- complex foreach instruction
          bool bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (767)).isValidAndTrue () ;
          if (enumerator_30347.hasCurrentObject () && bool_8) {
            while (enumerator_30347.hasCurrentObject () && bool_8) {
              //-------- @assignmentInstructionForGeneration
              var_found = GALGAS_bool (kIsEqual, enumerator_30281.current_mType (HERE).objectCompare (enumerator_30347.current_mType (HERE))) ;
              enumerator_30347.gotoNextObject () ;
              if (enumerator_30347.hasCurrentObject ()) {
                bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (767)).isValidAndTrue () ;
              }
            }
          }
          enumerator_30281.gotoNextObject () ;
          if (enumerator_30281.hasCurrentObject ()) {
            bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (766)).isValidAndTrue () ;
          }
        }
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (771)).boolEnum () ;
      if (kBoolTrue == test_9) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_30598 (var_acceptableTypeList, kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (773)).isValidAndTrue () ;
        if (enumerator_30598.hasCurrentObject () && bool_10) {
          while (enumerator_30598.hasCurrentObject () && bool_10) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string ("\n"
              "  - '").operator_concat (categoryReader_ebTypeName (enumerator_30598.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (774)) COMMA_SOURCE_FILE_AT_LINE (774)) ;
            enumerator_30598.gotoNextObject () ;
            if (enumerator_30598.hasCurrentObject ()) {
              bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (773)).isValidAndTrue () ;
            }
          }
        }
        //-------- @errorInstructionForGeneration
        GALGAS_location location_11 (enumerator_30084.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_11, var_s COMMA_SOURCE_FILE_AT_LINE (776)) ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_bindingOptionList.addAssign_operation (enumerator_30084.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (778)), enumerator_30084.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (778)) ;
      enumerator_30084.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_generatedBindingName, var_requiredFormatter, var_observedObjectOCName, var_observableKeyPath, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (780)) COMMA_SOURCE_FILE_AT_LINE (780)) ;
    //-------- @incrementInstructionForGeneration
    var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (788)) ;
    //-------- @assignmentInstructionForGeneration
    var_generatedBindingName = object->mAttribute_mBindingName.mAttribute_string.operator_concat (var_idx.reader_string (SOURCE_FILE_AT_LINE (789)) COMMA_SOURCE_FILE_AT_LINE (789)) ;
    enumerator_28422.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_multiValuedBinding.mSlotID,
                                            categoryMethod_multiValuedBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBinding_analyzeOutletBinding (defineCategoryMethod_multiValuedBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//            Category Reader '@easyBindingType ebTypeIdentifier'            *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_string categoryReader_ebTypeIdentifier (const GALGAS_easyBindingType & inObject,
                                               const GALGAS_string & constinArgument_inClassOrEntityName,
                                               C_Compiler * /* inCompiler */
                                               COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //------- @switchInstructionForGeneration
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_easyBindingType temp_0 = inObject ;
  if (temp_0.isValid ()) {
    switch (temp_0.enumValue ()) {
    case GALGAS_easyBindingType::kNotBuilt:
      break ;
    case GALGAS_easyBindingType::kEnum_boolType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("bool") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_integer_31__36_Type: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("integer16") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_integer_33__32_Type: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("integer32") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_integer_36__34_Type: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("integer64") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_uintegerType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("unsignedInteger") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_decimalType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("decimal") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_floatType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("float") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_doubleType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("double") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_stringType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSString") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_dataType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSData") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_dateType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSDate") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_fontType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSFont") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_imageType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSImage") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_colorType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("NSColor") ;
      } break ;
    case GALGAS_easyBindingType::kEnum_toManyEntitiesType: {
      //-------- @assignmentInstructionForGeneration
      result_outResult = GALGAS_string ("toMany[").operator_concat (constinArgument_inClassOrEntityName COMMA_SOURCE_FILE_AT_LINE (903)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (903)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//   Abstract category method '@abstractBinding analyzeControllerBinding'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBinding_analyzeControllerBinding> gCategoryMethodTable_abstractBinding_analyzeControllerBinding ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeControllerBinding (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_abstractBinding_analyzeControllerBinding inMethod) {
  gCategoryMethodTable_abstractBinding_analyzeControllerBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBinding_analyzeControllerBinding (void) {
  gCategoryMethodTable_abstractBinding_analyzeControllerBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBinding_analyzeControllerBinding (NULL,
                                                                     freeCategoryMethod_abstractBinding_analyzeControllerBinding) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                  const GALGAS_relationshipMap constin_inAllRelationshipMap,
                                                  const GALGAS_outletClassBindingMap constin_inControllerClassBindingMap,
                                                  const GALGAS_lstring constin_inControlledClassOrEntityName,
                                                  const GALGAS_observablePropertyMap constin_inAllObservablePropertyMap,
                                                  GALGAS_outletBindingListForGeneration & io_ioBindingListForGeneration,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBinding) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBinding_analyzeControllerBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBinding_analyzeControllerBinding.count ()) {
      f = gCategoryMethodTable_abstractBinding_analyzeControllerBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBinding_analyzeControllerBinding.count ()) {
           f = gCategoryMethodTable_abstractBinding_analyzeControllerBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBinding_analyzeControllerBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAllRelationshipMap, constin_inControllerClassBindingMap, constin_inControlledClassOrEntityName, constin_inAllObservablePropertyMap, io_ioBindingListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@multiValuedBinding analyzeControllerBinding' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                        const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                        const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                        const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                        const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                        GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBinding * object = (const cPtr_multiValuedBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mBindingName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement the $").operator_concat (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (954)).operator_concat (GALGAS_string (" binding") COMMA_SOURCE_FILE_AT_LINE (954)) COMMA_SOURCE_FILE_AT_LINE (954)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_multiValuedBinding.mSlotID,
                                                categoryMethod_multiValuedBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBinding_analyzeControllerBinding (defineCategoryMethod_multiValuedBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@tableValueBinding analyzeControllerBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_tableValueBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                       const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                       const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                       const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                       GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_tableValueBinding * object = (const cPtr_tableValueBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement $tableValue binding") COMMA_SOURCE_FILE_AT_LINE (966)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_tableValueBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_tableValueBinding.mSlotID,
                                                categoryMethod_tableValueBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_tableValueBinding_analyzeControllerBinding (defineCategoryMethod_tableValueBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@runBinding analyzeControllerBinding'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_runBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_runBinding * object = (const cPtr_runBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_runBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mTargetName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement $run action") COMMA_SOURCE_FILE_AT_LINE (978)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_runBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_runBinding.mSlotID,
                                                categoryMethod_runBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_runBinding_analyzeControllerBinding (defineCategoryMethod_runBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@regularBinding analyzeControllerBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_relationshipMap constinArgument_inAllRelationshipMap,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inControllerClassBindingMap,
                                                                    const GALGAS_lstring constinArgument_inControlledClassOrEntityName,
                                                                    const GALGAS_observablePropertyMap constinArgument_inAllObservablePropertyMap,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioBindingListForGeneration,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularBinding * object = (const cPtr_regularBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_resultingObservedObjectName ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_resultingObservedPropertyPath ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mObservedObjectName.mAttribute_string.objectCompare (GALGAS_string ("root"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @assignmentInstructionForGeneration
    var_resultingObservedObjectName = GALGAS_string ("mRootObjectController") ;
    //-------- @assignmentInstructionForGeneration
    var_resultingObservedPropertyPath = GALGAS_string ("selection.").operator_concat (object->mAttribute_mObservableAttributeName.reader_string (SOURCE_FILE_AT_LINE (994)) COMMA_SOURCE_FILE_AT_LINE (994)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mObservedObjectName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("observed object should be 'root'") COMMA_SOURCE_FILE_AT_LINE (996)) ;
    var_resultingObservedObjectName.drop () ; // Release error dropped variable
    var_resultingObservedPropertyPath.drop () ; // Release error dropped variable
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_boundTypeIdentifierString ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_2 = constinArgument_inAllObservablePropertyMap.reader_hasKey (object->mAttribute_mObservableAttributeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1002)).boolEnum () ;
  if (kBoolTrue == test_2) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingType var_t ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_stringlist joker_39620_2 ; // Joker input parameter
    GALGAS_lstring joker_39620_1 ; // Joker input parameter
    constinArgument_inAllObservablePropertyMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_t, joker_39620_2, joker_39620_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1004)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @assignmentInstructionForGeneration
    var_boundTypeIdentifierString = categoryReader_ebTypeIdentifier (var_t, GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1005)) ;
  }else if (kBoolFalse == test_2) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_3 = constinArgument_inAllRelationshipMap.reader_hasKey (object->mAttribute_mObservableAttributeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1006)).boolEnum () ;
    if (kBoolTrue == test_3) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_bool var_isToMany ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_destinationEntityName ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_lstring joker_39917_2 ; // Joker input parameter
      GALGAS_deleteRuleEnum joker_39917_1 ; // Joker input parameter
      constinArgument_inAllRelationshipMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_isToMany, var_destinationEntityName, joker_39917_2, joker_39917_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1009)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_4 = var_isToMany.boolEnum () ;
      if (kBoolTrue == test_4) {
        //-------- @assignmentInstructionForGeneration
        var_boundTypeIdentifierString = GALGAS_string ("toMany[").operator_concat (var_destinationEntityName.reader_string (SOURCE_FILE_AT_LINE (1011)) COMMA_SOURCE_FILE_AT_LINE (1011)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (1011)) ;
      }else if (kBoolFalse == test_4) {
        //-------- @assignmentInstructionForGeneration
        var_boundTypeIdentifierString = GALGAS_string ("toOne[").operator_concat (var_destinationEntityName.reader_string (SOURCE_FILE_AT_LINE (1013)) COMMA_SOURCE_FILE_AT_LINE (1013)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (1013)) ;
      }
    }else if (kBoolFalse == test_3) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_5 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_5, GALGAS_string ("unknown property") COMMA_SOURCE_FILE_AT_LINE (1016)) ;
      var_boundTypeIdentifierString.drop () ; // Release error dropped variable
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_availableBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inControllerClassBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeList, var_availableBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1022)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_acceptableTypesString = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_40548 (var_acceptableTypeList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (1025)).isValidAndTrue () ;
  if (enumerator_40548.hasCurrentObject () && bool_6) {
    while (enumerator_40548.hasCurrentObject () && bool_6) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_acceptableType = categoryReader_ebTypeIdentifier (enumerator_40548.current_mType (HERE), constinArgument_inControlledClassOrEntityName.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1026)) ;
      //-------- @concatInstructionForGeneration
      var_acceptableTypesString.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (var_acceptableType COMMA_SOURCE_FILE_AT_LINE (1027)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1027)) COMMA_SOURCE_FILE_AT_LINE (1027)) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, var_boundTypeIdentifierString.objectCompare (var_acceptableType)) ;
      enumerator_40548.gotoNextObject () ;
      if (enumerator_40548.hasCurrentObject ()) {
        bool_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (1025)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (1030)).boolEnum () ;
  if (kBoolTrue == test_7) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_8 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_8, GALGAS_string ("cannot bind: property type is '").operator_concat (var_boundTypeIdentifierString COMMA_SOURCE_FILE_AT_LINE (1032)).operator_concat (GALGAS_string ("', acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (1032)).operator_concat (var_acceptableTypesString COMMA_SOURCE_FILE_AT_LINE (1032)) COMMA_SOURCE_FILE_AT_LINE (1031)) ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS__32_stringlist var_bindingOptionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkBindingOptions (object->mAttribute_mOutletBindingOptionList, var_availableBindingOptionMap, var_bindingOptionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1035)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.mAttribute_string, GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (1042)), var_resultingObservedObjectName, var_resultingObservedPropertyPath, var_bindingOptionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1040)) COMMA_SOURCE_FILE_AT_LINE (1040)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_regularBinding.mSlotID,
                                                categoryMethod_regularBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularBinding_analyzeControllerBinding (defineCategoryMethod_regularBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element::GALGAS_attributeListForImplementation_2E_element (void) :
mAttribute_mType (),
mAttribute_mPropertyName (),
mAttribute_mDefaultValueAsObjectiveCObject (),
mAttribute_mDirectDefaultValue () {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element::~ GALGAS_attributeListForImplementation_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element::GALGAS_attributeListForImplementation_2E_element (const GALGAS_easyBindingType & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_string & inOperand2,
                                                                                                    const GALGAS_string & inOperand3) :
mAttribute_mType (inOperand0),
mAttribute_mPropertyName (inOperand1),
mAttribute_mDefaultValueAsObjectiveCObject (inOperand2),
mAttribute_mDirectDefaultValue (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element GALGAS_attributeListForImplementation_2E_element::constructor_new (const GALGAS_easyBindingType & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                    const GALGAS_string & inOperand3 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_attributeListForImplementation_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeListForImplementation_2E_element::objectCompare (const GALGAS_attributeListForImplementation_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyName.objectCompare (inOperand.mAttribute_mPropertyName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValueAsObjectiveCObject.objectCompare (inOperand.mAttribute_mDefaultValueAsObjectiveCObject) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDirectDefaultValue.objectCompare (inOperand.mAttribute_mDirectDefaultValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_attributeListForImplementation_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mPropertyName.isValid () && mAttribute_mDefaultValueAsObjectiveCObject.isValid () && mAttribute_mDirectDefaultValue.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mPropertyName.drop () ;
  mAttribute_mDefaultValueAsObjectiveCObject.drop () ;
  mAttribute_mDirectDefaultValue.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation_2E_element::description (C_String & ioString,
                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @attributeListForImplementation.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertyName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDirectDefaultValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_attributeListForImplementation_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2E_element::reader_mPropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2E_element::reader_mDefaultValueAsObjectiveCObject (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValueAsObjectiveCObject ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2E_element::reader_mDirectDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDirectDefaultValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @attributeListForImplementation.element type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeListForImplementation_2E_element ("attributeListForImplementation.element",
                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeListForImplementation_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeListForImplementation_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeListForImplementation_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeListForImplementation_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element GALGAS_attributeListForImplementation_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler,
                                                                                                                  const GALGAS_location & inErrorLocation
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation_2E_element result ;
  const GALGAS_attributeListForImplementation_2E_element * p = (const GALGAS_attributeListForImplementation_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeListForImplementation_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "attributeListForImplementation.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::GALGAS_classMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSuperClassName (),
mAttribute_mPropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mImplementationFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::~ GALGAS_classMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::GALGAS_classMap_2E_element (const GALGAS_lstring & inOperand0,
                                                        const GALGAS_string & inOperand1,
                                                        const GALGAS_observablePropertyMap & inOperand2,
                                                        const GALGAS_attributeListForImplementation & inOperand3,
                                                        const GALGAS_attributeListForImplementation & inOperand4,
                                                        const GALGAS_attributeListForImplementation & inOperand5,
                                                        const GALGAS_transientListForImplementation & inOperand6,
                                                        const GALGAS_stringset & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperClassName (inOperand1),
mAttribute_mPropertyMap (inOperand2),
mAttribute_mAttributeListForInitMethodHeader (inOperand3),
mAttribute_mInheritedAttributeListForImplementation (inOperand4),
mAttribute_mAttributeListForImplementation (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mImplementationFileInclusionSet (inOperand7) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_string & inOperand1,
                                                                        const GALGAS_observablePropertyMap & inOperand2,
                                                                        const GALGAS_attributeListForImplementation & inOperand3,
                                                                        const GALGAS_attributeListForImplementation & inOperand4,
                                                                        const GALGAS_attributeListForImplementation & inOperand5,
                                                                        const GALGAS_transientListForImplementation & inOperand6,
                                                                        const GALGAS_stringset & inOperand7 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_classMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_classMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_classMap_2E_element::objectCompare (const GALGAS_classMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyMap.objectCompare (inOperand.mAttribute_mPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_classMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mPropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap_2E_element::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @classMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_classMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap_2E_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_classMap_2E_element::reader_mPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_classMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @classMap.element type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap_2E_element ("classMap.element",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_classMap_2E_element result ;
  const GALGAS_classMap_2E_element * p = (const GALGAS_classMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "classMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::GALGAS_entityMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSuperEntityName (),
mAttribute_mImplementationClassName (),
mAttribute_mSuperImplementationClassName (),
mAttribute_mObservablePropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mCurrentRelationshipList (),
mAttribute_mAllRelationshipList (),
mAttribute_mAllPropertyMap (),
mAttribute_mCurrentRelationshipMap (),
mAttribute_mAllRelationshipMap (),
mAttribute_mImplementationFileInclusionSet (),
mAttribute_mToManyRelationshipList () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::~ GALGAS_entityMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::GALGAS_entityMap_2E_element (const GALGAS_lstring & inOperand0,
                                                          const GALGAS_string & inOperand1,
                                                          const GALGAS_string & inOperand2,
                                                          const GALGAS_string & inOperand3,
                                                          const GALGAS_observablePropertyMap & inOperand4,
                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                          const GALGAS_attributeListForImplementation & inOperand6,
                                                          const GALGAS_attributeListForImplementation & inOperand7,
                                                          const GALGAS_transientListForImplementation & inOperand8,
                                                          const GALGAS_relationshipList & inOperand9,
                                                          const GALGAS_relationshipList & inOperand10,
                                                          const GALGAS_propertyMap & inOperand11,
                                                          const GALGAS_relationshipMap & inOperand12,
                                                          const GALGAS_relationshipMap & inOperand13,
                                                          const GALGAS_stringset & inOperand14,
                                                          const GALGAS__32_stringlist & inOperand15) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mImplementationClassName (inOperand2),
mAttribute_mSuperImplementationClassName (inOperand3),
mAttribute_mObservablePropertyMap (inOperand4),
mAttribute_mAttributeListForInitMethodHeader (inOperand5),
mAttribute_mInheritedAttributeListForImplementation (inOperand6),
mAttribute_mAttributeListForImplementation (inOperand7),
mAttribute_mTransientListForImplementation (inOperand8),
mAttribute_mCurrentRelationshipList (inOperand9),
mAttribute_mAllRelationshipList (inOperand10),
mAttribute_mAllPropertyMap (inOperand11),
mAttribute_mCurrentRelationshipMap (inOperand12),
mAttribute_mAllRelationshipMap (inOperand13),
mAttribute_mImplementationFileInclusionSet (inOperand14),
mAttribute_mToManyRelationshipList (inOperand15) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_string & inOperand1,
                                                                          const GALGAS_string & inOperand2,
                                                                          const GALGAS_string & inOperand3,
                                                                          const GALGAS_observablePropertyMap & inOperand4,
                                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                                          const GALGAS_attributeListForImplementation & inOperand6,
                                                                          const GALGAS_attributeListForImplementation & inOperand7,
                                                                          const GALGAS_transientListForImplementation & inOperand8,
                                                                          const GALGAS_relationshipList & inOperand9,
                                                                          const GALGAS_relationshipList & inOperand10,
                                                                          const GALGAS_propertyMap & inOperand11,
                                                                          const GALGAS_relationshipMap & inOperand12,
                                                                          const GALGAS_relationshipMap & inOperand13,
                                                                          const GALGAS_stringset & inOperand14,
                                                                          const GALGAS__32_stringlist & inOperand15 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    result = GALGAS_entityMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityMap_2E_element::objectCompare (const GALGAS_entityMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationClassName.objectCompare (inOperand.mAttribute_mImplementationClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperImplementationClassName.objectCompare (inOperand.mAttribute_mSuperImplementationClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (inOperand.mAttribute_mCurrentRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipList.objectCompare (inOperand.mAttribute_mAllRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllPropertyMap.objectCompare (inOperand.mAttribute_mAllPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (inOperand.mAttribute_mCurrentRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipMap.objectCompare (inOperand.mAttribute_mAllRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mToManyRelationshipList.objectCompare (inOperand.mAttribute_mToManyRelationshipList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_entityMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mImplementationClassName.isValid () && mAttribute_mSuperImplementationClassName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () && mAttribute_mToManyRelationshipList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mImplementationClassName.drop () ;
  mAttribute_mSuperImplementationClassName.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mCurrentRelationshipList.drop () ;
  mAttribute_mAllRelationshipList.drop () ;
  mAttribute_mAllPropertyMap.drop () ;
  mAttribute_mCurrentRelationshipMap.drop () ;
  mAttribute_mAllRelationshipMap.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
  mAttribute_mToManyRelationshipList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap_2E_element::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "<struct @entityMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperImplementationClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mToManyRelationshipList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_entityMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mImplementationClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mSuperImplementationClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2E_element::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2E_element::reader_mAllRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap_2E_element::reader_mAllPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2E_element::reader_mCurrentRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2E_element::reader_mAllRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_entityMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityMap_2E_element::reader_mToManyRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToManyRelationshipList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @entityMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap_2E_element ("entityMap.element",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_entityMap_2E_element result ;
  const GALGAS_entityMap_2E_element * p = (const GALGAS_entityMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "entityMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (void) :
mAttribute_mColumnIdentifier (),
mAttribute_mRequiredCellClass (),
mAttribute_mObservableAttributeName (),
mAttribute_mOutletBindingOptionList () {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::~ GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (const GALGAS_string & inOperand0,
                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                    const GALGAS__32_stringlist & inOperand3) :
mAttribute_mColumnIdentifier (inOperand0),
mAttribute_mRequiredCellClass (inOperand1),
mAttribute_mObservableAttributeName (inOperand2),
mAttribute_mOutletBindingOptionList (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                                    const GALGAS__32_stringlist & inOperand3 
                                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::objectCompare (const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mColumnIdentifier.objectCompare (inOperand.mAttribute_mColumnIdentifier) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredCellClass.objectCompare (inOperand.mAttribute_mRequiredCellClass) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableAttributeName.objectCompare (inOperand.mAttribute_mObservableAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (inOperand.mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::isValid (void) const {
  return mAttribute_mColumnIdentifier.isValid () && mAttribute_mRequiredCellClass.isValid () && mAttribute_mObservableAttributeName.isValid () && mAttribute_mOutletBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::drop (void) {
  mAttribute_mColumnIdentifier.drop () ;
  mAttribute_mRequiredCellClass.drop () ;
  mAttribute_mObservableAttributeName.drop () ;
  mAttribute_mOutletBindingOptionList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::description (C_String & ioString,
                                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @columnBindingForTableValueBindingForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mColumnIdentifier.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredCellClass.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mColumnIdentifier (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnIdentifier ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mRequiredCellClass (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredCellClass ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//       @columnBindingForTableValueBindingForGeneration.element type        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2E_element ("columnBindingForTableValueBindingForGeneration.element",
                                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                                  C_Compiler * inCompiler,
                                                                                                                                                  const GALGAS_location & inErrorLocation
                                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2E_element result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element * p = (const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "columnBindingForTableValueBindingForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element::GALGAS_outletBindingListForGeneration_2E_element (void) :
mAttribute_mBinding () {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element::~ GALGAS_outletBindingListForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element::GALGAS_outletBindingListForGeneration_2E_element (const GALGAS_abstractBindingForGeneration & inOperand0) :
mAttribute_mBinding (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element GALGAS_outletBindingListForGeneration_2E_element::constructor_new (const GALGAS_abstractBindingForGeneration & inOperand0 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_outletBindingListForGeneration_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletBindingListForGeneration_2E_element::objectCompare (const GALGAS_outletBindingListForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mBinding.objectCompare (inOperand.mAttribute_mBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletBindingListForGeneration_2E_element::isValid (void) const {
  return mAttribute_mBinding.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration_2E_element::drop (void) {
  mAttribute_mBinding.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration_2E_element::description (C_String & ioString,
                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @outletBindingListForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_outletBindingListForGeneration_2E_element::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @outletBindingListForGeneration.element type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration_2E_element ("outletBindingListForGeneration.element",
                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element GALGAS_outletBindingListForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler,
                                                                                                                  const GALGAS_location & inErrorLocation
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration_2E_element result ;
  const GALGAS_outletBindingListForGeneration_2E_element * p = (const GALGAS_outletBindingListForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletBindingListForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element::GALGAS_outletGenerationList_2E_element (void) :
mAttribute_mOutletType (),
mAttribute_mOutletName (),
mAttribute_mOutletBindingList () {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element::~ GALGAS_outletGenerationList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element::GALGAS_outletGenerationList_2E_element (const GALGAS_string & inOperand0,
                                                                                const GALGAS_string & inOperand1,
                                                                                const GALGAS_outletBindingListForGeneration & inOperand2) :
mAttribute_mOutletType (inOperand0),
mAttribute_mOutletName (inOperand1),
mAttribute_mOutletBindingList (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element GALGAS_outletGenerationList_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_string & inOperand1,
                                                                                                const GALGAS_outletBindingListForGeneration & inOperand2 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_outletGenerationList_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletGenerationList_2E_element::objectCompare (const GALGAS_outletGenerationList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOutletType.objectCompare (inOperand.mAttribute_mOutletType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingList.objectCompare (inOperand.mAttribute_mOutletBindingList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletGenerationList_2E_element::isValid (void) const {
  return mAttribute_mOutletType.isValid () && mAttribute_mOutletName.isValid () && mAttribute_mOutletBindingList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2E_element::drop (void) {
  mAttribute_mOutletType.drop () ;
  mAttribute_mOutletName.drop () ;
  mAttribute_mOutletBindingList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2E_element::description (C_String & ioString,
                                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @outletGenerationList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOutletType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2E_element::reader_mOutletType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletType ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2E_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList_2E_element::reader_mOutletBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @outletGenerationList.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList_2E_element ("outletGenerationList.element",
                                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element GALGAS_outletGenerationList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler,
                                                                                              const GALGAS_location & inErrorLocation
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2E_element result ;
  const GALGAS_outletGenerationList_2E_element * p = (const GALGAS_outletGenerationList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletGenerationList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element::GALGAS_preferencesMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mOutletDeclarationList (),
mAttribute_mActionList (),
mAttribute_mObservablePropertyMap (),
mAttribute_mImplementationFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element::~ GALGAS_preferencesMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element::GALGAS_preferencesMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_attributeListForImplementation & inOperand1,
                                                                    const GALGAS_transientListForImplementation & inOperand2,
                                                                    const GALGAS_outletGenerationList & inOperand3,
                                                                    const GALGAS_lstringlist & inOperand4,
                                                                    const GALGAS_observablePropertyMap & inOperand5,
                                                                    const GALGAS_stringset & inOperand6) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeListForImplementation (inOperand1),
mAttribute_mTransientListForImplementation (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mActionList (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mImplementationFileInclusionSet (inOperand6) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element GALGAS_preferencesMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_attributeListForImplementation & inOperand1,
                                                                                    const GALGAS_transientListForImplementation & inOperand2,
                                                                                    const GALGAS_outletGenerationList & inOperand3,
                                                                                    const GALGAS_lstringlist & inOperand4,
                                                                                    const GALGAS_observablePropertyMap & inOperand5,
                                                                                    const GALGAS_stringset & inOperand6 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_preferencesMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result = GALGAS_preferencesMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_preferencesMap_2E_element::objectCompare (const GALGAS_preferencesMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_preferencesMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @preferencesMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferencesMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferencesMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap_2E_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferencesMap_2E_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferencesMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_preferencesMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @preferencesMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap_2E_element ("preferencesMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element GALGAS_preferencesMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap_2E_element result ;
  const GALGAS_preferencesMap_2E_element * p = (const GALGAS_preferencesMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "preferencesMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::GALGAS_documentMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRootEntityName (),
mAttribute_mRootEntityImplementationClassName (),
mAttribute_mOutletDeclarationList (),
mAttribute_mControllerMap (),
mAttribute_mActionList (),
mAttribute_mTransientListForImplementation (),
mAttribute_mImplementationFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::~ GALGAS_documentMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::GALGAS_documentMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_string & inOperand1,
                                                              const GALGAS_string & inOperand2,
                                                              const GALGAS_outletGenerationList & inOperand3,
                                                              const GALGAS_controllerMap & inOperand4,
                                                              const GALGAS_lstringlist & inOperand5,
                                                              const GALGAS_transientListForImplementation & inOperand6,
                                                              const GALGAS_stringset & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mRootEntityName (inOperand1),
mAttribute_mRootEntityImplementationClassName (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mControllerMap (inOperand4),
mAttribute_mActionList (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mImplementationFileInclusionSet (inOperand7) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_string & inOperand1,
                                                                              const GALGAS_string & inOperand2,
                                                                              const GALGAS_outletGenerationList & inOperand3,
                                                                              const GALGAS_controllerMap & inOperand4,
                                                                              const GALGAS_lstringlist & inOperand5,
                                                                              const GALGAS_transientListForImplementation & inOperand6,
                                                                              const GALGAS_stringset & inOperand7 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_documentMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_documentMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_documentMap_2E_element::objectCompare (const GALGAS_documentMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootEntityName.objectCompare (inOperand.mAttribute_mRootEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootEntityImplementationClassName.objectCompare (inOperand.mAttribute_mRootEntityImplementationClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_documentMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mRootEntityImplementationClassName.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mActionList.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRootEntityName.drop () ;
  mAttribute_mRootEntityImplementationClassName.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mControllerMap.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @documentMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootEntityImplementationClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_documentMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap_2E_element::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap_2E_element::reader_mRootEntityImplementationClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentMap_2E_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentMap_2E_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentMap_2E_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_documentMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @documentMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentMap_2E_element ("documentMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_documentMap_2E_element result ;
  const GALGAS_documentMap_2E_element * p = (const GALGAS_documentMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "documentMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::GALGAS_outletClassBindingOptionMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::~ GALGAS_outletClassBindingOptionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::GALGAS_outletClassBindingOptionMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_easyBindingTypeList & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_easyBindingTypeList & inOperand1 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_outletClassBindingOptionMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingOptionMap_2E_element::objectCompare (const GALGAS_outletClassBindingOptionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassBindingOptionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2E_element::description (C_String & ioString,
                                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassBindingOptionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingOptionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_outletClassBindingOptionMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @outletClassBindingOptionMap.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2E_element ("outletClassBindingOptionMap.element",
                                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler,
                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2E_element result ;
  const GALGAS_outletClassBindingOptionMap_2E_element * p = (const GALGAS_outletClassBindingOptionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingOptionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::GALGAS_outletClassBindingMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList (),
mAttribute_mOutletClassBindingOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::~ GALGAS_outletClassBindingMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::GALGAS_outletClassBindingMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_easyBindingTypeAndFormatterList & inOperand1,
                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1),
mAttribute_mOutletClassBindingOptionMap (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_easyBindingTypeAndFormatterList & inOperand1,
                                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_outletClassBindingMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingMap_2E_element::objectCompare (const GALGAS_outletClassBindingMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (inOperand.mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassBindingMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
  mAttribute_mOutletClassBindingOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2E_element::description (C_String & ioString,
                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassBindingMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_outletClassBindingMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap_2E_element::reader_mOutletClassBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @outletClassBindingMap.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap_2E_element ("outletClassBindingMap.element",
                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler,
                                                                                                const GALGAS_location & inErrorLocation
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2E_element result ;
  const GALGAS_outletClassBindingMap_2E_element * p = (const GALGAS_outletClassBindingMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::GALGAS_outletClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mGenerateCode (),
mAttribute_mSuperClassName (),
mAttribute_mBindingMap (),
mAttribute_mHasTableValueBinding () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::~ GALGAS_outletClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::GALGAS_outletClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_bool & inOperand1,
                                                                    const GALGAS_string & inOperand2,
                                                                    const GALGAS_outletClassBindingMap & inOperand3,
                                                                    const GALGAS_bool & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mGenerateCode (inOperand1),
mAttribute_mSuperClassName (inOperand2),
mAttribute_mBindingMap (inOperand3),
mAttribute_mHasTableValueBinding (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_bool & inOperand1,
                                                                                    const GALGAS_string & inOperand2,
                                                                                    const GALGAS_outletClassBindingMap & inOperand3,
                                                                                    const GALGAS_bool & inOperand4 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_outletClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassMap_2E_element::objectCompare (const GALGAS_outletClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerateCode.objectCompare (inOperand.mAttribute_mGenerateCode) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingMap.objectCompare (inOperand.mAttribute_mBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasTableValueBinding.objectCompare (inOperand.mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mGenerateCode.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mBindingMap.drop () ;
  mAttribute_mHasTableValueBinding.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerateCode.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasTableValueBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2E_element::reader_mGenerateCode (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap_2E_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap_2E_element::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2E_element::reader_mHasTableValueBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasTableValueBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @outletClassMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap_2E_element ("outletClassMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap_2E_element result ;
  const GALGAS_outletClassMap_2E_element * p = (const GALGAS_outletClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::GALGAS_controllerClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mGenerateCode (),
mAttribute_mBindingMap (),
mAttribute_mActionMap (),
mAttribute_mObservablePropertyMap () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::~ GALGAS_controllerClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::GALGAS_controllerClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_bool & inOperand1,
                                                                            const GALGAS_outletClassBindingMap & inOperand2,
                                                                            const GALGAS_actionMap & inOperand3,
                                                                            const GALGAS_observablePropertyMap & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mGenerateCode (inOperand1),
mAttribute_mBindingMap (inOperand2),
mAttribute_mActionMap (inOperand3),
mAttribute_mObservablePropertyMap (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_bool & inOperand1,
                                                                                            const GALGAS_outletClassBindingMap & inOperand2,
                                                                                            const GALGAS_actionMap & inOperand3,
                                                                                            const GALGAS_observablePropertyMap & inOperand4 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_controllerClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerClassMap_2E_element::objectCompare (const GALGAS_controllerClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerateCode.objectCompare (inOperand.mAttribute_mGenerateCode) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingMap.objectCompare (inOperand.mAttribute_mBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_controllerClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mGenerateCode.drop () ;
  mAttribute_mBindingMap.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2E_element::description (C_String & ioString,
                                                        const PMSInt32 inIndentation) const {
  ioString << "<struct @controllerClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerateCode.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerClassMap_2E_element::reader_mGenerateCode (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassMap_2E_element::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap_2E_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @controllerClassMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap_2E_element ("controllerClassMap.element",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler,
                                                                                          const GALGAS_location & inErrorLocation
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2E_element result ;
  const GALGAS_controllerClassMap_2E_element * p = (const GALGAS_controllerClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "controllerClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element::GALGAS_controllerMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mControllerClassName (),
mAttribute_mControlledClassOrEntityName (),
mAttribute_mControllerBindingList (),
mAttribute_mActionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element::~ GALGAS_controllerMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element::GALGAS_controllerMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_string & inOperand1,
                                                                  const GALGAS_string & inOperand2,
                                                                  const GALGAS_outletBindingListForGeneration & inOperand3,
                                                                  const GALGAS_actionMap & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mControllerClassName (inOperand1),
mAttribute_mControlledClassOrEntityName (inOperand2),
mAttribute_mControllerBindingList (inOperand3),
mAttribute_mActionMap (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element GALGAS_controllerMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_string & inOperand1,
                                                                                  const GALGAS_string & inOperand2,
                                                                                  const GALGAS_outletBindingListForGeneration & inOperand3,
                                                                                  const GALGAS_actionMap & inOperand4 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_controllerMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerMap_2E_element::objectCompare (const GALGAS_controllerMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerClassName.objectCompare (inOperand.mAttribute_mControllerClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControlledClassOrEntityName.objectCompare (inOperand.mAttribute_mControlledClassOrEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerBindingList.objectCompare (inOperand.mAttribute_mControllerBindingList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_controllerMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerClassName.isValid () && mAttribute_mControlledClassOrEntityName.isValid () && mAttribute_mControllerBindingList.isValid () && mAttribute_mActionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mControllerClassName.drop () ;
  mAttribute_mControlledClassOrEntityName.drop () ;
  mAttribute_mControllerBindingList.drop () ;
  mAttribute_mActionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap_2E_element::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "<struct @controllerMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControlledClassOrEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerBindingList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap_2E_element::reader_mControllerClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap_2E_element::reader_mControlledClassOrEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControlledClassOrEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_controllerMap_2E_element::reader_mControllerBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerBindingList ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerMap_2E_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @controllerMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerMap_2E_element ("controllerMap.element",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element GALGAS_controllerMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap_2E_element result ;
  const GALGAS_controllerMap_2E_element * p = (const GALGAS_controllerMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "controllerMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::GALGAS_relationshipMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mIsToMany (),
mAttribute_mDestinationEntityName (),
mAttribute_mInverseRelationshipName (),
mAttribute_mDeleteRule () {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::~ GALGAS_relationshipMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::GALGAS_relationshipMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_bool & inOperand1,
                                                                      const GALGAS_lstring & inOperand2,
                                                                      const GALGAS_lstring & inOperand3,
                                                                      const GALGAS_deleteRuleEnum & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mIsToMany (inOperand1),
mAttribute_mDestinationEntityName (inOperand2),
mAttribute_mInverseRelationshipName (inOperand3),
mAttribute_mDeleteRule (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_bool & inOperand1,
                                                                                      const GALGAS_lstring & inOperand2,
                                                                                      const GALGAS_lstring & inOperand3,
                                                                                      const GALGAS_deleteRuleEnum & inOperand4 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_relationshipMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_relationshipMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_relationshipMap_2E_element::objectCompare (const GALGAS_relationshipMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsToMany.objectCompare (inOperand.mAttribute_mIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDestinationEntityName.objectCompare (inOperand.mAttribute_mDestinationEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseRelationshipName.objectCompare (inOperand.mAttribute_mInverseRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDeleteRule.objectCompare (inOperand.mAttribute_mDeleteRule) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_relationshipMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIsToMany.drop () ;
  mAttribute_mDestinationEntityName.drop () ;
  mAttribute_mInverseRelationshipName.drop () ;
  mAttribute_mDeleteRule.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @relationshipMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDestinationEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDeleteRule.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap_2E_element::reader_mIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_mDestinationEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_mInverseRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap_2E_element::reader_mDeleteRule (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeleteRule ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @relationshipMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap_2E_element ("relationshipMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap_2E_element result ;
  const GALGAS_relationshipMap_2E_element * p = (const GALGAS_relationshipMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "relationshipMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::GALGAS_propertyMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::~ GALGAS_propertyMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::GALGAS_propertyMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_propertyMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_propertyMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_propertyMap_2E_element::objectCompare (const GALGAS_propertyMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_propertyMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @propertyMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_propertyMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @propertyMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap_2E_element ("propertyMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap_2E_element result ;
  const GALGAS_propertyMap_2E_element * p = (const GALGAS_propertyMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "propertyMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element::GALGAS_actionMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element::~ GALGAS_actionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element::GALGAS_actionMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element GALGAS_actionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_actionMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_actionMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_actionMap_2E_element::objectCompare (const GALGAS_actionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_actionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_actionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_actionMap_2E_element::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "<struct @actionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_actionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @actionMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionMap_2E_element ("actionMap.element",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element GALGAS_actionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_actionMap_2E_element result ;
  const GALGAS_actionMap_2E_element * p = (const GALGAS_actionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "actionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


