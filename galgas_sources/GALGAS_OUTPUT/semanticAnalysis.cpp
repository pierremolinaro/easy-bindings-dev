//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'semanticAnalysis.cpp'                         *
//                        Generated by version 2.4.3                         *
//                    december 10th, 2012, at 11h55'18"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "semanticAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "easyBindings_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "semanticAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'analyzeEntity'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeEntity (const GALGAS_entityList_2E_element constinArgument0,
                            GALGAS_entityMap & ioArgument1,
                            const GALGAS_preferencesMap constinArgument2,
                            GALGAS_transientDependencyGraph & ioArgument3,
                            C_Compiler * inCompiler
                            COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeEntities'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeEntities (const GALGAS_entityList constinArgument0,
                              GALGAS_entityMap & outArgument1,
                              const GALGAS_preferencesMap constinArgument2,
                              GALGAS_transientDependencyGraph & ioArgument3,
                              C_Compiler * inCompiler
                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'analyzePreference'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzePreference (const GALGAS_preferencesDeclarationList_2E_element constinArgument0,
                                const GALGAS_controllerClassMap constinArgument1,
                                const GALGAS_classMap constinArgument2,
                                const GALGAS_outletClassMap constinArgument3,
                                GALGAS_preferencesMap & ioArgument4,
                                GALGAS_transientDependencyGraph & ioArgument5,
                                C_Compiler * inCompiler
                                COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzePreferences'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzePreferences (const GALGAS_preferencesDeclarationList constinArgument0,
                                 const GALGAS_controllerClassMap constinArgument1,
                                 const GALGAS_classMap constinArgument2,
                                 const GALGAS_outletClassMap constinArgument3,
                                 GALGAS_preferencesMap & outArgument4,
                                 GALGAS_transientDependencyGraph & ioArgument5,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'checkBindingOptions'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBindingOptions (const GALGAS_outletBindingOptionList constinArgument0,
                                  const GALGAS_outletClassBindingOptionMap constinArgument1,
                                  GALGAS__32_stringlist & outArgument2,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeDocument'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeDocument (const GALGAS_documentDeclarationList_2E_element constinArgument0,
                              const GALGAS_outletClassMap constinArgument1,
                              const GALGAS_controllerClassMap constinArgument2,
                              const GALGAS_entityMap constinArgument3,
                              const GALGAS_preferencesMap constinArgument4,
                              GALGAS_documentMap & ioArgument5,
                              GALGAS_transientDependencyGraph & ioArgument6,
                              C_Compiler * inCompiler
                              COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'analyzeDocuments'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeDocuments (const GALGAS_documentDeclarationList constinArgument0,
                               const GALGAS_outletClassMap constinArgument1,
                               const GALGAS_controllerClassMap constinArgument2,
                               const GALGAS_entityMap constinArgument3,
                               const GALGAS_preferencesMap constinArgument4,
                               GALGAS_documentMap & outArgument5,
                               GALGAS_transientDependencyGraph & ioArgument6,
                               C_Compiler * inCompiler
                               COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkDefaultValueType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDefaultValueType (const GALGAS_easyBindingTypeList constinArgument0,
                                    const GALGAS_easyBindingType constinArgument1,
                                    const GALGAS_lstring constinArgument2,
                                    C_Compiler * inCompiler
                                    COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'analyzeClass'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeClass (const GALGAS_classList_2E_element constinArgument0,
                           GALGAS_classMap & ioArgument1,
                           GALGAS_transientDependencyGraph & ioArgument2,
                           C_Compiler * inCompiler
                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeClasses'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeClasses (const GALGAS_classList constinArgument0,
                             GALGAS_classMap & outArgument1,
                             GALGAS_transientDependencyGraph & ioArgument2,
                             C_Compiler * inCompiler
                             COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeOutletClasses'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeOutletClasses (const GALGAS_outletClassList constinArgument0,
                                   const GALGAS_protocolMap constinArgument1,
                                   GALGAS_outletClassMap & outArgument2,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeControllerClass'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClass (const GALGAS_controllerClassList_2E_element constinArgument0,
                                     GALGAS_transientDependencyGraph & ioArgument1,
                                     GALGAS_controllerClassMap & ioArgument2,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeControllerClasses'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClasses (const GALGAS_controllerClassList constinArgument0,
                                       GALGAS_transientDependencyGraph & ioArgument1,
                                       GALGAS_controllerClassMap & outArgument2,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

cMapElement_userCursorMap::cMapElement_userCursorMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_double & in_mHotSpotX,
                                                      const GALGAS_double & in_mHotSpotY
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mHotSpotX (in_mHotSpotX),
mAttribute_mHotSpotY (in_mHotSpotY) {
}

//---------------------------------------------------------------------------*

bool cMapElement_userCursorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_userCursorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_userCursorMap (mAttribute_lkey, mAttribute_mHotSpotX, mAttribute_mHotSpotY COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_userCursorMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHotSpotX" ":" ;
  mAttribute_mHotSpotX.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHotSpotY" ":" ;
  mAttribute_mHotSpotY.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_userCursorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_userCursorMap * operand = (cMapElement_userCursorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mHotSpotX.objectCompare (operand->mAttribute_mHotSpotX) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHotSpotY.objectCompare (operand->mAttribute_mHotSpotY) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap::GALGAS_userCursorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap::GALGAS_userCursorMap (const GALGAS_userCursorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap & GALGAS_userCursorMap::operator = (const GALGAS_userCursorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::constructor_mapWithMapToOverride (const GALGAS_userCursorMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_userCursorMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_double inArgument0,
                                               GALGAS_double inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_userCursorMap * p = NULL ;
  macroMyNew (p, cMapElement_userCursorMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' cursor is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_userCursorMap_searchKey = "the '%K' cursor is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_double & outArgument0,
                                             GALGAS_double & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_userCursorMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_userCursorMap) ;
    outArgument0 = p->mAttribute_mHotSpotX ;
    outArgument1 = p->mAttribute_mHotSpotY ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap::reader_mHotSpotXForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) attributes ;
  GALGAS_double result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_userCursorMap) ;
    result = p->mAttribute_mHotSpotX ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap::reader_mHotSpotYForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) attributes ;
  GALGAS_double result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_userCursorMap) ;
    result = p->mAttribute_mHotSpotY ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_setMHotSpotXForKey (GALGAS_double inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * p = (cMapElement_userCursorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    p->mAttribute_mHotSpotX = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_setMHotSpotYForKey (GALGAS_double inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * p = (cMapElement_userCursorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    p->mAttribute_mHotSpotY = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_userCursorMap * GALGAS_userCursorMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * result = (cMapElement_userCursorMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_userCursorMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_userCursorMap * GALGAS_userCursorMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_userCursorMap_searchKey COMMA_THERE) ;
  cMapElement_userCursorMap * result = (cMapElement_userCursorMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_userCursorMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_userCursorMap::cEnumerator_userCursorMap (const GALGAS_userCursorMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element cEnumerator_userCursorMap::current (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_userCursorMap) ;
  return GALGAS_userCursorMap_2E_element (p->mAttribute_lkey, p->mAttribute_mHotSpotX, p->mAttribute_mHotSpotY) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_userCursorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_double cEnumerator_userCursorMap::current_mHotSpotX (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_userCursorMap) ;
  return p->mAttribute_mHotSpotX ;
}

//---------------------------------------------------------------------------*

GALGAS_double cEnumerator_userCursorMap::current_mHotSpotY (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_userCursorMap) ;
  return p->mAttribute_mHotSpotY ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @userCursorMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_userCursorMap ("userCursorMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_userCursorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_userCursorMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_userCursorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_userCursorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler,
                                                          const GALGAS_location & inErrorLocation
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  const GALGAS_userCursorMap * p = (const GALGAS_userCursorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_userCursorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "userCursorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap::cMapElement_classMap (const GALGAS_lstring & inKey,
                                            const GALGAS_string & in_mSuperClassName,
                                            const GALGAS_observablePropertyMap & in_mPropertyMap,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                            const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                            const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                            const GALGAS_stringset & in_mImplementationFileInclusionSet
                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mPropertyMap (in_mPropertyMap),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_classMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_classMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classMap (mAttribute_lkey, mAttribute_mSuperClassName, mAttribute_mPropertyMap, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mImplementationFileInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_classMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyMap" ":" ;
  mAttribute_mPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_classMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classMap * operand = (cMapElement_classMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyMap.objectCompare (operand->mAttribute_mPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (const GALGAS_classMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap & GALGAS_classMap::operator = (const GALGAS_classMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_mapWithMapToOverride (const GALGAS_classMap & inMapToOverride
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_classMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_insertKey (GALGAS_lstring inKey,
                                          GALGAS_string inArgument0,
                                          GALGAS_observablePropertyMap inArgument1,
                                          GALGAS_attributeListForImplementation inArgument2,
                                          GALGAS_attributeListForImplementation inArgument3,
                                          GALGAS_attributeListForImplementation inArgument4,
                                          GALGAS_transientListForImplementation inArgument5,
                                          GALGAS_stringset inArgument6,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_classMap * p = NULL ;
  macroMyNew (p, cMapElement_classMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_classMap_searchKey = "the '%K' class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_classMap::method_searchKey (GALGAS_lstring inKey,
                                        GALGAS_string & outArgument0,
                                        GALGAS_observablePropertyMap & outArgument1,
                                        GALGAS_attributeListForImplementation & outArgument2,
                                        GALGAS_attributeListForImplementation & outArgument3,
                                        GALGAS_attributeListForImplementation & outArgument4,
                                        GALGAS_transientListForImplementation & outArgument5,
                                        GALGAS_stringset & outArgument6,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) performSearch (inKey,
                                                                                   inCompiler,
                                                                                   kSearchErrorMessage_classMap_searchKey
                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_classMap) ;
    outArgument0 = p->mAttribute_mSuperClassName ;
    outArgument1 = p->mAttribute_mPropertyMap ;
    outArgument2 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument3 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument4 = p->mAttribute_mAttributeListForImplementation ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mImplementationFileInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_classMap::reader_mPropertyMapForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_classMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMPropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                  GALGAS_string inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                  const GALGAS_string & inKey
                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                     const GALGAS_lstring & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_classMap_searchKey COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_classMap::cEnumerator_classMap (const GALGAS_classMap & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element cEnumerator_classMap::current (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return GALGAS_classMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSuperClassName, p->mAttribute_mPropertyMap, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mImplementationFileInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_classMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_classMap::current_mPropertyMap (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_classMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_classMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @classMap type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap ("classMap",
                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler,
                                                const GALGAS_location & inErrorLocation
                                                COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  const GALGAS_classMap * p = (const GALGAS_classMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "classMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap::cMapElement_entityMap (const GALGAS_lstring & inKey,
                                              const GALGAS_string & in_mSuperEntityName,
                                              const GALGAS_string & in_mImplementationClassName,
                                              const GALGAS_string & in_mSuperImplementationClassName,
                                              const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                              const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                              const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                              const GALGAS_relationshipList & in_mAllRelationshipList,
                                              const GALGAS_propertyMap & in_mAllPropertyMap,
                                              const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                              const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                              const GALGAS_stringset & in_mImplementationFileInclusionSet,
                                              const GALGAS__32_stringlist & in_mToManyRelationshipList
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperEntityName (in_mSuperEntityName),
mAttribute_mImplementationClassName (in_mImplementationClassName),
mAttribute_mSuperImplementationClassName (in_mSuperImplementationClassName),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mCurrentRelationshipList (in_mCurrentRelationshipList),
mAttribute_mAllRelationshipList (in_mAllRelationshipList),
mAttribute_mAllPropertyMap (in_mAllPropertyMap),
mAttribute_mCurrentRelationshipMap (in_mCurrentRelationshipMap),
mAttribute_mAllRelationshipMap (in_mAllRelationshipMap),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet),
mAttribute_mToManyRelationshipList (in_mToManyRelationshipList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_entityMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mImplementationClassName.isValid () && mAttribute_mSuperImplementationClassName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () && mAttribute_mToManyRelationshipList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_entityMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_entityMap (mAttribute_lkey, mAttribute_mSuperEntityName, mAttribute_mImplementationClassName, mAttribute_mSuperImplementationClassName, mAttribute_mObservablePropertyMap, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mCurrentRelationshipList, mAttribute_mAllRelationshipList, mAttribute_mAllPropertyMap, mAttribute_mCurrentRelationshipMap, mAttribute_mAllRelationshipMap, mAttribute_mImplementationFileInclusionSet, mAttribute_mToManyRelationshipList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_entityMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationClassName" ":" ;
  mAttribute_mImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperImplementationClassName" ":" ;
  mAttribute_mSuperImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipList" ":" ;
  mAttribute_mCurrentRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipList" ":" ;
  mAttribute_mAllRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllPropertyMap" ":" ;
  mAttribute_mAllPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipMap" ":" ;
  mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipMap" ":" ;
  mAttribute_mAllRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mToManyRelationshipList" ":" ;
  mAttribute_mToManyRelationshipList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_entityMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_entityMap * operand = (cMapElement_entityMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperEntityName.objectCompare (operand->mAttribute_mSuperEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationClassName.objectCompare (operand->mAttribute_mImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperImplementationClassName.objectCompare (operand->mAttribute_mSuperImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (operand->mAttribute_mCurrentRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipList.objectCompare (operand->mAttribute_mAllRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllPropertyMap.objectCompare (operand->mAttribute_mAllPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (operand->mAttribute_mCurrentRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipMap.objectCompare (operand->mAttribute_mAllRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mToManyRelationshipList.objectCompare (operand->mAttribute_mToManyRelationshipList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (const GALGAS_entityMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap & GALGAS_entityMap::operator = (const GALGAS_entityMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_mapWithMapToOverride (const GALGAS_entityMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_entityMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_string inArgument0,
                                           GALGAS_string inArgument1,
                                           GALGAS_string inArgument2,
                                           GALGAS_observablePropertyMap inArgument3,
                                           GALGAS_attributeListForImplementation inArgument4,
                                           GALGAS_attributeListForImplementation inArgument5,
                                           GALGAS_attributeListForImplementation inArgument6,
                                           GALGAS_transientListForImplementation inArgument7,
                                           GALGAS_relationshipList inArgument8,
                                           GALGAS_relationshipList inArgument9,
                                           GALGAS_propertyMap inArgument10,
                                           GALGAS_relationshipMap inArgument11,
                                           GALGAS_relationshipMap inArgument12,
                                           GALGAS_stringset inArgument13,
                                           GALGAS__32_stringlist inArgument14,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * p = NULL ;
  macroMyNew (p, cMapElement_entityMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10, inArgument11, inArgument12, inArgument13, inArgument14 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entity is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_entityMap_searchKey = "the '%K' entity is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_entityMap::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_string & outArgument0,
                                         GALGAS_string & outArgument1,
                                         GALGAS_string & outArgument2,
                                         GALGAS_observablePropertyMap & outArgument3,
                                         GALGAS_attributeListForImplementation & outArgument4,
                                         GALGAS_attributeListForImplementation & outArgument5,
                                         GALGAS_attributeListForImplementation & outArgument6,
                                         GALGAS_transientListForImplementation & outArgument7,
                                         GALGAS_relationshipList & outArgument8,
                                         GALGAS_relationshipList & outArgument9,
                                         GALGAS_propertyMap & outArgument10,
                                         GALGAS_relationshipMap & outArgument11,
                                         GALGAS_relationshipMap & outArgument12,
                                         GALGAS_stringset & outArgument13,
                                         GALGAS__32_stringlist & outArgument14,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_entityMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
    outArgument9.drop () ;
    outArgument10.drop () ;
    outArgument11.drop () ;
    outArgument12.drop () ;
    outArgument13.drop () ;
    outArgument14.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    outArgument0 = p->mAttribute_mSuperEntityName ;
    outArgument1 = p->mAttribute_mImplementationClassName ;
    outArgument2 = p->mAttribute_mSuperImplementationClassName ;
    outArgument3 = p->mAttribute_mObservablePropertyMap ;
    outArgument4 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument5 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument6 = p->mAttribute_mAttributeListForImplementation ;
    outArgument7 = p->mAttribute_mTransientListForImplementation ;
    outArgument8 = p->mAttribute_mCurrentRelationshipList ;
    outArgument9 = p->mAttribute_mAllRelationshipList ;
    outArgument10 = p->mAttribute_mAllPropertyMap ;
    outArgument11 = p->mAttribute_mCurrentRelationshipMap ;
    outArgument12 = p->mAttribute_mAllRelationshipMap ;
    outArgument13 = p->mAttribute_mImplementationFileInclusionSet ;
    outArgument14 = p->mAttribute_mToManyRelationshipList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperEntityNameForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mCurrentRelationshipListForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mAllRelationshipListForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap::reader_mAllPropertyMapForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mCurrentRelationshipMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mAllRelationshipMapForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_entityMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityMap::reader_mToManyRelationshipListForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mToManyRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperEntityNameForKey (GALGAS_string inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                        GALGAS_string inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllPropertyMapForKey (GALGAS_propertyMap inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMToManyRelationshipListForKey (GALGAS__32_stringlist inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mToManyRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_entityMap_searchKey COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_entityMap::cEnumerator_entityMap (const GALGAS_entityMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element cEnumerator_entityMap::current (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return GALGAS_entityMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSuperEntityName, p->mAttribute_mImplementationClassName, p->mAttribute_mSuperImplementationClassName, p->mAttribute_mObservablePropertyMap, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mCurrentRelationshipList, p->mAttribute_mAllRelationshipList, p->mAttribute_mAllPropertyMap, p->mAttribute_mCurrentRelationshipMap, p->mAttribute_mAllRelationshipMap, p->mAttribute_mImplementationFileInclusionSet, p->mAttribute_mToManyRelationshipList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_entityMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperEntityName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_entityMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mCurrentRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mAllRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap cEnumerator_entityMap::current_mAllPropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mCurrentRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mAllRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_entityMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_entityMap::current_mToManyRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mToManyRelationshipList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @entityMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap ("entityMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler,
                                                  const GALGAS_location & inErrorLocation
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  const GALGAS_entityMap * p = (const GALGAS_entityMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "entityMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Class for element of '@columnBindingForTableValueBindingForGeneration' list*
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_columnBindingForTableValueBindingForGeneration : public cCollectionElement {
  public : GALGAS_columnBindingForTableValueBindingForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                              const GALGAS_string & in_mRequiredCellClass,
                                                                              const GALGAS_string & in_mObservableAttributeName,
                                                                              const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_columnBindingForTableValueBindingForGeneration::cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                                                                                      const GALGAS_string & in_mRequiredCellClass,
                                                                                                                                      const GALGAS_string & in_mObservableAttributeName,
                                                                                                                                      const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mColumnIdentifier, in_mRequiredCellClass, in_mObservableAttributeName, in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_columnBindingForTableValueBindingForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_columnBindingForTableValueBindingForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_columnBindingForTableValueBindingForGeneration (mObject.mAttribute_mColumnIdentifier, mObject.mAttribute_mRequiredCellClass, mObject.mAttribute_mObservableAttributeName, mObject.mAttribute_mOutletBindingOptionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_columnBindingForTableValueBindingForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mColumnIdentifier" ":" ;
  mObject.mAttribute_mColumnIdentifier.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredCellClass" ":" ;
  mObject.mAttribute_mRequiredCellClass.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableAttributeName" ":" ;
  mObject.mAttribute_mObservableAttributeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingOptionList" ":" ;
  mObject.mAttribute_mOutletBindingOptionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_columnBindingForTableValueBindingForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * operand = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                                                        const GALGAS_string & inOperand1,
                                                                                                                                        const GALGAS_string & inOperand2,
                                                                                                                                        const GALGAS__32_stringlist & inOperand3
                                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                       const GALGAS_string & in_mColumnIdentifier,
                                                                                       const GALGAS_string & in_mRequiredCellClass,
                                                                                       const GALGAS_string & in_mObservableAttributeName,
                                                                                       const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (in_mColumnIdentifier,
                                                                                    in_mRequiredCellClass,
                                                                                    in_mObservableAttributeName,
                                                                                    in_mOutletBindingOptionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                                                 const GALGAS_string & inOperand1,
                                                                                 const GALGAS_string & inOperand2,
                                                                                 const GALGAS__32_stringlist & inOperand3
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_prependValue (GALGAS_string inOperand0,
                                                                                   GALGAS_string inOperand1,
                                                                                   GALGAS_string inOperand2,
                                                                                   GALGAS__32_stringlist inOperand3
                                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                                               GALGAS_string & outOperand1,
                                                                               GALGAS_string & outOperand2,
                                                                               GALGAS__32_stringlist & outOperand3,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                                              GALGAS_string & outOperand1,
                                                                              GALGAS_string & outOperand2,
                                                                              GALGAS__32_stringlist & outOperand3,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_first (GALGAS_string & outOperand0,
                                                                          GALGAS_string & outOperand1,
                                                                          GALGAS_string & outOperand2,
                                                                          GALGAS__32_stringlist & outOperand3,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_last (GALGAS_string & outOperand0,
                                                                         GALGAS_string & outOperand1,
                                                                         GALGAS_string & outOperand2,
                                                                         GALGAS__32_stringlist & outOperand3,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::operator_concat (const GALGAS_columnBindingForTableValueBindingForGeneration & inOperand
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::dotAssign_operation (const GALGAS_columnBindingForTableValueBindingForGeneration inOperand
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mColumnIdentifierAtIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mColumnIdentifier ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mRequiredCellClassAtIndex (const GALGAS_uint & inIndex,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mRequiredCellClass ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mObservableAttributeNameAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration::reader_mOutletBindingOptionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_columnBindingForTableValueBindingForGeneration::cEnumerator_columnBindingForTableValueBindingForGeneration (const GALGAS_columnBindingForTableValueBindingForGeneration & inEnumeratedObject,
                                                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element cEnumerator_columnBindingForTableValueBindingForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mColumnIdentifier (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mColumnIdentifier ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mRequiredCellClass (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mRequiredCellClass ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mObservableAttributeName (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_columnBindingForTableValueBindingForGeneration::current_mOutletBindingOptionList (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mOutletBindingOptionList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//           @columnBindingForTableValueBindingForGeneration type            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ("columnBindingForTableValueBindingForGeneration",
                                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler,
                                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration * p = (const GALGAS_columnBindingForTableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "columnBindingForTableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_protocolMap::cMapElement_protocolMap (const GALGAS_lstring & inKey
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_protocolMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_protocolMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_protocolMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_protocolMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_protocolMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_protocolMap * operand = (cMapElement_protocolMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap::GALGAS_protocolMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap::GALGAS_protocolMap (const GALGAS_protocolMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap & GALGAS_protocolMap::operator = (const GALGAS_protocolMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::constructor_mapWithMapToOverride (const GALGAS_protocolMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_protocolMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_protocolMap::modifier_insertKey (GALGAS_lstring inKey,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_protocolMap * p = NULL ;
  macroMyNew (p, cMapElement_protocolMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' protocol is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_protocolMap_searchKey = "the '%K' protocol is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_protocolMap::method_searchKey (GALGAS_lstring inKey,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_protocolMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_protocolMap) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_protocolMap * GALGAS_protocolMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_protocolMap * result = (cMapElement_protocolMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_protocolMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_protocolMap * GALGAS_protocolMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_protocolMap_searchKey COMMA_THERE) ;
  cMapElement_protocolMap * result = (cMapElement_protocolMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_protocolMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_protocolMap::cEnumerator_protocolMap (const GALGAS_protocolMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element cEnumerator_protocolMap::current (LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_protocolMap) ;
  return GALGAS_protocolMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_protocolMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @protocolMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolMap ("protocolMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  const GALGAS_protocolMap * p = (const GALGAS_protocolMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "protocolMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_documentMap::cMapElement_documentMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_string & in_mRootEntityName,
                                                  const GALGAS_string & in_mRootEntityImplementationClassName,
                                                  const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                  const GALGAS_controllerMap & in_mControllerMap,
                                                  const GALGAS_lstringlist & in_mActionList,
                                                  const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                  const GALGAS_stringset & in_mImplementationFileInclusionSet
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRootEntityName (in_mRootEntityName),
mAttribute_mRootEntityImplementationClassName (in_mRootEntityImplementationClassName),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mActionList (in_mActionList),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mImplementationFileInclusionSet (in_mImplementationFileInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_documentMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mRootEntityImplementationClassName.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mActionList.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_documentMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_documentMap (mAttribute_lkey, mAttribute_mRootEntityName, mAttribute_mRootEntityImplementationClassName, mAttribute_mOutletDeclarationList, mAttribute_mControllerMap, mAttribute_mActionList, mAttribute_mTransientListForImplementation, mAttribute_mImplementationFileInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_documentMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityName" ":" ;
  mAttribute_mRootEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityImplementationClassName" ":" ;
  mAttribute_mRootEntityImplementationClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementationFileInclusionSet" ":" ;
  mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_documentMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_documentMap * operand = (cMapElement_documentMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityName.objectCompare (operand->mAttribute_mRootEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityImplementationClassName.objectCompare (operand->mAttribute_mRootEntityImplementationClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (operand->mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap::GALGAS_documentMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap::GALGAS_documentMap (const GALGAS_documentMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap & GALGAS_documentMap::operator = (const GALGAS_documentMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_documentMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::constructor_mapWithMapToOverride (const GALGAS_documentMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_documentMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_documentMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_string inArgument0,
                                             GALGAS_string inArgument1,
                                             GALGAS_outletGenerationList inArgument2,
                                             GALGAS_controllerMap inArgument3,
                                             GALGAS_lstringlist inArgument4,
                                             GALGAS_transientListForImplementation inArgument5,
                                             GALGAS_stringset inArgument6,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_documentMap * p = NULL ;
  macroMyNew (p, cMapElement_documentMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' document is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_documentMap_searchKey = "the '%K' document is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_documentMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_string & outArgument0,
                                           GALGAS_string & outArgument1,
                                           GALGAS_outletGenerationList & outArgument2,
                                           GALGAS_controllerMap & outArgument3,
                                           GALGAS_lstringlist & outArgument4,
                                           GALGAS_transientListForImplementation & outArgument5,
                                           GALGAS_stringset & outArgument6,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_documentMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    outArgument0 = p->mAttribute_mRootEntityName ;
    outArgument1 = p->mAttribute_mRootEntityImplementationClassName ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mControllerMap ;
    outArgument4 = p->mAttribute_mActionList ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mImplementationFileInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap::reader_mRootEntityNameForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mRootEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap::reader_mRootEntityImplementationClassNameForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mRootEntityImplementationClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_documentMap::reader_mImplementationFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mImplementationFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMRootEntityNameForKey (GALGAS_string inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mRootEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMRootEntityImplementationClassNameForKey (GALGAS_string inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mRootEntityImplementationClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMImplementationFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mImplementationFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_documentMap * GALGAS_documentMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * result = (cMapElement_documentMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_documentMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_documentMap * GALGAS_documentMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_documentMap_searchKey COMMA_THERE) ;
  cMapElement_documentMap * result = (cMapElement_documentMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_documentMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_documentMap::cEnumerator_documentMap (const GALGAS_documentMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element cEnumerator_documentMap::current (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return GALGAS_documentMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRootEntityName, p->mAttribute_mRootEntityImplementationClassName, p->mAttribute_mOutletDeclarationList, p->mAttribute_mControllerMap, p->mAttribute_mActionList, p->mAttribute_mTransientListForImplementation, p->mAttribute_mImplementationFileInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_documentMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_documentMap::current_mRootEntityName (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_documentMap::current_mRootEntityImplementationClassName (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mRootEntityImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_documentMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_documentMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_documentMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_documentMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_documentMap::current_mImplementationFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @documentMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentMap ("documentMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_documentMap result ;
  const GALGAS_documentMap * p = (const GALGAS_documentMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "documentMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap::cMapElement_outletClassBindingOptionMap (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_easyBindingTypeList & in_mAcceptableTypeList
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingOptionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingOptionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingOptionMap (mAttribute_lkey, mAttribute_mAcceptableTypeList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingOptionMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingOptionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingOptionMap * operand = (cMapElement_outletClassBindingOptionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap & GALGAS_outletClassBindingOptionMap::operator = (const GALGAS_outletClassBindingOptionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingOptionMap & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingOptionMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_easyBindingTypeList inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding option is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingOptionMap_searchKey = "the '%K' binding option is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_easyBindingTypeList & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_outletClassBindingOptionMap_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_outletClassBindingOptionMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) attributes ;
  GALGAS_easyBindingTypeList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeList inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * p = (cMapElement_outletClassBindingOptionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                        const GALGAS_string & inKey
                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingOptionMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingOptionMap::cEnumerator_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element cEnumerator_outletClassBindingOptionMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return GALGAS_outletClassBindingOptionMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingOptionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList cEnumerator_outletClassBindingOptionMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @outletClassBindingOptionMap type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap ("outletClassBindingOptionMap",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  const GALGAS_outletClassBindingOptionMap * p = (const GALGAS_outletClassBindingOptionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingOptionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap::cMapElement_outletClassBindingMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_easyBindingTypeAndFormatterList & in_mAcceptableTypeList,
                                                                      const GALGAS_outletClassBindingOptionMap & in_mOutletClassBindingOptionMap
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList),
mAttribute_mOutletClassBindingOptionMap (in_mOutletClassBindingOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingMap (mAttribute_lkey, mAttribute_mAcceptableTypeList, mAttribute_mOutletClassBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingOptionMap" ":" ;
  mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingMap * operand = (cMapElement_outletClassBindingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (operand->mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (const GALGAS_outletClassBindingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap & GALGAS_outletClassBindingMap::operator = (const GALGAS_outletClassBindingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_easyBindingTypeAndFormatterList inArgument0,
                                                       GALGAS_outletClassBindingOptionMap inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingMap_searchKey = "the '%K' binding is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_easyBindingTypeAndFormatterList & outArgument0,
                                                     GALGAS_outletClassBindingOptionMap & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_outletClassBindingMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
    outArgument1 = p->mAttribute_mOutletClassBindingOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_outletClassBindingMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_easyBindingTypeAndFormatterList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap::reader_mOutletClassBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_outletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mOutletClassBindingOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeAndFormatterList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMOutletClassBindingOptionMapForKey (GALGAS_outletClassBindingOptionMap inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mOutletClassBindingOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                            const GALGAS_string & inKey
                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                               const GALGAS_lstring & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingMap::cEnumerator_outletClassBindingMap (const GALGAS_outletClassBindingMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element cEnumerator_outletClassBindingMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return GALGAS_outletClassBindingMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList, p->mAttribute_mOutletClassBindingOptionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList cEnumerator_outletClassBindingMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap cEnumerator_outletClassBindingMap::current_mOutletClassBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletClassBindingMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap ("outletClassBindingMap",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler,
                                                                          const GALGAS_location & inErrorLocation
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  const GALGAS_outletClassBindingMap * p = (const GALGAS_outletClassBindingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap::cMapElement_outletClassMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_generationKind & in_mGenerationKind,
                                                        const GALGAS_string & in_mSuperClassName,
                                                        const GALGAS_lstringlist & in_mAdoptedProtocolList,
                                                        const GALGAS_outletClassBindingMap & in_mBindingMap,
                                                        const GALGAS_bool & in_mHasTableValueBinding
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerationKind (in_mGenerationKind),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mAdoptedProtocolList (in_mAdoptedProtocolList),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mHasTableValueBinding (in_mHasTableValueBinding) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mAdoptedProtocolList.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassMap (mAttribute_lkey, mAttribute_mGenerationKind, mAttribute_mSuperClassName, mAttribute_mAdoptedProtocolList, mAttribute_mBindingMap, mAttribute_mHasTableValueBinding COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerationKind" ":" ;
  mAttribute_mGenerationKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAdoptedProtocolList" ":" ;
  mAttribute_mAdoptedProtocolList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHasTableValueBinding" ":" ;
  mAttribute_mHasTableValueBinding.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassMap * operand = (cMapElement_outletClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationKind.objectCompare (operand->mAttribute_mGenerationKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (operand->mAttribute_mAdoptedProtocolList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasTableValueBinding.objectCompare (operand->mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (const GALGAS_outletClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap & GALGAS_outletClassMap::operator = (const GALGAS_outletClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_mapWithMapToOverride (const GALGAS_outletClassMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_generationKind inArgument0,
                                                GALGAS_string inArgument1,
                                                GALGAS_lstringlist inArgument2,
                                                GALGAS_outletClassBindingMap inArgument3,
                                                GALGAS_bool inArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' outlet class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassMap_searchKey = "the '%K' outlet class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_generationKind & outArgument0,
                                              GALGAS_string & outArgument1,
                                              GALGAS_lstringlist & outArgument2,
                                              GALGAS_outletClassBindingMap & outArgument3,
                                              GALGAS_bool & outArgument4,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_outletClassMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    outArgument0 = p->mAttribute_mGenerationKind ;
    outArgument1 = p->mAttribute_mSuperClassName ;
    outArgument2 = p->mAttribute_mAdoptedProtocolList ;
    outArgument3 = p->mAttribute_mBindingMap ;
    outArgument4 = p->mAttribute_mHasTableValueBinding ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_outletClassMap::reader_mGenerationKindForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_generationKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mGenerationKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_outletClassMap::reader_mAdoptedProtocolListForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mAdoptedProtocolList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mHasTableValueBindingForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mHasTableValueBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMGenerationKindForKey (GALGAS_generationKind inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mGenerationKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMAdoptedProtocolListForKey (GALGAS_lstringlist inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mAdoptedProtocolList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMHasTableValueBindingForKey (GALGAS_bool inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mHasTableValueBinding = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassMap::cEnumerator_outletClassMap (const GALGAS_outletClassMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element cEnumerator_outletClassMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return GALGAS_outletClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mGenerationKind, p->mAttribute_mSuperClassName, p->mAttribute_mAdoptedProtocolList, p->mAttribute_mBindingMap, p->mAttribute_mHasTableValueBinding) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind cEnumerator_outletClassMap::current_mGenerationKind (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mGenerationKind ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletClassMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_outletClassMap::current_mAdoptedProtocolList (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mAdoptedProtocolList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_outletClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mHasTableValueBinding (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mHasTableValueBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @outletClassMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap ("outletClassMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler,
                                                            const GALGAS_location & inErrorLocation
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  const GALGAS_outletClassMap * p = (const GALGAS_outletClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap::cMapElement_controllerClassMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_bool & in_mGenerateCode,
                                                                const GALGAS_outletClassBindingMap & in_mBindingMap,
                                                                const GALGAS_actionMap & in_mActionMap,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerateCode (in_mGenerateCode),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mActionMap (in_mActionMap),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_controllerClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_controllerClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerClassMap (mAttribute_lkey, mAttribute_mGenerateCode, mAttribute_mBindingMap, mAttribute_mActionMap, mAttribute_mObservablePropertyMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_controllerClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerateCode" ":" ;
  mAttribute_mGenerateCode.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerClassMap * operand = (cMapElement_controllerClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerateCode.objectCompare (operand->mAttribute_mGenerateCode) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (const GALGAS_controllerClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap & GALGAS_controllerClassMap::operator = (const GALGAS_controllerClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_mapWithMapToOverride (const GALGAS_controllerClassMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerClassMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_bool inArgument0,
                                                    GALGAS_outletClassBindingMap inArgument1,
                                                    GALGAS_actionMap inArgument2,
                                                    GALGAS_observablePropertyMap inArgument3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_controllerClassMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerClassMap_searchKey = "the '%K' controller class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_bool & outArgument0,
                                                  GALGAS_outletClassBindingMap & outArgument1,
                                                  GALGAS_actionMap & outArgument2,
                                                  GALGAS_observablePropertyMap & outArgument3,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_controllerClassMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    outArgument0 = p->mAttribute_mGenerateCode ;
    outArgument1 = p->mAttribute_mBindingMap ;
    outArgument2 = p->mAttribute_mActionMap ;
    outArgument3 = p->mAttribute_mObservablePropertyMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerClassMap::reader_mGenerateCodeForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mGenerateCode ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMGenerateCodeForKey (GALGAS_bool inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mGenerateCode = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                      const GALGAS_string & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                         const GALGAS_lstring & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_controllerClassMap_searchKey COMMA_THERE) ;
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_controllerClassMap::cEnumerator_controllerClassMap (const GALGAS_controllerClassMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element cEnumerator_controllerClassMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return GALGAS_controllerClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mGenerateCode, p->mAttribute_mBindingMap, p->mAttribute_mActionMap, p->mAttribute_mObservablePropertyMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_controllerClassMap::current_mGenerateCode (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_controllerClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerClassMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_controllerClassMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @controllerClassMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap ("controllerClassMap",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler,
                                                                    const GALGAS_location & inErrorLocation
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  const GALGAS_controllerClassMap * p = (const GALGAS_controllerClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "controllerClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap::cMapElement_relationshipMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_bool & in_mIsToMany,
                                                          const GALGAS_lstring & in_mDestinationEntityName,
                                                          const GALGAS_lstring & in_mInverseRelationshipName,
                                                          const GALGAS_deleteRuleEnum & in_mDeleteRule
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsToMany (in_mIsToMany),
mAttribute_mDestinationEntityName (in_mDestinationEntityName),
mAttribute_mInverseRelationshipName (in_mInverseRelationshipName),
mAttribute_mDeleteRule (in_mDeleteRule) {
}

//---------------------------------------------------------------------------*

bool cMapElement_relationshipMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_relationshipMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_relationshipMap (mAttribute_lkey, mAttribute_mIsToMany, mAttribute_mDestinationEntityName, mAttribute_mInverseRelationshipName, mAttribute_mDeleteRule COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_relationshipMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsToMany" ":" ;
  mAttribute_mIsToMany.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDestinationEntityName" ":" ;
  mAttribute_mDestinationEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInverseRelationshipName" ":" ;
  mAttribute_mInverseRelationshipName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeleteRule" ":" ;
  mAttribute_mDeleteRule.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_relationshipMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_relationshipMap * operand = (cMapElement_relationshipMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsToMany.objectCompare (operand->mAttribute_mIsToMany) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDestinationEntityName.objectCompare (operand->mAttribute_mDestinationEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInverseRelationshipName.objectCompare (operand->mAttribute_mInverseRelationshipName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDeleteRule.objectCompare (operand->mAttribute_mDeleteRule) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (const GALGAS_relationshipMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap & GALGAS_relationshipMap::operator = (const GALGAS_relationshipMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_mapWithMapToOverride (const GALGAS_relationshipMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_relationshipMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_bool inArgument0,
                                                 GALGAS_lstring inArgument1,
                                                 GALGAS_lstring inArgument2,
                                                 GALGAS_deleteRuleEnum inArgument3,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_relationshipMap * p = NULL ;
  macroMyNew (p, cMapElement_relationshipMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' relationship is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_relationshipMap_searchKey = "the '%K' relationship is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_bool & outArgument0,
                                               GALGAS_lstring & outArgument1,
                                               GALGAS_lstring & outArgument2,
                                               GALGAS_deleteRuleEnum & outArgument3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_relationshipMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    outArgument0 = p->mAttribute_mIsToMany ;
    outArgument1 = p->mAttribute_mDestinationEntityName ;
    outArgument2 = p->mAttribute_mInverseRelationshipName ;
    outArgument3 = p->mAttribute_mDeleteRule ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap::reader_mIsToManyForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mIsToMany ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mDestinationEntityNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mDestinationEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mInverseRelationshipNameForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mInverseRelationshipName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap::reader_mDeleteRuleForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_deleteRuleEnum result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mDeleteRule ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMIsToManyForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mIsToMany = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDestinationEntityNameForKey (GALGAS_lstring inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDestinationEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMInverseRelationshipNameForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mInverseRelationshipName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDeleteRuleForKey (GALGAS_deleteRuleEnum inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDeleteRule = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_relationshipMap_searchKey COMMA_THERE) ;
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_relationshipMap::cEnumerator_relationshipMap (const GALGAS_relationshipMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element cEnumerator_relationshipMap::current (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return GALGAS_relationshipMap_2E_element (p->mAttribute_lkey, p->mAttribute_mIsToMany, p->mAttribute_mDestinationEntityName, p->mAttribute_mInverseRelationshipName, p->mAttribute_mDeleteRule) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_relationshipMap::current_mIsToMany (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mDestinationEntityName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mInverseRelationshipName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum cEnumerator_relationshipMap::current_mDeleteRule (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mDeleteRule ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @relationshipMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap ("relationshipMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler,
                                                              const GALGAS_location & inErrorLocation
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  const GALGAS_relationshipMap * p = (const GALGAS_relationshipMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "relationshipMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_propertyMap::cMapElement_propertyMap (const GALGAS_lstring & inKey
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_propertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_propertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_propertyMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_propertyMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_propertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_propertyMap * operand = (cMapElement_propertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (const GALGAS_propertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap & GALGAS_propertyMap::operator = (const GALGAS_propertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_mapWithMapToOverride (const GALGAS_propertyMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::reader_overriddenMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyMap result ;
  getOverridenMap (result) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_propertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_propertyMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' property (attribute, transient or relationship)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_propertyMap * GALGAS_propertyMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_propertyMap * result = (cMapElement_propertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_propertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_propertyMap::cEnumerator_propertyMap (const GALGAS_propertyMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element cEnumerator_propertyMap::current (LOCATION_ARGS) const {
  const cMapElement_propertyMap * p = (const cMapElement_propertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_propertyMap) ;
  return GALGAS_propertyMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_propertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @propertyMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap ("propertyMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler,
                                                      const GALGAS_location & inErrorLocation
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  const GALGAS_propertyMap * p = (const GALGAS_propertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "propertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'analyzeEntity'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeEntity (const GALGAS_entityList_2E_element constinArgument_inEntity,
                            GALGAS_entityMap & ioArgument_ioEntityMap,
                            const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                            GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                            C_Compiler * inCompiler
                            COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_attributeListForImplementation var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (306)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_relationshipList var_allRelationshipList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_implementationSuperClassName ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_propertyMap var_allPropertyMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_relationshipMap var_allRelationshipMap ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inEntity.mAttribute_mSuperEntityName.reader_string (SOURCE_FILE_AT_LINE (311)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_12733_0 ; // Joker input parameter
    GALGAS_string joker_12778_0 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_12855_4 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_12855_3 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_12855_2 ; // Joker input parameter
    GALGAS_relationshipList joker_12855_1 ; // Joker input parameter
    GALGAS_relationshipMap joker_12914_0 ; // Joker input parameter
    GALGAS_stringset joker_12949_2 ; // Joker input parameter
    GALGAS__32_stringlist joker_12949_1 ; // Joker input parameter
    ioArgument_ioEntityMap.method_searchKey (constinArgument_inEntity.mAttribute_mSuperEntityName, joker_12733_0, var_implementationSuperClassName, joker_12778_0, var_observablePropertyMap, var_propertyListForInitMethodHeader, joker_12855_4, joker_12855_3, joker_12855_2, joker_12855_1, var_allRelationshipList, var_allPropertyMap, joker_12914_0, var_allRelationshipMap, joker_12949_2, joker_12949_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (312)) ;
    //-------- END @methodCallInstructionForGeneration
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (327)) ;
    //-------- @assignmentInstructionForGeneration
    var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (328)) ;
    //-------- @assignmentInstructionForGeneration
    var_implementationSuperClassName = GALGAS_string::makeEmptyString () ;
    //-------- @assignmentInstructionForGeneration
    var_allRelationshipList = GALGAS_relationshipList::constructor_emptyList (SOURCE_FILE_AT_LINE (330)) ;
    //-------- @assignmentInstructionForGeneration
    var_allPropertyMap = GALGAS_propertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (331)) ;
    //-------- @assignmentInstructionForGeneration
    var_allRelationshipMap = GALGAS_relationshipMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (332)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_attributeListForImplementation var_attributeListForImplementation = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (334)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_attributeListForImplementation var_inheritedAttributeListForImplementation = var_propertyListForInitMethodHeader ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_attributeList enumerator_13624 (constinArgument_inEntity.mAttribute_mAttributeList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_13624.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_checkDefaultValueType (enumerator_13624.current_mDefaultValueCorrespondingAcceptableTypes (HERE), enumerator_13624.current_mType (HERE), enumerator_13624.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (338)) ;
    } //-------- @routineCallInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_allPropertyMap.modifier_insertKey (enumerator_13624.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (339)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_attributeListForImplementation.addAssign_operation (enumerator_13624.current_mType (HERE), enumerator_13624.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (340)), enumerator_13624.current_mDefaultValueObjectiveCObject (HERE), enumerator_13624.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (340)) ;
    //-------- @plusEqualnstructionForGeneration
    var_propertyListForInitMethodHeader.addAssign_operation (enumerator_13624.current_mType (HERE), enumerator_13624.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (341)), enumerator_13624.current_mDefaultValueObjectiveCObject (HERE), enumerator_13624.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (341)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("entity.").operator_concat (constinArgument_inEntity.mAttribute_mEntityName.reader_string (SOURCE_FILE_AT_LINE (343)) COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (343)).operator_concat (enumerator_13624.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (343)) COMMA_SOURCE_FILE_AT_LINE (343)), enumerator_13624.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (342)) ;
    { //-------- @modifierCallInstructionForGeneration
    var_observablePropertyMap.modifier_insertKey (enumerator_13624.current_mAttributeName (HERE), enumerator_13624.current_mType (HERE), GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (346)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (352)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_13624.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_relationshipMap var_currentRelationshipMap = GALGAS_relationshipMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (358)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_relationshipList enumerator_14650 (constinArgument_inEntity.mAttribute_mRelationshipList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_14650.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_allRelationshipMap.modifier_insertKey (enumerator_14650.current_mRelationshipName (HERE), enumerator_14650.current_mIsToMany (HERE), enumerator_14650.current_mDestinationEntityName (HERE), enumerator_14650.current_mInverseRelationshipName (HERE), enumerator_14650.current_mDeleteRule (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (360)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_currentRelationshipMap.modifier_insertKey (enumerator_14650.current_mRelationshipName (HERE), enumerator_14650.current_mIsToMany (HERE), enumerator_14650.current_mDestinationEntityName (HERE), enumerator_14650.current_mInverseRelationshipName (HERE), enumerator_14650.current_mDeleteRule (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (367)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_allPropertyMap.modifier_insertKey (enumerator_14650.current_mRelationshipName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (374)) ;
    } //-------- END @typeMethodInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("entity.").operator_concat (constinArgument_inEntity.mAttribute_mEntityName.reader_string (SOURCE_FILE_AT_LINE (376)) COMMA_SOURCE_FILE_AT_LINE (376)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (376)).operator_concat (enumerator_14650.current_mRelationshipName (HERE).reader_string (SOURCE_FILE_AT_LINE (376)) COMMA_SOURCE_FILE_AT_LINE (376)), enumerator_14650.current_mRelationshipName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (375)) ;
    { //-------- @modifierCallInstructionForGeneration
    var_observablePropertyMap.modifier_insertKey (enumerator_14650.current_mRelationshipName (HERE), GALGAS_easyBindingType::constructor_toManyEntitiesType (SOURCE_FILE_AT_LINE (381)), GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (379)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (385)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_14650.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (391)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_transientListForImplementation var_transientListForImplementation ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeTransientProperties (constinArgument_inPreferencesMap, GALGAS_string ("entity.").operator_concat (constinArgument_inEntity.mAttribute_mEntityName.reader_string (SOURCE_FILE_AT_LINE (395)) COMMA_SOURCE_FILE_AT_LINE (395)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (395)), constinArgument_inEntity.mAttribute_mTransientList, GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (397)), GALGAS_string::makeEmptyString (), GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (399)), var_observablePropertyMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (393)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS__32_stringlist var_toManyRelationshipList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (406)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_relationshipList enumerator_16278 (constinArgument_inEntity.mAttribute_mRelationshipList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_16278.hasCurrentObject ()) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = enumerator_16278.current_mIsToMany (HERE).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @plusEqualnstructionForGeneration
      var_toManyRelationshipList.addAssign_operation (enumerator_16278.current_mRelationshipName (HERE).mAttribute_string, enumerator_16278.current_mDestinationEntityName (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (409)) ;
    }
    enumerator_16278.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (415)) ;
  } //-------- END @typeMethodInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioEntityMap.modifier_insertKey (constinArgument_inEntity.mAttribute_mEntityName, constinArgument_inEntity.mAttribute_mSuperEntityName.mAttribute_string, constinArgument_inEntity.mAttribute_mImplementationClassName.mAttribute_string, var_implementationSuperClassName, var_observablePropertyMap, var_propertyListForInitMethodHeader, var_inheritedAttributeListForImplementation, var_attributeListForImplementation, var_transientListForImplementation, constinArgument_inEntity.mAttribute_mRelationshipList, var_allRelationshipList.operator_concat (constinArgument_inEntity.mAttribute_mRelationshipList COMMA_SOURCE_FILE_AT_LINE (427)), var_allPropertyMap, var_currentRelationshipMap, var_allRelationshipMap, var_implementationFileInclusionSet, var_toManyRelationshipList, inCompiler COMMA_SOURCE_FILE_AT_LINE (416)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeEntities'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeEntities (const GALGAS_entityList constinArgument_inEntityList,
                              GALGAS_entityMap & outArgument_outEntityMap,
                              const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                              GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outEntityMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outEntityMap = GALGAS_entityMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (445)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_entityList enumerator_17548 (constinArgument_inEntityList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_17548.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeEntity (enumerator_17548.current (HERE), outArgument_outEntityMap, constinArgument_inPreferencesMap, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (447)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_17548.gotoNextObject () ;
  }
  //-------- @foreachInstructionForGeneration
  cEnumerator_entityMap enumerator_17757 (outArgument_outEntityMap, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_17757.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_relationshipMap enumerator_17796 (enumerator_17757.current_mCurrentRelationshipMap (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_17796.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_relationshipMap var_destinationEntityRelationshipMap ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_string joker_17912_12 ; // Joker input parameter
      GALGAS_string joker_17912_11 ; // Joker input parameter
      GALGAS_string joker_17912_10 ; // Joker input parameter
      GALGAS_observablePropertyMap joker_17912_9 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_17912_8 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_17912_7 ; // Joker input parameter
      GALGAS_attributeListForImplementation joker_17912_6 ; // Joker input parameter
      GALGAS_transientListForImplementation joker_17912_5 ; // Joker input parameter
      GALGAS_relationshipList joker_17912_4 ; // Joker input parameter
      GALGAS_relationshipList joker_17912_3 ; // Joker input parameter
      GALGAS_propertyMap joker_17912_2 ; // Joker input parameter
      GALGAS_relationshipMap joker_17912_1 ; // Joker input parameter
      GALGAS_stringset joker_17950_2 ; // Joker input parameter
      GALGAS__32_stringlist joker_17950_1 ; // Joker input parameter
      outArgument_outEntityMap.method_searchKey (enumerator_17796.current_mDestinationEntityName (HERE), joker_17912_12, joker_17912_11, joker_17912_10, joker_17912_9, joker_17912_8, joker_17912_7, joker_17912_6, joker_17912_5, joker_17912_4, joker_17912_3, joker_17912_2, joker_17912_1, var_destinationEntityRelationshipMap, joker_17950_2, joker_17950_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (458)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_inverseOfInverseRelationshipName ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_18083_2 ; // Joker input parameter
      GALGAS_lstring joker_18083_1 ; // Joker input parameter
      GALGAS_deleteRuleEnum joker_18121_0 ; // Joker input parameter
      var_destinationEntityRelationshipMap.method_searchKey (enumerator_17796.current_mInverseRelationshipName (HERE), joker_18083_2, joker_18083_1, var_inverseOfInverseRelationshipName, joker_18121_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (460)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, enumerator_17796.current_lkey (HERE).mAttribute_string.objectCompare (var_inverseOfInverseRelationshipName.mAttribute_string)).boolEnum () ;
      if (kBoolTrue == test_0) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_1 (enumerator_17796.current_mInverseRelationshipName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_1, GALGAS_string ("the inverse relationship does not name '").operator_concat (enumerator_17796.current_lkey (HERE).reader_string (SOURCE_FILE_AT_LINE (462)) COMMA_SOURCE_FILE_AT_LINE (462)).operator_concat (GALGAS_string ("' relationship as inverse") COMMA_SOURCE_FILE_AT_LINE (462)) COMMA_SOURCE_FILE_AT_LINE (462)) ;
      }
      enumerator_17796.gotoNextObject () ;
    }
    enumerator_17757.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'analyzePreference'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzePreference (const GALGAS_preferencesDeclarationList_2E_element constinArgument_inPreference,
                                const GALGAS_controllerClassMap constinArgument_inControllerClassMap,
                                const GALGAS_classMap constinArgument_inClassMap,
                                const GALGAS_outletClassMap constinArgument_inOutletClassMap,
                                GALGAS_preferencesMap & ioArgument_ioPreferencesMap,
                                GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                C_Compiler * inCompiler
                                COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1092)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_42722 (constinArgument_inPreference.mAttribute_mActionDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_42722.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_actionMap.modifier_insertKey (enumerator_42722.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1094)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_42722.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_observablePropertyMap var_observableAttributeMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1097)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_attributeListForImplementation var_attributeListForImplementation = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1098)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_attributeList enumerator_43024 (constinArgument_inPreference.mAttribute_mAttributeList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_43024.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_checkDefaultValueType (enumerator_43024.current_mDefaultValueCorrespondingAcceptableTypes (HERE), enumerator_43024.current_mType (HERE), enumerator_43024.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1100)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_attributeListForImplementation.addAssign_operation (enumerator_43024.current_mType (HERE), enumerator_43024.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1101)), enumerator_43024.current_mDefaultValueObjectiveCObject (HERE), enumerator_43024.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1101)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("preference.").operator_concat (constinArgument_inPreference.mAttribute_mPreferencesName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1103)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1103)).operator_concat (enumerator_43024.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1103)) COMMA_SOURCE_FILE_AT_LINE (1103)), enumerator_43024.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (1102)) ;
    { //-------- @modifierCallInstructionForGeneration
    var_observableAttributeMap.modifier_insertKey (enumerator_43024.current_mAttributeName (HERE), enumerator_43024.current_mType (HERE), GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1106)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1112)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_43024.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_preferenceArrayMap var_preferenceArrayMap = GALGAS_preferenceArrayMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1118)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_classArrayList enumerator_43861 (constinArgument_inPreference.mAttribute_mClassArrayList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_43861.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_classObservablePropertyMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_43914_0 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_43980_5 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_43980_4 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_43980_3 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_43980_2 ; // Joker input parameter
    GALGAS_stringset joker_43980_1 ; // Joker input parameter
    constinArgument_inClassMap.method_searchKey (enumerator_43861.current_mClassName (HERE), joker_43914_0, var_classObservablePropertyMap, joker_43980_5, joker_43980_4, joker_43980_3, joker_43980_2, joker_43980_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1120)) ;
    //-------- END @methodCallInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_preferenceArrayMap.modifier_insertKey (enumerator_43861.current_mArrayName (HERE), enumerator_43861.current_mClassName (HERE).mAttribute_string, var_classObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1126)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_43861.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1133)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_controllerMap var_controllerMap = GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1134)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerList enumerator_44346 (constinArgument_inPreference.mAttribute_mControllerList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_44346.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_outletClassBindingMap var_controllerClassBindingMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_actionMap var_controllerActionMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_controllerObservablePropertyMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_bool joker_44419_0 ; // Joker input parameter
    constinArgument_inControllerClassMap.method_searchKey (enumerator_44346.current_mControllerClassName (HERE), joker_44419_0, var_controllerClassBindingMap, var_controllerActionMap, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1136)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_44642_7 ; // Joker input parameter
    GALGAS_observablePropertyMap joker_44642_6 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_44642_5 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_44642_4 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_44642_3 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_44642_2 ; // Joker input parameter
    GALGAS_stringset joker_44642_1 ; // Joker input parameter
    constinArgument_inClassMap.method_searchKey (enumerator_44346.current_mControlledClassOrEntityName (HERE), joker_44642_7, joker_44642_6, joker_44642_5, joker_44642_4, joker_44642_3, joker_44642_2, joker_44642_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1143)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletBindingListForGeneration var_bindingListForGeneration = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1144)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_bindingList enumerator_44759 (enumerator_44346.current_mControllerBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_44759.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeControllerBinding ((const cPtr_abstractBinding *) enumerator_44759.current_mBinding (HERE).ptr (), GALGAS_relationshipMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1147)), var_controllerClassBindingMap, enumerator_44346.current_mControlledClassOrEntityName (HERE), var_observablePropertyMap, var_bindingListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1146)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_44759.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_controllerMap.modifier_insertKey (enumerator_44346.current_mControllerName (HERE), enumerator_44346.current_mControllerClassName (HERE).mAttribute_string, enumerator_44346.current_mControlledClassOrEntityName (HERE).mAttribute_string, var_bindingListForGeneration, var_controllerActionMap, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1154)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_44346.gotoNextObject () ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_transientListForImplementation var_transientListForImplementation ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1165)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeTransientProperties (GALGAS_preferencesMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1167)), GALGAS_string ("preference.").operator_concat (constinArgument_inPreference.mAttribute_mPreferencesName.reader_string (SOURCE_FILE_AT_LINE (1168)) COMMA_SOURCE_FILE_AT_LINE (1168)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1168)), constinArgument_inPreference.mAttribute_mTransientList, GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1170)), GALGAS_string::makeEmptyString (), GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1172)), var_observableAttributeMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1166)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_outletGenerationList var_outletGenerationList = GALGAS_outletGenerationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1179)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletDeclarationList enumerator_46023 (constinArgument_inPreference.mAttribute_mOutletDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_46023.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_generationKind var_generationKind ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_outletClassBindingMap var_bindingMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_hasTableValueBinding ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_46121_2 ; // Joker input parameter
    GALGAS_lstringlist joker_46121_1 ; // Joker input parameter
    constinArgument_inOutletClassMap.method_searchKey (enumerator_46023.current_mOutletType (HERE), var_generationKind, joker_46121_2, joker_46121_1, var_bindingMap, var_hasTableValueBinding, inCompiler COMMA_SOURCE_FILE_AT_LINE (1181)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_generationKind.objectCompare (GALGAS_generationKind::constructor_noGeneration (SOURCE_FILE_AT_LINE (1188)))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @plusEqualnstructionForGeneration
      var_implementationFileInclusionSet.addAssign_operation (enumerator_46023.current_mOutletType (HERE).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1189)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletBindingListForGeneration var_outletBindingList = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1191)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_bindingList enumerator_46444 (enumerator_46023.current_mOutletBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_46444.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeOutletBinding ((const cPtr_abstractBinding *) enumerator_46444.current_mBinding (HERE).ptr (), GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1194)), var_observableAttributeMap, GALGAS_preferencesMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1196)), GALGAS_entityMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1197)), var_bindingMap, GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1199)), var_actionMap, var_hasTableValueBinding, var_outletBindingList, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1193)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_46444.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_outletGenerationList.addAssign_operation (enumerator_46023.current_mOutletType (HERE).reader_string (SOURCE_FILE_AT_LINE (1206)), var_generationKind, enumerator_46023.current_mOutletName (HERE).reader_string (SOURCE_FILE_AT_LINE (1206)), var_outletBindingList COMMA_SOURCE_FILE_AT_LINE (1206)) ;
    enumerator_46023.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1209)) ;
  } //-------- END @typeMethodInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioPreferencesMap.modifier_insertKey (constinArgument_inPreference.mAttribute_mPreferencesName, var_attributeListForImplementation, var_transientListForImplementation, var_outletGenerationList, constinArgument_inPreference.mAttribute_mActionDeclarationList, var_observableAttributeMap, var_implementationFileInclusionSet, var_controllerMap, var_preferenceArrayMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1210)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'analyzePreferences'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzePreferences (const GALGAS_preferencesDeclarationList constinArgument_inPreferencesList,
                                 const GALGAS_controllerClassMap constinArgument_inControllerClassMap,
                                 const GALGAS_classMap constinArgument_inClassMap,
                                 const GALGAS_outletClassMap constinArgument_inOutletClassMap,
                                 GALGAS_preferencesMap & outArgument_outPreferencesMap,
                                 GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                 C_Compiler * inCompiler
                                 COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outPreferencesMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outPreferencesMap = GALGAS_preferencesMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1233)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_preferencesDeclarationList enumerator_47860 (constinArgument_inPreferencesList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_47860.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_analyzePreference (enumerator_47860.current (HERE), constinArgument_inControllerClassMap, constinArgument_inClassMap, constinArgument_inOutletClassMap, outArgument_outPreferencesMap, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1235)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_47860.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'checkBindingOptions'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkBindingOptions (const GALGAS_outletBindingOptionList constinArgument_inBindingOptionListAST,
                                  const GALGAS_outletClassBindingOptionMap constinArgument_inAvailableBindingOptionMap,
                                  GALGAS__32_stringlist & outArgument_outBindingOptionListForGeneration,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outBindingOptionListForGeneration.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outBindingOptionListForGeneration = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1253)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_48445 (constinArgument_inBindingOptionListAST, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_48445.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    constinArgument_inAvailableBindingOptionMap.method_searchKey (enumerator_48445.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1256)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_48634 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1258)).isValidAndTrue () ;
    if (enumerator_48634.hasCurrentObject () && bool_0) {
      while (enumerator_48634.hasCurrentObject () && bool_0) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_48698 (enumerator_48445.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (1259)).isValidAndTrue () ;
        if (enumerator_48698.hasCurrentObject () && bool_1) {
          while (enumerator_48698.hasCurrentObject () && bool_1) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_48634.current_mType (HERE).objectCompare (enumerator_48698.current_mType (HERE))) ;
            enumerator_48698.gotoNextObject () ;
            if (enumerator_48698.hasCurrentObject ()) {
              bool_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (1259)).isValidAndTrue () ;
            }
          }
        }
        enumerator_48634.gotoNextObject () ;
        if (enumerator_48634.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1258)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1263)).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_48937 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (1265)).isValidAndTrue () ;
      if (enumerator_48937.hasCurrentObject () && bool_3) {
        while (enumerator_48937.hasCurrentObject () && bool_3) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_48937.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1266)) COMMA_SOURCE_FILE_AT_LINE (1266)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1266)) COMMA_SOURCE_FILE_AT_LINE (1266)) ;
          enumerator_48937.gotoNextObject () ;
          if (enumerator_48937.hasCurrentObject ()) {
            bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (1265)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_4 (enumerator_48445.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, var_s COMMA_SOURCE_FILE_AT_LINE (1268)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    outArgument_outBindingOptionListForGeneration.addAssign_operation (enumerator_48445.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (1270)), enumerator_48445.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (1270)) ;
    enumerator_48445.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeDocument'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeDocument (const GALGAS_documentDeclarationList_2E_element constinArgument_inDocument,
                              const GALGAS_outletClassMap constinArgument_inOutletClassMap,
                              const GALGAS_controllerClassMap constinArgument_inControllerClassMap,
                              const GALGAS_entityMap constinArgument_inEntityMap,
                              const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                              GALGAS_documentMap & ioArgument_ioDocumentMap,
                              GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                              C_Compiler * inCompiler
                              COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_rootEntityImplementationClassName ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_rootObjectObservablePropertyMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_relationshipMap var_allRelationshipMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_string joker_59986_0 ; // Joker input parameter
  GALGAS_string joker_60040_0 ; // Joker input parameter
  GALGAS_attributeListForImplementation joker_60107_8 ; // Joker input parameter
  GALGAS_attributeListForImplementation joker_60107_7 ; // Joker input parameter
  GALGAS_attributeListForImplementation joker_60107_6 ; // Joker input parameter
  GALGAS_transientListForImplementation joker_60107_5 ; // Joker input parameter
  GALGAS_relationshipList joker_60107_4 ; // Joker input parameter
  GALGAS_relationshipList joker_60107_3 ; // Joker input parameter
  GALGAS_propertyMap joker_60107_2 ; // Joker input parameter
  GALGAS_relationshipMap joker_60107_1 ; // Joker input parameter
  GALGAS_stringset joker_60156_2 ; // Joker input parameter
  GALGAS__32_stringlist joker_60156_1 ; // Joker input parameter
  constinArgument_inEntityMap.method_searchKey (constinArgument_inDocument.mAttribute_mRootEntityName, joker_59986_0, var_rootEntityImplementationClassName, joker_60040_0, var_rootObjectObservablePropertyMap, joker_60107_8, joker_60107_7, joker_60107_6, joker_60107_5, joker_60107_4, joker_60107_3, joker_60107_2, joker_60107_1, var_allRelationshipMap, joker_60156_2, joker_60156_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1527)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1538)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_controllerMap var_controllerMap = GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1539)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerList enumerator_60380 (constinArgument_inDocument.mAttribute_mControllerList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_60380.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_outletClassBindingMap var_controllerClassBindingMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_actionMap var_controllerActionMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_controllerObservablePropertyMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_bool joker_60606_0 ; // Joker input parameter
    constinArgument_inControllerClassMap.method_searchKey (enumerator_60380.current_mControllerClassName (HERE), joker_60606_0, var_controllerClassBindingMap, var_controllerActionMap, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1544)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_60774_15 ; // Joker input parameter
    GALGAS_string joker_60774_14 ; // Joker input parameter
    GALGAS_string joker_60774_13 ; // Joker input parameter
    GALGAS_observablePropertyMap joker_60774_12 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_60774_11 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_60774_10 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_60774_9 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_60774_8 ; // Joker input parameter
    GALGAS_relationshipList joker_60774_7 ; // Joker input parameter
    GALGAS_relationshipList joker_60774_6 ; // Joker input parameter
    GALGAS_propertyMap joker_60774_5 ; // Joker input parameter
    GALGAS_relationshipMap joker_60774_4 ; // Joker input parameter
    GALGAS_relationshipMap joker_60774_3 ; // Joker input parameter
    GALGAS_stringset joker_60774_2 ; // Joker input parameter
    GALGAS__32_stringlist joker_60774_1 ; // Joker input parameter
    constinArgument_inEntityMap.method_searchKey (enumerator_60380.current_mControlledClassOrEntityName (HERE), joker_60774_15, joker_60774_14, joker_60774_13, joker_60774_12, joker_60774_11, joker_60774_10, joker_60774_9, joker_60774_8, joker_60774_7, joker_60774_6, joker_60774_5, joker_60774_4, joker_60774_3, joker_60774_2, joker_60774_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1551)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletBindingListForGeneration var_bindingListForGeneration = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1552)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_bindingList enumerator_60891 (enumerator_60380.current_mControllerBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_60891.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeControllerBinding ((const cPtr_abstractBinding *) enumerator_60891.current_mBinding (HERE).ptr (), var_allRelationshipMap, var_controllerClassBindingMap, enumerator_60380.current_mControlledClassOrEntityName (HERE), var_observablePropertyMap, var_bindingListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1554)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_60891.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_controllerMap.modifier_insertKey (enumerator_60380.current_mControllerName (HERE), enumerator_60380.current_mControllerClassName (HERE).mAttribute_string, enumerator_60380.current_mControlledClassOrEntityName (HERE).mAttribute_string, var_bindingListForGeneration, var_controllerActionMap, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1562)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_60380.gotoNextObject () ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_transientListForImplementation var_transientListForImplementation ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1573)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeTransientProperties (constinArgument_inPreferencesMap, GALGAS_string ("document.").operator_concat (constinArgument_inDocument.mAttribute_mDocumentName.reader_string (SOURCE_FILE_AT_LINE (1576)) COMMA_SOURCE_FILE_AT_LINE (1576)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1576)), constinArgument_inDocument.mAttribute_mTransientList, var_rootObjectObservablePropertyMap, constinArgument_inDocument.mAttribute_mRootEntityName.mAttribute_string, var_controllerMap, var_observablePropertyMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1574)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_actionMap var_documentActionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1587)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_62128 (constinArgument_inDocument.mAttribute_mActionDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_62128.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_documentActionMap.modifier_insertKey (enumerator_62128.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1589)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_62128.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_outletGenerationList var_outletGenerationList = GALGAS_outletGenerationList::constructor_emptyList (SOURCE_FILE_AT_LINE (1592)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletDeclarationList enumerator_62387 (constinArgument_inDocument.mAttribute_mOutletDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_62387.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_generationKind var_generationKind ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_outletClassBindingMap var_bindingMap ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_bool var_hasTableValueBinding ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_62485_2 ; // Joker input parameter
    GALGAS_lstringlist joker_62485_1 ; // Joker input parameter
    constinArgument_inOutletClassMap.method_searchKey (enumerator_62387.current_mOutletType (HERE), var_generationKind, joker_62485_2, joker_62485_1, var_bindingMap, var_hasTableValueBinding, inCompiler COMMA_SOURCE_FILE_AT_LINE (1594)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletBindingListForGeneration var_outletBindingList = GALGAS_outletBindingListForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (1601)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_bindingList enumerator_62671 (enumerator_62387.current_mOutletBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_62671.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      callCategoryMethod_analyzeOutletBinding ((const cPtr_abstractBinding *) enumerator_62671.current_mBinding (HERE).ptr (), var_rootObjectObservablePropertyMap, var_observablePropertyMap, constinArgument_inPreferencesMap, constinArgument_inEntityMap, var_bindingMap, var_controllerMap, var_documentActionMap, var_hasTableValueBinding, var_outletBindingList, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1603)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_62671.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_outletGenerationList.addAssign_operation (enumerator_62387.current_mOutletType (HERE).reader_string (SOURCE_FILE_AT_LINE (1616)), var_generationKind, enumerator_62387.current_mOutletName (HERE).reader_string (SOURCE_FILE_AT_LINE (1616)), var_outletBindingList COMMA_SOURCE_FILE_AT_LINE (1616)) ;
    enumerator_62387.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1619)) ;
  } //-------- END @typeMethodInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioDocumentMap.modifier_insertKey (constinArgument_inDocument.mAttribute_mDocumentName, constinArgument_inDocument.mAttribute_mRootEntityName.mAttribute_string, var_rootEntityImplementationClassName, var_outletGenerationList, var_controllerMap, constinArgument_inDocument.mAttribute_mActionDeclarationList, var_transientListForImplementation, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1620)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'analyzeDocuments'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeDocuments (const GALGAS_documentDeclarationList constinArgument_inDocumentDeclarationList,
                               const GALGAS_outletClassMap constinArgument_inOutletClassMap,
                               const GALGAS_controllerClassMap constinArgument_inControllerClassMap,
                               const GALGAS_entityMap constinArgument_inEntityMap,
                               const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                               GALGAS_documentMap & outArgument_outDocumentMap,
                               GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outDocumentMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outDocumentMap = GALGAS_documentMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1643)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_documentDeclarationList enumerator_64090 (constinArgument_inDocumentDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_64090.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeDocument (enumerator_64090.current (HERE), constinArgument_inOutletClassMap, constinArgument_inControllerClassMap, constinArgument_inEntityMap, constinArgument_inPreferencesMap, outArgument_outDocumentMap, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1645)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_64090.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'checkDefaultValueType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_checkDefaultValueType (const GALGAS_easyBindingTypeList constinArgument_inDefaultValueCorrespondingAcceptableTypes,
                                    const GALGAS_easyBindingType constinArgument_inAttributeActualType,
                                    const GALGAS_lstring constinArgument_inAttributeName,
                                    C_Compiler * inCompiler
                                    COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeList enumerator_64654 (constinArgument_inDefaultValueCorrespondingAcceptableTypes, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1665)).isValidAndTrue () ;
  if (enumerator_64654.hasCurrentObject () && bool_0) {
    while (enumerator_64654.hasCurrentObject () && bool_0) {
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, constinArgument_inAttributeActualType.objectCompare (enumerator_64654.current_mType (HERE))) ;
      enumerator_64654.gotoNextObject () ;
      if (enumerator_64654.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1665)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (1668)).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_2 (constinArgument_inAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_2, GALGAS_string ("the default value is invalue for this attribute") COMMA_SOURCE_FILE_AT_LINE (1669)) ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'analyzeClass'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeClass (const GALGAS_classList_2E_element constinArgument_inClass,
                           GALGAS_classMap & ioArgument_ioClassMap,
                           GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_attributeListForImplementation var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1682)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, constinArgument_inClass.mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (1683)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_65357_0 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_65416_4 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_65416_3 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_65416_2 ; // Joker input parameter
    GALGAS_stringset joker_65416_1 ; // Joker input parameter
    ioArgument_ioClassMap.method_searchKey (constinArgument_inClass.mAttribute_mSuperClassName, joker_65357_0, var_observablePropertyMap, var_propertyListForInitMethodHeader, joker_65416_4, joker_65416_3, joker_65416_2, joker_65416_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1684)) ;
    //-------- END @methodCallInstructionForGeneration
  }else if (kBoolFalse == test_0) {
    //-------- @assignmentInstructionForGeneration
    var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1686)) ;
    //-------- @assignmentInstructionForGeneration
    var_propertyListForInitMethodHeader = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1687)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_attributeListForImplementation var_attributeListForImplementation = GALGAS_attributeListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (1690)) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_attributeListForImplementation var_inheritedAttributeListForImplementation = var_propertyListForInitMethodHeader ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_attributeList enumerator_65876 (constinArgument_inClass.mAttribute_mAttributeList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_65876.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_checkDefaultValueType (enumerator_65876.current_mDefaultValueCorrespondingAcceptableTypes (HERE), enumerator_65876.current_mType (HERE), enumerator_65876.current_mAttributeName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1693)) ;
    } //-------- @routineCallInstructionForGeneration
    //-------- @plusEqualnstructionForGeneration
    var_attributeListForImplementation.addAssign_operation (enumerator_65876.current_mType (HERE), enumerator_65876.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1694)), enumerator_65876.current_mDefaultValueObjectiveCObject (HERE), enumerator_65876.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1694)) ;
    //-------- @plusEqualnstructionForGeneration
    var_propertyListForInitMethodHeader.addAssign_operation (enumerator_65876.current_mType (HERE), enumerator_65876.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1695)), enumerator_65876.current_mDefaultValueObjectiveCObject (HERE), enumerator_65876.current_mDirectDefaultValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1695)) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("class.").operator_concat (constinArgument_inClass.mAttribute_mClassName.reader_string (SOURCE_FILE_AT_LINE (1697)) COMMA_SOURCE_FILE_AT_LINE (1697)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1697)).operator_concat (enumerator_65876.current_mAttributeName (HERE).reader_string (SOURCE_FILE_AT_LINE (1697)) COMMA_SOURCE_FILE_AT_LINE (1697)), enumerator_65876.current_mAttributeName (HERE).mAttribute_location COMMA_SOURCE_FILE_AT_LINE (1696)) ;
    { //-------- @modifierCallInstructionForGeneration
    var_observablePropertyMap.modifier_insertKey (enumerator_65876.current_mAttributeName (HERE), enumerator_65876.current_mType (HERE), GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1700)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1706)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_65876.gotoNextObject () ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_transientListForImplementation var_transientListForImplementation ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_stringset var_implementationFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (1713)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeTransientProperties (GALGAS_preferencesMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1715)), GALGAS_string ("class.").operator_concat (constinArgument_inClass.mAttribute_mClassName.reader_string (SOURCE_FILE_AT_LINE (1716)) COMMA_SOURCE_FILE_AT_LINE (1716)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1716)), constinArgument_inClass.mAttribute_mTransientList, GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1718)), GALGAS_string::makeEmptyString (), GALGAS_controllerMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1720)), var_observablePropertyMap, var_implementationFileInclusionSet, var_transientListForImplementation, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1714)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  var_implementationFileInclusionSet.modifier_removeKey (GALGAS_string::makeEmptyString () COMMA_SOURCE_FILE_AT_LINE (1727)) ;
  } //-------- END @typeMethodInstructionForGeneration
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioClassMap.modifier_insertKey (constinArgument_inClass.mAttribute_mClassName, constinArgument_inClass.mAttribute_mSuperClassName.mAttribute_string, var_observablePropertyMap, var_propertyListForInitMethodHeader, var_inheritedAttributeListForImplementation, var_attributeListForImplementation, var_transientListForImplementation, var_implementationFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (1728)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'analyzeClasses'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeClasses (const GALGAS_classList constinArgument_inClassList,
                             GALGAS_classMap & outArgument_outClassMap,
                             GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                             C_Compiler * inCompiler
                             COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outClassMap = GALGAS_classMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1747)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_classList enumerator_67946 (constinArgument_inClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_67946.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeClass (enumerator_67946.current (HERE), outArgument_outClassMap, ioArgument_ioTransientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1749)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_67946.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeOutletClasses'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeOutletClasses (const GALGAS_outletClassList constinArgument_inOutletClassList,
                                   const GALGAS_protocolMap constinArgument_inProtocolMap,
                                   GALGAS_outletClassMap & outArgument_outOutletClassMap,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outOutletClassMap = GALGAS_outletClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1764)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletClassList enumerator_68372 (constinArgument_inOutletClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_68372.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1767)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletClassBindingList enumerator_68469 (enumerator_68372.current_mOutletClassBindingList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_68469.hasCurrentObject ()) {
      //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
      GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1769)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_bindingOptionList enumerator_68581 (enumerator_68469.current_mBindingOptionList (HERE), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_68581.hasCurrentObject ()) {
        { //-------- @modifierCallInstructionForGeneration
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_68581.current_mBindingOptionName (HERE), enumerator_68581.current_mAcceptableTypeList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1771)) ;
        } //-------- END @typeMethodInstructionForGeneration
        enumerator_68581.gotoNextObject () ;
      }
      { //-------- @modifierCallInstructionForGeneration
      var_bindingMap.modifier_insertKey (enumerator_68469.current_mBindingName (HERE), enumerator_68469.current_mAcceptableTypeFormatterList (HERE), var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1773)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_68469.gotoNextObject () ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_68879 (enumerator_68372.current_mAdoptedProtocolList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_68879.hasCurrentObject ()) {
      //-------- @methodCallInstructionForGeneration
      constinArgument_inProtocolMap.method_searchKey (enumerator_68879.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1777)) ;
      //-------- END @methodCallInstructionForGeneration
      enumerator_68879.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outOutletClassMap.modifier_insertKey (enumerator_68372.current_mOutletClassName (HERE), enumerator_68372.current_mGeneration (HERE), enumerator_68372.current_mSuperClassName (HERE).mAttribute_string, enumerator_68372.current_mAdoptedProtocolList (HERE), var_bindingMap, enumerator_68372.current_mHasTableValueBinding (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1780)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_68372.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'analyzeControllerClass'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClass (const GALGAS_controllerClassList_2E_element constinArgument_inController,
                                     GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                     GALGAS_controllerClassMap & ioArgument_ioControllerClassMap,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_actionMap var_actionMap = GALGAS_actionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1799)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_lstringlist enumerator_69553 (constinArgument_inController.mAttribute_mActionDeclarationList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_69553.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_actionMap.modifier_insertKey (enumerator_69553.current (HERE).mAttribute_mValue, inCompiler COMMA_SOURCE_FILE_AT_LINE (1801)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_69553.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_outletClassBindingMap var_bindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1804)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletClassBindingList enumerator_69709 (constinArgument_inController.mAttribute_mBindingList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_69709.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1806)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_bindingOptionList enumerator_69817 (enumerator_69709.current_mBindingOptionList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_69817.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_69817.current_mBindingOptionName (HERE), enumerator_69817.current_mAcceptableTypeList (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1808)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_69817.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    var_bindingMap.modifier_insertKey (enumerator_69709.current_mBindingName (HERE), enumerator_69709.current_mAcceptableTypeFormatterList (HERE), var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1814)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_69709.gotoNextObject () ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1817)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerObservablePropertyList enumerator_70263 (constinArgument_inController.mAttribute_mControllerObservablePropertyList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_70263.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_lstring var_observationDependencyKey = GALGAS_lstring::constructor_new (GALGAS_string ("controller.").operator_concat (constinArgument_inController.mAttribute_mControllerClassName.reader_string (SOURCE_FILE_AT_LINE (1820)) COMMA_SOURCE_FILE_AT_LINE (1820)).operator_concat (GALGAS_string (".") COMMA_SOURCE_FILE_AT_LINE (1820)).operator_concat (enumerator_70263.current (HERE).mAttribute_mPropertyName.reader_string (SOURCE_FILE_AT_LINE (1820)) COMMA_SOURCE_FILE_AT_LINE (1820)), enumerator_70263.current (HERE).mAttribute_mPropertyName.mAttribute_location COMMA_SOURCE_FILE_AT_LINE (1819)) ;
    { //-------- @modifierCallInstructionForGeneration
    ioArgument_ioTransientDependencyGraph.modifier_addNode (var_observationDependencyKey, var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1823)) ;
    } //-------- END @typeMethodInstructionForGeneration
    { //-------- @modifierCallInstructionForGeneration
    var_observablePropertyMap.modifier_insertKey (enumerator_70263.current (HERE).mAttribute_mPropertyName, enumerator_70263.current (HERE).mAttribute_mType, GALGAS_bool (false), var_observationDependencyKey.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1827)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_70263.gotoNextObject () ;
  }
  { //-------- @modifierCallInstructionForGeneration
  ioArgument_ioControllerClassMap.modifier_insertKey (constinArgument_inController.mAttribute_mControllerClassName, constinArgument_inController.mAttribute_mGenerateCode, var_bindingMap, var_actionMap, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1835)) ;
  } //-------- END @typeMethodInstructionForGeneration
}


//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'analyzeControllerClasses'                     *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeControllerClasses (const GALGAS_controllerClassList constinArgument_inControllerClassList,
                                       GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                       GALGAS_controllerClassMap & outArgument_outControllerClassMap,
                                       C_Compiler * inCompiler
                                       COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outControllerClassMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outControllerClassMap = GALGAS_controllerClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1851)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_controllerClassList enumerator_71326 (constinArgument_inControllerClassList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_71326.hasCurrentObject ()) {
    { //-------- @routineCallInstructionForGeneration
    routine_analyzeControllerClass (enumerator_71326.current (HERE), ioArgument_ioTransientDependencyGraph, outArgument_outControllerClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1853)) ;
    } //-------- @routineCallInstructionForGeneration
    enumerator_71326.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'semanticAnalysis'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_semanticAnalysis (const GALGAS_cursorList constinArgument_inCursorList,
                               const GALGAS_classList constinArgument_inClassList,
                               const GALGAS_entityList constinArgument_inEntityList,
                               const GALGAS_preferencesDeclarationList constinArgument_inPreferencesList,
                               const GALGAS_outletClassList constinArgument_inOutletClassList,
                               const GALGAS_documentDeclarationList constinArgument_inDocumentDeclarationList,
                               const GALGAS_controllerClassList constinArgument_inControllerClassList,
                               const GALGAS_protocolList constinArgument_inProtocolList,
                               const GALGAS_location constinArgument_inEndOfSourceFile,
                               GALGAS_string inArgument_inSourceFilePath,
                               GALGAS_userCursorMap & outArgument_outCursorMap,
                               GALGAS_stringlist & outArgument_outPredefinedCursorList,
                               GALGAS_outletClassMap & outArgument_outOutletClassMap,
                               GALGAS_controllerClassMap & outArgument_outControllerClassMap,
                               GALGAS_classMap & outArgument_outClassMap,
                               GALGAS_entityMap & outArgument_outEntityMap,
                               GALGAS_preferencesMap & outArgument_outPreferencesMap,
                               GALGAS_documentMap & outArgument_outDocumentMap,
                               GALGAS_stringlist & outArgument_outSortedTransientOrderedList,
                               GALGAS__32_stringlist & outArgument_outTransientDependencyArcList,
                               C_Compiler * inCompiler
                               COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outCursorMap.drop () ; // Release 'out' argument
  outArgument_outPredefinedCursorList.drop () ; // Release 'out' argument
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  outArgument_outControllerClassMap.drop () ; // Release 'out' argument
  outArgument_outClassMap.drop () ; // Release 'out' argument
  outArgument_outEntityMap.drop () ; // Release 'out' argument
  outArgument_outPreferencesMap.drop () ; // Release 'out' argument
  outArgument_outDocumentMap.drop () ; // Release 'out' argument
  outArgument_outSortedTransientOrderedList.drop () ; // Release 'out' argument
  outArgument_outTransientDependencyArcList.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outCursorMap = GALGAS_userCursorMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1886)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_cursorList enumerator_72402 (constinArgument_inCursorList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_72402.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outCursorMap.modifier_insertKey (enumerator_72402.current_mCursorName (HERE), enumerator_72402.current_mHotSpotX (HERE).mAttribute_double, enumerator_72402.current_mHotSpotY (HERE).mAttribute_double, inCompiler COMMA_SOURCE_FILE_AT_LINE (1888)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_72402.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outPredefinedCursorList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1890)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("arrowCursor") COMMA_SOURCE_FILE_AT_LINE (1891)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("IBeamCursor") COMMA_SOURCE_FILE_AT_LINE (1892)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("crosshairCursor") COMMA_SOURCE_FILE_AT_LINE (1893)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("closedHandCursor") COMMA_SOURCE_FILE_AT_LINE (1894)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("openHandCursor") COMMA_SOURCE_FILE_AT_LINE (1895)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("pointingHandCursor") COMMA_SOURCE_FILE_AT_LINE (1896)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("resizeLeftCursor") COMMA_SOURCE_FILE_AT_LINE (1897)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("resizeRightCursor") COMMA_SOURCE_FILE_AT_LINE (1898)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("resizeLeftRightCursor") COMMA_SOURCE_FILE_AT_LINE (1899)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("resizeUpCursor") COMMA_SOURCE_FILE_AT_LINE (1900)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("resizeDownCursor") COMMA_SOURCE_FILE_AT_LINE (1901)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("resizeUpDownCursor") COMMA_SOURCE_FILE_AT_LINE (1902)) ;
  //-------- @plusEqualnstructionForGeneration
  outArgument_outPredefinedCursorList.addAssign_operation (GALGAS_string ("disappearingItemCursor") COMMA_SOURCE_FILE_AT_LINE (1903)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_protocolMap var_protocolMap = GALGAS_protocolMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (1905)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_protocolList enumerator_73313 (constinArgument_inProtocolList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_73313.hasCurrentObject ()) {
    { //-------- @modifierCallInstructionForGeneration
    var_protocolMap.modifier_insertKey (enumerator_73313.current_mProtocolName (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1907)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_73313.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outSortedTransientOrderedList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1910)) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_transientDependencyGraph var_transientDependencyGraph = GALGAS_transientDependencyGraph::constructor_emptyGraph (SOURCE_FILE_AT_LINE (1911)) ;
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeOutletClasses (constinArgument_inOutletClassList, var_protocolMap, outArgument_outOutletClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1912)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeControllerClasses (constinArgument_inControllerClassList, var_transientDependencyGraph, outArgument_outControllerClassMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1913)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeClasses (constinArgument_inClassList, outArgument_outClassMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1914)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzePreferences (constinArgument_inPreferencesList, outArgument_outControllerClassMap, outArgument_outClassMap, outArgument_outOutletClassMap, outArgument_outPreferencesMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1919)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeEntities (constinArgument_inEntityList, outArgument_outEntityMap, outArgument_outPreferencesMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1927)) ;
  } //-------- @routineCallInstructionForGeneration
  { //-------- @routineCallInstructionForGeneration
  routine_analyzeDocuments (constinArgument_inDocumentDeclarationList, outArgument_outOutletClassMap, outArgument_outControllerClassMap, outArgument_outEntityMap, outArgument_outPreferencesMap, outArgument_outDocumentMap, var_transientDependencyGraph, inCompiler COMMA_SOURCE_FILE_AT_LINE (1933)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (1943)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).operator_and (GALGAS_bool (gOption_easyBindings_5F_options_outputTransientDependencyGraph.reader_value ()) COMMA_SOURCE_FILE_AT_LINE (1943)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = var_transientDependencyGraph.reader_graphviz (SOURCE_FILE_AT_LINE (1944)) ;
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_path = inArgument_inSourceFilePath.operator_concat (GALGAS_string (".transientDependancyGraph.dot") COMMA_SOURCE_FILE_AT_LINE (1945)) ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_bool joker_74574_0 ; // Joker input parameter
    var_s.method_writeToFileWhenDifferentContents (var_path, joker_74574_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1946)) ;
    //-------- END @methodCallInstructionForGeneration
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outTransientDependencyArcList = var_transientDependencyGraph.reader_arcs (SOURCE_FILE_AT_LINE (1949)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE_AT_LINE (1950)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_transientDependencyGraph.reader_undefinedNodeCount (SOURCE_FILE_AT_LINE (1951)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      //-------- @foreachInstructionForGeneration
      cEnumerator_stringlist enumerator_74854 (var_transientDependencyGraph.reader_undefinedNodeKeyList (SOURCE_FILE_AT_LINE (1952)), kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_74854.hasCurrentObject ()) {
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inEndOfSourceFile, GALGAS_string ("the '").operator_concat (enumerator_74854.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1953)).operator_concat (GALGAS_string ("' property is not defined") COMMA_SOURCE_FILE_AT_LINE (1953)) COMMA_SOURCE_FILE_AT_LINE (1953)) ;
        enumerator_74854.gotoNextObject () ;
      }
    }else if (kBoolFalse == test_2) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_stringlist var_unsortedTransientList ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_lstringlist joker_75106_0 ; // Joker input parameter
      GALGAS_lstringlist joker_75148_0 ; // Joker input parameter
      var_transientDependencyGraph.method_topologicalSort (outArgument_outSortedTransientOrderedList, joker_75106_0, var_unsortedTransientList, joker_75148_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (1957)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_3 = GALGAS_bool (kIsStrictSup, var_unsortedTransientList.reader_length (SOURCE_FILE_AT_LINE (1963)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
      if (kBoolTrue == test_3) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = var_unsortedTransientList.reader_length (SOURCE_FILE_AT_LINE (1964)).reader_string (SOURCE_FILE_AT_LINE (1964)).operator_concat (GALGAS_string (" transient declarations are involved in circular dependancies:") COMMA_SOURCE_FILE_AT_LINE (1964)) ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_stringlist enumerator_75378 (var_unsortedTransientList, kEnumeration_up) ;
        //--- simple foreach instruction
        while (enumerator_75378.hasCurrentObject ()) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "-  ").operator_concat (enumerator_75378.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (1966)) COMMA_SOURCE_FILE_AT_LINE (1966)) ;
          enumerator_75378.gotoNextObject () ;
        }
        //-------- @errorInstructionForGeneration
        inCompiler->emitSemanticError (constinArgument_inEndOfSourceFile, var_s COMMA_SOURCE_FILE_AT_LINE (1968)) ;
      }
    }
  }
}


//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_regularBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBindingName.objectCompare (p->mAttribute_mBindingName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredFormatter.objectCompare (p->mAttribute_mRequiredFormatter) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservedObjectName.objectCompare (p->mAttribute_mObservedObjectName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeName.objectCompare (p->mAttribute_mObservableAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (p->mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_regularBindingForGeneration::objectCompare (const GALGAS_regularBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (const cPtr_regularBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_regularBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mBindingName,
                                                                                        const GALGAS_formatterEnum & inAttribute_mRequiredFormatter,
                                                                                        const GALGAS_string & inAttribute_mObservedObjectName,
                                                                                        const GALGAS_string & inAttribute_mObservableAttributeName,
                                                                                        const GALGAS__32_stringlist & inAttribute_mOutletBindingOptionList
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  if (inAttribute_mBindingName.isValid () && inAttribute_mRequiredFormatter.isValid () && inAttribute_mObservedObjectName.isValid () && inAttribute_mObservableAttributeName.isValid () && inAttribute_mOutletBindingOptionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_regularBindingForGeneration (inAttribute_mBindingName, inAttribute_mRequiredFormatter, inAttribute_mObservedObjectName, inAttribute_mObservableAttributeName, inAttribute_mOutletBindingOptionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_regularBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_regularBindingForGeneration * p = (cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    cPtr_regularBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_regularBindingForGeneration (p->mAttribute_mBindingName, p->mAttribute_mRequiredFormatter, p->mAttribute_mObservedObjectName, p->mAttribute_mObservableAttributeName, p->mAttribute_mOutletBindingOptionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mBindingName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingName ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  GALGAS_formatterEnum result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mRequiredFormatter ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum cPtr_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredFormatter ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservedObjectName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedObjectName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  GALGAS__32_stringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cPtr_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}

//---------------------------------------------------------------------------*
//           Pointer class for @regularBindingForGeneration class            *
//---------------------------------------------------------------------------*

cPtr_regularBindingForGeneration::cPtr_regularBindingForGeneration (const GALGAS_string & in_mBindingName,
                                                                    const GALGAS_formatterEnum & in_mRequiredFormatter,
                                                                    const GALGAS_string & in_mObservedObjectName,
                                                                    const GALGAS_string & in_mObservableAttributeName,
                                                                    const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mBindingName (in_mBindingName),
mAttribute_mRequiredFormatter (in_mRequiredFormatter),
mAttribute_mObservedObjectName (in_mObservedObjectName),
mAttribute_mObservableAttributeName (in_mObservableAttributeName),
mAttribute_mOutletBindingOptionList (in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_regularBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

void cPtr_regularBindingForGeneration::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "[@regularBindingForGeneration:" ;
  mAttribute_mBindingName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRequiredFormatter.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservedObjectName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @regularBindingForGeneration type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_regularBindingForGeneration ("regularBindingForGeneration",
                                                    & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_regularBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_regularBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_regularBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler,
                                                                                      const GALGAS_location & inErrorLocation
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  const GALGAS_regularBindingForGeneration * p = (const GALGAS_regularBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_regularBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "regularBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_runBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTargetName.objectCompare (p->mAttribute_mTargetName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionName.objectCompare (p->mAttribute_mActionName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_runBindingForGeneration::objectCompare (const GALGAS_runBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (const cPtr_runBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_runBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mTargetName,
                                                                                const GALGAS_string & inAttribute_mActionName
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  if (inAttribute_mTargetName.isValid () && inAttribute_mActionName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_runBindingForGeneration (inAttribute_mTargetName, inAttribute_mActionName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_runBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_runBindingForGeneration * p = (cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
    cPtr_runBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_runBindingForGeneration (p->mAttribute_mTargetName, p->mAttribute_mActionName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mTargetName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mActionName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionName ;
}

//---------------------------------------------------------------------------*
//             Pointer class for @runBindingForGeneration class              *
//---------------------------------------------------------------------------*

cPtr_runBindingForGeneration::cPtr_runBindingForGeneration (const GALGAS_string & in_mTargetName,
                                                            const GALGAS_string & in_mActionName
                                                            COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mTargetName (in_mTargetName),
mAttribute_mActionName (in_mActionName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_runBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

void cPtr_runBindingForGeneration::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "[@runBindingForGeneration:" ;
  mAttribute_mTargetName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @runBindingForGeneration type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_runBindingForGeneration ("runBindingForGeneration",
                                                & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_runBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_runBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_runBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler,
                                                                              const GALGAS_location & inErrorLocation
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  const GALGAS_runBindingForGeneration * p = (const GALGAS_runBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_runBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "runBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_tableValueBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mColumnBindingForTableValueBindingForGeneration.objectCompare (p->mAttribute_mColumnBindingForTableValueBindingForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_tableValueBindingForGeneration::objectCompare (const GALGAS_tableValueBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (const cPtr_tableValueBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_tableValueBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mControllerName,
                                                                                              const GALGAS_columnBindingForTableValueBindingForGeneration & inAttribute_mColumnBindingForTableValueBindingForGeneration
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  if (inAttribute_mControllerName.isValid () && inAttribute_mColumnBindingForTableValueBindingForGeneration.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_tableValueBindingForGeneration (inAttribute_mControllerName, inAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_tableValueBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_tableValueBindingForGeneration * p = (cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
    cPtr_tableValueBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_tableValueBindingForGeneration (p->mAttribute_mControllerName, p->mAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mColumnBindingForTableValueBindingForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration cPtr_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnBindingForTableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @tableValueBindingForGeneration class          *
//---------------------------------------------------------------------------*

cPtr_tableValueBindingForGeneration::cPtr_tableValueBindingForGeneration (const GALGAS_string & in_mControllerName,
                                                                          const GALGAS_columnBindingForTableValueBindingForGeneration & in_mColumnBindingForTableValueBindingForGeneration
                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mColumnBindingForTableValueBindingForGeneration (in_mColumnBindingForTableValueBindingForGeneration) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_tableValueBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

void cPtr_tableValueBindingForGeneration::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "[@tableValueBindingForGeneration:" ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mColumnBindingForTableValueBindingForGeneration.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @tableValueBindingForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_tableValueBindingForGeneration ("tableValueBindingForGeneration",
                                                       & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_tableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_tableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_tableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler,
                                                                                            const GALGAS_location & inErrorLocation
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  const GALGAS_tableValueBindingForGeneration * p = (const GALGAS_tableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_tableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "tableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category reader '@abstractBindingForGeneration generateBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateBinding> gCategoryReaderTable_abstractBindingForGeneration_generateBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateBinding (const PMSInt32 inClassIndex,
                                          categoryReaderSignature_abstractBindingForGeneration_generateBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateBinding (NULL,
                                                                         freeCategoryReader_abstractBindingForGeneration_generateBinding) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                  const GALGAS_string & in_inOutletName,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category reader '@runBindingForGeneration generateBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_runBindingForGeneration_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                             const GALGAS_string & constinArgument_inOutletName,
                                                                             C_Compiler * /* inCompiler */
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_runBindingForGeneration * object = (const cPtr_runBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_runBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("  ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (97)).operator_concat (GALGAS_string (".target = ") COMMA_SOURCE_FILE_AT_LINE (97)).operator_concat (object->mAttribute_mTargetName COMMA_SOURCE_FILE_AT_LINE (97)).operator_concat (GALGAS_string (" ;\n") COMMA_SOURCE_FILE_AT_LINE (97)) ;
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (GALGAS_string ("  ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_string (".action = @selector (") COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (object->mAttribute_mActionName COMMA_SOURCE_FILE_AT_LINE (98)).operator_concat (GALGAS_string (":) ;\n") COMMA_SOURCE_FILE_AT_LINE (98)) COMMA_SOURCE_FILE_AT_LINE (98)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_runBindingForGeneration_generateBinding (void) {
  enterCategoryReader_generateBinding (kTypeDescriptor_GALGAS_runBindingForGeneration.mSlotID,
                                       categoryReader_runBindingForGeneration_generateBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_runBindingForGeneration_generateBinding (defineCategoryReader_runBindingForGeneration_generateBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@tableValueBindingForGeneration generateBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_tableValueBindingForGeneration_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                    const GALGAS_string & constinArgument_inOutletName,
                                                                                    C_Compiler * /* inCompiler */
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_tableValueBindingForGeneration * object = (const cPtr_tableValueBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_columnBindingForTableValueBindingForGeneration enumerator_4015 (object->mAttribute_mColumnBindingForTableValueBindingForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_4015.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("  if (nil == [").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (enumerator_4015.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (GALGAS_string ("\"]) {\n") COMMA_SOURCE_FILE_AT_LINE (109)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string ("' NSTableView outlet has no formatter has no column with the ") COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (enumerator_4015.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string (" identifier\") ;\n") COMMA_SOURCE_FILE_AT_LINE (110)).operator_concat (GALGAS_string ("  }else{\n") COMMA_SOURCE_FILE_AT_LINE (111)).operator_concat (GALGAS_string ("    NSActionCell * cell = [") COMMA_SOURCE_FILE_AT_LINE (112)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (112)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (112)).operator_concat (enumerator_4015.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (112)).operator_concat (GALGAS_string ("\"].dataCell ;\n") COMMA_SOURCE_FILE_AT_LINE (112)).operator_concat (GALGAS_string ("    if (! [cell isKindOfClass:[") COMMA_SOURCE_FILE_AT_LINE (113)).operator_concat (enumerator_4015.current (HERE).mAttribute_mRequiredCellClass COMMA_SOURCE_FILE_AT_LINE (113)).operator_concat (GALGAS_string (" class]]) {\n") COMMA_SOURCE_FILE_AT_LINE (113)).operator_concat (GALGAS_string ("      presentErrorWindow (__FILE__, __LINE__, @\"the dataCell is '") COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (enumerator_4015.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (GALGAS_string ("' column of the '") COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (GALGAS_string ("' should be an '") COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (enumerator_4015.current (HERE).mAttribute_mRequiredCellClass COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (GALGAS_string (" instance\") ;\n") COMMA_SOURCE_FILE_AT_LINE (114)).operator_concat (GALGAS_string ("    }\n") COMMA_SOURCE_FILE_AT_LINE (115)).operator_concat (GALGAS_string ("  }\n") COMMA_SOURCE_FILE_AT_LINE (116)).operator_concat (GALGAS_string ("  [[") COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (enumerator_4015.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (GALGAS_string ("\"]\n") COMMA_SOURCE_FILE_AT_LINE (117)).operator_concat (GALGAS_string ("    bind:@\"value\"\n") COMMA_SOURCE_FILE_AT_LINE (118)).operator_concat (GALGAS_string ("    toObject:") COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (object->mAttribute_mControllerName COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (119)).operator_concat (GALGAS_string ("    withKeyPath:@\"arrangedObjects.") COMMA_SOURCE_FILE_AT_LINE (120)).operator_concat (enumerator_4015.current (HERE).mAttribute_mObservableAttributeName COMMA_SOURCE_FILE_AT_LINE (120)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (120)).operator_concat (GALGAS_string ("    options:") COMMA_SOURCE_FILE_AT_LINE (121)) COMMA_SOURCE_FILE_AT_LINE (109)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_4015.current (HERE).mAttribute_mOutletBindingOptionList.reader_length (SOURCE_FILE_AT_LINE (122)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
    if (kBoolTrue == test_0) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("nil\n") COMMA_SOURCE_FILE_AT_LINE (123)) ;
    }else if (kBoolFalse == test_0) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("[NSDictionary dictionaryWithObjectsAndKeys:\n") COMMA_SOURCE_FILE_AT_LINE (125)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator__32_stringlist enumerator_5339 (enumerator_4015.current (HERE).mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
      //--- simple foreach instruction
      while (enumerator_5339.hasCurrentObject ()) {
        //-------- @concatInstructionForGeneration
        result_outResult.dotAssign_operation (GALGAS_string ("      ").operator_concat (enumerator_5339.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (127)).operator_concat (GALGAS_string (", @") COMMA_SOURCE_FILE_AT_LINE (127)).operator_concat (enumerator_5339.current_mValue_30_ (HERE).reader_utf_38_Representation (SOURCE_FILE_AT_LINE (127)) COMMA_SOURCE_FILE_AT_LINE (127)).operator_concat (GALGAS_string (",\n") COMMA_SOURCE_FILE_AT_LINE (127)) COMMA_SOURCE_FILE_AT_LINE (127)) ;
        enumerator_5339.gotoNextObject () ;
      }
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("      nil\n"
        "    ]\n") COMMA_SOURCE_FILE_AT_LINE (129)) ;
    }
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("  ] ;\n") COMMA_SOURCE_FILE_AT_LINE (132)) ;
    enumerator_4015.gotoNextObject () ;
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_tableValueBindingForGeneration_generateBinding (void) {
  enterCategoryReader_generateBinding (kTypeDescriptor_GALGAS_tableValueBindingForGeneration.mSlotID,
                                       categoryReader_tableValueBindingForGeneration_generateBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_tableValueBindingForGeneration_generateBinding (defineCategoryReader_tableValueBindingForGeneration_generateBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category reader '@regularBindingForGeneration generateBinding' *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_regularBindingForGeneration_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                 const GALGAS_string & constinArgument_inOutletName,
                                                                                 C_Compiler * /* inCompiler */
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_regularBindingForGeneration * object = (const cPtr_regularBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_regularBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
  //------- @switchInstructionForGeneration
  if (object->mAttribute_mRequiredFormatter.isValid ()) {
    switch (object->mAttribute_mRequiredFormatter.enumValue ()) {
    case GALGAS_formatterEnum::kNotBuilt:
      break ;
    case GALGAS_formatterEnum::kEnum_noFormatter: {
      } break ;
    case GALGAS_formatterEnum::kEnum_numberFormatter: {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("  if ((nil != ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string (") && (nil == ") COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string (".formatter)) {\n") COMMA_SOURCE_FILE_AT_LINE (146)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("' outlet has no formatter, it should have an NSNumberFormatter\") ;\n") COMMA_SOURCE_FILE_AT_LINE (147)).operator_concat (GALGAS_string ("  }else if ((nil != ") COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (GALGAS_string (") && ![") COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (GALGAS_string (".formatter isKindOfClass:[NSNumberFormatter class]]) {\n") COMMA_SOURCE_FILE_AT_LINE (148)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (149)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (149)).operator_concat (GALGAS_string (" outlet has a formatter that is not kind of NSNumberFormatter class\") ;\n") COMMA_SOURCE_FILE_AT_LINE (149)).operator_concat (GALGAS_string ("  }\n") COMMA_SOURCE_FILE_AT_LINE (150)) COMMA_SOURCE_FILE_AT_LINE (146)) ;
      } break ;
    case GALGAS_formatterEnum::kEnum_dateFormatter: {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("  if ((nil != ").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string (") && (nil == ") COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string (".formatter)) {\n") COMMA_SOURCE_FILE_AT_LINE (152)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (GALGAS_string ("' outlet has no formatter, it should have an NSDateFormatter\") ;\n") COMMA_SOURCE_FILE_AT_LINE (153)).operator_concat (GALGAS_string ("  }else if ((nil != ") COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string (") && ![") COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string (".formatter isKindOfClass:[NSDateFormatter class]]) {\n") COMMA_SOURCE_FILE_AT_LINE (154)).operator_concat (GALGAS_string ("    presentErrorWindow (__FILE__, __LINE__, @\"the '") COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (GALGAS_string ("' outlet has a formatter that is not kind of NSDateFormatter class\") ;\n") COMMA_SOURCE_FILE_AT_LINE (155)).operator_concat (GALGAS_string ("  }\n") COMMA_SOURCE_FILE_AT_LINE (156)) COMMA_SOURCE_FILE_AT_LINE (152)) ;
      } break ;
    }
  }
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (GALGAS_string ("  [").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (158)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (158)).operator_concat (GALGAS_string ("    bind:@\"") COMMA_SOURCE_FILE_AT_LINE (159)).operator_concat (object->mAttribute_mBindingName COMMA_SOURCE_FILE_AT_LINE (159)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (159)).operator_concat (GALGAS_string ("    toObject:") COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (object->mAttribute_mObservedObjectName COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (GALGAS_string ("\n") COMMA_SOURCE_FILE_AT_LINE (160)).operator_concat (GALGAS_string ("    withKeyPath:@\"") COMMA_SOURCE_FILE_AT_LINE (161)).operator_concat (object->mAttribute_mObservableAttributeName COMMA_SOURCE_FILE_AT_LINE (161)).operator_concat (GALGAS_string ("\"\n") COMMA_SOURCE_FILE_AT_LINE (161)).operator_concat (GALGAS_string ("    options:") COMMA_SOURCE_FILE_AT_LINE (162)) COMMA_SOURCE_FILE_AT_LINE (158)) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mOutletBindingOptionList.reader_length (SOURCE_FILE_AT_LINE (163)).objectCompare (GALGAS_uint ((PMUInt32) 0U))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("nil\n") COMMA_SOURCE_FILE_AT_LINE (164)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("[NSDictionary dictionaryWithObjectsAndKeys:\n") COMMA_SOURCE_FILE_AT_LINE (166)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator__32_stringlist enumerator_7466 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_7466.hasCurrentObject ()) {
      //-------- @concatInstructionForGeneration
      result_outResult.dotAssign_operation (GALGAS_string ("      ").operator_concat (enumerator_7466.current_mValue_31_ (HERE) COMMA_SOURCE_FILE_AT_LINE (168)).operator_concat (GALGAS_string (", @") COMMA_SOURCE_FILE_AT_LINE (168)).operator_concat (enumerator_7466.current_mValue_30_ (HERE).reader_utf_38_Representation (SOURCE_FILE_AT_LINE (168)) COMMA_SOURCE_FILE_AT_LINE (168)).operator_concat (GALGAS_string (",\n") COMMA_SOURCE_FILE_AT_LINE (168)) COMMA_SOURCE_FILE_AT_LINE (168)) ;
      enumerator_7466.gotoNextObject () ;
    }
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("      nil\n"
      "    ]\n") COMMA_SOURCE_FILE_AT_LINE (170)) ;
  }
  //-------- @concatInstructionForGeneration
  result_outResult.dotAssign_operation (GALGAS_string ("  ] ;\n") COMMA_SOURCE_FILE_AT_LINE (173)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_regularBindingForGeneration_generateBinding (void) {
  enterCategoryReader_generateBinding (kTypeDescriptor_GALGAS_regularBindingForGeneration.mSlotID,
                                       categoryReader_regularBindingForGeneration_generateBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_regularBindingForGeneration_generateBinding (defineCategoryReader_regularBindingForGeneration_generateBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category reader '@abstractBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding> gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateRemoveBinding (const PMSInt32 inClassIndex,
                                                categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateRemoveBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateRemoveBinding (NULL,
                                                                               freeCategoryReader_abstractBindingForGeneration_generateRemoveBinding) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                        const GALGAS_string & in_inOutletName,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@runBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_runBindingForGeneration_generateRemoveBinding (const cPtr_abstractBindingForGeneration * /* inObject */,
                                                                                   const GALGAS_string & /* constinArgument_inOutletName */,
                                                                                   C_Compiler * /* inCompiler */
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_runBindingForGeneration_generateRemoveBinding (void) {
  enterCategoryReader_generateRemoveBinding (kTypeDescriptor_GALGAS_runBindingForGeneration.mSlotID,
                                             categoryReader_runBindingForGeneration_generateRemoveBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_runBindingForGeneration_generateRemoveBinding (defineCategoryReader_runBindingForGeneration_generateRemoveBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@tableValueBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_tableValueBindingForGeneration_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                          const GALGAS_string & constinArgument_inOutletName,
                                                                                          C_Compiler * /* inCompiler */
                                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_tableValueBindingForGeneration * object = (const cPtr_tableValueBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_columnBindingForTableValueBindingForGeneration enumerator_8411 (object->mAttribute_mColumnBindingForTableValueBindingForGeneration, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_8411.hasCurrentObject ()) {
    //-------- @concatInstructionForGeneration
    result_outResult.dotAssign_operation (GALGAS_string ("  [[").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (200)).operator_concat (GALGAS_string (" tableColumnWithIdentifier:@\"") COMMA_SOURCE_FILE_AT_LINE (200)).operator_concat (enumerator_8411.current (HERE).mAttribute_mColumnIdentifier COMMA_SOURCE_FILE_AT_LINE (200)).operator_concat (GALGAS_string ("\"]\n") COMMA_SOURCE_FILE_AT_LINE (200)).operator_concat (GALGAS_string ("    unbind:@\"value\"\n") COMMA_SOURCE_FILE_AT_LINE (201)).operator_concat (GALGAS_string ("  ] ;\n") COMMA_SOURCE_FILE_AT_LINE (202)) COMMA_SOURCE_FILE_AT_LINE (200)) ;
    enumerator_8411.gotoNextObject () ;
  }
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_tableValueBindingForGeneration_generateRemoveBinding (void) {
  enterCategoryReader_generateRemoveBinding (kTypeDescriptor_GALGAS_tableValueBindingForGeneration.mSlotID,
                                             categoryReader_tableValueBindingForGeneration_generateRemoveBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_tableValueBindingForGeneration_generateRemoveBinding (defineCategoryReader_tableValueBindingForGeneration_generateRemoveBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category reader '@regularBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_string categoryReader_regularBindingForGeneration_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                                       const GALGAS_string & constinArgument_inOutletName,
                                                                                       C_Compiler * /* inCompiler */
                                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const cPtr_regularBindingForGeneration * object = (const cPtr_regularBindingForGeneration *) inObject ;
  macroValidSharedObject (object, const cPtr_regularBindingForGeneration) ;
  //-------- @assignmentInstructionForGeneration
  result_outResult = GALGAS_string ("  [").operator_concat (constinArgument_inOutletName COMMA_SOURCE_FILE_AT_LINE (213)).operator_concat (GALGAS_string (" unbind:@\"") COMMA_SOURCE_FILE_AT_LINE (213)).operator_concat (object->mAttribute_mBindingName COMMA_SOURCE_FILE_AT_LINE (213)).operator_concat (GALGAS_string ("\"] ;\n") COMMA_SOURCE_FILE_AT_LINE (213)) ;
//---
  return result_outResult ;
}


//---------------------------------------------------------------------------*

static void defineCategoryReader_regularBindingForGeneration_generateRemoveBinding (void) {
  enterCategoryReader_generateRemoveBinding (kTypeDescriptor_GALGAS_regularBindingForGeneration.mSlotID,
                                             categoryReader_regularBindingForGeneration_generateRemoveBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_regularBindingForGeneration_generateRemoveBinding (defineCategoryReader_regularBindingForGeneration_generateRemoveBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@abstractBinding analyzeOutletBinding'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBinding_analyzeOutletBinding> gCategoryMethodTable_abstractBinding_analyzeOutletBinding ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeOutletBinding (const PMSInt32 inClassIndex,
                                               categoryMethodSignature_abstractBinding_analyzeOutletBinding inMethod) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBinding_analyzeOutletBinding (void) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBinding_analyzeOutletBinding (NULL,
                                                                 freeCategoryMethod_abstractBinding_analyzeOutletBinding) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                              const GALGAS_observablePropertyMap constin_inRootEntityObservableAttributeMap,
                                              const GALGAS_observablePropertyMap constin_inSelfObservableAttributeMap,
                                              const GALGAS_preferencesMap constin_inPreferencesMap,
                                              const GALGAS_entityMap constin_inEntityMap,
                                              const GALGAS_outletClassBindingMap constin_inBindingMap,
                                              const GALGAS_controllerMap constin_inControllerMap,
                                              const GALGAS_actionMap constin_inActionMap,
                                              const GALGAS_bool constin_inHasTableValueBinding,
                                              GALGAS_outletBindingListForGeneration & io_ioOutletBindingListForGeneration,
                                              GALGAS_stringset & io_ioImplementationFileInclusionSet,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBinding) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBinding_analyzeOutletBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
      f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
           f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRootEntityObservableAttributeMap, constin_inSelfObservableAttributeMap, constin_inPreferencesMap, constin_inEntityMap, constin_inBindingMap, constin_inControllerMap, constin_inActionMap, constin_inHasTableValueBinding, io_ioOutletBindingListForGeneration, io_ioImplementationFileInclusionSet, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@tableValueBinding analyzeOutletBinding'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_tableValueBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                   const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                   const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                   const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                   const GALGAS_entityMap constinArgument_inEntityMap,
                                                                   const GALGAS_outletClassBindingMap /* constinArgument_inBindingMap */,
                                                                   const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                   const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                   const GALGAS_bool constinArgument_inHasTableValueBinding,
                                                                   GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                   GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_tableValueBinding * object = (const cPtr_tableValueBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBinding) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inHasTableValueBinding.operator_not (SOURCE_FILE_AT_LINE (497)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this outlet does not support $tableValue binding") COMMA_SOURCE_FILE_AT_LINE (498)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_controlledClassOrEntityName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_outletBindingListForGeneration var_controllerBindingList ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_19856_0 ; // Joker input parameter
    GALGAS_actionMap joker_19929_0 ; // Joker input parameter
    GALGAS_observablePropertyMap joker_19938_0 ; // Joker input parameter
    constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_19856_0, var_controlledClassOrEntityName, var_controllerBindingList, joker_19929_0, joker_19938_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (502)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableDeclarationForGeneration
    GALGAS_observablePropertyMap var_observablePropertyMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_20039_3 ; // Joker input parameter
    GALGAS_string joker_20039_2 ; // Joker input parameter
    GALGAS_string joker_20039_1 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_20102_11 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_20102_10 ; // Joker input parameter
    GALGAS_attributeListForImplementation joker_20102_9 ; // Joker input parameter
    GALGAS_transientListForImplementation joker_20102_8 ; // Joker input parameter
    GALGAS_relationshipList joker_20102_7 ; // Joker input parameter
    GALGAS_relationshipList joker_20102_6 ; // Joker input parameter
    GALGAS_propertyMap joker_20102_5 ; // Joker input parameter
    GALGAS_relationshipMap joker_20102_4 ; // Joker input parameter
    GALGAS_relationshipMap joker_20102_3 ; // Joker input parameter
    GALGAS_stringset joker_20102_2 ; // Joker input parameter
    GALGAS__32_stringlist joker_20102_1 ; // Joker input parameter
    constinArgument_inEntityMap.method_searchKey (GALGAS_lstring::constructor_new (var_controlledClassOrEntityName, inCompiler->here () COMMA_SOURCE_FILE_AT_LINE (511)), joker_20039_3, joker_20039_2, joker_20039_1, var_observablePropertyMap, joker_20102_11, joker_20102_10, joker_20102_9, joker_20102_8, joker_20102_7, joker_20102_6, joker_20102_5, joker_20102_4, joker_20102_3, joker_20102_2, joker_20102_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (510)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_columnBindingForTableValueBindingForGeneration var_columnBindingForTableValueBindingForGeneration = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (SOURCE_FILE_AT_LINE (516)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_tableValueColumnBinding enumerator_20270 (object->mAttribute_mTableValueColumnBinding, kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_20270.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_easyBindingType var_type ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_bool joker_20387_0 ; // Joker input parameter
      GALGAS_string joker_20398_0 ; // Joker input parameter
      var_observablePropertyMap.method_searchKey (enumerator_20270.current (HERE).mAttribute_mBoundPropertyName, var_type, joker_20387_0, joker_20398_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (518)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_requiredCellTypeInTableColumnBinding = categoryReader_requiredCellTypeInTableColumnBinding (var_type, inCompiler COMMA_SOURCE_FILE_AT_LINE (524)) ;
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_requiredCellTypeInTableColumnBinding.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @errorInstructionForGeneration
        GALGAS_location location_3 (enumerator_20270.current (HERE).mAttribute_mBoundPropertyName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_3, GALGAS_string ("this property cannot be named in a $tableValue binding") COMMA_SOURCE_FILE_AT_LINE (526)) ;
      }else if (kBoolFalse == test_2) {
        //-------- @ifInstructionForGeneration
        const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, var_requiredCellTypeInTableColumnBinding.objectCompare (enumerator_20270.current (HERE).mAttribute_mCellTypeName.mAttribute_string)).boolEnum () ;
        if (kBoolTrue == test_4) {
          //-------- @errorInstructionForGeneration
          GALGAS_location location_5 (enumerator_20270.current (HERE).mAttribute_mCellTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_5, GALGAS_string ("this property requires a ").operator_concat (var_requiredCellTypeInTableColumnBinding COMMA_SOURCE_FILE_AT_LINE (528)).operator_concat (GALGAS_string (" cell class") COMMA_SOURCE_FILE_AT_LINE (528)) COMMA_SOURCE_FILE_AT_LINE (528)) ;
        }
      }
      //-------- @plusEqualnstructionForGeneration
      var_columnBindingForTableValueBindingForGeneration.addAssign_operation (enumerator_20270.current (HERE).mAttribute_mColumnName.mAttribute_string, var_requiredCellTypeInTableColumnBinding, enumerator_20270.current (HERE).mAttribute_mBoundPropertyName.mAttribute_string, GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (534)) COMMA_SOURCE_FILE_AT_LINE (530)) ;
      enumerator_20270.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_tableValueBindingForGeneration::constructor_new (object->mAttribute_mControllerName.mAttribute_string, var_columnBindingForTableValueBindingForGeneration COMMA_SOURCE_FILE_AT_LINE (537)) COMMA_SOURCE_FILE_AT_LINE (537)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_tableValueBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_tableValueBinding.mSlotID,
                                            categoryMethod_tableValueBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_tableValueBinding_analyzeOutletBinding (defineCategoryMethod_tableValueBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@runBinding analyzeOutletBinding'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_runBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                            const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                            const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                            const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                            const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                            const GALGAS_outletClassBindingMap /* constinArgument_inBindingMap */,
                                                            const GALGAS_controllerMap constinArgument_inControllerMap,
                                                            const GALGAS_actionMap constinArgument_inActionMap,
                                                            const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                            GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                            GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_runBinding * object = (const cPtr_runBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_runBinding) ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mTargetName.mAttribute_string.objectCompare (GALGAS_string ("self"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @methodCallInstructionForGeneration
    constinArgument_inActionMap.method_searchKey (object->mAttribute_mActionName, inCompiler COMMA_SOURCE_FILE_AT_LINE (559)) ;
    //-------- END @methodCallInstructionForGeneration
  }else if (kBoolFalse == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_actionMap var_actionMap ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_string joker_22107_3 ; // Joker input parameter
    GALGAS_string joker_22107_2 ; // Joker input parameter
    GALGAS_outletBindingListForGeneration joker_22107_1 ; // Joker input parameter
    GALGAS_observablePropertyMap joker_22122_0 ; // Joker input parameter
    constinArgument_inControllerMap.method_searchKey (object->mAttribute_mTargetName, joker_22107_3, joker_22107_2, joker_22107_1, var_actionMap, joker_22122_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (562)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @methodCallInstructionForGeneration
    var_actionMap.method_searchKey (object->mAttribute_mActionName, inCompiler COMMA_SOURCE_FILE_AT_LINE (563)) ;
    //-------- END @methodCallInstructionForGeneration
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_runBindingForGeneration::constructor_new (object->mAttribute_mTargetName.mAttribute_string, object->mAttribute_mActionName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (565)) COMMA_SOURCE_FILE_AT_LINE (565)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_runBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_runBinding.mSlotID,
                                            categoryMethod_runBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_runBinding_analyzeOutletBinding (defineCategoryMethod_runBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@regularControllerBinding analyzeOutletBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularControllerBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                          const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                          const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                          const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                          const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                          const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                          const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                          GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                          GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularControllerBinding * object = (const cPtr_regularControllerBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularControllerBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (586)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_observableAttributeMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_string joker_23302_4 ; // Joker input parameter
  GALGAS_string joker_23302_3 ; // Joker input parameter
  GALGAS_outletBindingListForGeneration joker_23302_2 ; // Joker input parameter
  GALGAS_actionMap joker_23302_1 ; // Joker input parameter
  constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_23302_4, joker_23302_3, joker_23302_2, joker_23302_1, var_observableAttributeMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (592)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingType var_observablePropertyType ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_bool var_isTransient ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_propertySignature ;
  //-------- @methodCallInstructionForGeneration
  var_observableAttributeMap.method_searchKey (object->mAttribute_mControllerAttributeName, var_observablePropertyType, var_isTransient, var_propertySignature, inCompiler COMMA_SOURCE_FILE_AT_LINE (598)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_observedKeyPath = object->mAttribute_mControllerAttributeName.mAttribute_string ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @concatInstructionForGeneration
    var_observedKeyPath.dotAssign_operation (GALGAS_string (".@count") COMMA_SOURCE_FILE_AT_LINE (607)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_observablePropertyType.objectCompare (GALGAS_easyBindingType::constructor_toManyEntitiesType (SOURCE_FILE_AT_LINE (608)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mControllerAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the 'count' option is only allowed for to-many relationships") COMMA_SOURCE_FILE_AT_LINE (609)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (615)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_24196 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (616)).isValidAndTrue () ;
  if (enumerator_24196.hasCurrentObject () && bool_3) {
    while (enumerator_24196.hasCurrentObject () && bool_3) {
      //-------- @assignmentInstructionForGeneration
      var_requiredFormatter = enumerator_24196.current_mRequiredFormatter (HERE) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, enumerator_24196.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
      enumerator_24196.gotoNextObject () ;
      if (enumerator_24196.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (616)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (620)).boolEnum () ;
  if (kBoolTrue == test_4) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (621)) COMMA_SOURCE_FILE_AT_LINE (621)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (621)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_24500 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (622)).isValidAndTrue () ;
    if (enumerator_24500.hasCurrentObject () && bool_5) {
      while (enumerator_24500.hasCurrentObject () && bool_5) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_24500.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (623)) COMMA_SOURCE_FILE_AT_LINE (623)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (623)) COMMA_SOURCE_FILE_AT_LINE (623)) ;
        enumerator_24500.gotoNextObject () ;
        if (enumerator_24500.hasCurrentObject ()) {
          bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (622)).isValidAndTrue () ;
        }
      }
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (object->mAttribute_mControllerAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, var_s COMMA_SOURCE_FILE_AT_LINE (625)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (628)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_24735 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_24735.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    var_outletClassBindingOptionMap.method_searchKey (enumerator_24735.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (631)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_24924 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (633)).isValidAndTrue () ;
    if (enumerator_24924.hasCurrentObject () && bool_7) {
      while (enumerator_24924.hasCurrentObject () && bool_7) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_24988 (enumerator_24735.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (634)).isValidAndTrue () ;
        if (enumerator_24988.hasCurrentObject () && bool_8) {
          while (enumerator_24988.hasCurrentObject () && bool_8) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_24924.current_mType (HERE).objectCompare (enumerator_24988.current_mType (HERE))) ;
            enumerator_24988.gotoNextObject () ;
            if (enumerator_24988.hasCurrentObject ()) {
              bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (634)).isValidAndTrue () ;
            }
          }
        }
        enumerator_24924.gotoNextObject () ;
        if (enumerator_24924.hasCurrentObject ()) {
          bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (633)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (638)).boolEnum () ;
    if (kBoolTrue == test_9) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_25227 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (640)).isValidAndTrue () ;
      if (enumerator_25227.hasCurrentObject () && bool_10) {
        while (enumerator_25227.hasCurrentObject () && bool_10) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_25227.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (641)) COMMA_SOURCE_FILE_AT_LINE (641)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (641)) COMMA_SOURCE_FILE_AT_LINE (641)) ;
          enumerator_25227.gotoNextObject () ;
          if (enumerator_25227.hasCurrentObject ()) {
            bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (640)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_11 (enumerator_24735.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_11, var_s COMMA_SOURCE_FILE_AT_LINE (643)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_bindingOptionList.addAssign_operation (enumerator_24735.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (645)), enumerator_24735.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (645)) ;
    enumerator_24735.gotoNextObject () ;
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (648)), var_requiredFormatter, object->mAttribute_mControllerName.mAttribute_string, var_observedKeyPath, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (647)) COMMA_SOURCE_FILE_AT_LINE (647)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularControllerBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularControllerBinding.mSlotID,
                                            categoryMethod_regularControllerBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularControllerBinding_analyzeOutletBinding (defineCategoryMethod_regularControllerBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@regularRootBinding analyzeOutletBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularRootBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_observablePropertyMap constinArgument_inRootEntityObservableAttributeMap,
                                                                    const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                    const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                    const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                    const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularRootBinding * object = (const cPtr_regularRootBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularRootBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (671)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingType var_observablePropertyType ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_26784_0 ; // Joker input parameter
  GALGAS_string joker_26791_0 ; // Joker input parameter
  constinArgument_inRootEntityObservableAttributeMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_observablePropertyType, joker_26784_0, joker_26791_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (677)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_observableKeyPath = object->mAttribute_mObservableAttributeName.mAttribute_string ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_observablePropertyType.objectCompare (GALGAS_easyBindingType::constructor_toManyEntitiesType (SOURCE_FILE_AT_LINE (686)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @concatInstructionForGeneration
      var_observableKeyPath.dotAssign_operation (GALGAS_string (".@count") COMMA_SOURCE_FILE_AT_LINE (687)) ;
      //-------- @assignmentInstructionForGeneration
      var_observablePropertyType = GALGAS_easyBindingType::constructor_uintegerType (SOURCE_FILE_AT_LINE (688)) ;
    }else if (kBoolFalse == test_1) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the 'count' path is only allowed for to-many relationships") COMMA_SOURCE_FILE_AT_LINE (690)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (695)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_27467 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (696)).isValidAndTrue () ;
  if (enumerator_27467.hasCurrentObject () && bool_3) {
    while (enumerator_27467.hasCurrentObject () && bool_3) {
      //-------- @assignmentInstructionForGeneration
      var_requiredFormatter = enumerator_27467.current_mRequiredFormatter (HERE) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, enumerator_27467.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
      enumerator_27467.gotoNextObject () ;
      if (enumerator_27467.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (696)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (700)).boolEnum () ;
  if (kBoolTrue == test_4) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (701)) COMMA_SOURCE_FILE_AT_LINE (701)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (701)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_27771 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (702)).isValidAndTrue () ;
    if (enumerator_27771.hasCurrentObject () && bool_5) {
      while (enumerator_27771.hasCurrentObject () && bool_5) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_27771.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (703)) COMMA_SOURCE_FILE_AT_LINE (703)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (703)) COMMA_SOURCE_FILE_AT_LINE (703)) ;
        enumerator_27771.gotoNextObject () ;
        if (enumerator_27771.hasCurrentObject ()) {
          bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (702)).isValidAndTrue () ;
        }
      }
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, var_s COMMA_SOURCE_FILE_AT_LINE (705)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (708)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_28044 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_28044.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    var_outletClassBindingOptionMap.method_searchKey (enumerator_28044.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (711)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_28233 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (713)).isValidAndTrue () ;
    if (enumerator_28233.hasCurrentObject () && bool_7) {
      while (enumerator_28233.hasCurrentObject () && bool_7) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_28297 (enumerator_28044.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (714)).isValidAndTrue () ;
        if (enumerator_28297.hasCurrentObject () && bool_8) {
          while (enumerator_28297.hasCurrentObject () && bool_8) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_28233.current_mType (HERE).objectCompare (enumerator_28297.current_mType (HERE))) ;
            enumerator_28297.gotoNextObject () ;
            if (enumerator_28297.hasCurrentObject ()) {
              bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (714)).isValidAndTrue () ;
            }
          }
        }
        enumerator_28233.gotoNextObject () ;
        if (enumerator_28233.hasCurrentObject ()) {
          bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (713)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (718)).boolEnum () ;
    if (kBoolTrue == test_9) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_28536 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (720)).isValidAndTrue () ;
      if (enumerator_28536.hasCurrentObject () && bool_10) {
        while (enumerator_28536.hasCurrentObject () && bool_10) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_28536.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (721)) COMMA_SOURCE_FILE_AT_LINE (721)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (721)) COMMA_SOURCE_FILE_AT_LINE (721)) ;
          enumerator_28536.gotoNextObject () ;
          if (enumerator_28536.hasCurrentObject ()) {
            bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (720)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_11 (enumerator_28044.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_11, var_s COMMA_SOURCE_FILE_AT_LINE (723)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_bindingOptionList.addAssign_operation (enumerator_28044.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (725)), enumerator_28044.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (725)) ;
    enumerator_28044.gotoNextObject () ;
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (729)), var_requiredFormatter, GALGAS_string ("mRootObject"), var_observableKeyPath, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (728)) COMMA_SOURCE_FILE_AT_LINE (728)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularRootBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularRootBinding.mSlotID,
                                            categoryMethod_regularRootBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularRootBinding_analyzeOutletBinding (defineCategoryMethod_regularRootBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@regularSelfBinding analyzeOutletBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularSelfBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                    const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                    const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                    const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                    const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularSelfBinding * object = (const cPtr_regularSelfBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularSelfBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (752)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingType var_observablePropertyType ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_30133_0 ; // Joker input parameter
  GALGAS_string joker_30140_0 ; // Joker input parameter
  constinArgument_inSelfObservableAttributeMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_observablePropertyType, joker_30133_0, joker_30140_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (758)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_observableKeyPath = object->mAttribute_mObservableAttributeName.mAttribute_string ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, var_observablePropertyType.objectCompare (GALGAS_easyBindingType::constructor_toManyEntitiesType (SOURCE_FILE_AT_LINE (767)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @concatInstructionForGeneration
      var_observableKeyPath.dotAssign_operation (GALGAS_string (".@count") COMMA_SOURCE_FILE_AT_LINE (768)) ;
      //-------- @assignmentInstructionForGeneration
      var_observablePropertyType = GALGAS_easyBindingType::constructor_uintegerType (SOURCE_FILE_AT_LINE (769)) ;
    }else if (kBoolFalse == test_1) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_2 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the 'count' path is only allowed for to-many relationships") COMMA_SOURCE_FILE_AT_LINE (771)) ;
    }
  }
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (776)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_30816 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (777)).isValidAndTrue () ;
  if (enumerator_30816.hasCurrentObject () && bool_3) {
    while (enumerator_30816.hasCurrentObject () && bool_3) {
      //-------- @assignmentInstructionForGeneration
      var_requiredFormatter = enumerator_30816.current_mRequiredFormatter (HERE) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, enumerator_30816.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
      enumerator_30816.gotoNextObject () ;
      if (enumerator_30816.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE_AT_LINE (777)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (781)).boolEnum () ;
  if (kBoolTrue == test_4) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (782)) COMMA_SOURCE_FILE_AT_LINE (782)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (782)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_31120 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (783)).isValidAndTrue () ;
    if (enumerator_31120.hasCurrentObject () && bool_5) {
      while (enumerator_31120.hasCurrentObject () && bool_5) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_31120.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (784)) COMMA_SOURCE_FILE_AT_LINE (784)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (784)) COMMA_SOURCE_FILE_AT_LINE (784)) ;
        enumerator_31120.gotoNextObject () ;
        if (enumerator_31120.hasCurrentObject ()) {
          bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (783)).isValidAndTrue () ;
        }
      }
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, var_s COMMA_SOURCE_FILE_AT_LINE (786)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (789)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_31393 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_31393.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    var_outletClassBindingOptionMap.method_searchKey (enumerator_31393.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (792)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_31582 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (794)).isValidAndTrue () ;
    if (enumerator_31582.hasCurrentObject () && bool_7) {
      while (enumerator_31582.hasCurrentObject () && bool_7) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_31646 (enumerator_31393.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (795)).isValidAndTrue () ;
        if (enumerator_31646.hasCurrentObject () && bool_8) {
          while (enumerator_31646.hasCurrentObject () && bool_8) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_31582.current_mType (HERE).objectCompare (enumerator_31646.current_mType (HERE))) ;
            enumerator_31646.gotoNextObject () ;
            if (enumerator_31646.hasCurrentObject ()) {
              bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (795)).isValidAndTrue () ;
            }
          }
        }
        enumerator_31582.gotoNextObject () ;
        if (enumerator_31582.hasCurrentObject ()) {
          bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (794)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_9 = var_found.operator_not (SOURCE_FILE_AT_LINE (799)).boolEnum () ;
    if (kBoolTrue == test_9) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_31885 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (801)).isValidAndTrue () ;
      if (enumerator_31885.hasCurrentObject () && bool_10) {
        while (enumerator_31885.hasCurrentObject () && bool_10) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_31885.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (802)) COMMA_SOURCE_FILE_AT_LINE (802)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (802)) COMMA_SOURCE_FILE_AT_LINE (802)) ;
          enumerator_31885.gotoNextObject () ;
          if (enumerator_31885.hasCurrentObject ()) {
            bool_10 = var_found.operator_not (SOURCE_FILE_AT_LINE (801)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_11 (enumerator_31393.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_11, var_s COMMA_SOURCE_FILE_AT_LINE (804)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_bindingOptionList.addAssign_operation (enumerator_31393.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (806)), enumerator_31393.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (806)) ;
    enumerator_31393.gotoNextObject () ;
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (810)), var_requiredFormatter, GALGAS_string ("self"), var_observableKeyPath, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (809)) COMMA_SOURCE_FILE_AT_LINE (809)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularSelfBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularSelfBinding.mSlotID,
                                            categoryMethod_regularSelfBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularSelfBinding_analyzeOutletBinding (defineCategoryMethod_regularSelfBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@regularPreferenceBinding analyzeOutletBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularPreferenceBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                          const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                                                                          const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                          const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                          const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                          const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                          const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                          GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                          GALGAS_stringset & ioArgument_ioImplementationFileInclusionSet,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularPreferenceBinding * object = (const cPtr_regularPreferenceBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularPreferenceBinding) ;
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioImplementationFileInclusionSet.addAssign_operation (object->mAttribute_mPreferenceName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (832)) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (834)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_attributeListForImplementation joker_33452_4 ; // Joker input parameter
  GALGAS_transientListForImplementation joker_33452_3 ; // Joker input parameter
  GALGAS_outletGenerationList joker_33452_2 ; // Joker input parameter
  GALGAS_lstringlist joker_33452_1 ; // Joker input parameter
  GALGAS_stringset joker_33510_3 ; // Joker input parameter
  GALGAS_controllerMap joker_33510_2 ; // Joker input parameter
  GALGAS_preferenceArrayMap joker_33510_1 ; // Joker input parameter
  constinArgument_inPreferencesMap.method_searchKey (object->mAttribute_mPreferenceName, joker_33452_4, joker_33452_3, joker_33452_2, joker_33452_1, var_observablePropertyMap, joker_33510_3, joker_33510_2, joker_33510_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (840)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingType var_observablePropertyType ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_33734_0 ; // Joker input parameter
  GALGAS_string joker_33741_0 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mPreferenceAttributeName, var_observablePropertyType, joker_33734_0, joker_33741_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (847)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (855)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_33952 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (856)).isValidAndTrue () ;
  if (enumerator_33952.hasCurrentObject () && bool_0) {
    while (enumerator_33952.hasCurrentObject () && bool_0) {
      //-------- @assignmentInstructionForGeneration
      var_requiredFormatter = enumerator_33952.current_mRequiredFormatter (HERE) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, enumerator_33952.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
      enumerator_33952.gotoNextObject () ;
      if (enumerator_33952.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (856)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (860)).boolEnum () ;
  if (kBoolTrue == test_1) {
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (861)) COMMA_SOURCE_FILE_AT_LINE (861)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (861)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_34256 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (862)).isValidAndTrue () ;
    if (enumerator_34256.hasCurrentObject () && bool_2) {
      while (enumerator_34256.hasCurrentObject () && bool_2) {
        //-------- @concatInstructionForGeneration
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_34256.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (863)) COMMA_SOURCE_FILE_AT_LINE (863)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (863)) COMMA_SOURCE_FILE_AT_LINE (863)) ;
        enumerator_34256.gotoNextObject () ;
        if (enumerator_34256.hasCurrentObject ()) {
          bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (862)).isValidAndTrue () ;
        }
      }
    }
    //-------- @errorInstructionForGeneration
    GALGAS_location location_3 (object->mAttribute_mPreferenceAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, var_s COMMA_SOURCE_FILE_AT_LINE (865)) ;
  }
  //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
  GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (868)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_outletBindingOptionList enumerator_34529 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_34529.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingTypeList var_acceptableTypeList ;
    //-------- @methodCallInstructionForGeneration
    var_outletClassBindingOptionMap.method_searchKey (enumerator_34529.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (871)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeList enumerator_34718 (var_acceptableTypeList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (873)).isValidAndTrue () ;
    if (enumerator_34718.hasCurrentObject () && bool_4) {
      while (enumerator_34718.hasCurrentObject () && bool_4) {
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_34782 (enumerator_34529.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (874)).isValidAndTrue () ;
        if (enumerator_34782.hasCurrentObject () && bool_5) {
          while (enumerator_34782.hasCurrentObject () && bool_5) {
            //-------- @assignmentInstructionForGeneration
            var_found = GALGAS_bool (kIsEqual, enumerator_34718.current_mType (HERE).objectCompare (enumerator_34782.current_mType (HERE))) ;
            enumerator_34782.gotoNextObject () ;
            if (enumerator_34782.hasCurrentObject ()) {
              bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (874)).isValidAndTrue () ;
            }
          }
        }
        enumerator_34718.gotoNextObject () ;
        if (enumerator_34718.hasCurrentObject ()) {
          bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (873)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (878)).boolEnum () ;
    if (kBoolTrue == test_6) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_35021 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (880)).isValidAndTrue () ;
      if (enumerator_35021.hasCurrentObject () && bool_7) {
        while (enumerator_35021.hasCurrentObject () && bool_7) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_35021.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (881)) COMMA_SOURCE_FILE_AT_LINE (881)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (881)) COMMA_SOURCE_FILE_AT_LINE (881)) ;
          enumerator_35021.gotoNextObject () ;
          if (enumerator_35021.hasCurrentObject ()) {
            bool_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (880)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_8 (enumerator_34529.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_8, var_s COMMA_SOURCE_FILE_AT_LINE (883)) ;
    }
    //-------- @plusEqualnstructionForGeneration
    var_bindingOptionList.addAssign_operation (enumerator_34529.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (885)), enumerator_34529.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (885)) ;
    enumerator_34529.gotoNextObject () ;
  }
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (889)), var_requiredFormatter, GALGAS_string ("g_").operator_concat (object->mAttribute_mPreferenceName.reader_string (SOURCE_FILE_AT_LINE (891)) COMMA_SOURCE_FILE_AT_LINE (891)), object->mAttribute_mPreferenceAttributeName.mAttribute_string, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (888)) COMMA_SOURCE_FILE_AT_LINE (888)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularPreferenceBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularPreferenceBinding.mSlotID,
                                            categoryMethod_regularPreferenceBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularPreferenceBinding_analyzeOutletBinding (defineCategoryMethod_regularPreferenceBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Abstract category method '@multiValuedBindingBoundModel analyzeModel'   *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_multiValuedBindingBoundModel_analyzeModel> gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeModel (const PMSInt32 inClassIndex,
                                       categoryMethodSignature_multiValuedBindingBoundModel_analyzeModel inMethod) {
  gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_multiValuedBindingBoundModel_analyzeModel (void) {
  gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundModel_analyzeModel (NULL,
                                                                      freeCategoryMethod_multiValuedBindingBoundModel_analyzeModel) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                      const GALGAS_observablePropertyMap constin_inRootEntityObservableAttributeMap,
                                      const GALGAS_observablePropertyMap constin_inSelfObservableAttributeMap,
                                      const GALGAS_preferencesMap constin_inPreferencesMap,
                                      const GALGAS_controllerMap constin_inControllerMap,
                                      GALGAS_stringset & io_ioImplementationFileInclusionSet,
                                      GALGAS_string & out_outObservedObjectName,
                                      GALGAS_easyBindingType & out_outObservablePropertyType,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outObservedObjectName.drop () ;
  out_outObservablePropertyType.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_multiValuedBindingBoundModel) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_multiValuedBindingBoundModel_analyzeModel f = NULL ;
    if (classIndex < gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.count ()) {
      f = gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.count ()) {
           f = gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRootEntityObservableAttributeMap, constin_inSelfObservableAttributeMap, constin_inPreferencesMap, constin_inControllerMap, io_ioImplementationFileInclusionSet, out_outObservedObjectName, out_outObservablePropertyType, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@multiValuedBindingBoundToRoot analyzeModel'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToRoot_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                       const GALGAS_observablePropertyMap constinArgument_inRootEntityObservableAttributeMap,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                       const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                       const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                       GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                       GALGAS_string & outArgument_outObservedObjectName,
                                                                       GALGAS_easyBindingType & outArgument_outObservablePropertyType,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToRoot * object = (const cPtr_multiValuedBindingBoundToRoot *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBindingBoundToRoot) ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_36585_0 ; // Joker input parameter
  GALGAS_string joker_36592_0 ; // Joker input parameter
  constinArgument_inRootEntityObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_36585_0, joker_36592_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (920)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outObservedObjectName = GALGAS_string ("mRootObject") ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToRoot_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToRoot.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToRoot_analyzeModel) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToRoot_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToRoot_analyzeModel, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@multiValuedBindingBoundToSelf analyzeModel'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToSelf_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                       const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                       const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                       const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                       GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                       GALGAS_string & outArgument_outObservedObjectName,
                                                                       GALGAS_easyBindingType & outArgument_outObservablePropertyType,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToSelf * object = (const cPtr_multiValuedBindingBoundToSelf *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBindingBoundToSelf) ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_37241_0 ; // Joker input parameter
  GALGAS_string joker_37248_0 ; // Joker input parameter
  constinArgument_inSelfObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_37241_0, joker_37248_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (940)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outObservedObjectName = GALGAS_string ("self") ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToSelf_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToSelf.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToSelf_analyzeModel) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToSelf_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToSelf_analyzeModel, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@multiValuedBindingBoundToPref analyzeModel'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToPref_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                       const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                                                                       const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                       GALGAS_stringset & ioArgument_ioImplementationFileInclusionSet,
                                                                       GALGAS_string & outArgument_outObservedObjectName,
                                                                       GALGAS_easyBindingType & outArgument_outObservablePropertyType,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToPref * object = (const cPtr_multiValuedBindingBoundToPref *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBindingBoundToPref) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_preferenceObservableAttributeMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_attributeListForImplementation joker_37842_4 ; // Joker input parameter
  GALGAS_transientListForImplementation joker_37842_3 ; // Joker input parameter
  GALGAS_outletGenerationList joker_37842_2 ; // Joker input parameter
  GALGAS_lstringlist joker_37842_1 ; // Joker input parameter
  GALGAS_stringset joker_37911_3 ; // Joker input parameter
  GALGAS_controllerMap joker_37911_2 ; // Joker input parameter
  GALGAS_preferenceArrayMap joker_37911_1 ; // Joker input parameter
  constinArgument_inPreferencesMap.method_searchKey (object->mAttribute_mPreferenceName, joker_37842_4, joker_37842_3, joker_37842_2, joker_37842_1, var_preferenceObservableAttributeMap, joker_37911_3, joker_37911_2, joker_37911_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (960)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_38021_0 ; // Joker input parameter
  GALGAS_string joker_38028_0 ; // Joker input parameter
  var_preferenceObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_38021_0, joker_38028_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (966)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outObservedObjectName = GALGAS_string ("g_").operator_concat (object->mAttribute_mPreferenceName.reader_string (SOURCE_FILE_AT_LINE (972)) COMMA_SOURCE_FILE_AT_LINE (972)) ;
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioImplementationFileInclusionSet.addAssign_operation (object->mAttribute_mPreferenceName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (973)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToPref_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToPref.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToPref_analyzeModel) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToPref_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToPref_analyzeModel, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@multiValuedBindingBoundToController analyzeModel'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToController_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                             const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                             const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                             const GALGAS_preferencesMap /* constinArgument_inPreferencesMap */,
                                                                             const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                             GALGAS_stringset & /* ioArgument_ioImplementationFileInclusionSet */,
                                                                             GALGAS_string & outArgument_outObservedObjectName,
                                                                             GALGAS_easyBindingType & outArgument_outObservablePropertyType,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToController * object = (const cPtr_multiValuedBindingBoundToController *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBindingBoundToController) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_observablePropertyMap var_controllerObservableAttributeMap ;
  //-------- @methodCallInstructionForGeneration
  GALGAS_string joker_38715_4 ; // Joker input parameter
  GALGAS_string joker_38715_3 ; // Joker input parameter
  GALGAS_outletBindingListForGeneration joker_38715_2 ; // Joker input parameter
  GALGAS_actionMap joker_38715_1 ; // Joker input parameter
  constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_38715_4, joker_38715_3, joker_38715_2, joker_38715_1, var_controllerObservableAttributeMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (987)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @methodCallInstructionForGeneration
  GALGAS_bool joker_38886_0 ; // Joker input parameter
  GALGAS_string joker_38893_0 ; // Joker input parameter
  var_controllerObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_38886_0, joker_38893_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (992)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @assignmentInstructionForGeneration
  outArgument_outObservedObjectName = object->mAttribute_mControllerName.mAttribute_string ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToController_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToController.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToController_analyzeModel) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToController_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToController_analyzeModel, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@multiValuedBinding analyzeOutletBinding'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_observablePropertyMap constinArgument_inRootEntityObservableAttributeMap,
                                                                    const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                    const GALGAS_preferencesMap constinArgument_inPreferencesMap,
                                                                    const GALGAS_entityMap /* constinArgument_inEntityMap */,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBindingMap,
                                                                    const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_stringset & ioArgument_ioImplementationFileInclusionSet,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBinding * object = (const cPtr_multiValuedBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1017)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_generatedBindingName = object->mAttribute_mBindingName.mAttribute_string ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_uint var_idx = GALGAS_uint ((PMUInt32) 1U) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_multiValuedBindingList enumerator_39930 (object->mAttribute_mMultiValuedBindingList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_39930.hasCurrentObject ()) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_string var_observedObjectName ;
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingType var_observablePropertyType ;
    //-------- @methodCallInstructionForGeneration
    callCategoryMethod_analyzeModel ((const cPtr_multiValuedBindingBoundModel *) enumerator_39930.current_mBoundModel (HERE).ptr (), constinArgument_inRootEntityObservableAttributeMap, constinArgument_inSelfObservableAttributeMap, constinArgument_inPreferencesMap, constinArgument_inControllerMap, ioArgument_ioImplementationFileInclusionSet, var_observedObjectName, var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1022)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
    GALGAS_bool var_found = GALGAS_bool (false) ;
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (1033)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_easyBindingTypeAndFormatterList enumerator_40428 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    //--- complex foreach instruction
    bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1034)).isValidAndTrue () ;
    if (enumerator_40428.hasCurrentObject () && bool_0) {
      while (enumerator_40428.hasCurrentObject () && bool_0) {
        //-------- @assignmentInstructionForGeneration
        var_requiredFormatter = enumerator_40428.current_mRequiredFormatter (HERE) ;
        //-------- @assignmentInstructionForGeneration
        var_found = GALGAS_bool (kIsEqual, enumerator_40428.current_mType (HERE).objectCompare (var_observablePropertyType)) ;
        enumerator_40428.gotoNextObject () ;
        if (enumerator_40428.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (1034)).isValidAndTrue () ;
        }
      }
    }
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE_AT_LINE (1038)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE_AT_LINE (1039)) COMMA_SOURCE_FILE_AT_LINE (1039)).operator_concat (GALGAS_string ("' type, acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (1039)) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeAndFormatterList enumerator_40744 (var_acceptableTypeFormatterList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1040)).isValidAndTrue () ;
      if (enumerator_40744.hasCurrentObject () && bool_2) {
        while (enumerator_40744.hasCurrentObject () && bool_2) {
          //-------- @concatInstructionForGeneration
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_40744.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1041)) COMMA_SOURCE_FILE_AT_LINE (1041)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1041)) COMMA_SOURCE_FILE_AT_LINE (1041)) ;
          enumerator_40744.gotoNextObject () ;
          if (enumerator_40744.hasCurrentObject ()) {
            bool_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (1040)).isValidAndTrue () ;
          }
        }
      }
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (enumerator_39930.current_mBoundModel (HERE).reader_mPropertyName (SOURCE_FILE_AT_LINE (1043)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, var_s COMMA_SOURCE_FILE_AT_LINE (1043)) ;
    }
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS__32_stringlist var_bindingOptionList = GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (1046)) ;
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_4 = enumerator_39930.current_mNegate (HERE).boolEnum () ;
    if (kBoolTrue == test_4) {
      //-------- @plusEqualnstructionForGeneration
      var_bindingOptionList.addAssign_operation (GALGAS_string ("NSValueTransformerName"), GALGAS_string ("NSNegateBooleanTransformerName") COMMA_SOURCE_FILE_AT_LINE (1048)) ;
    }
    //-------- @foreachInstructionForGeneration
    cEnumerator_outletBindingOptionList enumerator_41119 (enumerator_39930.current_mOutletBindingOptionList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_41119.hasCurrentObject ()) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_easyBindingTypeList var_acceptableTypeList ;
      //-------- @methodCallInstructionForGeneration
      var_outletClassBindingOptionMap.method_searchKey (enumerator_41119.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (1052)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_bool var_found = GALGAS_bool (false) ;
      //-------- @foreachInstructionForGeneration
      cEnumerator_easyBindingTypeList enumerator_41316 (var_acceptableTypeList, kEnumeration_up) ;
      //--- complex foreach instruction
      bool bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (1054)).isValidAndTrue () ;
      if (enumerator_41316.hasCurrentObject () && bool_5) {
        while (enumerator_41316.hasCurrentObject () && bool_5) {
          //-------- @foreachInstructionForGeneration
          cEnumerator_easyBindingTypeList enumerator_41382 (enumerator_41119.current_mOptionValuePossibleTypes (HERE), kEnumeration_up) ;
          //--- complex foreach instruction
          bool bool_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (1055)).isValidAndTrue () ;
          if (enumerator_41382.hasCurrentObject () && bool_6) {
            while (enumerator_41382.hasCurrentObject () && bool_6) {
              //-------- @assignmentInstructionForGeneration
              var_found = GALGAS_bool (kIsEqual, enumerator_41316.current_mType (HERE).objectCompare (enumerator_41382.current_mType (HERE))) ;
              enumerator_41382.gotoNextObject () ;
              if (enumerator_41382.hasCurrentObject ()) {
                bool_6 = var_found.operator_not (SOURCE_FILE_AT_LINE (1055)).isValidAndTrue () ;
              }
            }
          }
          enumerator_41316.gotoNextObject () ;
          if (enumerator_41316.hasCurrentObject ()) {
            bool_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (1054)).isValidAndTrue () ;
          }
        }
      }
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_7 = var_found.operator_not (SOURCE_FILE_AT_LINE (1059)).boolEnum () ;
      if (kBoolTrue == test_7) {
        //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
        GALGAS_string var_s = GALGAS_string ("the option value acceptable types are:") ;
        //-------- @foreachInstructionForGeneration
        cEnumerator_easyBindingTypeList enumerator_41633 (var_acceptableTypeList, kEnumeration_up) ;
        //--- complex foreach instruction
        bool bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (1061)).isValidAndTrue () ;
        if (enumerator_41633.hasCurrentObject () && bool_8) {
          while (enumerator_41633.hasCurrentObject () && bool_8) {
            //-------- @concatInstructionForGeneration
            var_s.dotAssign_operation (GALGAS_string ("\n"
              "  - '").operator_concat (categoryReader_ebTypeName (enumerator_41633.current_mType (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (1062)) COMMA_SOURCE_FILE_AT_LINE (1062)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1062)) COMMA_SOURCE_FILE_AT_LINE (1062)) ;
            enumerator_41633.gotoNextObject () ;
            if (enumerator_41633.hasCurrentObject ()) {
              bool_8 = var_found.operator_not (SOURCE_FILE_AT_LINE (1061)).isValidAndTrue () ;
            }
          }
        }
        //-------- @errorInstructionForGeneration
        GALGAS_location location_9 (enumerator_41119.current_mOptionName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_9, var_s COMMA_SOURCE_FILE_AT_LINE (1064)) ;
      }
      //-------- @plusEqualnstructionForGeneration
      var_bindingOptionList.addAssign_operation (enumerator_41119.current_mOptionName (HERE).reader_string (SOURCE_FILE_AT_LINE (1066)), enumerator_41119.current_mOptionValueObjectiveCObject (HERE) COMMA_SOURCE_FILE_AT_LINE (1066)) ;
      enumerator_41119.gotoNextObject () ;
    }
    //-------- @plusEqualnstructionForGeneration
    ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_generatedBindingName, var_requiredFormatter, var_observedObjectName, enumerator_39930.current_mBoundModel (HERE).reader_mPropertyName (SOURCE_FILE_AT_LINE (1072)).mAttribute_string, var_bindingOptionList COMMA_SOURCE_FILE_AT_LINE (1068)) COMMA_SOURCE_FILE_AT_LINE (1068)) ;
    //-------- @incrementInstructionForGeneration
    var_idx.increment_operation (inCompiler COMMA_SOURCE_FILE_AT_LINE (1076)) ;
    //-------- @assignmentInstructionForGeneration
    var_generatedBindingName = object->mAttribute_mBindingName.mAttribute_string.operator_concat (var_idx.reader_string (SOURCE_FILE_AT_LINE (1077)) COMMA_SOURCE_FILE_AT_LINE (1077)) ;
    enumerator_39930.gotoNextObject () ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_multiValuedBinding.mSlotID,
                                            categoryMethod_multiValuedBinding_analyzeOutletBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBinding_analyzeOutletBinding (defineCategoryMethod_multiValuedBinding_analyzeOutletBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Abstract category method '@abstractBinding analyzeControllerBinding'    *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBinding_analyzeControllerBinding> gCategoryMethodTable_abstractBinding_analyzeControllerBinding ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeControllerBinding (const PMSInt32 inClassIndex,
                                                   categoryMethodSignature_abstractBinding_analyzeControllerBinding inMethod) {
  gCategoryMethodTable_abstractBinding_analyzeControllerBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBinding_analyzeControllerBinding (void) {
  gCategoryMethodTable_abstractBinding_analyzeControllerBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBinding_analyzeControllerBinding (NULL,
                                                                     freeCategoryMethod_abstractBinding_analyzeControllerBinding) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                  const GALGAS_relationshipMap constin_inAllRelationshipMap,
                                                  const GALGAS_outletClassBindingMap constin_inControllerClassBindingMap,
                                                  const GALGAS_lstring constin_inControlledClassOrEntityName,
                                                  const GALGAS_observablePropertyMap constin_inAllObservablePropertyMap,
                                                  GALGAS_outletBindingListForGeneration & io_ioBindingListForGeneration,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBinding) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBinding_analyzeControllerBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBinding_analyzeControllerBinding.count ()) {
      f = gCategoryMethodTable_abstractBinding_analyzeControllerBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBinding_analyzeControllerBinding.count ()) {
           f = gCategoryMethodTable_abstractBinding_analyzeControllerBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBinding_analyzeControllerBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAllRelationshipMap, constin_inControllerClassBindingMap, constin_inControlledClassOrEntityName, constin_inAllObservablePropertyMap, io_ioBindingListForGeneration, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@regularPreferenceBinding analyzeControllerBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularPreferenceBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                              const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                              const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                              const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                              const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                              GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularPreferenceBinding * object = (const cPtr_regularPreferenceBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularPreferenceBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mBindingName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a preference does not implement the $").operator_concat (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (1293)) COMMA_SOURCE_FILE_AT_LINE (1293)).operator_concat (GALGAS_string (" binding") COMMA_SOURCE_FILE_AT_LINE (1293)) COMMA_SOURCE_FILE_AT_LINE (1293)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularPreferenceBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_regularPreferenceBinding.mSlotID,
                                                categoryMethod_regularPreferenceBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularPreferenceBinding_analyzeControllerBinding (defineCategoryMethod_regularPreferenceBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@multiValuedBinding analyzeControllerBinding' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_multiValuedBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                        const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                        const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                        const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                        const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                        GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBinding * object = (const cPtr_multiValuedBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_multiValuedBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mBindingName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement the $").operator_concat (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (1305)) COMMA_SOURCE_FILE_AT_LINE (1305)).operator_concat (GALGAS_string (" binding") COMMA_SOURCE_FILE_AT_LINE (1305)) COMMA_SOURCE_FILE_AT_LINE (1305)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_multiValuedBinding.mSlotID,
                                                categoryMethod_multiValuedBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBinding_analyzeControllerBinding (defineCategoryMethod_multiValuedBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@tableValueBinding analyzeControllerBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_tableValueBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                       const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                       const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                       const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                       GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_tableValueBinding * object = (const cPtr_tableValueBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_tableValueBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement $tableValue binding") COMMA_SOURCE_FILE_AT_LINE (1317)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_tableValueBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_tableValueBinding.mSlotID,
                                                categoryMethod_tableValueBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_tableValueBinding_analyzeControllerBinding (defineCategoryMethod_tableValueBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@runBinding analyzeControllerBinding'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_runBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_runBinding * object = (const cPtr_runBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_runBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mTargetName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement $run action") COMMA_SOURCE_FILE_AT_LINE (1329)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_runBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_runBinding.mSlotID,
                                                categoryMethod_runBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_runBinding_analyzeControllerBinding (defineCategoryMethod_runBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@regularControllerBinding analyzeControllerBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularControllerBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                              const GALGAS_relationshipMap /* constinArgument_inAllRelationshipMap */,
                                                                              const GALGAS_outletClassBindingMap /* constinArgument_inControllerClassBindingMap */,
                                                                              const GALGAS_lstring /* constinArgument_inControlledClassOrEntityName */,
                                                                              const GALGAS_observablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                              GALGAS_outletBindingListForGeneration & /* ioArgument_ioBindingListForGeneration */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularControllerBinding * object = (const cPtr_regularControllerBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularControllerBinding) ;
  //-------- @errorInstructionForGeneration
  GALGAS_location location_0 (object->mAttribute_mBindingName.reader_location (HERE)) ; // Implicit use of 'location' reader
  inCompiler->emitSemanticError (location_0, GALGAS_string ("a controller does not implement $").operator_concat (object->mAttribute_mBindingName.reader_string (SOURCE_FILE_AT_LINE (1341)) COMMA_SOURCE_FILE_AT_LINE (1341)).operator_concat (GALGAS_string (" binding") COMMA_SOURCE_FILE_AT_LINE (1341)) COMMA_SOURCE_FILE_AT_LINE (1341)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularControllerBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_regularControllerBinding.mSlotID,
                                                categoryMethod_regularControllerBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularControllerBinding_analyzeControllerBinding (defineCategoryMethod_regularControllerBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@regularRootBinding analyzeControllerBinding' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularRootBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                        const GALGAS_relationshipMap constinArgument_inAllRelationshipMap,
                                                                        const GALGAS_outletClassBindingMap constinArgument_inControllerClassBindingMap,
                                                                        const GALGAS_lstring constinArgument_inControlledClassOrEntityName,
                                                                        const GALGAS_observablePropertyMap constinArgument_inAllObservablePropertyMap,
                                                                        GALGAS_outletBindingListForGeneration & ioArgument_ioBindingListForGeneration,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularRootBinding * object = (const cPtr_regularRootBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularRootBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_boundTypeIdentifierString ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inAllObservablePropertyMap.reader_hasKey (object->mAttribute_mObservableAttributeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1411)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingType var_t ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_bool joker_55325_2 ; // Joker input parameter
    GALGAS_string joker_55325_1 ; // Joker input parameter
    constinArgument_inAllObservablePropertyMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_t, joker_55325_2, joker_55325_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1413)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @assignmentInstructionForGeneration
    var_boundTypeIdentifierString = categoryReader_ebTypeIdentifier (var_t, GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1414)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = constinArgument_inAllRelationshipMap.reader_hasKey (object->mAttribute_mObservableAttributeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1415)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_bool var_isToMany ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_destinationEntityName ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_lstring joker_55622_2 ; // Joker input parameter
      GALGAS_deleteRuleEnum joker_55622_1 ; // Joker input parameter
      constinArgument_inAllRelationshipMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_isToMany, var_destinationEntityName, joker_55622_2, joker_55622_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1418)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = var_isToMany.boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @assignmentInstructionForGeneration
        var_boundTypeIdentifierString = GALGAS_string ("toMany[").operator_concat (var_destinationEntityName.reader_string (SOURCE_FILE_AT_LINE (1420)) COMMA_SOURCE_FILE_AT_LINE (1420)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (1420)) ;
      }else if (kBoolFalse == test_2) {
        //-------- @assignmentInstructionForGeneration
        var_boundTypeIdentifierString = GALGAS_string ("toOne[").operator_concat (var_destinationEntityName.reader_string (SOURCE_FILE_AT_LINE (1422)) COMMA_SOURCE_FILE_AT_LINE (1422)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (1422)) ;
      }
    }else if (kBoolFalse == test_1) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("unknown property") COMMA_SOURCE_FILE_AT_LINE (1425)) ;
      var_boundTypeIdentifierString.drop () ; // Release error dropped variable
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_availableBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inControllerClassBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeList, var_availableBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1431)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_acceptableTypesString = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_56253 (var_acceptableTypeList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (1434)).isValidAndTrue () ;
  if (enumerator_56253.hasCurrentObject () && bool_4) {
    while (enumerator_56253.hasCurrentObject () && bool_4) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_acceptableType = categoryReader_ebTypeIdentifier (enumerator_56253.current_mType (HERE), constinArgument_inControlledClassOrEntityName.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1435)) ;
      //-------- @concatInstructionForGeneration
      var_acceptableTypesString.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (var_acceptableType COMMA_SOURCE_FILE_AT_LINE (1436)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1436)) COMMA_SOURCE_FILE_AT_LINE (1436)) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, var_boundTypeIdentifierString.objectCompare (var_acceptableType)) ;
      enumerator_56253.gotoNextObject () ;
      if (enumerator_56253.hasCurrentObject ()) {
        bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (1434)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (1439)).boolEnum () ;
  if (kBoolTrue == test_5) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("cannot bind: property type is '").operator_concat (var_boundTypeIdentifierString COMMA_SOURCE_FILE_AT_LINE (1441)).operator_concat (GALGAS_string ("', acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (1441)).operator_concat (var_acceptableTypesString COMMA_SOURCE_FILE_AT_LINE (1441)) COMMA_SOURCE_FILE_AT_LINE (1440)) ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS__32_stringlist var_bindingOptionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkBindingOptions (object->mAttribute_mOutletBindingOptionList, var_availableBindingOptionMap, var_bindingOptionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1444)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.mAttribute_string, GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (1451)), GALGAS_string ("mRootObjectController"), GALGAS_string ("selection.").operator_concat (object->mAttribute_mObservableAttributeName.reader_string (SOURCE_FILE_AT_LINE (1453)) COMMA_SOURCE_FILE_AT_LINE (1453)), var_bindingOptionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1449)) COMMA_SOURCE_FILE_AT_LINE (1449)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularRootBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_regularRootBinding.mSlotID,
                                                categoryMethod_regularRootBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularRootBinding_analyzeControllerBinding (defineCategoryMethod_regularRootBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@regularSelfBinding analyzeControllerBinding' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_regularSelfBinding_analyzeControllerBinding (const cPtr_abstractBinding * inObject,
                                                                        const GALGAS_relationshipMap constinArgument_inAllRelationshipMap,
                                                                        const GALGAS_outletClassBindingMap constinArgument_inControllerClassBindingMap,
                                                                        const GALGAS_lstring constinArgument_inControlledClassOrEntityName,
                                                                        const GALGAS_observablePropertyMap constinArgument_inAllObservablePropertyMap,
                                                                        GALGAS_outletBindingListForGeneration & ioArgument_ioBindingListForGeneration,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularSelfBinding * object = (const cPtr_regularSelfBinding *) inObject ;
  macroValidSharedObject (object, const cPtr_regularSelfBinding) ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_string var_boundTypeIdentifierString ;
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_0 = constinArgument_inAllObservablePropertyMap.reader_hasKey (object->mAttribute_mObservableAttributeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1468)).boolEnum () ;
  if (kBoolTrue == test_0) {
    //-------- @localVariableDeclarationForGeneration
    GALGAS_easyBindingType var_t ;
    //-------- @methodCallInstructionForGeneration
    GALGAS_bool joker_57709_2 ; // Joker input parameter
    GALGAS_string joker_57709_1 ; // Joker input parameter
    constinArgument_inAllObservablePropertyMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_t, joker_57709_2, joker_57709_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1470)) ;
    //-------- END @methodCallInstructionForGeneration
    //-------- @assignmentInstructionForGeneration
    var_boundTypeIdentifierString = categoryReader_ebTypeIdentifier (var_t, GALGAS_string::makeEmptyString (), inCompiler COMMA_SOURCE_FILE_AT_LINE (1471)) ;
  }else if (kBoolFalse == test_0) {
    //-------- @ifInstructionForGeneration
    const enumGalgasBool test_1 = constinArgument_inAllRelationshipMap.reader_hasKey (object->mAttribute_mObservableAttributeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (1472)).boolEnum () ;
    if (kBoolTrue == test_1) {
      //-------- @localVariableDeclarationForGeneration
      GALGAS_bool var_isToMany ;
      //-------- @localVariableDeclarationForGeneration
      GALGAS_lstring var_destinationEntityName ;
      //-------- @methodCallInstructionForGeneration
      GALGAS_lstring joker_58006_2 ; // Joker input parameter
      GALGAS_deleteRuleEnum joker_58006_1 ; // Joker input parameter
      constinArgument_inAllRelationshipMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_isToMany, var_destinationEntityName, joker_58006_2, joker_58006_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (1475)) ;
      //-------- END @methodCallInstructionForGeneration
      //-------- @ifInstructionForGeneration
      const enumGalgasBool test_2 = var_isToMany.boolEnum () ;
      if (kBoolTrue == test_2) {
        //-------- @assignmentInstructionForGeneration
        var_boundTypeIdentifierString = GALGAS_string ("toMany[").operator_concat (var_destinationEntityName.reader_string (SOURCE_FILE_AT_LINE (1477)) COMMA_SOURCE_FILE_AT_LINE (1477)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (1477)) ;
      }else if (kBoolFalse == test_2) {
        //-------- @assignmentInstructionForGeneration
        var_boundTypeIdentifierString = GALGAS_string ("toOne[").operator_concat (var_destinationEntityName.reader_string (SOURCE_FILE_AT_LINE (1479)) COMMA_SOURCE_FILE_AT_LINE (1479)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (1479)) ;
      }
    }else if (kBoolFalse == test_1) {
      //-------- @errorInstructionForGeneration
      GALGAS_location location_3 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("unknown property") COMMA_SOURCE_FILE_AT_LINE (1482)) ;
      var_boundTypeIdentifierString.drop () ; // Release error dropped variable
    }
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeList ;
  //-------- @localVariableDeclarationForGeneration
  GALGAS_outletClassBindingOptionMap var_availableBindingOptionMap ;
  //-------- @methodCallInstructionForGeneration
  constinArgument_inControllerClassBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeList, var_availableBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (1488)) ;
  //-------- END @methodCallInstructionForGeneration
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_bool var_found = GALGAS_bool (false) ;
  //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
  GALGAS_string var_acceptableTypesString = GALGAS_string::makeEmptyString () ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_easyBindingTypeAndFormatterList enumerator_58637 (var_acceptableTypeList, kEnumeration_up) ;
  //--- complex foreach instruction
  bool bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (1491)).isValidAndTrue () ;
  if (enumerator_58637.hasCurrentObject () && bool_4) {
    while (enumerator_58637.hasCurrentObject () && bool_4) {
      //-------- @localVariableOrConstantDeclarationWithSourceExpressionForGeneration
      GALGAS_string var_acceptableType = categoryReader_ebTypeIdentifier (enumerator_58637.current_mType (HERE), constinArgument_inControlledClassOrEntityName.mAttribute_string, inCompiler COMMA_SOURCE_FILE_AT_LINE (1492)) ;
      //-------- @concatInstructionForGeneration
      var_acceptableTypesString.dotAssign_operation (GALGAS_string ("\n"
        "-  '").operator_concat (var_acceptableType COMMA_SOURCE_FILE_AT_LINE (1493)).operator_concat (GALGAS_string ("'") COMMA_SOURCE_FILE_AT_LINE (1493)) COMMA_SOURCE_FILE_AT_LINE (1493)) ;
      //-------- @assignmentInstructionForGeneration
      var_found = GALGAS_bool (kIsEqual, var_boundTypeIdentifierString.objectCompare (var_acceptableType)) ;
      enumerator_58637.gotoNextObject () ;
      if (enumerator_58637.hasCurrentObject ()) {
        bool_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (1491)).isValidAndTrue () ;
      }
    }
  }
  //-------- @ifInstructionForGeneration
  const enumGalgasBool test_5 = var_found.operator_not (SOURCE_FILE_AT_LINE (1496)).boolEnum () ;
  if (kBoolTrue == test_5) {
    //-------- @errorInstructionForGeneration
    GALGAS_location location_6 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, GALGAS_string ("cannot bind: property type is '").operator_concat (var_boundTypeIdentifierString COMMA_SOURCE_FILE_AT_LINE (1498)).operator_concat (GALGAS_string ("', acceptable type(s):") COMMA_SOURCE_FILE_AT_LINE (1498)).operator_concat (var_acceptableTypesString COMMA_SOURCE_FILE_AT_LINE (1498)) COMMA_SOURCE_FILE_AT_LINE (1497)) ;
  }
  //-------- @localVariableDeclarationForGeneration
  GALGAS__32_stringlist var_bindingOptionListForGeneration ;
  { //-------- @routineCallInstructionForGeneration
  routine_checkBindingOptions (object->mAttribute_mOutletBindingOptionList, var_availableBindingOptionMap, var_bindingOptionListForGeneration, inCompiler COMMA_SOURCE_FILE_AT_LINE (1501)) ;
  } //-------- @routineCallInstructionForGeneration
  //-------- @plusEqualnstructionForGeneration
  ioArgument_ioBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (object->mAttribute_mBindingName.mAttribute_string, GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE_AT_LINE (1508)), GALGAS_string ("self"), object->mAttribute_mObservableAttributeName.mAttribute_string, var_bindingOptionListForGeneration COMMA_SOURCE_FILE_AT_LINE (1506)) COMMA_SOURCE_FILE_AT_LINE (1506)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_regularSelfBinding_analyzeControllerBinding (void) {
  enterCategoryMethod_analyzeControllerBinding (kTypeDescriptor_GALGAS_regularSelfBinding.mSlotID,
                                                categoryMethod_regularSelfBinding_analyzeControllerBinding) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularSelfBinding_analyzeControllerBinding (defineCategoryMethod_regularSelfBinding_analyzeControllerBinding, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element::GALGAS_userCursorMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mHotSpotX (),
mAttribute_mHotSpotY () {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element::~ GALGAS_userCursorMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element::GALGAS_userCursorMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_double & inOperand1,
                                                                  const GALGAS_double & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mHotSpotX (inOperand1),
mAttribute_mHotSpotY (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element GALGAS_userCursorMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_double & inOperand1,
                                                                                  const GALGAS_double & inOperand2 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_userCursorMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_userCursorMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_userCursorMap_2E_element::objectCompare (const GALGAS_userCursorMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotX.objectCompare (inOperand.mAttribute_mHotSpotX) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotY.objectCompare (inOperand.mAttribute_mHotSpotY) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_userCursorMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mHotSpotX.drop () ;
  mAttribute_mHotSpotY.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap_2E_element::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "<struct @userCursorMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotX.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotY.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_userCursorMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap_2E_element::reader_mHotSpotX (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotX ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap_2E_element::reader_mHotSpotY (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotY ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @userCursorMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_userCursorMap_2E_element ("userCursorMap.element",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_userCursorMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_userCursorMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_userCursorMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_userCursorMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element GALGAS_userCursorMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler,
                                                                                const GALGAS_location & inErrorLocation
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap_2E_element result ;
  const GALGAS_userCursorMap_2E_element * p = (const GALGAS_userCursorMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_userCursorMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "userCursorMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::GALGAS_classMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSuperClassName (),
mAttribute_mPropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mImplementationFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::~ GALGAS_classMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::GALGAS_classMap_2E_element (const GALGAS_lstring & inOperand0,
                                                        const GALGAS_string & inOperand1,
                                                        const GALGAS_observablePropertyMap & inOperand2,
                                                        const GALGAS_attributeListForImplementation & inOperand3,
                                                        const GALGAS_attributeListForImplementation & inOperand4,
                                                        const GALGAS_attributeListForImplementation & inOperand5,
                                                        const GALGAS_transientListForImplementation & inOperand6,
                                                        const GALGAS_stringset & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperClassName (inOperand1),
mAttribute_mPropertyMap (inOperand2),
mAttribute_mAttributeListForInitMethodHeader (inOperand3),
mAttribute_mInheritedAttributeListForImplementation (inOperand4),
mAttribute_mAttributeListForImplementation (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mImplementationFileInclusionSet (inOperand7) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_string & inOperand1,
                                                                        const GALGAS_observablePropertyMap & inOperand2,
                                                                        const GALGAS_attributeListForImplementation & inOperand3,
                                                                        const GALGAS_attributeListForImplementation & inOperand4,
                                                                        const GALGAS_attributeListForImplementation & inOperand5,
                                                                        const GALGAS_transientListForImplementation & inOperand6,
                                                                        const GALGAS_stringset & inOperand7 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_classMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_classMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_classMap_2E_element::objectCompare (const GALGAS_classMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyMap.objectCompare (inOperand.mAttribute_mPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_classMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mPropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap_2E_element::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @classMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_classMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap_2E_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_classMap_2E_element::reader_mPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_classMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @classMap.element type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap_2E_element ("classMap.element",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler,
                                                                      const GALGAS_location & inErrorLocation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_classMap_2E_element result ;
  const GALGAS_classMap_2E_element * p = (const GALGAS_classMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "classMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::GALGAS_entityMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSuperEntityName (),
mAttribute_mImplementationClassName (),
mAttribute_mSuperImplementationClassName (),
mAttribute_mObservablePropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mCurrentRelationshipList (),
mAttribute_mAllRelationshipList (),
mAttribute_mAllPropertyMap (),
mAttribute_mCurrentRelationshipMap (),
mAttribute_mAllRelationshipMap (),
mAttribute_mImplementationFileInclusionSet (),
mAttribute_mToManyRelationshipList () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::~ GALGAS_entityMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::GALGAS_entityMap_2E_element (const GALGAS_lstring & inOperand0,
                                                          const GALGAS_string & inOperand1,
                                                          const GALGAS_string & inOperand2,
                                                          const GALGAS_string & inOperand3,
                                                          const GALGAS_observablePropertyMap & inOperand4,
                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                          const GALGAS_attributeListForImplementation & inOperand6,
                                                          const GALGAS_attributeListForImplementation & inOperand7,
                                                          const GALGAS_transientListForImplementation & inOperand8,
                                                          const GALGAS_relationshipList & inOperand9,
                                                          const GALGAS_relationshipList & inOperand10,
                                                          const GALGAS_propertyMap & inOperand11,
                                                          const GALGAS_relationshipMap & inOperand12,
                                                          const GALGAS_relationshipMap & inOperand13,
                                                          const GALGAS_stringset & inOperand14,
                                                          const GALGAS__32_stringlist & inOperand15) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mImplementationClassName (inOperand2),
mAttribute_mSuperImplementationClassName (inOperand3),
mAttribute_mObservablePropertyMap (inOperand4),
mAttribute_mAttributeListForInitMethodHeader (inOperand5),
mAttribute_mInheritedAttributeListForImplementation (inOperand6),
mAttribute_mAttributeListForImplementation (inOperand7),
mAttribute_mTransientListForImplementation (inOperand8),
mAttribute_mCurrentRelationshipList (inOperand9),
mAttribute_mAllRelationshipList (inOperand10),
mAttribute_mAllPropertyMap (inOperand11),
mAttribute_mCurrentRelationshipMap (inOperand12),
mAttribute_mAllRelationshipMap (inOperand13),
mAttribute_mImplementationFileInclusionSet (inOperand14),
mAttribute_mToManyRelationshipList (inOperand15) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_string & inOperand1,
                                                                          const GALGAS_string & inOperand2,
                                                                          const GALGAS_string & inOperand3,
                                                                          const GALGAS_observablePropertyMap & inOperand4,
                                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                                          const GALGAS_attributeListForImplementation & inOperand6,
                                                                          const GALGAS_attributeListForImplementation & inOperand7,
                                                                          const GALGAS_transientListForImplementation & inOperand8,
                                                                          const GALGAS_relationshipList & inOperand9,
                                                                          const GALGAS_relationshipList & inOperand10,
                                                                          const GALGAS_propertyMap & inOperand11,
                                                                          const GALGAS_relationshipMap & inOperand12,
                                                                          const GALGAS_relationshipMap & inOperand13,
                                                                          const GALGAS_stringset & inOperand14,
                                                                          const GALGAS__32_stringlist & inOperand15 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    result = GALGAS_entityMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityMap_2E_element::objectCompare (const GALGAS_entityMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationClassName.objectCompare (inOperand.mAttribute_mImplementationClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperImplementationClassName.objectCompare (inOperand.mAttribute_mSuperImplementationClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (inOperand.mAttribute_mCurrentRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipList.objectCompare (inOperand.mAttribute_mAllRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllPropertyMap.objectCompare (inOperand.mAttribute_mAllPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (inOperand.mAttribute_mCurrentRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipMap.objectCompare (inOperand.mAttribute_mAllRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mToManyRelationshipList.objectCompare (inOperand.mAttribute_mToManyRelationshipList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_entityMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mImplementationClassName.isValid () && mAttribute_mSuperImplementationClassName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () && mAttribute_mToManyRelationshipList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mImplementationClassName.drop () ;
  mAttribute_mSuperImplementationClassName.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mCurrentRelationshipList.drop () ;
  mAttribute_mAllRelationshipList.drop () ;
  mAttribute_mAllPropertyMap.drop () ;
  mAttribute_mCurrentRelationshipMap.drop () ;
  mAttribute_mAllRelationshipMap.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
  mAttribute_mToManyRelationshipList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap_2E_element::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "<struct @entityMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperImplementationClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mToManyRelationshipList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_entityMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mImplementationClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mSuperImplementationClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2E_element::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2E_element::reader_mAllRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap_2E_element::reader_mAllPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2E_element::reader_mCurrentRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2E_element::reader_mAllRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_entityMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityMap_2E_element::reader_mToManyRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToManyRelationshipList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @entityMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap_2E_element ("entityMap.element",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler,
                                                                        const GALGAS_location & inErrorLocation
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_entityMap_2E_element result ;
  const GALGAS_entityMap_2E_element * p = (const GALGAS_entityMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "entityMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (void) :
mAttribute_mColumnIdentifier (),
mAttribute_mRequiredCellClass (),
mAttribute_mObservableAttributeName (),
mAttribute_mOutletBindingOptionList () {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::~ GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (const GALGAS_string & inOperand0,
                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                    const GALGAS__32_stringlist & inOperand3) :
mAttribute_mColumnIdentifier (inOperand0),
mAttribute_mRequiredCellClass (inOperand1),
mAttribute_mObservableAttributeName (inOperand2),
mAttribute_mOutletBindingOptionList (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                                    const GALGAS__32_stringlist & inOperand3 
                                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::objectCompare (const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mColumnIdentifier.objectCompare (inOperand.mAttribute_mColumnIdentifier) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredCellClass.objectCompare (inOperand.mAttribute_mRequiredCellClass) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableAttributeName.objectCompare (inOperand.mAttribute_mObservableAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (inOperand.mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::isValid (void) const {
  return mAttribute_mColumnIdentifier.isValid () && mAttribute_mRequiredCellClass.isValid () && mAttribute_mObservableAttributeName.isValid () && mAttribute_mOutletBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::drop (void) {
  mAttribute_mColumnIdentifier.drop () ;
  mAttribute_mRequiredCellClass.drop () ;
  mAttribute_mObservableAttributeName.drop () ;
  mAttribute_mOutletBindingOptionList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::description (C_String & ioString,
                                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @columnBindingForTableValueBindingForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mColumnIdentifier.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredCellClass.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mColumnIdentifier (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnIdentifier ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mRequiredCellClass (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredCellClass ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//       @columnBindingForTableValueBindingForGeneration.element type        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2E_element ("columnBindingForTableValueBindingForGeneration.element",
                                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                                  C_Compiler * inCompiler,
                                                                                                                                                  const GALGAS_location & inErrorLocation
                                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2E_element result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element * p = (const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "columnBindingForTableValueBindingForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element::GALGAS_protocolMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element::~ GALGAS_protocolMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element::GALGAS_protocolMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element GALGAS_protocolMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_protocolMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_protocolMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_protocolMap_2E_element::objectCompare (const GALGAS_protocolMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_protocolMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_protocolMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_protocolMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @protocolMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_protocolMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @protocolMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolMap_2E_element ("protocolMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element GALGAS_protocolMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap_2E_element result ;
  const GALGAS_protocolMap_2E_element * p = (const GALGAS_protocolMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "protocolMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::GALGAS_documentMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRootEntityName (),
mAttribute_mRootEntityImplementationClassName (),
mAttribute_mOutletDeclarationList (),
mAttribute_mControllerMap (),
mAttribute_mActionList (),
mAttribute_mTransientListForImplementation (),
mAttribute_mImplementationFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::~ GALGAS_documentMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::GALGAS_documentMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_string & inOperand1,
                                                              const GALGAS_string & inOperand2,
                                                              const GALGAS_outletGenerationList & inOperand3,
                                                              const GALGAS_controllerMap & inOperand4,
                                                              const GALGAS_lstringlist & inOperand5,
                                                              const GALGAS_transientListForImplementation & inOperand6,
                                                              const GALGAS_stringset & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mRootEntityName (inOperand1),
mAttribute_mRootEntityImplementationClassName (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mControllerMap (inOperand4),
mAttribute_mActionList (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mImplementationFileInclusionSet (inOperand7) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_string & inOperand1,
                                                                              const GALGAS_string & inOperand2,
                                                                              const GALGAS_outletGenerationList & inOperand3,
                                                                              const GALGAS_controllerMap & inOperand4,
                                                                              const GALGAS_lstringlist & inOperand5,
                                                                              const GALGAS_transientListForImplementation & inOperand6,
                                                                              const GALGAS_stringset & inOperand7 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_documentMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_documentMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_documentMap_2E_element::objectCompare (const GALGAS_documentMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootEntityName.objectCompare (inOperand.mAttribute_mRootEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootEntityImplementationClassName.objectCompare (inOperand.mAttribute_mRootEntityImplementationClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_documentMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mRootEntityImplementationClassName.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mActionList.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRootEntityName.drop () ;
  mAttribute_mRootEntityImplementationClassName.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mControllerMap.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @documentMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootEntityImplementationClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_documentMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap_2E_element::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap_2E_element::reader_mRootEntityImplementationClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityImplementationClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentMap_2E_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentMap_2E_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentMap_2E_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_documentMap_2E_element::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @documentMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentMap_2E_element ("documentMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_documentMap_2E_element result ;
  const GALGAS_documentMap_2E_element * p = (const GALGAS_documentMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "documentMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::GALGAS_outletClassBindingOptionMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::~ GALGAS_outletClassBindingOptionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::GALGAS_outletClassBindingOptionMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_easyBindingTypeList & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_easyBindingTypeList & inOperand1 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_outletClassBindingOptionMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingOptionMap_2E_element::objectCompare (const GALGAS_outletClassBindingOptionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassBindingOptionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2E_element::description (C_String & ioString,
                                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassBindingOptionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingOptionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_outletClassBindingOptionMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @outletClassBindingOptionMap.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2E_element ("outletClassBindingOptionMap.element",
                                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler,
                                                                                                            const GALGAS_location & inErrorLocation
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2E_element result ;
  const GALGAS_outletClassBindingOptionMap_2E_element * p = (const GALGAS_outletClassBindingOptionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingOptionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::GALGAS_outletClassBindingMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList (),
mAttribute_mOutletClassBindingOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::~ GALGAS_outletClassBindingMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::GALGAS_outletClassBindingMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_easyBindingTypeAndFormatterList & inOperand1,
                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1),
mAttribute_mOutletClassBindingOptionMap (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_easyBindingTypeAndFormatterList & inOperand1,
                                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_outletClassBindingMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingMap_2E_element::objectCompare (const GALGAS_outletClassBindingMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (inOperand.mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassBindingMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
  mAttribute_mOutletClassBindingOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2E_element::description (C_String & ioString,
                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassBindingMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_outletClassBindingMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap_2E_element::reader_mOutletClassBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @outletClassBindingMap.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap_2E_element ("outletClassBindingMap.element",
                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler,
                                                                                                const GALGAS_location & inErrorLocation
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2E_element result ;
  const GALGAS_outletClassBindingMap_2E_element * p = (const GALGAS_outletClassBindingMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassBindingMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::GALGAS_outletClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mGenerationKind (),
mAttribute_mSuperClassName (),
mAttribute_mAdoptedProtocolList (),
mAttribute_mBindingMap (),
mAttribute_mHasTableValueBinding () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::~ GALGAS_outletClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::GALGAS_outletClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_generationKind & inOperand1,
                                                                    const GALGAS_string & inOperand2,
                                                                    const GALGAS_lstringlist & inOperand3,
                                                                    const GALGAS_outletClassBindingMap & inOperand4,
                                                                    const GALGAS_bool & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mGenerationKind (inOperand1),
mAttribute_mSuperClassName (inOperand2),
mAttribute_mAdoptedProtocolList (inOperand3),
mAttribute_mBindingMap (inOperand4),
mAttribute_mHasTableValueBinding (inOperand5) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_generationKind & inOperand1,
                                                                                    const GALGAS_string & inOperand2,
                                                                                    const GALGAS_lstringlist & inOperand3,
                                                                                    const GALGAS_outletClassBindingMap & inOperand4,
                                                                                    const GALGAS_bool & inOperand5 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_outletClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassMap_2E_element::objectCompare (const GALGAS_outletClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerationKind.objectCompare (inOperand.mAttribute_mGenerationKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (inOperand.mAttribute_mAdoptedProtocolList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingMap.objectCompare (inOperand.mAttribute_mBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasTableValueBinding.objectCompare (inOperand.mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mAdoptedProtocolList.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mGenerationKind.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mAdoptedProtocolList.drop () ;
  mAttribute_mBindingMap.drop () ;
  mAttribute_mHasTableValueBinding.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerationKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAdoptedProtocolList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasTableValueBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_outletClassMap_2E_element::reader_mGenerationKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationKind ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap_2E_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_outletClassMap_2E_element::reader_mAdoptedProtocolList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAdoptedProtocolList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap_2E_element::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2E_element::reader_mHasTableValueBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasTableValueBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @outletClassMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap_2E_element ("outletClassMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler,
                                                                                  const GALGAS_location & inErrorLocation
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap_2E_element result ;
  const GALGAS_outletClassMap_2E_element * p = (const GALGAS_outletClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "outletClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::GALGAS_controllerClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mGenerateCode (),
mAttribute_mBindingMap (),
mAttribute_mActionMap (),
mAttribute_mObservablePropertyMap () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::~ GALGAS_controllerClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::GALGAS_controllerClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_bool & inOperand1,
                                                                            const GALGAS_outletClassBindingMap & inOperand2,
                                                                            const GALGAS_actionMap & inOperand3,
                                                                            const GALGAS_observablePropertyMap & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mGenerateCode (inOperand1),
mAttribute_mBindingMap (inOperand2),
mAttribute_mActionMap (inOperand3),
mAttribute_mObservablePropertyMap (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_bool & inOperand1,
                                                                                            const GALGAS_outletClassBindingMap & inOperand2,
                                                                                            const GALGAS_actionMap & inOperand3,
                                                                                            const GALGAS_observablePropertyMap & inOperand4 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_controllerClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerClassMap_2E_element::objectCompare (const GALGAS_controllerClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerateCode.objectCompare (inOperand.mAttribute_mGenerateCode) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingMap.objectCompare (inOperand.mAttribute_mBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_controllerClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerateCode.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mGenerateCode.drop () ;
  mAttribute_mBindingMap.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2E_element::description (C_String & ioString,
                                                        const PMSInt32 inIndentation) const {
  ioString << "<struct @controllerClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerateCode.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerClassMap_2E_element::reader_mGenerateCode (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerateCode ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassMap_2E_element::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap_2E_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @controllerClassMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap_2E_element ("controllerClassMap.element",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler,
                                                                                          const GALGAS_location & inErrorLocation
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2E_element result ;
  const GALGAS_controllerClassMap_2E_element * p = (const GALGAS_controllerClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "controllerClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::GALGAS_relationshipMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mIsToMany (),
mAttribute_mDestinationEntityName (),
mAttribute_mInverseRelationshipName (),
mAttribute_mDeleteRule () {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::~ GALGAS_relationshipMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::GALGAS_relationshipMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_bool & inOperand1,
                                                                      const GALGAS_lstring & inOperand2,
                                                                      const GALGAS_lstring & inOperand3,
                                                                      const GALGAS_deleteRuleEnum & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mIsToMany (inOperand1),
mAttribute_mDestinationEntityName (inOperand2),
mAttribute_mInverseRelationshipName (inOperand3),
mAttribute_mDeleteRule (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_bool & inOperand1,
                                                                                      const GALGAS_lstring & inOperand2,
                                                                                      const GALGAS_lstring & inOperand3,
                                                                                      const GALGAS_deleteRuleEnum & inOperand4 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_relationshipMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_relationshipMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_relationshipMap_2E_element::objectCompare (const GALGAS_relationshipMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsToMany.objectCompare (inOperand.mAttribute_mIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDestinationEntityName.objectCompare (inOperand.mAttribute_mDestinationEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseRelationshipName.objectCompare (inOperand.mAttribute_mInverseRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDeleteRule.objectCompare (inOperand.mAttribute_mDeleteRule) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_relationshipMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIsToMany.drop () ;
  mAttribute_mDestinationEntityName.drop () ;
  mAttribute_mInverseRelationshipName.drop () ;
  mAttribute_mDeleteRule.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @relationshipMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDestinationEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDeleteRule.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap_2E_element::reader_mIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_mDestinationEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_mInverseRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap_2E_element::reader_mDeleteRule (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeleteRule ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @relationshipMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap_2E_element ("relationshipMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler,
                                                                                    const GALGAS_location & inErrorLocation
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap_2E_element result ;
  const GALGAS_relationshipMap_2E_element * p = (const GALGAS_relationshipMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "relationshipMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::GALGAS_propertyMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::~ GALGAS_propertyMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::GALGAS_propertyMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_propertyMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_propertyMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_propertyMap_2E_element::objectCompare (const GALGAS_propertyMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_propertyMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @propertyMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_propertyMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @propertyMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap_2E_element ("propertyMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler,
                                                                            const GALGAS_location & inErrorLocation
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap_2E_element result ;
  const GALGAS_propertyMap_2E_element * p = (const GALGAS_propertyMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->extractObjectError (inErrorLocation, "propertyMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


