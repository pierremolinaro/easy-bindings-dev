//-----------------------------------------------------------------------------*
//                                                                             *
//                         File 'decoratedTypes.cpp'                           *
//                         Generated by version 2.7.0                          *
//                       august 1st, 2014, at 11h35'3"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "decoratedTypes.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                   Class for element of '@ebTypeList' list                   *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_ebTypeList : public cCollectionElement {
  public : GALGAS_ebTypeList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_ebTypeList (const GALGAS_ebType & in_mType
                                          COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_ebTypeList::cCollectionElement_ebTypeList (const GALGAS_ebType & in_mType
                                                              COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_ebTypeList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ebTypeList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ebTypeList (mObject.mAttribute_mType COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_ebTypeList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ebTypeList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ebTypeList * operand = (cCollectionElement_ebTypeList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ebTypeList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList::GALGAS_ebTypeList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList::GALGAS_ebTypeList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ebTypeList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::constructor_listWithValue (const GALGAS_ebType & inOperand0
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_ebTypeList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ebTypeList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                   const GALGAS_ebType & in_mType
                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement_ebTypeList * p = NULL ;
  macroMyNew (p, cCollectionElement_ebTypeList (in_mType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::addAssign_operation (const GALGAS_ebType & inOperand0
                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ebTypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::modifier_insertAtIndex (const GALGAS_ebType inOperand0,
                                                const GALGAS_uint inInsertionIndex,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ebTypeList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::modifier_removeAtIndex (GALGAS_ebType & outOperand0,
                                                const GALGAS_uint inRemoveIndex,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_ebTypeList * p = (cCollectionElement_ebTypeList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
      outOperand0 = p->mObject.mAttribute_mType ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::modifier_popFirst (GALGAS_ebType & outOperand0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeList * p = (cCollectionElement_ebTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::modifier_popLast (GALGAS_ebType & outOperand0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeList * p = (cCollectionElement_ebTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::method_first (GALGAS_ebType & outOperand0,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeList * p = (cCollectionElement_ebTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::method_last (GALGAS_ebType & outOperand0,
                                     C_Compiler * inCompiler
                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeList * p = (cCollectionElement_ebTypeList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::operator_concat (const GALGAS_ebTypeList & inOperand
                                                      COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ebTypeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::add_operation (const GALGAS_ebTypeList & inOperand,
                                                    C_Compiler * /* inCompiler */
                                                    COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ebTypeList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::reader_subListWithRange (const GALGAS_range & inRange,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_ebTypeList result = GALGAS_ebTypeList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_ebTypeList result = GALGAS_ebTypeList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList::dotAssign_operation (const GALGAS_ebTypeList inOperand
                                             COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebTypeList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeList * p = (cCollectionElement_ebTypeList *) attributes.ptr () ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_ebTypeList::cEnumerator_ebTypeList (const GALGAS_ebTypeList & inEnumeratedObject,
                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element cEnumerator_ebTypeList::current (LOCATION_ARGS) const {
  const cCollectionElement_ebTypeList * p = (const cCollectionElement_ebTypeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_ebTypeList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_ebTypeList * p = (const cCollectionElement_ebTypeList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ebTypeList) ;
  return p->mObject.mAttribute_mType ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                              @ebTypeList type                               *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ebTypeList ("ebTypeList",
                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ebTypeList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ebTypeList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ebTypeList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ebTypeList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_ebTypeList::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_ebTypeList result ;
  const GALGAS_ebTypeList * p = (const GALGAS_ebTypeList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ebTypeList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ebTypeList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_unifiedTypeMap::cMapElement_unifiedTypeMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_ebType & in_mTypeKind,
                                                        const GALGAS_astDeclaration & in_mDeclaration
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mTypeKind (in_mTypeKind),
mAttribute_mDeclaration (in_mDeclaration) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_unifiedTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mTypeKind.isValid () && mAttribute_mDeclaration.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_unifiedTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_unifiedTypeMap (mAttribute_lkey, mAttribute_mTypeKind, mAttribute_mDeclaration COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_unifiedTypeMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTypeKind" ":" ;
  mAttribute_mTypeKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeclaration" ":" ;
  mAttribute_mDeclaration.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_unifiedTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_unifiedTypeMap * operand = (cMapElement_unifiedTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTypeKind.objectCompare (operand->mAttribute_mTypeKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDeclaration.objectCompare (operand->mAttribute_mDeclaration) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (void) :
AC_GALGAS_uniqueMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (const GALGAS_unifiedTypeMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMap & GALGAS_unifiedTypeMap::operator = (const GALGAS_unifiedTypeMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*
//  Map automaton states                                                       *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//  Map automaton state names                                                  *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//  Map automaton actions                                                    *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//  Map automaton action names                                                 *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//  Map automaton transitions                                                  *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*
//  Map automaton final state issues                                           *
//-----------------------------------------------------------------------------*


//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_ebType inArgument0,
                                                GALGAS_astDeclaration inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_unifiedTypeMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' type is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        0,
                        NULL,
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_unifiedTypeMap_searchKey = "the '%K' type is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_ebType & outArgument0,
                                              GALGAS_astDeclaration & outArgument1,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_unifiedTypeMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    outArgument0 = p->mAttribute_mTypeKind ;
    outArgument1 = p->mAttribute_mDeclaration ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_unifiedTypeMap::reader_mTypeKindForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mTypeKind ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_astDeclaration GALGAS_unifiedTypeMap::reader_mDeclarationForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_astDeclaration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mDeclaration ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMTypeKindForKey (GALGAS_ebType inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mTypeKind = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMDeclarationForKey (GALGAS_astDeclaration inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mDeclaration = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_unifiedTypeMap * GALGAS_unifiedTypeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * result = (cMapElement_unifiedTypeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_unifiedTypeMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_unifiedTypeMap::cEnumerator_unifiedTypeMap (const GALGAS_unifiedTypeMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_unifiedTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_unifiedTypeMap::current_mTypeKind (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mTypeKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_astDeclaration cEnumerator_unifiedTypeMap::current_mDeclaration (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mDeclaration ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @unifiedTypeMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeMap ("unifiedTypeMap",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  const GALGAS_unifiedTypeMap * p = (const GALGAS_unifiedTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy::GALGAS_unifiedTypeProxy (void) :
AC_GALGAS_uniqueMapProxy () {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::constructor_null (LOCATION_ARGS) {
  GALGAS_unifiedTypeProxy result ;
  result.makeNullProxy (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxy::class_method_makeProxy (GALGAS_unifiedTypeMap & ioMap,
                                                      GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeProxy & outProxy
                                                      COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxy (ioMap, inKey COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxy::class_method_makeProxyFromString (GALGAS_unifiedTypeMap & ioMap,
                                                                GALGAS_string inKey,
                                                                GALGAS_unifiedTypeProxy & outProxy
                                                                COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxyFromString (ioMap, inKey COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_unifiedTypeProxy::reader_mTypeKind (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_ebType result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mTypeKind" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mTypeKind;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_astDeclaration GALGAS_unifiedTypeProxy::reader_mDeclaration (C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_astDeclaration result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mDeclaration" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mDeclaration;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::constructor_searchKey (const GALGAS_unifiedTypeMap & inMap,
                                                                        const GALGAS_lstring & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_unifiedTypeMap_searchKey, inCompiler COMMA_THERE) ;
  return result ;
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                           @unifiedTypeProxy type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxy ("unifiedTypeProxy",
                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxy::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxy ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxy::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxy (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxy result ;
  const GALGAS_unifiedTypeProxy * p = (const GALGAS_unifiedTypeProxy *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxy *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxy", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//              Class for element of '@unifiedTypeProxyList' list              *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_unifiedTypeProxyList : public cCollectionElement {
  public : GALGAS_unifiedTypeProxyList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_unifiedTypeProxyList (const GALGAS_unifiedTypeProxy & in_mTypeProxy
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_unifiedTypeProxyList::cCollectionElement_unifiedTypeProxyList (const GALGAS_unifiedTypeProxy & in_mTypeProxy
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTypeProxy) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_unifiedTypeProxyList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_unifiedTypeProxyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_unifiedTypeProxyList (mObject.mAttribute_mTypeProxy COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_unifiedTypeProxyList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTypeProxy" ":" ;
  mObject.mAttribute_mTypeProxy.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_unifiedTypeProxyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_unifiedTypeProxyList * operand = (cCollectionElement_unifiedTypeProxyList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_unifiedTypeProxyList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList::GALGAS_unifiedTypeProxyList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList::GALGAS_unifiedTypeProxyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::constructor_listWithValue (const GALGAS_unifiedTypeProxy & inOperand0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_unifiedTypeProxyList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_unifiedTypeProxy & in_mTypeProxy
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_unifiedTypeProxyList * p = NULL ;
  macroMyNew (p, cCollectionElement_unifiedTypeProxyList (in_mTypeProxy COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::addAssign_operation (const GALGAS_unifiedTypeProxy & inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_unifiedTypeProxyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_insertAtIndex (const GALGAS_unifiedTypeProxy inOperand0,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_unifiedTypeProxyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_removeAtIndex (GALGAS_unifiedTypeProxy & outOperand0,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
      outOperand0 = p->mObject.mAttribute_mTypeProxy ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_popFirst (GALGAS_unifiedTypeProxy & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_popLast (GALGAS_unifiedTypeProxy & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::method_first (GALGAS_unifiedTypeProxy & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::method_last (GALGAS_unifiedTypeProxy & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::operator_concat (const GALGAS_unifiedTypeProxyList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::add_operation (const GALGAS_unifiedTypeProxyList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result = GALGAS_unifiedTypeProxyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result = GALGAS_unifiedTypeProxyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::dotAssign_operation (const GALGAS_unifiedTypeProxyList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxyList::reader_mTypeProxyAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    result = p->mObject.mAttribute_mTypeProxy ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_unifiedTypeProxyList::cEnumerator_unifiedTypeProxyList (const GALGAS_unifiedTypeProxyList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element cEnumerator_unifiedTypeProxyList::current (LOCATION_ARGS) const {
  const cCollectionElement_unifiedTypeProxyList * p = (const cCollectionElement_unifiedTypeProxyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_unifiedTypeProxyList::current_mTypeProxy (LOCATION_ARGS) const {
  const cCollectionElement_unifiedTypeProxyList * p = (const cCollectionElement_unifiedTypeProxyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
  return p->mObject.mAttribute_mTypeProxy ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                         @unifiedTypeProxyList type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxyList ("unifiedTypeProxyList",
                                             NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxyList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxyList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList result ;
  const GALGAS_unifiedTypeProxyList * p = (const GALGAS_unifiedTypeProxyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//             Class for element of '@ebTypeAndFormatterList' list             *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_ebTypeAndFormatterList : public cCollectionElement {
  public : GALGAS_ebTypeAndFormatterList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_ebTypeAndFormatterList (const GALGAS_ebType & in_mType,
                                                      const GALGAS_formatterEnum & in_mRequiredFormatter
                                                      COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_ebTypeAndFormatterList::cCollectionElement_ebTypeAndFormatterList (const GALGAS_ebType & in_mType,
                                                                                      const GALGAS_formatterEnum & in_mRequiredFormatter
                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mRequiredFormatter) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_ebTypeAndFormatterList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_ebTypeAndFormatterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_ebTypeAndFormatterList (mObject.mAttribute_mType, mObject.mAttribute_mRequiredFormatter COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_ebTypeAndFormatterList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredFormatter" ":" ;
  mObject.mAttribute_mRequiredFormatter.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_ebTypeAndFormatterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_ebTypeAndFormatterList * operand = (cCollectionElement_ebTypeAndFormatterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_ebTypeAndFormatterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList::GALGAS_ebTypeAndFormatterList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList::GALGAS_ebTypeAndFormatterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_ebTypeAndFormatterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::constructor_listWithValue (const GALGAS_ebType & inOperand0,
                                                                                        const GALGAS_formatterEnum & inOperand1
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_ebTypeAndFormatterList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_ebTypeAndFormatterList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                               const GALGAS_ebType & in_mType,
                                                               const GALGAS_formatterEnum & in_mRequiredFormatter
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement_ebTypeAndFormatterList * p = NULL ;
  macroMyNew (p, cCollectionElement_ebTypeAndFormatterList (in_mType,
                                                            in_mRequiredFormatter COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::addAssign_operation (const GALGAS_ebType & inOperand0,
                                                         const GALGAS_formatterEnum & inOperand1
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ebTypeAndFormatterList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::modifier_insertAtIndex (const GALGAS_ebType inOperand0,
                                                            const GALGAS_formatterEnum inOperand1,
                                                            const GALGAS_uint inInsertionIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_ebTypeAndFormatterList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::modifier_removeAtIndex (GALGAS_ebType & outOperand0,
                                                            GALGAS_formatterEnum & outOperand1,
                                                            const GALGAS_uint inRemoveIndex,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
      outOperand0 = p->mObject.mAttribute_mType ;
      outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::modifier_popFirst (GALGAS_ebType & outOperand0,
                                                       GALGAS_formatterEnum & outOperand1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::modifier_popLast (GALGAS_ebType & outOperand0,
                                                      GALGAS_formatterEnum & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::method_first (GALGAS_ebType & outOperand0,
                                                  GALGAS_formatterEnum & outOperand1,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::method_last (GALGAS_ebType & outOperand0,
                                                 GALGAS_formatterEnum & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::operator_concat (const GALGAS_ebTypeAndFormatterList & inOperand
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ebTypeAndFormatterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::add_operation (const GALGAS_ebTypeAndFormatterList & inOperand,
                                                                            C_Compiler * /* inCompiler */
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_ebTypeAndFormatterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_ebTypeAndFormatterList result = GALGAS_ebTypeAndFormatterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_ebTypeAndFormatterList result = GALGAS_ebTypeAndFormatterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList::dotAssign_operation (const GALGAS_ebTypeAndFormatterList inOperand
                                                         COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebTypeAndFormatterList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_ebTypeAndFormatterList::reader_mRequiredFormatterAtIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_ebTypeAndFormatterList * p = (cCollectionElement_ebTypeAndFormatterList *) attributes.ptr () ;
  GALGAS_formatterEnum result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
    result = p->mObject.mAttribute_mRequiredFormatter ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_ebTypeAndFormatterList::cEnumerator_ebTypeAndFormatterList (const GALGAS_ebTypeAndFormatterList & inEnumeratedObject,
                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element cEnumerator_ebTypeAndFormatterList::current (LOCATION_ARGS) const {
  const cCollectionElement_ebTypeAndFormatterList * p = (const cCollectionElement_ebTypeAndFormatterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_ebTypeAndFormatterList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_ebTypeAndFormatterList * p = (const cCollectionElement_ebTypeAndFormatterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
  return p->mObject.mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_formatterEnum cEnumerator_ebTypeAndFormatterList::current_mRequiredFormatter (LOCATION_ARGS) const {
  const cCollectionElement_ebTypeAndFormatterList * p = (const cCollectionElement_ebTypeAndFormatterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_ebTypeAndFormatterList) ;
  return p->mObject.mAttribute_mRequiredFormatter ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                        @ebTypeAndFormatterList type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ebTypeAndFormatterList ("ebTypeAndFormatterList",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ebTypeAndFormatterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ebTypeAndFormatterList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ebTypeAndFormatterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ebTypeAndFormatterList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_ebTypeAndFormatterList::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_ebTypeAndFormatterList result ;
  const GALGAS_ebTypeAndFormatterList * p = (const GALGAS_ebTypeAndFormatterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ebTypeAndFormatterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ebTypeAndFormatterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap::cMapElement_outletClassBindingOptionMap (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_ebTypeList & in_mAcceptableTypeList
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_outletClassBindingOptionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingOptionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingOptionMap (mAttribute_lkey, mAttribute_mAcceptableTypeList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_outletClassBindingOptionMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingOptionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingOptionMap * operand = (cMapElement_outletClassBindingOptionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap & GALGAS_outletClassBindingOptionMap::operator = (const GALGAS_outletClassBindingOptionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingOptionMap & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassBindingOptionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                              const GALGAS_ebTypeList & inArgument0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@outletClassBindingOptionMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_ebTypeList inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding option is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingOptionMap_searchKey = "the '%K' binding option is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_ebTypeList & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_outletClassBindingOptionMap_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_outletClassBindingOptionMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) attributes ;
  GALGAS_ebTypeList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_setMAcceptableTypeListForKey (GALGAS_ebTypeList inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * p = (cMapElement_outletClassBindingOptionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                 const GALGAS_string & inKey
                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_outletClassBindingOptionMap::cEnumerator_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element cEnumerator_outletClassBindingOptionMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
  return GALGAS_outletClassBindingOptionMap_2D_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingOptionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList cEnumerator_outletClassBindingOptionMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @outletClassBindingOptionMap type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap ("outletClassBindingOptionMap",
                                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  const GALGAS_outletClassBindingOptionMap * p = (const GALGAS_outletClassBindingOptionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingOptionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_outletClassBindingMap::cMapElement_outletClassBindingMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_ebTypeAndFormatterList & in_mAcceptableTypeList,
                                                                      const GALGAS_outletClassBindingOptionMap & in_mOutletClassBindingOptionMap
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList),
mAttribute_mOutletClassBindingOptionMap (in_mOutletClassBindingOptionMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_outletClassBindingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingMap (mAttribute_lkey, mAttribute_mAcceptableTypeList, mAttribute_mOutletClassBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_outletClassBindingMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingOptionMap" ":" ;
  mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingMap * operand = (cMapElement_outletClassBindingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (operand->mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (const GALGAS_outletClassBindingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap & GALGAS_outletClassBindingMap::operator = (const GALGAS_outletClassBindingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                        const GALGAS_ebTypeAndFormatterList & inArgument0,
                                                        const GALGAS_outletClassBindingOptionMap & inArgument1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@outletClassBindingMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_ebTypeAndFormatterList inArgument0,
                                                       GALGAS_outletClassBindingOptionMap inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingMap_searchKey = "the '%K' binding is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_ebTypeAndFormatterList & outArgument0,
                                                     GALGAS_outletClassBindingOptionMap & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_outletClassBindingMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
    outArgument1 = p->mAttribute_mOutletClassBindingOptionMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_outletClassBindingMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_ebTypeAndFormatterList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap::reader_mOutletClassBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_outletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mOutletClassBindingOptionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMAcceptableTypeListForKey (GALGAS_ebTypeAndFormatterList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMOutletClassBindingOptionMapForKey (GALGAS_outletClassBindingOptionMap inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mOutletClassBindingOptionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                     const GALGAS_string & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_outletClassBindingMap::cEnumerator_outletClassBindingMap (const GALGAS_outletClassBindingMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element cEnumerator_outletClassBindingMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
  return GALGAS_outletClassBindingMap_2D_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList, p->mAttribute_mOutletClassBindingOptionMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList cEnumerator_outletClassBindingMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap cEnumerator_outletClassBindingMap::current_mOutletClassBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mOutletClassBindingOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @outletClassBindingMap type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap ("outletClassBindingMap",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  const GALGAS_outletClassBindingMap * p = (const GALGAS_outletClassBindingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                Class for element of '@structFieldList' list                 *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_structFieldList : public cCollectionElement {
  public : GALGAS_structFieldList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_structFieldList (const GALGAS_ebType & in_mFieldType,
                                               const GALGAS_string & in_mFieldName
                                               COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_structFieldList::cCollectionElement_structFieldList (const GALGAS_ebType & in_mFieldType,
                                                                        const GALGAS_string & in_mFieldName
                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mFieldType, in_mFieldName) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_structFieldList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_structFieldList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_structFieldList (mObject.mAttribute_mFieldType, mObject.mAttribute_mFieldName COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_structFieldList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFieldType" ":" ;
  mObject.mAttribute_mFieldType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFieldName" ":" ;
  mObject.mAttribute_mFieldName.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_structFieldList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_structFieldList * operand = (cCollectionElement_structFieldList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_structFieldList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList::GALGAS_structFieldList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList::GALGAS_structFieldList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_structFieldList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::constructor_listWithValue (const GALGAS_ebType & inOperand0,
                                                                          const GALGAS_string & inOperand1
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_structFieldList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_structFieldList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                        const GALGAS_ebType & in_mFieldType,
                                                        const GALGAS_string & in_mFieldName
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_structFieldList * p = NULL ;
  macroMyNew (p, cCollectionElement_structFieldList (in_mFieldType,
                                                     in_mFieldName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::addAssign_operation (const GALGAS_ebType & inOperand0,
                                                  const GALGAS_string & inOperand1
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_structFieldList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::modifier_insertAtIndex (const GALGAS_ebType inOperand0,
                                                     const GALGAS_string inOperand1,
                                                     const GALGAS_uint inInsertionIndex,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_structFieldList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::modifier_removeAtIndex (GALGAS_ebType & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     const GALGAS_uint inRemoveIndex,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_structFieldList) ;
      outOperand0 = p->mObject.mAttribute_mFieldType ;
      outOperand1 = p->mObject.mAttribute_mFieldName ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::modifier_popFirst (GALGAS_ebType & outOperand0,
                                                GALGAS_string & outOperand1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_structFieldList) ;
    outOperand0 = p->mObject.mAttribute_mFieldType ;
    outOperand1 = p->mObject.mAttribute_mFieldName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::modifier_popLast (GALGAS_ebType & outOperand0,
                                               GALGAS_string & outOperand1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_structFieldList) ;
    outOperand0 = p->mObject.mAttribute_mFieldType ;
    outOperand1 = p->mObject.mAttribute_mFieldName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::method_first (GALGAS_ebType & outOperand0,
                                           GALGAS_string & outOperand1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_structFieldList) ;
    outOperand0 = p->mObject.mAttribute_mFieldType ;
    outOperand1 = p->mObject.mAttribute_mFieldName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::method_last (GALGAS_ebType & outOperand0,
                                          GALGAS_string & outOperand1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_structFieldList) ;
    outOperand0 = p->mObject.mAttribute_mFieldType ;
    outOperand1 = p->mObject.mAttribute_mFieldName ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::operator_concat (const GALGAS_structFieldList & inOperand
                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_structFieldList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::add_operation (const GALGAS_structFieldList & inOperand,
                                                              C_Compiler * /* inCompiler */
                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_structFieldList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_structFieldList result = GALGAS_structFieldList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_structFieldList result = GALGAS_structFieldList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList::dotAssign_operation (const GALGAS_structFieldList inOperand
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_structFieldList::reader_mFieldTypeAtIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_structFieldList) ;
    result = p->mObject.mAttribute_mFieldType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_structFieldList::reader_mFieldNameAtIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_structFieldList * p = (cCollectionElement_structFieldList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_structFieldList) ;
    result = p->mObject.mAttribute_mFieldName ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_structFieldList::cEnumerator_structFieldList (const GALGAS_structFieldList & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element cEnumerator_structFieldList::current (LOCATION_ARGS) const {
  const cCollectionElement_structFieldList * p = (const cCollectionElement_structFieldList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_structFieldList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_structFieldList::current_mFieldType (LOCATION_ARGS) const {
  const cCollectionElement_structFieldList * p = (const cCollectionElement_structFieldList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_structFieldList) ;
  return p->mObject.mAttribute_mFieldType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_structFieldList::current_mFieldName (LOCATION_ARGS) const {
  const cCollectionElement_structFieldList * p = (const cCollectionElement_structFieldList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_structFieldList) ;
  return p->mObject.mAttribute_mFieldName ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                            @structFieldList type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structFieldList ("structFieldList",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structFieldList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structFieldList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structFieldList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structFieldList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structFieldList::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_structFieldList result ;
  const GALGAS_structFieldList * p = (const GALGAS_structFieldList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structFieldList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structFieldList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_enumConstantMap::cMapElement_enumConstantMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_enumConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_enumConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_enumConstantMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_enumConstantMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_enumConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_enumConstantMap * operand = (cMapElement_enumConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap::GALGAS_enumConstantMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap::GALGAS_enumConstantMap (const GALGAS_enumConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap & GALGAS_enumConstantMap::operator = (const GALGAS_enumConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_enumConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::constructor_mapWithMapToOverride (const GALGAS_enumConstantMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_enumConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_enumConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_enumConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_enumConstantMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@enumConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumConstantMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_enumConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_enumConstantMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' enumeration constant is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_enumConstantMap_searchKey = "the '%K' enumeration constant is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_enumConstantMap::method_searchKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_enumConstantMap * p = (const cMapElement_enumConstantMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_enumConstantMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_enumConstantMap) ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_enumConstantMap * GALGAS_enumConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_enumConstantMap * result = (cMapElement_enumConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_enumConstantMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_enumConstantMap::cEnumerator_enumConstantMap (const GALGAS_enumConstantMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element cEnumerator_enumConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_enumConstantMap * p = (const cMapElement_enumConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_enumConstantMap) ;
  return GALGAS_enumConstantMap_2D_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_enumConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @enumConstantMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumConstantMap ("enumConstantMap",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumConstantMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumConstantMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_enumConstantMap result ;
  const GALGAS_enumConstantMap * p = (const GALGAS_enumConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_globalEnumConstantMap::cMapElement_globalEnumConstantMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_lstring & in_mEnumTypeName
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mEnumTypeName (in_mEnumTypeName) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_globalEnumConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mEnumTypeName.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_globalEnumConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalEnumConstantMap (mAttribute_lkey, mAttribute_mEnumTypeName COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_globalEnumConstantMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumTypeName" ":" ;
  mAttribute_mEnumTypeName.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalEnumConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalEnumConstantMap * operand = (cMapElement_globalEnumConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mEnumTypeName.objectCompare (operand->mAttribute_mEnumTypeName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap::GALGAS_globalEnumConstantMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap::GALGAS_globalEnumConstantMap (const GALGAS_globalEnumConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap & GALGAS_globalEnumConstantMap::operator = (const GALGAS_globalEnumConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::constructor_mapWithMapToOverride (const GALGAS_globalEnumConstantMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_globalEnumConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                        const GALGAS_lstring & inArgument0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_globalEnumConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalEnumConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@globalEnumConstantMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_lstring inArgument0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_globalEnumConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalEnumConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' enumeration constant is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalEnumConstantMap_searchKey = "the '%K' enumeration constant is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_lstring & outArgument0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_globalEnumConstantMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_globalEnumConstantMap) ;
    outArgument0 = p->mAttribute_mEnumTypeName ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_globalEnumConstantMap::reader_mEnumTypeNameForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalEnumConstantMap) ;
    result = p->mAttribute_mEnumTypeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::modifier_setMEnumTypeNameForKey (GALGAS_lstring inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalEnumConstantMap * p = (cMapElement_globalEnumConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalEnumConstantMap) ;
    p->mAttribute_mEnumTypeName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_globalEnumConstantMap * GALGAS_globalEnumConstantMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                     const GALGAS_string & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_globalEnumConstantMap * result = (cMapElement_globalEnumConstantMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_globalEnumConstantMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_globalEnumConstantMap::cEnumerator_globalEnumConstantMap (const GALGAS_globalEnumConstantMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element cEnumerator_globalEnumConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalEnumConstantMap) ;
  return GALGAS_globalEnumConstantMap_2D_element (p->mAttribute_lkey, p->mAttribute_mEnumTypeName) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalEnumConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalEnumConstantMap::current_mEnumTypeName (LOCATION_ARGS) const {
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_globalEnumConstantMap) ;
  return p->mAttribute_mEnumTypeName ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @globalEnumConstantMap type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalEnumConstantMap ("globalEnumConstantMap",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalEnumConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalEnumConstantMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalEnumConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalEnumConstantMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap result ;
  const GALGAS_globalEnumConstantMap * p = (const GALGAS_globalEnumConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalEnumConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalEnumConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_enumMap::cMapElement_enumMap (const GALGAS_lstring & inKey,
                                          const GALGAS_lstringlist & in_mConstantOrderedList,
                                          const GALGAS_enumConstantMap & in_mEnumConstantMap
                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mConstantOrderedList (in_mConstantOrderedList),
mAttribute_mEnumConstantMap (in_mEnumConstantMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_enumMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mConstantOrderedList.isValid () && mAttribute_mEnumConstantMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_enumMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_enumMap (mAttribute_lkey, mAttribute_mConstantOrderedList, mAttribute_mEnumConstantMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_enumMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mConstantOrderedList" ":" ;
  mAttribute_mConstantOrderedList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumConstantMap" ":" ;
  mAttribute_mEnumConstantMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_enumMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_enumMap * operand = (cMapElement_enumMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mConstantOrderedList.objectCompare (operand->mAttribute_mConstantOrderedList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEnumConstantMap.objectCompare (operand->mAttribute_mEnumConstantMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap::GALGAS_enumMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap::GALGAS_enumMap (const GALGAS_enumMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap & GALGAS_enumMap::operator = (const GALGAS_enumMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_enumMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::constructor_mapWithMapToOverride (const GALGAS_enumMap & inMapToOverride
                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_enumMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::reader_overriddenMap (C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_enumMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumMap::addAssign_operation (const GALGAS_lstring & inKey,
                                          const GALGAS_lstringlist & inArgument0,
                                          const GALGAS_enumConstantMap & inArgument1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_enumMap * p = NULL ;
  macroMyNew (p, cMapElement_enumMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@enumMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumMap::modifier_insertKey (GALGAS_lstring inKey,
                                         GALGAS_lstringlist inArgument0,
                                         GALGAS_enumConstantMap inArgument1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  cMapElement_enumMap * p = NULL ;
  macroMyNew (p, cMapElement_enumMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' enumeration is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_enumMap_searchKey = "the '%K' enumeration is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_enumMap::method_searchKey (GALGAS_lstring inKey,
                                       GALGAS_lstringlist & outArgument0,
                                       GALGAS_enumConstantMap & outArgument1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) performSearch (inKey,
                                                                                 inCompiler,
                                                                                 kSearchErrorMessage_enumMap_searchKey
                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_enumMap) ;
    outArgument0 = p->mAttribute_mConstantOrderedList ;
    outArgument1 = p->mAttribute_mEnumConstantMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumMap::reader_mConstantOrderedListForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_enumMap) ;
    result = p->mAttribute_mConstantOrderedList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumMap::reader_mEnumConstantMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) attributes ;
  GALGAS_enumConstantMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_enumMap) ;
    result = p->mAttribute_mEnumConstantMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumMap::modifier_setMConstantOrderedListForKey (GALGAS_lstringlist inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_enumMap * p = (cMapElement_enumMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_enumMap) ;
    p->mAttribute_mConstantOrderedList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_enumMap::modifier_setMEnumConstantMapForKey (GALGAS_enumConstantMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_enumMap * p = (cMapElement_enumMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_enumMap) ;
    p->mAttribute_mEnumConstantMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_enumMap * GALGAS_enumMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                         const GALGAS_string & inKey
                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_enumMap * result = (cMapElement_enumMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_enumMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_enumMap::cEnumerator_enumMap (const GALGAS_enumMap & inEnumeratedObject,
                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element cEnumerator_enumMap::current (LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_enumMap) ;
  return GALGAS_enumMap_2D_element (p->mAttribute_lkey, p->mAttribute_mConstantOrderedList, p->mAttribute_mEnumConstantMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_enumMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_enumMap::current_mConstantOrderedList (LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_enumMap) ;
  return p->mAttribute_mConstantOrderedList ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap cEnumerator_enumMap::current_mEnumConstantMap (LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_enumMap) ;
  return p->mAttribute_mEnumConstantMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                                @enumMap type                                *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumMap ("enumMap",
                                NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::extractObject (const GALGAS_object & inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_enumMap result ;
  const GALGAS_enumMap * p = (const GALGAS_enumMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_userCursorMap::cMapElement_userCursorMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_double & in_mHotSpotX,
                                                      const GALGAS_double & in_mHotSpotY
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mHotSpotX (in_mHotSpotX),
mAttribute_mHotSpotY (in_mHotSpotY) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_userCursorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_userCursorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_userCursorMap (mAttribute_lkey, mAttribute_mHotSpotX, mAttribute_mHotSpotY COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_userCursorMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHotSpotX" ":" ;
  mAttribute_mHotSpotX.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHotSpotY" ":" ;
  mAttribute_mHotSpotY.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_userCursorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_userCursorMap * operand = (cMapElement_userCursorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mHotSpotX.objectCompare (operand->mAttribute_mHotSpotX) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHotSpotY.objectCompare (operand->mAttribute_mHotSpotY) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap::GALGAS_userCursorMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap::GALGAS_userCursorMap (const GALGAS_userCursorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap & GALGAS_userCursorMap::operator = (const GALGAS_userCursorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::constructor_mapWithMapToOverride (const GALGAS_userCursorMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_userCursorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                const GALGAS_double & inArgument0,
                                                const GALGAS_double & inArgument1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_userCursorMap * p = NULL ;
  macroMyNew (p, cMapElement_userCursorMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@userCursorMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_double inArgument0,
                                               GALGAS_double inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_userCursorMap * p = NULL ;
  macroMyNew (p, cMapElement_userCursorMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' cursor is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_userCursorMap_searchKey = "the '%K' cursor is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_double & outArgument0,
                                             GALGAS_double & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_userCursorMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    outArgument0 = p->mAttribute_mHotSpotX ;
    outArgument1 = p->mAttribute_mHotSpotY ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap::reader_mHotSpotXForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) attributes ;
  GALGAS_double result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    result = p->mAttribute_mHotSpotX ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap::reader_mHotSpotYForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) attributes ;
  GALGAS_double result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    result = p->mAttribute_mHotSpotY ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_setMHotSpotXForKey (GALGAS_double inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * p = (cMapElement_userCursorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    p->mAttribute_mHotSpotX = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_setMHotSpotYForKey (GALGAS_double inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * p = (cMapElement_userCursorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    p->mAttribute_mHotSpotY = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_userCursorMap * GALGAS_userCursorMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                     const GALGAS_string & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_userCursorMap * result = (cMapElement_userCursorMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_userCursorMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_userCursorMap::cEnumerator_userCursorMap (const GALGAS_userCursorMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element cEnumerator_userCursorMap::current (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_userCursorMap) ;
  return GALGAS_userCursorMap_2D_element (p->mAttribute_lkey, p->mAttribute_mHotSpotX, p->mAttribute_mHotSpotY) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_userCursorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_double cEnumerator_userCursorMap::current_mHotSpotX (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_userCursorMap) ;
  return p->mAttribute_mHotSpotX ;
}

//-----------------------------------------------------------------------------*

GALGAS_double cEnumerator_userCursorMap::current_mHotSpotY (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_userCursorMap) ;
  return p->mAttribute_mHotSpotY ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                             @userCursorMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_userCursorMap ("userCursorMap",
                                      NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_userCursorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_userCursorMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_userCursorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_userCursorMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  const GALGAS_userCursorMap * p = (const GALGAS_userCursorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_userCursorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("userCursorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_structTypeMap::cMapElement_structTypeMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_structFieldList & in_mFieldList
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFieldList (in_mFieldList) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_structTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFieldList.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_structTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_structTypeMap (mAttribute_lkey, mAttribute_mFieldList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_structTypeMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFieldList" ":" ;
  mAttribute_mFieldList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_structTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_structTypeMap * operand = (cMapElement_structTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFieldList.objectCompare (operand->mAttribute_mFieldList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap::GALGAS_structTypeMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap::GALGAS_structTypeMap (const GALGAS_structTypeMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap & GALGAS_structTypeMap::operator = (const GALGAS_structTypeMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_structTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::constructor_mapWithMapToOverride (const GALGAS_structTypeMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_structTypeMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_structTypeMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structTypeMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                const GALGAS_structFieldList & inArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_structTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_structTypeMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@structTypeMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structTypeMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_structFieldList inArgument0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_structTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_structTypeMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' struct is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_structTypeMap_searchKey = "the '%K' struct is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_structTypeMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_structFieldList & outArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_structTypeMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_structTypeMap) ;
    outArgument0 = p->mAttribute_mFieldList ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structTypeMap::reader_mFieldListForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) attributes ;
  GALGAS_structFieldList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_structTypeMap) ;
    result = p->mAttribute_mFieldList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structTypeMap::modifier_setMFieldListForKey (GALGAS_structFieldList inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_structTypeMap * p = (cMapElement_structTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_structTypeMap) ;
    p->mAttribute_mFieldList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_structTypeMap * GALGAS_structTypeMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                     const GALGAS_string & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_structTypeMap * result = (cMapElement_structTypeMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_structTypeMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_structTypeMap::cEnumerator_structTypeMap (const GALGAS_structTypeMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element cEnumerator_structTypeMap::current (LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_structTypeMap) ;
  return GALGAS_structTypeMap_2D_element (p->mAttribute_lkey, p->mAttribute_mFieldList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_structTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList cEnumerator_structTypeMap::current_mFieldList (LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_structTypeMap) ;
  return p->mAttribute_mFieldList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                             @structTypeMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structTypeMap ("structTypeMap",
                                      NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structTypeMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structTypeMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_structTypeMap result ;
  const GALGAS_structTypeMap * p = (const GALGAS_structTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_classMap::cMapElement_classMap (const GALGAS_lstring & inKey,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                            const GALGAS_propertyArrayMap & in_mAllArrayPropertyForImplementation
                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mAllArrayPropertyForImplementation (in_mAllArrayPropertyForImplementation) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_classMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mAllArrayPropertyForImplementation.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_classMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classMap (mAttribute_lkey, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mAllArrayPropertyForImplementation COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_classMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllArrayPropertyForImplementation" ":" ;
  mAttribute_mAllArrayPropertyForImplementation.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_classMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classMap * operand = (cMapElement_classMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllArrayPropertyForImplementation.objectCompare (operand->mAttribute_mAllArrayPropertyForImplementation) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (const GALGAS_classMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_classMap & GALGAS_classMap::operator = (const GALGAS_classMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_mapWithMapToOverride (const GALGAS_classMap & inMapToOverride
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::reader_overriddenMap (C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_classMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_classMap::addAssign_operation (const GALGAS_lstring & inKey,
                                           const GALGAS_attributeListForImplementation & inArgument0,
                                           const GALGAS_propertyArrayMap & inArgument1,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_classMap * p = NULL ;
  macroMyNew (p, cMapElement_classMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@classMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_classMap::modifier_insertKey (GALGAS_lstring inKey,
                                          GALGAS_attributeListForImplementation inArgument0,
                                          GALGAS_propertyArrayMap inArgument1,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_classMap * p = NULL ;
  macroMyNew (p, cMapElement_classMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_classMap_searchKey = "the '%K' class is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_classMap::method_searchKey (GALGAS_lstring inKey,
                                        GALGAS_attributeListForImplementation & outArgument0,
                                        GALGAS_propertyArrayMap & outArgument1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) performSearch (inKey,
                                                                                   inCompiler,
                                                                                   kSearchErrorMessage_classMap_searchKey
                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_classMap) ;
    outArgument0 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument1 = p->mAttribute_mAllArrayPropertyForImplementation ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_classMap::reader_mAllArrayPropertyForImplementationForKey (const GALGAS_string & inKey,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_propertyArrayMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    result = p->mAttribute_mAllArrayPropertyForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAllArrayPropertyForImplementationForKey (GALGAS_propertyArrayMap inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAllArrayPropertyForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                           const GALGAS_string & inKey
                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_classMap * result = (cMapElement_classMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_classMap::cEnumerator_classMap (const GALGAS_classMap & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element cEnumerator_classMap::current (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_classMap) ;
  return GALGAS_classMap_2D_element (p->mAttribute_lkey, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mAllArrayPropertyForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap cEnumerator_classMap::current_mAllArrayPropertyForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_classMap) ;
  return p->mAttribute_mAllArrayPropertyForImplementation ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                               @classMap type                                *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap ("classMap",
                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  const GALGAS_classMap * p = (const GALGAS_classMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_entityMap::cMapElement_entityMap (const GALGAS_lstring & inKey,
                                              const GALGAS_string & in_mSuperEntityName,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                              const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                              const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                              const GALGAS_relationshipList & in_mAllRelationshipList,
                                              const GALGAS_propertyMap & in_mAllPropertyMap,
                                              const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                              const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                              const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                              const GALGAS_signListForGeneration & in_mSignList
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperEntityName (in_mSuperEntityName),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mCurrentRelationshipList (in_mCurrentRelationshipList),
mAttribute_mAllRelationshipList (in_mAllRelationshipList),
mAttribute_mAllPropertyMap (in_mAllPropertyMap),
mAttribute_mCurrentRelationshipMap (in_mCurrentRelationshipMap),
mAttribute_mAllRelationshipMap (in_mAllRelationshipMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mSignList (in_mSignList) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_entityMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mSignList.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_entityMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_entityMap (mAttribute_lkey, mAttribute_mSuperEntityName, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mCurrentRelationshipList, mAttribute_mAllRelationshipList, mAttribute_mAllPropertyMap, mAttribute_mCurrentRelationshipMap, mAttribute_mAllRelationshipMap, mAttribute_mFileInclusionSet, mAttribute_mSignList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_entityMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipList" ":" ;
  mAttribute_mCurrentRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipList" ":" ;
  mAttribute_mAllRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllPropertyMap" ":" ;
  mAttribute_mAllPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipMap" ":" ;
  mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipMap" ":" ;
  mAttribute_mAllRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignList" ":" ;
  mAttribute_mSignList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_entityMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_entityMap * operand = (cMapElement_entityMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperEntityName.objectCompare (operand->mAttribute_mSuperEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (operand->mAttribute_mCurrentRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipList.objectCompare (operand->mAttribute_mAllRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllPropertyMap.objectCompare (operand->mAttribute_mAllPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (operand->mAttribute_mCurrentRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipMap.objectCompare (operand->mAttribute_mAllRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignList.objectCompare (operand->mAttribute_mSignList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (const GALGAS_entityMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap & GALGAS_entityMap::operator = (const GALGAS_entityMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_mapWithMapToOverride (const GALGAS_entityMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::reader_overriddenMap (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_entityMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::addAssign_operation (const GALGAS_lstring & inKey,
                                            const GALGAS_string & inArgument0,
                                            const GALGAS_attributeListForImplementation & inArgument1,
                                            const GALGAS_attributeListForImplementation & inArgument2,
                                            const GALGAS_attributeListForImplementation & inArgument3,
                                            const GALGAS_transientListForImplementation & inArgument4,
                                            const GALGAS_relationshipList & inArgument5,
                                            const GALGAS_relationshipList & inArgument6,
                                            const GALGAS_propertyMap & inArgument7,
                                            const GALGAS_relationshipMap & inArgument8,
                                            const GALGAS_relationshipMap & inArgument9,
                                            const GALGAS_fileInclusionSet & inArgument10,
                                            const GALGAS_signListForGeneration & inArgument11,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * p = NULL ;
  macroMyNew (p, cMapElement_entityMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10, inArgument11 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@entityMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_string inArgument0,
                                           GALGAS_attributeListForImplementation inArgument1,
                                           GALGAS_attributeListForImplementation inArgument2,
                                           GALGAS_attributeListForImplementation inArgument3,
                                           GALGAS_transientListForImplementation inArgument4,
                                           GALGAS_relationshipList inArgument5,
                                           GALGAS_relationshipList inArgument6,
                                           GALGAS_propertyMap inArgument7,
                                           GALGAS_relationshipMap inArgument8,
                                           GALGAS_relationshipMap inArgument9,
                                           GALGAS_fileInclusionSet inArgument10,
                                           GALGAS_signListForGeneration inArgument11,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * p = NULL ;
  macroMyNew (p, cMapElement_entityMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10, inArgument11 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entity is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_entityMap_searchKey = "the '%K' entity is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_string & outArgument0,
                                         GALGAS_attributeListForImplementation & outArgument1,
                                         GALGAS_attributeListForImplementation & outArgument2,
                                         GALGAS_attributeListForImplementation & outArgument3,
                                         GALGAS_transientListForImplementation & outArgument4,
                                         GALGAS_relationshipList & outArgument5,
                                         GALGAS_relationshipList & outArgument6,
                                         GALGAS_propertyMap & outArgument7,
                                         GALGAS_relationshipMap & outArgument8,
                                         GALGAS_relationshipMap & outArgument9,
                                         GALGAS_fileInclusionSet & outArgument10,
                                         GALGAS_signListForGeneration & outArgument11,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_entityMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
    outArgument9.drop () ;
    outArgument10.drop () ;
    outArgument11.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_entityMap) ;
    outArgument0 = p->mAttribute_mSuperEntityName ;
    outArgument1 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument2 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument3 = p->mAttribute_mAttributeListForImplementation ;
    outArgument4 = p->mAttribute_mTransientListForImplementation ;
    outArgument5 = p->mAttribute_mCurrentRelationshipList ;
    outArgument6 = p->mAttribute_mAllRelationshipList ;
    outArgument7 = p->mAttribute_mAllPropertyMap ;
    outArgument8 = p->mAttribute_mCurrentRelationshipMap ;
    outArgument9 = p->mAttribute_mAllRelationshipMap ;
    outArgument10 = p->mAttribute_mFileInclusionSet ;
    outArgument11 = p->mAttribute_mSignList ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperEntityNameForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mSuperEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mCurrentRelationshipListForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mAllRelationshipListForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap::reader_mAllPropertyMapForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mAllPropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mCurrentRelationshipMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mAllRelationshipMapForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityMap::reader_mSignListForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_signListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    result = p->mAttribute_mSignList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperEntityNameForKey (GALGAS_string inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperEntityName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllPropertyMapForKey (GALGAS_propertyMap inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllPropertyMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSignListForKey (GALGAS_signListForGeneration inAttributeValue,
                                                    GALGAS_string inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSignList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                             const GALGAS_string & inKey
                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * result = (cMapElement_entityMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_entityMap::cEnumerator_entityMap (const GALGAS_entityMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element cEnumerator_entityMap::current (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return GALGAS_entityMap_2D_element (p->mAttribute_lkey, p->mAttribute_mSuperEntityName, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mCurrentRelationshipList, p->mAttribute_mAllRelationshipList, p->mAttribute_mAllPropertyMap, p->mAttribute_mCurrentRelationshipMap, p->mAttribute_mAllRelationshipMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mSignList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_entityMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperEntityName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mSuperEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mCurrentRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mAllRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap cEnumerator_entityMap::current_mAllPropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mAllPropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mCurrentRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mAllRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_entityMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration cEnumerator_entityMap::current_mSignList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_entityMap) ;
  return p->mAttribute_mSignList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                               @entityMap type                               *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap ("entityMap",
                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  const GALGAS_entityMap * p = (const GALGAS_entityMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//             Class for element of '@signListForGeneration' list              *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_signListForGeneration : public cCollectionElement {
  public : GALGAS_signListForGeneration_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_signListForGeneration (const GALGAS_string & in_mPropertyName,
                                                     const GALGAS_ebType & in_mPropertyType,
                                                     const GALGAS_bool & in_mIsToMany
                                                     COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_signListForGeneration::cCollectionElement_signListForGeneration (const GALGAS_string & in_mPropertyName,
                                                                                    const GALGAS_ebType & in_mPropertyType,
                                                                                    const GALGAS_bool & in_mIsToMany
                                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mPropertyName, in_mPropertyType, in_mIsToMany) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_signListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_signListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_signListForGeneration (mObject.mAttribute_mPropertyName, mObject.mAttribute_mPropertyType, mObject.mAttribute_mIsToMany COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_signListForGeneration::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyName" ":" ;
  mObject.mAttribute_mPropertyName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyType" ":" ;
  mObject.mAttribute_mPropertyType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsToMany" ":" ;
  mObject.mAttribute_mIsToMany.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_signListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_signListForGeneration * operand = (cCollectionElement_signListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_signListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration::GALGAS_signListForGeneration (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration::GALGAS_signListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_signListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                      const GALGAS_ebType & inOperand1,
                                                                                      const GALGAS_bool & inOperand2
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_signListForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_signListForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                              const GALGAS_string & in_mPropertyName,
                                                              const GALGAS_ebType & in_mPropertyType,
                                                              const GALGAS_bool & in_mIsToMany
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement_signListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_signListForGeneration (in_mPropertyName,
                                                           in_mPropertyType,
                                                           in_mIsToMany COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                        const GALGAS_ebType & inOperand1,
                                                        const GALGAS_bool & inOperand2
                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_signListForGeneration (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                           const GALGAS_ebType inOperand1,
                                                           const GALGAS_bool inOperand2,
                                                           const GALGAS_uint inInsertionIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_signListForGeneration (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                           GALGAS_ebType & outOperand1,
                                                           GALGAS_bool & outOperand2,
                                                           const GALGAS_uint inRemoveIndex,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
      outOperand0 = p->mObject.mAttribute_mPropertyName ;
      outOperand1 = p->mObject.mAttribute_mPropertyType ;
      outOperand2 = p->mObject.mAttribute_mIsToMany ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                      GALGAS_ebType & outOperand1,
                                                      GALGAS_bool & outOperand2,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
    outOperand2 = p->mObject.mAttribute_mIsToMany ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                     GALGAS_ebType & outOperand1,
                                                     GALGAS_bool & outOperand2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
    outOperand2 = p->mObject.mAttribute_mIsToMany ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::method_first (GALGAS_string & outOperand0,
                                                 GALGAS_ebType & outOperand1,
                                                 GALGAS_bool & outOperand2,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
    outOperand2 = p->mObject.mAttribute_mIsToMany ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::method_last (GALGAS_string & outOperand0,
                                                GALGAS_ebType & outOperand1,
                                                GALGAS_bool & outOperand2,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
    outOperand2 = p->mObject.mAttribute_mIsToMany ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::operator_concat (const GALGAS_signListForGeneration & inOperand
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::add_operation (const GALGAS_signListForGeneration & inOperand,
                                                                          C_Compiler * /* inCompiler */
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result = GALGAS_signListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result = GALGAS_signListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration::dotAssign_operation (const GALGAS_signListForGeneration inOperand
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_signListForGeneration::reader_mPropertyNameAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    result = p->mObject.mAttribute_mPropertyName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_signListForGeneration::reader_mPropertyTypeAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    result = p->mObject.mAttribute_mPropertyType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_signListForGeneration::reader_mIsToManyAtIndex (const GALGAS_uint & inIndex,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    result = p->mObject.mAttribute_mIsToMany ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_signListForGeneration::cEnumerator_signListForGeneration (const GALGAS_signListForGeneration & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element cEnumerator_signListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_signListForGeneration::current_mPropertyName (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
  return p->mObject.mAttribute_mPropertyName ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_signListForGeneration::current_mPropertyType (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
  return p->mObject.mAttribute_mPropertyType ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_signListForGeneration::current_mIsToMany (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
  return p->mObject.mAttribute_mIsToMany ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                         @signListForGeneration type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_signListForGeneration ("signListForGeneration",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_signListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_signListForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_signListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_signListForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_signListForGeneration result ;
  const GALGAS_signListForGeneration * p = (const GALGAS_signListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_signListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("signListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//            Class for element of '@entityListForGeneration' list             *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_entityListForGeneration : public cCollectionElement {
  public : GALGAS_entityListForGeneration_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_entityListForGeneration (const GALGAS_string & in_mEntityName,
                                                       const GALGAS_string & in_mSuperEntityName,
                                                       const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                       const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                       const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                       const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                       const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                       const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                                       const GALGAS_relationshipList & in_mAllRelationshipList,
                                                       const GALGAS_propertyMap & in_mAllPropertyMap,
                                                       const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                                       const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                                       const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                                       const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                       const GALGAS__32_stringlist & in_mToOneRelationshipList,
                                                       const GALGAS_signListForGeneration & in_mSignList
                                                       COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_entityListForGeneration::cCollectionElement_entityListForGeneration (const GALGAS_string & in_mEntityName,
                                                                                        const GALGAS_string & in_mSuperEntityName,
                                                                                        const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                                                        const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                                                        const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                                                        const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                                                                        const GALGAS_relationshipList & in_mAllRelationshipList,
                                                                                        const GALGAS_propertyMap & in_mAllPropertyMap,
                                                                                        const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                                                                        const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                                                                        const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                                                                        const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                                                        const GALGAS__32_stringlist & in_mToOneRelationshipList,
                                                                                        const GALGAS_signListForGeneration & in_mSignList
                                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mEntityName, in_mSuperEntityName, in_mObservablePropertyMap, in_mAttributeListForInitMethodHeader, in_mInheritedAttributeListForImplementation, in_mAttributeListForImplementation, in_mTransientListForImplementation, in_mCurrentRelationshipList, in_mAllRelationshipList, in_mAllPropertyMap, in_mCurrentRelationshipMap, in_mAllRelationshipMap, in_mToManyRelationshipList, in_mFileInclusionSet, in_mToOneRelationshipList, in_mSignList) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_entityListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_entityListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_entityListForGeneration (mObject.mAttribute_mEntityName, mObject.mAttribute_mSuperEntityName, mObject.mAttribute_mObservablePropertyMap, mObject.mAttribute_mAttributeListForInitMethodHeader, mObject.mAttribute_mInheritedAttributeListForImplementation, mObject.mAttribute_mAttributeListForImplementation, mObject.mAttribute_mTransientListForImplementation, mObject.mAttribute_mCurrentRelationshipList, mObject.mAttribute_mAllRelationshipList, mObject.mAttribute_mAllPropertyMap, mObject.mAttribute_mCurrentRelationshipMap, mObject.mAttribute_mAllRelationshipMap, mObject.mAttribute_mToManyRelationshipList, mObject.mAttribute_mFileInclusionSet, mObject.mAttribute_mToOneRelationshipList, mObject.mAttribute_mSignList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_entityListForGeneration::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEntityName" ":" ;
  mObject.mAttribute_mEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mObject.mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mObject.mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mObject.mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mObject.mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mObject.mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mObject.mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipList" ":" ;
  mObject.mAttribute_mCurrentRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipList" ":" ;
  mObject.mAttribute_mAllRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllPropertyMap" ":" ;
  mObject.mAttribute_mAllPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipMap" ":" ;
  mObject.mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipMap" ":" ;
  mObject.mAttribute_mAllRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mToManyRelationshipList" ":" ;
  mObject.mAttribute_mToManyRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mObject.mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mToOneRelationshipList" ":" ;
  mObject.mAttribute_mToOneRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignList" ":" ;
  mObject.mAttribute_mSignList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_entityListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_entityListForGeneration * operand = (cCollectionElement_entityListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_entityListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration::GALGAS_entityListForGeneration (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration::GALGAS_entityListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_entityListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                          const GALGAS_string & inOperand1,
                                                                                          const GALGAS_observablePropertyMap & inOperand2,
                                                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                                                          const GALGAS_transientListForImplementation & inOperand6,
                                                                                          const GALGAS_relationshipList & inOperand7,
                                                                                          const GALGAS_relationshipList & inOperand8,
                                                                                          const GALGAS_propertyMap & inOperand9,
                                                                                          const GALGAS_relationshipMap & inOperand10,
                                                                                          const GALGAS_relationshipMap & inOperand11,
                                                                                          const GALGAS__32_stringlist & inOperand12,
                                                                                          const GALGAS_fileInclusionSet & inOperand13,
                                                                                          const GALGAS__32_stringlist & inOperand14,
                                                                                          const GALGAS_signListForGeneration & inOperand15
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_entityListForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                const GALGAS_string & in_mEntityName,
                                                                const GALGAS_string & in_mSuperEntityName,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                                const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                                const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                                const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                                const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                                const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                                                const GALGAS_relationshipList & in_mAllRelationshipList,
                                                                const GALGAS_propertyMap & in_mAllPropertyMap,
                                                                const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                                                const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                                                const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                                                const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                                const GALGAS__32_stringlist & in_mToOneRelationshipList,
                                                                const GALGAS_signListForGeneration & in_mSignList
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_entityListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_entityListForGeneration (in_mEntityName,
                                                             in_mSuperEntityName,
                                                             in_mObservablePropertyMap,
                                                             in_mAttributeListForInitMethodHeader,
                                                             in_mInheritedAttributeListForImplementation,
                                                             in_mAttributeListForImplementation,
                                                             in_mTransientListForImplementation,
                                                             in_mCurrentRelationshipList,
                                                             in_mAllRelationshipList,
                                                             in_mAllPropertyMap,
                                                             in_mCurrentRelationshipMap,
                                                             in_mAllRelationshipMap,
                                                             in_mToManyRelationshipList,
                                                             in_mFileInclusionSet,
                                                             in_mToOneRelationshipList,
                                                             in_mSignList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                          const GALGAS_string & inOperand1,
                                                          const GALGAS_observablePropertyMap & inOperand2,
                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                          const GALGAS_transientListForImplementation & inOperand6,
                                                          const GALGAS_relationshipList & inOperand7,
                                                          const GALGAS_relationshipList & inOperand8,
                                                          const GALGAS_propertyMap & inOperand9,
                                                          const GALGAS_relationshipMap & inOperand10,
                                                          const GALGAS_relationshipMap & inOperand11,
                                                          const GALGAS__32_stringlist & inOperand12,
                                                          const GALGAS_fileInclusionSet & inOperand13,
                                                          const GALGAS__32_stringlist & inOperand14,
                                                          const GALGAS_signListForGeneration & inOperand15
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_entityListForGeneration (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                             const GALGAS_string inOperand1,
                                                             const GALGAS_observablePropertyMap inOperand2,
                                                             const GALGAS_attributeListForImplementation inOperand3,
                                                             const GALGAS_attributeListForImplementation inOperand4,
                                                             const GALGAS_attributeListForImplementation inOperand5,
                                                             const GALGAS_transientListForImplementation inOperand6,
                                                             const GALGAS_relationshipList inOperand7,
                                                             const GALGAS_relationshipList inOperand8,
                                                             const GALGAS_propertyMap inOperand9,
                                                             const GALGAS_relationshipMap inOperand10,
                                                             const GALGAS_relationshipMap inOperand11,
                                                             const GALGAS__32_stringlist inOperand12,
                                                             const GALGAS_fileInclusionSet inOperand13,
                                                             const GALGAS__32_stringlist inOperand14,
                                                             const GALGAS_signListForGeneration inOperand15,
                                                             const GALGAS_uint inInsertionIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_entityListForGeneration (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                             GALGAS_string & outOperand1,
                                                             GALGAS_observablePropertyMap & outOperand2,
                                                             GALGAS_attributeListForImplementation & outOperand3,
                                                             GALGAS_attributeListForImplementation & outOperand4,
                                                             GALGAS_attributeListForImplementation & outOperand5,
                                                             GALGAS_transientListForImplementation & outOperand6,
                                                             GALGAS_relationshipList & outOperand7,
                                                             GALGAS_relationshipList & outOperand8,
                                                             GALGAS_propertyMap & outOperand9,
                                                             GALGAS_relationshipMap & outOperand10,
                                                             GALGAS_relationshipMap & outOperand11,
                                                             GALGAS__32_stringlist & outOperand12,
                                                             GALGAS_fileInclusionSet & outOperand13,
                                                             GALGAS__32_stringlist & outOperand14,
                                                             GALGAS_signListForGeneration & outOperand15,
                                                             const GALGAS_uint inRemoveIndex,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
      outOperand5.drop () ;
      outOperand6.drop () ;
      outOperand7.drop () ;
      outOperand8.drop () ;
      outOperand9.drop () ;
      outOperand10.drop () ;
      outOperand11.drop () ;
      outOperand12.drop () ;
      outOperand13.drop () ;
      outOperand14.drop () ;
      outOperand15.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
      outOperand0 = p->mObject.mAttribute_mEntityName ;
      outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
      outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
      outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
      outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
      outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
      outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
      outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
      outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
      outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
      outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
      outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
      outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
      outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
      outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
      outOperand15 = p->mObject.mAttribute_mSignList ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                        GALGAS_string & outOperand1,
                                                        GALGAS_observablePropertyMap & outOperand2,
                                                        GALGAS_attributeListForImplementation & outOperand3,
                                                        GALGAS_attributeListForImplementation & outOperand4,
                                                        GALGAS_attributeListForImplementation & outOperand5,
                                                        GALGAS_transientListForImplementation & outOperand6,
                                                        GALGAS_relationshipList & outOperand7,
                                                        GALGAS_relationshipList & outOperand8,
                                                        GALGAS_propertyMap & outOperand9,
                                                        GALGAS_relationshipMap & outOperand10,
                                                        GALGAS_relationshipMap & outOperand11,
                                                        GALGAS__32_stringlist & outOperand12,
                                                        GALGAS_fileInclusionSet & outOperand13,
                                                        GALGAS__32_stringlist & outOperand14,
                                                        GALGAS_signListForGeneration & outOperand15,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                       GALGAS_string & outOperand1,
                                                       GALGAS_observablePropertyMap & outOperand2,
                                                       GALGAS_attributeListForImplementation & outOperand3,
                                                       GALGAS_attributeListForImplementation & outOperand4,
                                                       GALGAS_attributeListForImplementation & outOperand5,
                                                       GALGAS_transientListForImplementation & outOperand6,
                                                       GALGAS_relationshipList & outOperand7,
                                                       GALGAS_relationshipList & outOperand8,
                                                       GALGAS_propertyMap & outOperand9,
                                                       GALGAS_relationshipMap & outOperand10,
                                                       GALGAS_relationshipMap & outOperand11,
                                                       GALGAS__32_stringlist & outOperand12,
                                                       GALGAS_fileInclusionSet & outOperand13,
                                                       GALGAS__32_stringlist & outOperand14,
                                                       GALGAS_signListForGeneration & outOperand15,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::method_first (GALGAS_string & outOperand0,
                                                   GALGAS_string & outOperand1,
                                                   GALGAS_observablePropertyMap & outOperand2,
                                                   GALGAS_attributeListForImplementation & outOperand3,
                                                   GALGAS_attributeListForImplementation & outOperand4,
                                                   GALGAS_attributeListForImplementation & outOperand5,
                                                   GALGAS_transientListForImplementation & outOperand6,
                                                   GALGAS_relationshipList & outOperand7,
                                                   GALGAS_relationshipList & outOperand8,
                                                   GALGAS_propertyMap & outOperand9,
                                                   GALGAS_relationshipMap & outOperand10,
                                                   GALGAS_relationshipMap & outOperand11,
                                                   GALGAS__32_stringlist & outOperand12,
                                                   GALGAS_fileInclusionSet & outOperand13,
                                                   GALGAS__32_stringlist & outOperand14,
                                                   GALGAS_signListForGeneration & outOperand15,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::method_last (GALGAS_string & outOperand0,
                                                  GALGAS_string & outOperand1,
                                                  GALGAS_observablePropertyMap & outOperand2,
                                                  GALGAS_attributeListForImplementation & outOperand3,
                                                  GALGAS_attributeListForImplementation & outOperand4,
                                                  GALGAS_attributeListForImplementation & outOperand5,
                                                  GALGAS_transientListForImplementation & outOperand6,
                                                  GALGAS_relationshipList & outOperand7,
                                                  GALGAS_relationshipList & outOperand8,
                                                  GALGAS_propertyMap & outOperand9,
                                                  GALGAS_relationshipMap & outOperand10,
                                                  GALGAS_relationshipMap & outOperand11,
                                                  GALGAS__32_stringlist & outOperand12,
                                                  GALGAS_fileInclusionSet & outOperand13,
                                                  GALGAS__32_stringlist & outOperand14,
                                                  GALGAS_signListForGeneration & outOperand15,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::operator_concat (const GALGAS_entityListForGeneration & inOperand
                                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::add_operation (const GALGAS_entityListForGeneration & inOperand,
                                                                              C_Compiler * /* inCompiler */
                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result = GALGAS_entityListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result = GALGAS_entityListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::dotAssign_operation (const GALGAS_entityListForGeneration inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration::reader_mEntityNameAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration::reader_mSuperEntityNameAtIndex (const GALGAS_uint & inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mSuperEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityListForGeneration::reader_mObservablePropertyMapAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration::reader_mAttributeListForInitMethodHeaderAtIndex (const GALGAS_uint & inIndex,
                                                                                                                       C_Compiler * inCompiler
                                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration::reader_mInheritedAttributeListForImplementationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration::reader_mAttributeListForImplementationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityListForGeneration::reader_mTransientListForImplementationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration::reader_mCurrentRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration::reader_mAllRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAllRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityListForGeneration::reader_mAllPropertyMapAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_propertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAllPropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration::reader_mCurrentRelationshipMapAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mCurrentRelationshipMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration::reader_mAllRelationshipMapAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAllRelationshipMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration::reader_mToManyRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mToManyRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityListForGeneration::reader_mFileInclusionSetAtIndex (const GALGAS_uint & inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration::reader_mToOneRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mToOneRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityListForGeneration::reader_mSignListAtIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_signListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mSignList ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_entityListForGeneration::cEnumerator_entityListForGeneration (const GALGAS_entityListForGeneration & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element cEnumerator_entityListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityListForGeneration::current_mEntityName (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityListForGeneration::current_mSuperEntityName (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mSuperEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_entityListForGeneration::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityListForGeneration::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityListForGeneration::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityListForGeneration::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityListForGeneration::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityListForGeneration::current_mCurrentRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mCurrentRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityListForGeneration::current_mAllRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAllRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap cEnumerator_entityListForGeneration::current_mAllPropertyMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAllPropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityListForGeneration::current_mCurrentRelationshipMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mCurrentRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityListForGeneration::current_mAllRelationshipMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAllRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_entityListForGeneration::current_mToManyRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mToManyRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_entityListForGeneration::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_entityListForGeneration::current_mToOneRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mToOneRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration cEnumerator_entityListForGeneration::current_mSignList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mSignList ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                        @entityListForGeneration type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityListForGeneration ("entityListForGeneration",
                                                NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityListForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityListForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration result ;
  const GALGAS_entityListForGeneration * p = (const GALGAS_entityListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//         Class for element of '@bindingOptionListForGeneration' list         *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_bindingOptionListForGeneration : public cCollectionElement {
  public : GALGAS_bindingOptionListForGeneration_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_bindingOptionListForGeneration (const GALGAS_string & in_mOptionName,
                                                              const GALGAS_string & in_mObjectiveCOptionString,
                                                              const GALGAS_string & in_mSwiftOptionString
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_bindingOptionListForGeneration::cCollectionElement_bindingOptionListForGeneration (const GALGAS_string & in_mOptionName,
                                                                                                      const GALGAS_string & in_mObjectiveCOptionString,
                                                                                                      const GALGAS_string & in_mSwiftOptionString
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOptionName, in_mObjectiveCOptionString, in_mSwiftOptionString) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_bindingOptionListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_bindingOptionListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_bindingOptionListForGeneration (mObject.mAttribute_mOptionName, mObject.mAttribute_mObjectiveCOptionString, mObject.mAttribute_mSwiftOptionString COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_bindingOptionListForGeneration::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOptionName" ":" ;
  mObject.mAttribute_mOptionName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObjectiveCOptionString" ":" ;
  mObject.mAttribute_mObjectiveCOptionString.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSwiftOptionString" ":" ;
  mObject.mAttribute_mSwiftOptionString.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_bindingOptionListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_bindingOptionListForGeneration * operand = (cCollectionElement_bindingOptionListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_bindingOptionListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration::GALGAS_bindingOptionListForGeneration (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration::GALGAS_bindingOptionListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_bindingOptionListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_string & inOperand2
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_bindingOptionListForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_bindingOptionListForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_string & in_mOptionName,
                                                                       const GALGAS_string & in_mObjectiveCOptionString,
                                                                       const GALGAS_string & in_mSwiftOptionString
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_bindingOptionListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_bindingOptionListForGeneration (in_mOptionName,
                                                                    in_mObjectiveCOptionString,
                                                                    in_mSwiftOptionString COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_string & inOperand2
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_bindingOptionListForGeneration (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                                    const GALGAS_string inOperand1,
                                                                    const GALGAS_string inOperand2,
                                                                    const GALGAS_uint inInsertionIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_bindingOptionListForGeneration (inOperand0, inOperand1, inOperand2 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                                    GALGAS_string & outOperand1,
                                                                    GALGAS_string & outOperand2,
                                                                    const GALGAS_uint inRemoveIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
      outOperand0 = p->mObject.mAttribute_mOptionName ;
      outOperand1 = p->mObject.mAttribute_mObjectiveCOptionString ;
      outOperand2 = p->mObject.mAttribute_mSwiftOptionString ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_string & outOperand2,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mObjectiveCOptionString ;
    outOperand2 = p->mObject.mAttribute_mSwiftOptionString ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_string & outOperand2,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mObjectiveCOptionString ;
    outOperand2 = p->mObject.mAttribute_mSwiftOptionString ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::method_first (GALGAS_string & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_string & outOperand2,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mObjectiveCOptionString ;
    outOperand2 = p->mObject.mAttribute_mSwiftOptionString ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::method_last (GALGAS_string & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_string & outOperand2,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mOptionName ;
    outOperand1 = p->mObject.mAttribute_mObjectiveCOptionString ;
    outOperand2 = p->mObject.mAttribute_mSwiftOptionString ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::operator_concat (const GALGAS_bindingOptionListForGeneration & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_bindingOptionListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::add_operation (const GALGAS_bindingOptionListForGeneration & inOperand,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_bindingOptionListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_bindingOptionListForGeneration result = GALGAS_bindingOptionListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_bindingOptionListForGeneration result = GALGAS_bindingOptionListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration::dotAssign_operation (const GALGAS_bindingOptionListForGeneration inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_bindingOptionListForGeneration::reader_mOptionNameAtIndex (const GALGAS_uint & inIndex,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    result = p->mObject.mAttribute_mOptionName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_bindingOptionListForGeneration::reader_mObjectiveCOptionStringAtIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    result = p->mObject.mAttribute_mObjectiveCOptionString ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_bindingOptionListForGeneration::reader_mSwiftOptionStringAtIndex (const GALGAS_uint & inIndex,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_bindingOptionListForGeneration * p = (cCollectionElement_bindingOptionListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
    result = p->mObject.mAttribute_mSwiftOptionString ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_bindingOptionListForGeneration::cEnumerator_bindingOptionListForGeneration (const GALGAS_bindingOptionListForGeneration & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element cEnumerator_bindingOptionListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_bindingOptionListForGeneration * p = (const cCollectionElement_bindingOptionListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_bindingOptionListForGeneration::current_mOptionName (LOCATION_ARGS) const {
  const cCollectionElement_bindingOptionListForGeneration * p = (const cCollectionElement_bindingOptionListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
  return p->mObject.mAttribute_mOptionName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_bindingOptionListForGeneration::current_mObjectiveCOptionString (LOCATION_ARGS) const {
  const cCollectionElement_bindingOptionListForGeneration * p = (const cCollectionElement_bindingOptionListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
  return p->mObject.mAttribute_mObjectiveCOptionString ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_bindingOptionListForGeneration::current_mSwiftOptionString (LOCATION_ARGS) const {
  const cCollectionElement_bindingOptionListForGeneration * p = (const cCollectionElement_bindingOptionListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_bindingOptionListForGeneration) ;
  return p->mObject.mAttribute_mSwiftOptionString ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    @bindingOptionListForGeneration type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bindingOptionListForGeneration ("bindingOptionListForGeneration",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bindingOptionListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bindingOptionListForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bindingOptionListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bindingOptionListForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_bindingOptionListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_bindingOptionListForGeneration result ;
  const GALGAS_bindingOptionListForGeneration * p = (const GALGAS_bindingOptionListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bindingOptionListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bindingOptionListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
// Class for element of '@columnBindingForTableValueBindingForGeneration' list *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_columnBindingForTableValueBindingForGeneration : public cCollectionElement {
  public : GALGAS_columnBindingForTableValueBindingForGeneration_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                              const GALGAS_string & in_mRequiredCellClass,
                                                                              const GALGAS_string & in_mObservableAttributeName,
                                                                              const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_columnBindingForTableValueBindingForGeneration::cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                                                                                      const GALGAS_string & in_mRequiredCellClass,
                                                                                                                                      const GALGAS_string & in_mObservableAttributeName,
                                                                                                                                      const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mColumnIdentifier, in_mRequiredCellClass, in_mObservableAttributeName, in_mOutletBindingOptionList) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_columnBindingForTableValueBindingForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_columnBindingForTableValueBindingForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_columnBindingForTableValueBindingForGeneration (mObject.mAttribute_mColumnIdentifier, mObject.mAttribute_mRequiredCellClass, mObject.mAttribute_mObservableAttributeName, mObject.mAttribute_mOutletBindingOptionList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_columnBindingForTableValueBindingForGeneration::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mColumnIdentifier" ":" ;
  mObject.mAttribute_mColumnIdentifier.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredCellClass" ":" ;
  mObject.mAttribute_mRequiredCellClass.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableAttributeName" ":" ;
  mObject.mAttribute_mObservableAttributeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingOptionList" ":" ;
  mObject.mAttribute_mOutletBindingOptionList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_columnBindingForTableValueBindingForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * operand = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                                                        const GALGAS_string & inOperand1,
                                                                                                                                        const GALGAS_string & inOperand2,
                                                                                                                                        const GALGAS__32_stringlist & inOperand3
                                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                       const GALGAS_string & in_mColumnIdentifier,
                                                                                       const GALGAS_string & in_mRequiredCellClass,
                                                                                       const GALGAS_string & in_mObservableAttributeName,
                                                                                       const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (in_mColumnIdentifier,
                                                                                    in_mRequiredCellClass,
                                                                                    in_mObservableAttributeName,
                                                                                    in_mOutletBindingOptionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                                                 const GALGAS_string & inOperand1,
                                                                                 const GALGAS_string & inOperand2,
                                                                                 const GALGAS__32_stringlist & inOperand3
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                                                    const GALGAS_string inOperand1,
                                                                                    const GALGAS_string inOperand2,
                                                                                    const GALGAS__32_stringlist inOperand3,
                                                                                    const GALGAS_uint inInsertionIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                                                    GALGAS_string & outOperand1,
                                                                                    GALGAS_string & outOperand2,
                                                                                    GALGAS__32_stringlist & outOperand3,
                                                                                    const GALGAS_uint inRemoveIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
      outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
      outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
      outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
      outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                                               GALGAS_string & outOperand1,
                                                                               GALGAS_string & outOperand2,
                                                                               GALGAS__32_stringlist & outOperand3,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                                              GALGAS_string & outOperand1,
                                                                              GALGAS_string & outOperand2,
                                                                              GALGAS__32_stringlist & outOperand3,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_first (GALGAS_string & outOperand0,
                                                                          GALGAS_string & outOperand1,
                                                                          GALGAS_string & outOperand2,
                                                                          GALGAS__32_stringlist & outOperand3,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_last (GALGAS_string & outOperand0,
                                                                         GALGAS_string & outOperand1,
                                                                         GALGAS_string & outOperand2,
                                                                         GALGAS__32_stringlist & outOperand3,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::operator_concat (const GALGAS_columnBindingForTableValueBindingForGeneration & inOperand
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::add_operation (const GALGAS_columnBindingForTableValueBindingForGeneration & inOperand,
                                                                                                                            C_Compiler * /* inCompiler */
                                                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::dotAssign_operation (const GALGAS_columnBindingForTableValueBindingForGeneration inOperand
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mColumnIdentifierAtIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mColumnIdentifier ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mRequiredCellClassAtIndex (const GALGAS_uint & inIndex,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mRequiredCellClass ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mObservableAttributeNameAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration::reader_mOutletBindingOptionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_columnBindingForTableValueBindingForGeneration::cEnumerator_columnBindingForTableValueBindingForGeneration (const GALGAS_columnBindingForTableValueBindingForGeneration & inEnumeratedObject,
                                                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element cEnumerator_columnBindingForTableValueBindingForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mColumnIdentifier (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mColumnIdentifier ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mRequiredCellClass (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mRequiredCellClass ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mObservableAttributeName (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mObservableAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_columnBindingForTableValueBindingForGeneration::current_mOutletBindingOptionList (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mOutletBindingOptionList ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//            @columnBindingForTableValueBindingForGeneration type             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ("columnBindingForTableValueBindingForGeneration",
                                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration * p = (const GALGAS_columnBindingForTableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("columnBindingForTableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_protocolMap::cMapElement_protocolMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_bool & in_mIsPredefined
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsPredefined (in_mIsPredefined) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_protocolMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsPredefined.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_protocolMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_protocolMap (mAttribute_lkey, mAttribute_mIsPredefined COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_protocolMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsPredefined" ":" ;
  mAttribute_mIsPredefined.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_protocolMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_protocolMap * operand = (cMapElement_protocolMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsPredefined.objectCompare (operand->mAttribute_mIsPredefined) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap::GALGAS_protocolMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap::GALGAS_protocolMap (const GALGAS_protocolMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap & GALGAS_protocolMap::operator = (const GALGAS_protocolMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::constructor_mapWithMapToOverride (const GALGAS_protocolMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_protocolMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolMap::addAssign_operation (const GALGAS_lstring & inKey,
                                              const GALGAS_bool & inArgument0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_protocolMap * p = NULL ;
  macroMyNew (p, cMapElement_protocolMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@protocolMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_bool inArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_protocolMap * p = NULL ;
  macroMyNew (p, cMapElement_protocolMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' protocol is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_protocolMap_searchKey = "the '%K' protocol is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_protocolMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_bool & outArgument0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_protocolMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_protocolMap) ;
    outArgument0 = p->mAttribute_mIsPredefined ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_protocolMap::reader_mIsPredefinedForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_protocolMap) ;
    result = p->mAttribute_mIsPredefined ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolMap::modifier_setMIsPredefinedForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_protocolMap * p = (cMapElement_protocolMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_protocolMap) ;
    p->mAttribute_mIsPredefined = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_protocolMap * GALGAS_protocolMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_protocolMap * result = (cMapElement_protocolMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_protocolMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_protocolMap::cEnumerator_protocolMap (const GALGAS_protocolMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element cEnumerator_protocolMap::current (LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_protocolMap) ;
  return GALGAS_protocolMap_2D_element (p->mAttribute_lkey, p->mAttribute_mIsPredefined) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_protocolMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_protocolMap::current_mIsPredefined (LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_protocolMap) ;
  return p->mAttribute_mIsPredefined ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @protocolMap type                              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolMap ("protocolMap",
                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  const GALGAS_protocolMap * p = (const GALGAS_protocolMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("protocolMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                  Class for element of '@protocolList' list                  *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_protocolList : public cCollectionElement {
  public : GALGAS_protocolList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_protocolList (const GALGAS_bool & in_mNeedsInclusionInHeader,
                                            const GALGAS_string & in_mProtocolName
                                            COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_protocolList::cCollectionElement_protocolList (const GALGAS_bool & in_mNeedsInclusionInHeader,
                                                                  const GALGAS_string & in_mProtocolName
                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mNeedsInclusionInHeader, in_mProtocolName) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_protocolList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_protocolList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_protocolList (mObject.mAttribute_mNeedsInclusionInHeader, mObject.mAttribute_mProtocolName COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_protocolList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mNeedsInclusionInHeader" ":" ;
  mObject.mAttribute_mNeedsInclusionInHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mProtocolName" ":" ;
  mObject.mAttribute_mProtocolName.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_protocolList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_protocolList * operand = (cCollectionElement_protocolList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_protocolList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList::GALGAS_protocolList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList::GALGAS_protocolList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_protocolList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::constructor_listWithValue (const GALGAS_bool & inOperand0,
                                                                    const GALGAS_string & inOperand1
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_protocolList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_protocolList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                     const GALGAS_bool & in_mNeedsInclusionInHeader,
                                                     const GALGAS_string & in_mProtocolName
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement_protocolList * p = NULL ;
  macroMyNew (p, cCollectionElement_protocolList (in_mNeedsInclusionInHeader,
                                                  in_mProtocolName COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::addAssign_operation (const GALGAS_bool & inOperand0,
                                               const GALGAS_string & inOperand1
                                               COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_protocolList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::modifier_insertAtIndex (const GALGAS_bool inOperand0,
                                                  const GALGAS_string inOperand1,
                                                  const GALGAS_uint inInsertionIndex,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_protocolList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::modifier_removeAtIndex (GALGAS_bool & outOperand0,
                                                  GALGAS_string & outOperand1,
                                                  const GALGAS_uint inRemoveIndex,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_protocolList) ;
      outOperand0 = p->mObject.mAttribute_mNeedsInclusionInHeader ;
      outOperand1 = p->mObject.mAttribute_mProtocolName ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::modifier_popFirst (GALGAS_bool & outOperand0,
                                             GALGAS_string & outOperand1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_protocolList) ;
    outOperand0 = p->mObject.mAttribute_mNeedsInclusionInHeader ;
    outOperand1 = p->mObject.mAttribute_mProtocolName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::modifier_popLast (GALGAS_bool & outOperand0,
                                            GALGAS_string & outOperand1,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_protocolList) ;
    outOperand0 = p->mObject.mAttribute_mNeedsInclusionInHeader ;
    outOperand1 = p->mObject.mAttribute_mProtocolName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::method_first (GALGAS_bool & outOperand0,
                                        GALGAS_string & outOperand1,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_protocolList) ;
    outOperand0 = p->mObject.mAttribute_mNeedsInclusionInHeader ;
    outOperand1 = p->mObject.mAttribute_mProtocolName ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::method_last (GALGAS_bool & outOperand0,
                                       GALGAS_string & outOperand1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_protocolList) ;
    outOperand0 = p->mObject.mAttribute_mNeedsInclusionInHeader ;
    outOperand1 = p->mObject.mAttribute_mProtocolName ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::operator_concat (const GALGAS_protocolList & inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_protocolList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::add_operation (const GALGAS_protocolList & inOperand,
                                                        C_Compiler * /* inCompiler */
                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_protocolList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_protocolList result = GALGAS_protocolList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_protocolList result = GALGAS_protocolList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList::dotAssign_operation (const GALGAS_protocolList inOperand
                                               COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_protocolList::reader_mNeedsInclusionInHeaderAtIndex (const GALGAS_uint & inIndex,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_protocolList) ;
    result = p->mObject.mAttribute_mNeedsInclusionInHeader ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_protocolList::reader_mProtocolNameAtIndex (const GALGAS_uint & inIndex,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_protocolList * p = (cCollectionElement_protocolList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_protocolList) ;
    result = p->mObject.mAttribute_mProtocolName ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_protocolList::cEnumerator_protocolList (const GALGAS_protocolList & inEnumeratedObject,
                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element cEnumerator_protocolList::current (LOCATION_ARGS) const {
  const cCollectionElement_protocolList * p = (const cCollectionElement_protocolList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_protocolList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_protocolList::current_mNeedsInclusionInHeader (LOCATION_ARGS) const {
  const cCollectionElement_protocolList * p = (const cCollectionElement_protocolList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_protocolList) ;
  return p->mObject.mAttribute_mNeedsInclusionInHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_protocolList::current_mProtocolName (LOCATION_ARGS) const {
  const cCollectionElement_protocolList * p = (const cCollectionElement_protocolList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_protocolList) ;
  return p->mObject.mAttribute_mProtocolName ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                             @protocolList type                              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolList ("protocolList",
                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_protocolList::extractObject (const GALGAS_object & inObject,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_protocolList result ;
  const GALGAS_protocolList * p = (const GALGAS_protocolList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("protocolList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_outletClassMap::cMapElement_outletClassMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_generationKind & in_mGenerationKind,
                                                        const GALGAS_string & in_mSuperClassName,
                                                        const GALGAS_protocolList & in_mAdoptedProtocolList,
                                                        const GALGAS_bool & in_mImplementsDeallocProtocol,
                                                        const GALGAS_outletClassBindingMap & in_mAllBindingMap,
                                                        const GALGAS_outletClassBindingMap & in_mCurrentBindingMap,
                                                        const GALGAS_bool & in_mHasTableValueBinding
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerationKind (in_mGenerationKind),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mAdoptedProtocolList (in_mAdoptedProtocolList),
mAttribute_mImplementsDeallocProtocol (in_mImplementsDeallocProtocol),
mAttribute_mAllBindingMap (in_mAllBindingMap),
mAttribute_mCurrentBindingMap (in_mCurrentBindingMap),
mAttribute_mHasTableValueBinding (in_mHasTableValueBinding) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_outletClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mAdoptedProtocolList.isValid () && mAttribute_mImplementsDeallocProtocol.isValid () && mAttribute_mAllBindingMap.isValid () && mAttribute_mCurrentBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassMap (mAttribute_lkey, mAttribute_mGenerationKind, mAttribute_mSuperClassName, mAttribute_mAdoptedProtocolList, mAttribute_mImplementsDeallocProtocol, mAttribute_mAllBindingMap, mAttribute_mCurrentBindingMap, mAttribute_mHasTableValueBinding COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_outletClassMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerationKind" ":" ;
  mAttribute_mGenerationKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAdoptedProtocolList" ":" ;
  mAttribute_mAdoptedProtocolList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementsDeallocProtocol" ":" ;
  mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllBindingMap" ":" ;
  mAttribute_mAllBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentBindingMap" ":" ;
  mAttribute_mCurrentBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHasTableValueBinding" ":" ;
  mAttribute_mHasTableValueBinding.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassMap * operand = (cMapElement_outletClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationKind.objectCompare (operand->mAttribute_mGenerationKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (operand->mAttribute_mAdoptedProtocolList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (operand->mAttribute_mImplementsDeallocProtocol) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllBindingMap.objectCompare (operand->mAttribute_mAllBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentBindingMap.objectCompare (operand->mAttribute_mCurrentBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasTableValueBinding.objectCompare (operand->mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (const GALGAS_outletClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap & GALGAS_outletClassMap::operator = (const GALGAS_outletClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_mapWithMapToOverride (const GALGAS_outletClassMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_generationKind & inArgument0,
                                                 const GALGAS_string & inArgument1,
                                                 const GALGAS_protocolList & inArgument2,
                                                 const GALGAS_bool & inArgument3,
                                                 const GALGAS_outletClassBindingMap & inArgument4,
                                                 const GALGAS_outletClassBindingMap & inArgument5,
                                                 const GALGAS_bool & inArgument6,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@outletClassMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_generationKind inArgument0,
                                                GALGAS_string inArgument1,
                                                GALGAS_protocolList inArgument2,
                                                GALGAS_bool inArgument3,
                                                GALGAS_outletClassBindingMap inArgument4,
                                                GALGAS_outletClassBindingMap inArgument5,
                                                GALGAS_bool inArgument6,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' outlet class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassMap_searchKey = "the '%K' outlet class is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_generationKind & outArgument0,
                                              GALGAS_string & outArgument1,
                                              GALGAS_protocolList & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              GALGAS_outletClassBindingMap & outArgument4,
                                              GALGAS_outletClassBindingMap & outArgument5,
                                              GALGAS_bool & outArgument6,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_outletClassMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    outArgument0 = p->mAttribute_mGenerationKind ;
    outArgument1 = p->mAttribute_mSuperClassName ;
    outArgument2 = p->mAttribute_mAdoptedProtocolList ;
    outArgument3 = p->mAttribute_mImplementsDeallocProtocol ;
    outArgument4 = p->mAttribute_mAllBindingMap ;
    outArgument5 = p->mAttribute_mCurrentBindingMap ;
    outArgument6 = p->mAttribute_mHasTableValueBinding ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_outletClassMap::reader_mGenerationKindForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_generationKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mGenerationKind ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_outletClassMap::reader_mAdoptedProtocolListForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_protocolList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mAdoptedProtocolList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mImplementsDeallocProtocolForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mImplementsDeallocProtocol ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap::reader_mAllBindingMapForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mAllBindingMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap::reader_mCurrentBindingMapForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mCurrentBindingMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mHasTableValueBindingForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    result = p->mAttribute_mHasTableValueBinding ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMGenerationKindForKey (GALGAS_generationKind inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mGenerationKind = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMAdoptedProtocolListForKey (GALGAS_protocolList inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mAdoptedProtocolList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMImplementsDeallocProtocolForKey (GALGAS_bool inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mImplementsDeallocProtocol = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMAllBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mAllBindingMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMCurrentBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mCurrentBindingMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMHasTableValueBindingForKey (GALGAS_bool inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mHasTableValueBinding = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_outletClassMap::cEnumerator_outletClassMap (const GALGAS_outletClassMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element cEnumerator_outletClassMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return GALGAS_outletClassMap_2D_element (p->mAttribute_lkey, p->mAttribute_mGenerationKind, p->mAttribute_mSuperClassName, p->mAttribute_mAdoptedProtocolList, p->mAttribute_mImplementsDeallocProtocol, p->mAttribute_mAllBindingMap, p->mAttribute_mCurrentBindingMap, p->mAttribute_mHasTableValueBinding) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationKind cEnumerator_outletClassMap::current_mGenerationKind (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mGenerationKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletClassMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mSuperClassName ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList cEnumerator_outletClassMap::current_mAdoptedProtocolList (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mAdoptedProtocolList ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mImplementsDeallocProtocol (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mImplementsDeallocProtocol ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_outletClassMap::current_mAllBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mAllBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_outletClassMap::current_mCurrentBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mCurrentBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mHasTableValueBinding (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_outletClassMap) ;
  return p->mAttribute_mHasTableValueBinding ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @outletClassMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap ("outletClassMap",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  const GALGAS_outletClassMap * p = (const GALGAS_outletClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_controllerClassMap::cMapElement_controllerClassMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_controllerKind & in_mControllerKind,
                                                                const GALGAS_generationKind & in_mGenerationKind,
                                                                const GALGAS_outletClassBindingMap & in_mBindingMap,
                                                                const GALGAS_actionMap & in_mActionMap,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                                const GALGAS_outletClassBindingOptionMap & in_mControlledObjectAvailableBindingOptionMap
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mControllerKind (in_mControllerKind),
mAttribute_mGenerationKind (in_mGenerationKind),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mActionMap (in_mActionMap),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mControlledObjectAvailableBindingOptionMap (in_mControlledObjectAvailableBindingOptionMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_controllerClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerKind.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mControlledObjectAvailableBindingOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_controllerClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerClassMap (mAttribute_lkey, mAttribute_mControllerKind, mAttribute_mGenerationKind, mAttribute_mBindingMap, mAttribute_mActionMap, mAttribute_mObservablePropertyMap, mAttribute_mControlledObjectAvailableBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_controllerClassMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerKind" ":" ;
  mAttribute_mControllerKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerationKind" ":" ;
  mAttribute_mGenerationKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControlledObjectAvailableBindingOptionMap" ":" ;
  mAttribute_mControlledObjectAvailableBindingOptionMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerClassMap * operand = (cMapElement_controllerClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerKind.objectCompare (operand->mAttribute_mControllerKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationKind.objectCompare (operand->mAttribute_mGenerationKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControlledObjectAvailableBindingOptionMap.objectCompare (operand->mAttribute_mControlledObjectAvailableBindingOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (const GALGAS_controllerClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap & GALGAS_controllerClassMap::operator = (const GALGAS_controllerClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_mapWithMapToOverride (const GALGAS_controllerClassMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_controllerClassMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                     const GALGAS_controllerKind & inArgument0,
                                                     const GALGAS_generationKind & inArgument1,
                                                     const GALGAS_outletClassBindingMap & inArgument2,
                                                     const GALGAS_actionMap & inArgument3,
                                                     const GALGAS_observablePropertyMap & inArgument4,
                                                     const GALGAS_outletClassBindingOptionMap & inArgument5,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_controllerClassMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@controllerClassMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_controllerKind inArgument0,
                                                    GALGAS_generationKind inArgument1,
                                                    GALGAS_outletClassBindingMap inArgument2,
                                                    GALGAS_actionMap inArgument3,
                                                    GALGAS_observablePropertyMap inArgument4,
                                                    GALGAS_outletClassBindingOptionMap inArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_controllerClassMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerClassMap_searchKey = "the '%K' controller class is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_controllerKind & outArgument0,
                                                  GALGAS_generationKind & outArgument1,
                                                  GALGAS_outletClassBindingMap & outArgument2,
                                                  GALGAS_actionMap & outArgument3,
                                                  GALGAS_observablePropertyMap & outArgument4,
                                                  GALGAS_outletClassBindingOptionMap & outArgument5,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_controllerClassMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    outArgument0 = p->mAttribute_mControllerKind ;
    outArgument1 = p->mAttribute_mGenerationKind ;
    outArgument2 = p->mAttribute_mBindingMap ;
    outArgument3 = p->mAttribute_mActionMap ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mControlledObjectAvailableBindingOptionMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_controllerKind GALGAS_controllerClassMap::reader_mControllerKindForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_controllerKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    result = p->mAttribute_mControllerKind ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_controllerClassMap::reader_mGenerationKindForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_generationKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    result = p->mAttribute_mGenerationKind ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_controllerClassMap::reader_mControlledObjectAvailableBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                                       C_Compiler * inCompiler
                                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_outletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    result = p->mAttribute_mControlledObjectAvailableBindingOptionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMControllerKindForKey (GALGAS_controllerKind inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mControllerKind = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMGenerationKindForKey (GALGAS_generationKind inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mGenerationKind = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMControlledObjectAvailableBindingOptionMapForKey (GALGAS_outletClassBindingOptionMap inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mControlledObjectAvailableBindingOptionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                               const GALGAS_string & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_controllerClassMap::cEnumerator_controllerClassMap (const GALGAS_controllerClassMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element cEnumerator_controllerClassMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return GALGAS_controllerClassMap_2D_element (p->mAttribute_lkey, p->mAttribute_mControllerKind, p->mAttribute_mGenerationKind, p->mAttribute_mBindingMap, p->mAttribute_mActionMap, p->mAttribute_mObservablePropertyMap, p->mAttribute_mControlledObjectAvailableBindingOptionMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerKind cEnumerator_controllerClassMap::current_mControllerKind (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return p->mAttribute_mControllerKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationKind cEnumerator_controllerClassMap::current_mGenerationKind (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return p->mAttribute_mGenerationKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_controllerClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return p->mAttribute_mBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerClassMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return p->mAttribute_mActionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_controllerClassMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap cEnumerator_controllerClassMap::current_mControlledObjectAvailableBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerClassMap) ;
  return p->mAttribute_mControlledObjectAvailableBindingOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @controllerClassMap type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap ("controllerClassMap",
                                           NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  const GALGAS_controllerClassMap * p = (const GALGAS_controllerClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_relationshipMap::cMapElement_relationshipMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_bool & in_mIsToMany,
                                                          const GALGAS_lstring & in_mDestinationEntityName,
                                                          const GALGAS_lstring & in_mInverseRelationshipName,
                                                          const GALGAS_bool & in_mInverseIsToMany,
                                                          const GALGAS_deleteRuleEnum & in_mDeleteRule
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsToMany (in_mIsToMany),
mAttribute_mDestinationEntityName (in_mDestinationEntityName),
mAttribute_mInverseRelationshipName (in_mInverseRelationshipName),
mAttribute_mInverseIsToMany (in_mInverseIsToMany),
mAttribute_mDeleteRule (in_mDeleteRule) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_relationshipMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mInverseIsToMany.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_relationshipMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_relationshipMap (mAttribute_lkey, mAttribute_mIsToMany, mAttribute_mDestinationEntityName, mAttribute_mInverseRelationshipName, mAttribute_mInverseIsToMany, mAttribute_mDeleteRule COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_relationshipMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsToMany" ":" ;
  mAttribute_mIsToMany.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDestinationEntityName" ":" ;
  mAttribute_mDestinationEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInverseRelationshipName" ":" ;
  mAttribute_mInverseRelationshipName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInverseIsToMany" ":" ;
  mAttribute_mInverseIsToMany.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeleteRule" ":" ;
  mAttribute_mDeleteRule.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_relationshipMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_relationshipMap * operand = (cMapElement_relationshipMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsToMany.objectCompare (operand->mAttribute_mIsToMany) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDestinationEntityName.objectCompare (operand->mAttribute_mDestinationEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInverseRelationshipName.objectCompare (operand->mAttribute_mInverseRelationshipName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInverseIsToMany.objectCompare (operand->mAttribute_mInverseIsToMany) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDeleteRule.objectCompare (operand->mAttribute_mDeleteRule) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (const GALGAS_relationshipMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap & GALGAS_relationshipMap::operator = (const GALGAS_relationshipMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_mapWithMapToOverride (const GALGAS_relationshipMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_relationshipMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                  const GALGAS_bool & inArgument0,
                                                  const GALGAS_lstring & inArgument1,
                                                  const GALGAS_lstring & inArgument2,
                                                  const GALGAS_bool & inArgument3,
                                                  const GALGAS_deleteRuleEnum & inArgument4,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_relationshipMap * p = NULL ;
  macroMyNew (p, cMapElement_relationshipMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@relationshipMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_bool inArgument0,
                                                 GALGAS_lstring inArgument1,
                                                 GALGAS_lstring inArgument2,
                                                 GALGAS_bool inArgument3,
                                                 GALGAS_deleteRuleEnum inArgument4,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_relationshipMap * p = NULL ;
  macroMyNew (p, cMapElement_relationshipMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' relationship is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_relationshipMap_searchKey = "the '%K' relationship is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_bool & outArgument0,
                                               GALGAS_lstring & outArgument1,
                                               GALGAS_lstring & outArgument2,
                                               GALGAS_bool & outArgument3,
                                               GALGAS_deleteRuleEnum & outArgument4,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_relationshipMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    outArgument0 = p->mAttribute_mIsToMany ;
    outArgument1 = p->mAttribute_mDestinationEntityName ;
    outArgument2 = p->mAttribute_mInverseRelationshipName ;
    outArgument3 = p->mAttribute_mInverseIsToMany ;
    outArgument4 = p->mAttribute_mDeleteRule ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap::reader_mIsToManyForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    result = p->mAttribute_mIsToMany ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mDestinationEntityNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    result = p->mAttribute_mDestinationEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mInverseRelationshipNameForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    result = p->mAttribute_mInverseRelationshipName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap::reader_mInverseIsToManyForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    result = p->mAttribute_mInverseIsToMany ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap::reader_mDeleteRuleForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_deleteRuleEnum result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    result = p->mAttribute_mDeleteRule ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMIsToManyForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mIsToMany = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDestinationEntityNameForKey (GALGAS_lstring inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDestinationEntityName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMInverseRelationshipNameForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mInverseRelationshipName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMInverseIsToManyForKey (GALGAS_bool inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mInverseIsToMany = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDeleteRuleForKey (GALGAS_deleteRuleEnum inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDeleteRule = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                         const GALGAS_string & inKey
                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_relationshipMap::cEnumerator_relationshipMap (const GALGAS_relationshipMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element cEnumerator_relationshipMap::current (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_relationshipMap) ;
  return GALGAS_relationshipMap_2D_element (p->mAttribute_lkey, p->mAttribute_mIsToMany, p->mAttribute_mDestinationEntityName, p->mAttribute_mInverseRelationshipName, p->mAttribute_mInverseIsToMany, p->mAttribute_mDeleteRule) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_relationshipMap::current_mIsToMany (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_relationshipMap) ;
  return p->mAttribute_mIsToMany ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mDestinationEntityName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_relationshipMap) ;
  return p->mAttribute_mDestinationEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mInverseRelationshipName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_relationshipMap) ;
  return p->mAttribute_mInverseRelationshipName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_relationshipMap::current_mInverseIsToMany (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_relationshipMap) ;
  return p->mAttribute_mInverseIsToMany ;
}

//-----------------------------------------------------------------------------*

GALGAS_deleteRuleEnum cEnumerator_relationshipMap::current_mDeleteRule (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_relationshipMap) ;
  return p->mAttribute_mDeleteRule ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @relationshipMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap ("relationshipMap",
                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  const GALGAS_relationshipMap * p = (const GALGAS_relationshipMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("relationshipMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_propertyMap::cMapElement_propertyMap (const GALGAS_lstring & inKey
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_propertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_propertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_propertyMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_propertyMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_propertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_propertyMap * operand = (cMapElement_propertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (const GALGAS_propertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap & GALGAS_propertyMap::operator = (const GALGAS_propertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_mapWithMapToOverride (const GALGAS_propertyMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_propertyMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyMap::addAssign_operation (const GALGAS_lstring & inKey,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_propertyMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@propertyMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_propertyMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' property (attribute, transient or relationship)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

cMapElement_propertyMap * GALGAS_propertyMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_propertyMap * result = (cMapElement_propertyMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_propertyMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_propertyMap::cEnumerator_propertyMap (const GALGAS_propertyMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element cEnumerator_propertyMap::current (LOCATION_ARGS) const {
  const cMapElement_propertyMap * p = (const cMapElement_propertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_propertyMap) ;
  return GALGAS_propertyMap_2D_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_propertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @propertyMap type                              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap ("propertyMap",
                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  const GALGAS_propertyMap * p = (const GALGAS_propertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//         Class for element of '@attributeListForImplementation' list         *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_attributeListForImplementation : public cCollectionElement {
  public : GALGAS_attributeListForImplementation_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_attributeListForImplementation (const GALGAS_ebType & in_mType,
                                                              const GALGAS_string & in_mAttributeName,
                                                              const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                              const GALGAS_string & in_mDirectOCDefaultValue,
                                                              const GALGAS_string & in_mDirectSwiftDefaultValue
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_attributeListForImplementation::cCollectionElement_attributeListForImplementation (const GALGAS_ebType & in_mType,
                                                                                                      const GALGAS_string & in_mAttributeName,
                                                                                                      const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                                                                      const GALGAS_string & in_mDirectOCDefaultValue,
                                                                                                      const GALGAS_string & in_mDirectSwiftDefaultValue
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mAttributeName, in_mDefaultValueAsObjectiveCObject, in_mDirectOCDefaultValue, in_mDirectSwiftDefaultValue) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_attributeListForImplementation::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_attributeListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_attributeListForImplementation (mObject.mAttribute_mType, mObject.mAttribute_mAttributeName, mObject.mAttribute_mDefaultValueAsObjectiveCObject, mObject.mAttribute_mDirectOCDefaultValue, mObject.mAttribute_mDirectSwiftDefaultValue COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_attributeListForImplementation::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeName" ":" ;
  mObject.mAttribute_mAttributeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefaultValueAsObjectiveCObject" ":" ;
  mObject.mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDirectOCDefaultValue" ":" ;
  mObject.mAttribute_mDirectOCDefaultValue.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDirectSwiftDefaultValue" ":" ;
  mObject.mAttribute_mDirectSwiftDefaultValue.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_attributeListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_attributeListForImplementation * operand = (cCollectionElement_attributeListForImplementation *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_attributeListForImplementation) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation::GALGAS_attributeListForImplementation (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation::GALGAS_attributeListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::constructor_listWithValue (const GALGAS_ebType & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_string & inOperand2,
                                                                                                        const GALGAS_string & inOperand3,
                                                                                                        const GALGAS_string & inOperand4
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_attributeListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_ebType & in_mType,
                                                                       const GALGAS_string & in_mAttributeName,
                                                                       const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                                       const GALGAS_string & in_mDirectOCDefaultValue,
                                                                       const GALGAS_string & in_mDirectSwiftDefaultValue
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_attributeListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_attributeListForImplementation (in_mType,
                                                                    in_mAttributeName,
                                                                    in_mDefaultValueAsObjectiveCObject,
                                                                    in_mDirectOCDefaultValue,
                                                                    in_mDirectSwiftDefaultValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::addAssign_operation (const GALGAS_ebType & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_string & inOperand2,
                                                                 const GALGAS_string & inOperand3,
                                                                 const GALGAS_string & inOperand4
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_attributeListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_insertAtIndex (const GALGAS_ebType inOperand0,
                                                                    const GALGAS_string inOperand1,
                                                                    const GALGAS_string inOperand2,
                                                                    const GALGAS_string inOperand3,
                                                                    const GALGAS_string inOperand4,
                                                                    const GALGAS_uint inInsertionIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_attributeListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_removeAtIndex (GALGAS_ebType & outOperand0,
                                                                    GALGAS_string & outOperand1,
                                                                    GALGAS_string & outOperand2,
                                                                    GALGAS_string & outOperand3,
                                                                    GALGAS_string & outOperand4,
                                                                    const GALGAS_uint inRemoveIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
      outOperand4.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
      outOperand0 = p->mObject.mAttribute_mType ;
      outOperand1 = p->mObject.mAttribute_mAttributeName ;
      outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
      outOperand3 = p->mObject.mAttribute_mDirectOCDefaultValue ;
      outOperand4 = p->mObject.mAttribute_mDirectSwiftDefaultValue ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_popFirst (GALGAS_ebType & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_string & outOperand2,
                                                               GALGAS_string & outOperand3,
                                                               GALGAS_string & outOperand4,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectOCDefaultValue ;
    outOperand4 = p->mObject.mAttribute_mDirectSwiftDefaultValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_popLast (GALGAS_ebType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_string & outOperand2,
                                                              GALGAS_string & outOperand3,
                                                              GALGAS_string & outOperand4,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectOCDefaultValue ;
    outOperand4 = p->mObject.mAttribute_mDirectSwiftDefaultValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::method_first (GALGAS_ebType & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_string & outOperand2,
                                                          GALGAS_string & outOperand3,
                                                          GALGAS_string & outOperand4,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectOCDefaultValue ;
    outOperand4 = p->mObject.mAttribute_mDirectSwiftDefaultValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::method_last (GALGAS_ebType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_string & outOperand2,
                                                         GALGAS_string & outOperand3,
                                                         GALGAS_string & outOperand4,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectOCDefaultValue ;
    outOperand4 = p->mObject.mAttribute_mDirectSwiftDefaultValue ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::operator_concat (const GALGAS_attributeListForImplementation & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::add_operation (const GALGAS_attributeListForImplementation & inOperand,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result = GALGAS_attributeListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result = GALGAS_attributeListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::dotAssign_operation (const GALGAS_attributeListForImplementation inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_attributeListForImplementation::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mAttributeNameAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDefaultValueAsObjectiveCObjectAtIndex (const GALGAS_uint & inIndex,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDirectOCDefaultValueAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDirectOCDefaultValue ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDirectSwiftDefaultValueAtIndex (const GALGAS_uint & inIndex,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDirectSwiftDefaultValue ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_attributeListForImplementation::cEnumerator_attributeListForImplementation (const GALGAS_attributeListForImplementation & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element cEnumerator_attributeListForImplementation::current (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_attributeListForImplementation::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mAttributeName (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDefaultValueAsObjectiveCObject (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDirectOCDefaultValue (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDirectOCDefaultValue ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDirectSwiftDefaultValue (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDirectSwiftDefaultValue ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    @attributeListForImplementation type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeListForImplementation ("attributeListForImplementation",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeListForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  const GALGAS_attributeListForImplementation * p = (const GALGAS_attributeListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//         Class for element of '@outletBindingListForGeneration' list         *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_outletBindingListForGeneration : public cCollectionElement {
  public : GALGAS_outletBindingListForGeneration_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_outletBindingListForGeneration (const GALGAS_abstractBindingForGeneration & in_mBinding
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_outletBindingListForGeneration::cCollectionElement_outletBindingListForGeneration (const GALGAS_abstractBindingForGeneration & in_mBinding
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBinding) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_outletBindingListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletBindingListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletBindingListForGeneration (mObject.mAttribute_mBinding COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_outletBindingListForGeneration::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBinding" ":" ;
  mObject.mAttribute_mBinding.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletBindingListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletBindingListForGeneration * operand = (cCollectionElement_outletBindingListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_outletBindingListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_listWithValue (const GALGAS_abstractBindingForGeneration & inOperand0
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_abstractBindingForGeneration & in_mBinding
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_outletBindingListForGeneration (in_mBinding COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::addAssign_operation (const GALGAS_abstractBindingForGeneration & inOperand0
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_insertAtIndex (const GALGAS_abstractBindingForGeneration inOperand0,
                                                                    const GALGAS_uint inInsertionIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_removeAtIndex (GALGAS_abstractBindingForGeneration & outOperand0,
                                                                    const GALGAS_uint inRemoveIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
      outOperand0 = p->mObject.mAttribute_mBinding ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popFirst (GALGAS_abstractBindingForGeneration & outOperand0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popLast (GALGAS_abstractBindingForGeneration & outOperand0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_first (GALGAS_abstractBindingForGeneration & outOperand0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_last (GALGAS_abstractBindingForGeneration & outOperand0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::operator_concat (const GALGAS_outletBindingListForGeneration & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::add_operation (const GALGAS_outletBindingListForGeneration & inOperand,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::dotAssign_operation (const GALGAS_outletBindingListForGeneration inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_outletBindingListForGeneration::reader_mBindingAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  GALGAS_abstractBindingForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    result = p->mObject.mAttribute_mBinding ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_outletBindingListForGeneration::cEnumerator_outletBindingListForGeneration (const GALGAS_outletBindingListForGeneration & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2D_element cEnumerator_outletBindingListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration cEnumerator_outletBindingListForGeneration::current_mBinding (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
  return p->mObject.mAttribute_mBinding ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    @outletBindingListForGeneration type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration ("outletBindingListForGeneration",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  const GALGAS_outletBindingListForGeneration * p = (const GALGAS_outletBindingListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletBindingListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//              Class for element of '@outletGenerationList' list              *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_outletGenerationList : public cCollectionElement {
  public : GALGAS_outletGenerationList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                    const GALGAS_string & in_mOutletName,
                                                    const GALGAS_outletBindingListForGeneration & in_mOutletBindingList,
                                                    const GALGAS_bool & in_mImplementsDeallocProtocol
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_outletGenerationList::cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                                                  const GALGAS_string & in_mOutletName,
                                                                                  const GALGAS_outletBindingListForGeneration & in_mOutletBindingList,
                                                                                  const GALGAS_bool & in_mImplementsDeallocProtocol
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOutletType, in_mOutletName, in_mOutletBindingList, in_mImplementsDeallocProtocol) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_outletGenerationList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletGenerationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletGenerationList (mObject.mAttribute_mOutletType, mObject.mAttribute_mOutletName, mObject.mAttribute_mOutletBindingList, mObject.mAttribute_mImplementsDeallocProtocol COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_outletGenerationList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletType" ":" ;
  mObject.mAttribute_mOutletType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletName" ":" ;
  mObject.mAttribute_mOutletName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingList" ":" ;
  mObject.mAttribute_mOutletBindingList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementsDeallocProtocol" ":" ;
  mObject.mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletGenerationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletGenerationList * operand = (cCollectionElement_outletGenerationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_outletGenerationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                    const GALGAS_string & inOperand1,
                                                                                    const GALGAS_outletBindingListForGeneration & inOperand2,
                                                                                    const GALGAS_bool & inOperand3
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletGenerationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_string & in_mOutletType,
                                                             const GALGAS_string & in_mOutletName,
                                                             const GALGAS_outletBindingListForGeneration & in_mOutletBindingList,
                                                             const GALGAS_bool & in_mImplementsDeallocProtocol
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = NULL ;
  macroMyNew (p, cCollectionElement_outletGenerationList (in_mOutletType,
                                                          in_mOutletName,
                                                          in_mOutletBindingList,
                                                          in_mImplementsDeallocProtocol COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                       const GALGAS_string & inOperand1,
                                                       const GALGAS_outletBindingListForGeneration & inOperand2,
                                                       const GALGAS_bool & inOperand3
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_insertAtIndex (const GALGAS_string inOperand0,
                                                          const GALGAS_string inOperand1,
                                                          const GALGAS_outletBindingListForGeneration inOperand2,
                                                          const GALGAS_bool inOperand3,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_removeAtIndex (GALGAS_string & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_outletBindingListForGeneration & outOperand2,
                                                          GALGAS_bool & outOperand3,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
      outOperand0 = p->mObject.mAttribute_mOutletType ;
      outOperand1 = p->mObject.mAttribute_mOutletName ;
      outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
      outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     GALGAS_outletBindingListForGeneration & outOperand2,
                                                     GALGAS_bool & outOperand3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    GALGAS_outletBindingListForGeneration & outOperand2,
                                                    GALGAS_bool & outOperand3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_first (GALGAS_string & outOperand0,
                                                GALGAS_string & outOperand1,
                                                GALGAS_outletBindingListForGeneration & outOperand2,
                                                GALGAS_bool & outOperand3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_last (GALGAS_string & outOperand0,
                                               GALGAS_string & outOperand1,
                                               GALGAS_outletBindingListForGeneration & outOperand2,
                                               GALGAS_bool & outOperand3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::operator_concat (const GALGAS_outletGenerationList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::add_operation (const GALGAS_outletGenerationList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList::dotAssign_operation (const GALGAS_outletGenerationList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletTypeAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList::reader_mOutletBindingListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletBindingList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletGenerationList::reader_mImplementsDeallocProtocolAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_outletGenerationList::cEnumerator_outletGenerationList (const GALGAS_outletGenerationList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element cEnumerator_outletGenerationList::current (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletType (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletName (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletName ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_outletGenerationList::current_mOutletBindingList (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletBindingList ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletGenerationList::current_mImplementsDeallocProtocol (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mImplementsDeallocProtocol ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                         @outletGenerationList type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList ("outletGenerationList",
                                             NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  const GALGAS_outletGenerationList * p = (const GALGAS_outletGenerationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletGenerationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_propertyArrayMap::cMapElement_propertyArrayMap (const GALGAS_lstring & inKey,
                                                            const GALGAS_ebType & in_mElementType
                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mElementType (in_mElementType) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_propertyArrayMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mElementType.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_propertyArrayMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_propertyArrayMap (mAttribute_lkey, mAttribute_mElementType COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_propertyArrayMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mElementType" ":" ;
  mAttribute_mElementType.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_propertyArrayMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_propertyArrayMap * operand = (cMapElement_propertyArrayMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mElementType.objectCompare (operand->mAttribute_mElementType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap::GALGAS_propertyArrayMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap::GALGAS_propertyArrayMap (const GALGAS_propertyArrayMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap & GALGAS_propertyArrayMap::operator = (const GALGAS_propertyArrayMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_propertyArrayMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_propertyArrayMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_propertyArrayMap::constructor_mapWithMapToOverride (const GALGAS_propertyArrayMap & inMapToOverride
                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_propertyArrayMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_propertyArrayMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_propertyArrayMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyArrayMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                   const GALGAS_ebType & inArgument0,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) {
  cMapElement_propertyArrayMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyArrayMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@propertyArrayMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyArrayMap::modifier_insertKey (GALGAS_lstring inKey,
                                                  GALGAS_ebType inArgument0,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  cMapElement_propertyArrayMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyArrayMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' array is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_propertyArrayMap_searchKey = "the '%K' array is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_propertyArrayMap::method_searchKey (GALGAS_lstring inKey,
                                                GALGAS_ebType & outArgument0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  const cMapElement_propertyArrayMap * p = (const cMapElement_propertyArrayMap *) performSearch (inKey,
                                                                                                   inCompiler,
                                                                                                   kSearchErrorMessage_propertyArrayMap_searchKey
                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_propertyArrayMap) ;
    outArgument0 = p->mAttribute_mElementType ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_propertyArrayMap::reader_mElementTypeForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_propertyArrayMap * p = (const cMapElement_propertyArrayMap *) attributes ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_propertyArrayMap) ;
    result = p->mAttribute_mElementType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyArrayMap::modifier_setMElementTypeForKey (GALGAS_ebType inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_propertyArrayMap * p = (cMapElement_propertyArrayMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_propertyArrayMap) ;
    p->mAttribute_mElementType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_propertyArrayMap * GALGAS_propertyArrayMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                           const GALGAS_string & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_propertyArrayMap * result = (cMapElement_propertyArrayMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_propertyArrayMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_propertyArrayMap::cEnumerator_propertyArrayMap (const GALGAS_propertyArrayMap & inEnumeratedObject,
                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element cEnumerator_propertyArrayMap::current (LOCATION_ARGS) const {
  const cMapElement_propertyArrayMap * p = (const cMapElement_propertyArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_propertyArrayMap) ;
  return GALGAS_propertyArrayMap_2D_element (p->mAttribute_lkey, p->mAttribute_mElementType) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_propertyArrayMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_propertyArrayMap::current_mElementType (LOCATION_ARGS) const {
  const cMapElement_propertyArrayMap * p = (const cMapElement_propertyArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_propertyArrayMap) ;
  return p->mAttribute_mElementType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @propertyArrayMap type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyArrayMap ("propertyArrayMap",
                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyArrayMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyArrayMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyArrayMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyArrayMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_propertyArrayMap::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_propertyArrayMap result ;
  const GALGAS_propertyArrayMap * p = (const GALGAS_propertyArrayMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyArrayMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyArrayMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_preferencesPropertyArrayMap::cMapElement_preferencesPropertyArrayMap (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_ebType & in_mElementType,
                                                                                  const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mElementType (in_mElementType),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_preferencesPropertyArrayMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mElementType.isValid () && mAttribute_mAttributeListForImplementation.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_preferencesPropertyArrayMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_preferencesPropertyArrayMap (mAttribute_lkey, mAttribute_mElementType, mAttribute_mAttributeListForImplementation COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_preferencesPropertyArrayMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mElementType" ":" ;
  mAttribute_mElementType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_preferencesPropertyArrayMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_preferencesPropertyArrayMap * operand = (cMapElement_preferencesPropertyArrayMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mElementType.objectCompare (operand->mAttribute_mElementType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap::GALGAS_preferencesPropertyArrayMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap::GALGAS_preferencesPropertyArrayMap (const GALGAS_preferencesPropertyArrayMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap & GALGAS_preferencesPropertyArrayMap::operator = (const GALGAS_preferencesPropertyArrayMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap GALGAS_preferencesPropertyArrayMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_preferencesPropertyArrayMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap GALGAS_preferencesPropertyArrayMap::constructor_mapWithMapToOverride (const GALGAS_preferencesPropertyArrayMap & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_preferencesPropertyArrayMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap GALGAS_preferencesPropertyArrayMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_preferencesPropertyArrayMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                              const GALGAS_ebType & inArgument0,
                                                              const GALGAS_attributeListForImplementation & inArgument1,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cMapElement_preferencesPropertyArrayMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesPropertyArrayMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@preferencesPropertyArrayMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_ebType inArgument0,
                                                             GALGAS_attributeListForImplementation inArgument1,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_preferencesPropertyArrayMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesPropertyArrayMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' array is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_preferencesPropertyArrayMap_searchKey = "the '%K' array is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_ebType & outArgument0,
                                                           GALGAS_attributeListForImplementation & outArgument1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_preferencesPropertyArrayMap * p = (const cMapElement_preferencesPropertyArrayMap *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_preferencesPropertyArrayMap_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
    outArgument0 = p->mAttribute_mElementType ;
    outArgument1 = p->mAttribute_mAttributeListForImplementation ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_preferencesPropertyArrayMap::reader_mElementTypeForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesPropertyArrayMap * p = (const cMapElement_preferencesPropertyArrayMap *) attributes ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
    result = p->mAttribute_mElementType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesPropertyArrayMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesPropertyArrayMap * p = (const cMapElement_preferencesPropertyArrayMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap::modifier_setMElementTypeForKey (GALGAS_ebType inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesPropertyArrayMap * p = (cMapElement_preferencesPropertyArrayMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
    p->mAttribute_mElementType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                            GALGAS_string inKey,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesPropertyArrayMap * p = (cMapElement_preferencesPropertyArrayMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_preferencesPropertyArrayMap * GALGAS_preferencesPropertyArrayMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                                 const GALGAS_string & inKey
                                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_preferencesPropertyArrayMap * result = (cMapElement_preferencesPropertyArrayMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesPropertyArrayMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_preferencesPropertyArrayMap::cEnumerator_preferencesPropertyArrayMap (const GALGAS_preferencesPropertyArrayMap & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element cEnumerator_preferencesPropertyArrayMap::current (LOCATION_ARGS) const {
  const cMapElement_preferencesPropertyArrayMap * p = (const cMapElement_preferencesPropertyArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
  return GALGAS_preferencesPropertyArrayMap_2D_element (p->mAttribute_lkey, p->mAttribute_mElementType, p->mAttribute_mAttributeListForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_preferencesPropertyArrayMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_preferencesPropertyArrayMap::current_mElementType (LOCATION_ARGS) const {
  const cMapElement_preferencesPropertyArrayMap * p = (const cMapElement_preferencesPropertyArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
  return p->mAttribute_mElementType ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_preferencesPropertyArrayMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesPropertyArrayMap * p = (const cMapElement_preferencesPropertyArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesPropertyArrayMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @preferencesPropertyArrayMap type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesPropertyArrayMap ("preferencesPropertyArrayMap",
                                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesPropertyArrayMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesPropertyArrayMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesPropertyArrayMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesPropertyArrayMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap GALGAS_preferencesPropertyArrayMap::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_preferencesPropertyArrayMap result ;
  const GALGAS_preferencesPropertyArrayMap * p = (const GALGAS_preferencesPropertyArrayMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesPropertyArrayMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferencesPropertyArrayMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_preferencesMap::cMapElement_preferencesMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                        const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                        const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                        const GALGAS_lstringlist & in_mActionList,
                                                        const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                        const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                        const GALGAS_controllerMap & in_mControllerMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mControllerMap (in_mControllerMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_preferencesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_preferencesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_preferencesMap (mAttribute_lkey, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mOutletDeclarationList, mAttribute_mActionList, mAttribute_mObservablePropertyMap, mAttribute_mFileInclusionSet, mAttribute_mControllerMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_preferencesMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_preferencesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_preferencesMap * operand = (cMapElement_preferencesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (const GALGAS_preferencesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap & GALGAS_preferencesMap::operator = (const GALGAS_preferencesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_mapWithMapToOverride (const GALGAS_preferencesMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_preferencesMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                 const GALGAS_attributeListForImplementation & inArgument0,
                                                 const GALGAS_transientListForImplementation & inArgument1,
                                                 const GALGAS_outletGenerationList & inArgument2,
                                                 const GALGAS_lstringlist & inArgument3,
                                                 const GALGAS_observablePropertyMap & inArgument4,
                                                 const GALGAS_fileInclusionSet & inArgument5,
                                                 const GALGAS_controllerMap & inArgument6,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_preferencesMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@preferencesMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_attributeListForImplementation inArgument0,
                                                GALGAS_transientListForImplementation inArgument1,
                                                GALGAS_outletGenerationList inArgument2,
                                                GALGAS_lstringlist inArgument3,
                                                GALGAS_observablePropertyMap inArgument4,
                                                GALGAS_fileInclusionSet inArgument5,
                                                GALGAS_controllerMap inArgument6,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_preferencesMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' preference is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_preferencesMap_searchKey = "the '%K' preference is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_attributeListForImplementation & outArgument0,
                                              GALGAS_transientListForImplementation & outArgument1,
                                              GALGAS_outletGenerationList & outArgument2,
                                              GALGAS_lstringlist & outArgument3,
                                              GALGAS_observablePropertyMap & outArgument4,
                                              GALGAS_fileInclusionSet & outArgument5,
                                              GALGAS_controllerMap & outArgument6,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_preferencesMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    outArgument0 = p->mAttribute_mAttributeListForImplementation ;
    outArgument1 = p->mAttribute_mTransientListForImplementation ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mActionList ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mFileInclusionSet ;
    outArgument6 = p->mAttribute_mControllerMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferencesMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferencesMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferencesMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_preferencesMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_preferencesMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                       const GALGAS_string & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_preferencesMap::cEnumerator_preferencesMap (const GALGAS_preferencesMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element cEnumerator_preferencesMap::current (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return GALGAS_preferencesMap_2D_element (p->mAttribute_lkey, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mObservablePropertyMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mControllerMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_preferencesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_preferencesMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_preferencesMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_preferencesMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_preferencesMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_preferencesMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_preferencesMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_preferencesMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_preferencesMap) ;
  return p->mAttribute_mControllerMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @preferencesMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap ("preferencesMap",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  const GALGAS_preferencesMap * p = (const GALGAS_preferencesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferencesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_nibClassMap::cMapElement_nibClassMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                  const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                  const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                  const GALGAS_lstringlist & in_mActionList,
                                                  const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                  const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                  const GALGAS_controllerMap & in_mControllerMap,
                                                  const GALGAS_propertyArrayMap & in_mArrayMap
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mArrayMap (in_mArrayMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_nibClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mArrayMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_nibClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_nibClassMap (mAttribute_lkey, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mOutletDeclarationList, mAttribute_mActionList, mAttribute_mObservablePropertyMap, mAttribute_mFileInclusionSet, mAttribute_mControllerMap, mAttribute_mArrayMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_nibClassMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mArrayMap" ":" ;
  mAttribute_mArrayMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_nibClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_nibClassMap * operand = (cMapElement_nibClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayMap.objectCompare (operand->mAttribute_mArrayMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap::GALGAS_nibClassMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap::GALGAS_nibClassMap (const GALGAS_nibClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap & GALGAS_nibClassMap::operator = (const GALGAS_nibClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_nibClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::constructor_mapWithMapToOverride (const GALGAS_nibClassMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_nibClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_nibClassMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::addAssign_operation (const GALGAS_lstring & inKey,
                                              const GALGAS_attributeListForImplementation & inArgument0,
                                              const GALGAS_transientListForImplementation & inArgument1,
                                              const GALGAS_outletGenerationList & inArgument2,
                                              const GALGAS_lstringlist & inArgument3,
                                              const GALGAS_observablePropertyMap & inArgument4,
                                              const GALGAS_fileInclusionSet & inArgument5,
                                              const GALGAS_controllerMap & inArgument6,
                                              const GALGAS_propertyArrayMap & inArgument7,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  cMapElement_nibClassMap * p = NULL ;
  macroMyNew (p, cMapElement_nibClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@nibClassMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_attributeListForImplementation inArgument0,
                                             GALGAS_transientListForImplementation inArgument1,
                                             GALGAS_outletGenerationList inArgument2,
                                             GALGAS_lstringlist inArgument3,
                                             GALGAS_observablePropertyMap inArgument4,
                                             GALGAS_fileInclusionSet inArgument5,
                                             GALGAS_controllerMap inArgument6,
                                             GALGAS_propertyArrayMap inArgument7,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_nibClassMap * p = NULL ;
  macroMyNew (p, cMapElement_nibClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' nib class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_nibClassMap_searchKey = "the '%K' nib class is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_attributeListForImplementation & outArgument0,
                                           GALGAS_transientListForImplementation & outArgument1,
                                           GALGAS_outletGenerationList & outArgument2,
                                           GALGAS_lstringlist & outArgument3,
                                           GALGAS_observablePropertyMap & outArgument4,
                                           GALGAS_fileInclusionSet & outArgument5,
                                           GALGAS_controllerMap & outArgument6,
                                           GALGAS_propertyArrayMap & outArgument7,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_nibClassMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    outArgument0 = p->mAttribute_mAttributeListForImplementation ;
    outArgument1 = p->mAttribute_mTransientListForImplementation ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mActionList ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mFileInclusionSet ;
    outArgument6 = p->mAttribute_mControllerMap ;
    outArgument7 = p->mAttribute_mArrayMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_nibClassMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_nibClassMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_nibClassMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_nibClassMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_nibClassMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_nibClassMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_nibClassMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_nibClassMap::reader_mArrayMapForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_propertyArrayMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    result = p->mAttribute_mArrayMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMArrayMapForKey (GALGAS_propertyArrayMap inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mArrayMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_nibClassMap * GALGAS_nibClassMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                 const GALGAS_string & inKey
                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_nibClassMap * result = (cMapElement_nibClassMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_nibClassMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_nibClassMap::cEnumerator_nibClassMap (const GALGAS_nibClassMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element cEnumerator_nibClassMap::current (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return GALGAS_nibClassMap_2D_element (p->mAttribute_lkey, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mObservablePropertyMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mControllerMap, p->mAttribute_mArrayMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_nibClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_nibClassMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_nibClassMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_nibClassMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_nibClassMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_nibClassMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_nibClassMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_nibClassMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mControllerMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap cEnumerator_nibClassMap::current_mArrayMap (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_nibClassMap) ;
  return p->mAttribute_mArrayMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @nibClassMap type                              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nibClassMap ("nibClassMap",
                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nibClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nibClassMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nibClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nibClassMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_nibClassMap result ;
  const GALGAS_nibClassMap * p = (const GALGAS_nibClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nibClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nibClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_observablePropertyMap::cMapElement_observablePropertyMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_ebType & in_mType,
                                                                      const GALGAS_bool & in_mIsTransient,
                                                                      const GALGAS_lstring & in_mPropertySignature,
                                                                      const GALGAS_bool & in_mIsCollection
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mIsTransient (in_mIsTransient),
mAttribute_mPropertySignature (in_mPropertySignature),
mAttribute_mIsCollection (in_mIsCollection) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_observablePropertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mIsTransient.isValid () && mAttribute_mPropertySignature.isValid () && mAttribute_mIsCollection.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_observablePropertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_observablePropertyMap (mAttribute_lkey, mAttribute_mType, mAttribute_mIsTransient, mAttribute_mPropertySignature, mAttribute_mIsCollection COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_observablePropertyMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsTransient" ":" ;
  mAttribute_mIsTransient.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertySignature" ":" ;
  mAttribute_mPropertySignature.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsCollection" ":" ;
  mAttribute_mIsCollection.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_observablePropertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_observablePropertyMap * operand = (cMapElement_observablePropertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsTransient.objectCompare (operand->mAttribute_mIsTransient) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertySignature.objectCompare (operand->mAttribute_mPropertySignature) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsCollection.objectCompare (operand->mAttribute_mIsCollection) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap::GALGAS_observablePropertyMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap::GALGAS_observablePropertyMap (const GALGAS_observablePropertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap & GALGAS_observablePropertyMap::operator = (const GALGAS_observablePropertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_observablePropertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::constructor_mapWithMapToOverride (const GALGAS_observablePropertyMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_observablePropertyMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                        const GALGAS_ebType & inArgument0,
                                                        const GALGAS_bool & inArgument1,
                                                        const GALGAS_lstring & inArgument2,
                                                        const GALGAS_bool & inArgument3,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMap * p = NULL ;
  macroMyNew (p, cMapElement_observablePropertyMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@observablePropertyMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_ebType inArgument0,
                                                       GALGAS_bool inArgument1,
                                                       GALGAS_lstring inArgument2,
                                                       GALGAS_bool inArgument3,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMap * p = NULL ;
  macroMyNew (p, cMapElement_observablePropertyMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' attribute is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_observablePropertyMap_searchKey = "the '%K' attribute is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_ebType & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_lstring & outArgument2,
                                                     GALGAS_bool & outArgument3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_observablePropertyMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mIsTransient ;
    outArgument2 = p->mAttribute_mPropertySignature ;
    outArgument3 = p->mAttribute_mIsCollection ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_observablePropertyMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_observablePropertyMap::reader_mIsTransientForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mIsTransient ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observablePropertyMap::reader_mPropertySignatureForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mPropertySignature ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_observablePropertyMap::reader_mIsCollectionForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mIsCollection ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMTypeForKey (GALGAS_ebType inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMIsTransientForKey (GALGAS_bool inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mIsTransient = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMPropertySignatureForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mPropertySignature = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMIsCollectionForKey (GALGAS_bool inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mIsCollection = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_observablePropertyMap * GALGAS_observablePropertyMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                     const GALGAS_string & inKey
                                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMap * result = (cMapElement_observablePropertyMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_observablePropertyMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_observablePropertyMap::cEnumerator_observablePropertyMap (const GALGAS_observablePropertyMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element cEnumerator_observablePropertyMap::current (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
  return GALGAS_observablePropertyMap_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mIsTransient, p->mAttribute_mPropertySignature, p->mAttribute_mIsCollection) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_observablePropertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_observablePropertyMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
  return p->mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_observablePropertyMap::current_mIsTransient (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
  return p->mAttribute_mIsTransient ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_observablePropertyMap::current_mPropertySignature (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
  return p->mAttribute_mPropertySignature ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_observablePropertyMap::current_mIsCollection (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
  return p->mAttribute_mIsCollection ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @observablePropertyMap type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyMap ("observablePropertyMap",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMap result ;
  const GALGAS_observablePropertyMap * p = (const GALGAS_observablePropertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_observableObjectMap::cMapElement_observableObjectMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_string & in_mObservableObjectOCName,
                                                                  const GALGAS_string & in_mObservableObjectTypeOCName,
                                                                  const GALGAS_string & in_mIncludeFileName,
                                                                  const GALGAS_observablePropertyMap & in_mObservableProperties
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mObservableObjectOCName (in_mObservableObjectOCName),
mAttribute_mObservableObjectTypeOCName (in_mObservableObjectTypeOCName),
mAttribute_mIncludeFileName (in_mIncludeFileName),
mAttribute_mObservableProperties (in_mObservableProperties) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_observableObjectMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mObservableObjectOCName.isValid () && mAttribute_mObservableObjectTypeOCName.isValid () && mAttribute_mIncludeFileName.isValid () && mAttribute_mObservableProperties.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_observableObjectMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_observableObjectMap (mAttribute_lkey, mAttribute_mObservableObjectOCName, mAttribute_mObservableObjectTypeOCName, mAttribute_mIncludeFileName, mAttribute_mObservableProperties COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_observableObjectMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableObjectOCName" ":" ;
  mAttribute_mObservableObjectOCName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableObjectTypeOCName" ":" ;
  mAttribute_mObservableObjectTypeOCName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIncludeFileName" ":" ;
  mAttribute_mIncludeFileName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableProperties" ":" ;
  mAttribute_mObservableProperties.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_observableObjectMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_observableObjectMap * operand = (cMapElement_observableObjectMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mObservableObjectOCName.objectCompare (operand->mAttribute_mObservableObjectOCName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableObjectTypeOCName.objectCompare (operand->mAttribute_mObservableObjectTypeOCName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIncludeFileName.objectCompare (operand->mAttribute_mIncludeFileName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableProperties.objectCompare (operand->mAttribute_mObservableProperties) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap::GALGAS_observableObjectMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap::GALGAS_observableObjectMap (const GALGAS_observableObjectMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap & GALGAS_observableObjectMap::operator = (const GALGAS_observableObjectMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_observableObjectMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::constructor_mapWithMapToOverride (const GALGAS_observableObjectMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_observableObjectMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_observableObjectMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                      const GALGAS_string & inArgument0,
                                                      const GALGAS_string & inArgument1,
                                                      const GALGAS_string & inArgument2,
                                                      const GALGAS_observablePropertyMap & inArgument3,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cMapElement_observableObjectMap * p = NULL ;
  macroMyNew (p, cMapElement_observableObjectMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@observableObjectMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_string inArgument0,
                                                     GALGAS_string inArgument1,
                                                     GALGAS_string inArgument2,
                                                     GALGAS_observablePropertyMap inArgument3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_observableObjectMap * p = NULL ;
  macroMyNew (p, cMapElement_observableObjectMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' observable object is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_observableObjectMap_searchKey = "the '%K' observable object is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_string & outArgument0,
                                                   GALGAS_string & outArgument1,
                                                   GALGAS_string & outArgument2,
                                                   GALGAS_observablePropertyMap & outArgument3,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_observableObjectMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    outArgument0 = p->mAttribute_mObservableObjectOCName ;
    outArgument1 = p->mAttribute_mObservableObjectTypeOCName ;
    outArgument2 = p->mAttribute_mIncludeFileName ;
    outArgument3 = p->mAttribute_mObservableProperties ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap::reader_mObservableObjectOCNameForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    result = p->mAttribute_mObservableObjectOCName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap::reader_mObservableObjectTypeOCNameForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    result = p->mAttribute_mObservableObjectTypeOCName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap::reader_mIncludeFileNameForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    result = p->mAttribute_mIncludeFileName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observableObjectMap::reader_mObservablePropertiesForKey (const GALGAS_string & inKey,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    result = p->mAttribute_mObservableProperties ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMObservableObjectOCNameForKey (GALGAS_string inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mObservableObjectOCName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMObservableObjectTypeOCNameForKey (GALGAS_string inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mObservableObjectTypeOCName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMIncludeFileNameForKey (GALGAS_string inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mIncludeFileName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMObservablePropertiesForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mObservableProperties = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_observableObjectMap * GALGAS_observableObjectMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                 const GALGAS_string & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement_observableObjectMap * result = (cMapElement_observableObjectMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_observableObjectMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_observableObjectMap::cEnumerator_observableObjectMap (const GALGAS_observableObjectMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element cEnumerator_observableObjectMap::current (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observableObjectMap) ;
  return GALGAS_observableObjectMap_2D_element (p->mAttribute_lkey, p->mAttribute_mObservableObjectOCName, p->mAttribute_mObservableObjectTypeOCName, p->mAttribute_mIncludeFileName, p->mAttribute_mObservableProperties) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_observableObjectMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_observableObjectMap::current_mObservableObjectOCName (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observableObjectMap) ;
  return p->mAttribute_mObservableObjectOCName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_observableObjectMap::current_mObservableObjectTypeOCName (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observableObjectMap) ;
  return p->mAttribute_mObservableObjectTypeOCName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_observableObjectMap::current_mIncludeFileName (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observableObjectMap) ;
  return p->mAttribute_mIncludeFileName ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_observableObjectMap::current_mObservableProperties (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observableObjectMap) ;
  return p->mAttribute_mObservableProperties ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @observableObjectMap type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observableObjectMap ("observableObjectMap",
                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observableObjectMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observableObjectMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observableObjectMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observableObjectMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_observableObjectMap result ;
  const GALGAS_observableObjectMap * p = (const GALGAS_observableObjectMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observableObjectMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observableObjectMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_actionMap::cMapElement_actionMap (const GALGAS_lstring & inKey
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_actionMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_actionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_actionMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_actionMap::description (C_String & /* ioString */, const int32_t /* inIndentation */) const {
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_actionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_actionMap * operand = (cMapElement_actionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap::GALGAS_actionMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap::GALGAS_actionMap (const GALGAS_actionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap & GALGAS_actionMap::operator = (const GALGAS_actionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_actionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::constructor_mapWithMapToOverride (const GALGAS_actionMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_actionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_actionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_actionMap::addAssign_operation (const GALGAS_lstring & inKey,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  cMapElement_actionMap * p = NULL ;
  macroMyNew (p, cMapElement_actionMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@actionMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_actionMap::modifier_insertKey (GALGAS_lstring inKey,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_actionMap * p = NULL ;
  macroMyNew (p, cMapElement_actionMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' action" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_actionMap_searchKey = "the '%K' action is not defined" ;

//-----------------------------------------------------------------------------*

void GALGAS_actionMap::method_searchKey (GALGAS_lstring inKey,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_actionMap * p = (const cMapElement_actionMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_actionMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, cMapElement_actionMap) ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_actionMap * GALGAS_actionMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                             const GALGAS_string & inKey
                                                                             COMMA_LOCATION_ARGS) {
  cMapElement_actionMap * result = (cMapElement_actionMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_actionMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_actionMap::cEnumerator_actionMap (const GALGAS_actionMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element cEnumerator_actionMap::current (LOCATION_ARGS) const {
  const cMapElement_actionMap * p = (const cMapElement_actionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_actionMap) ;
  return GALGAS_actionMap_2D_element (p->mAttribute_lkey) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_actionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                               @actionMap type                               *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionMap ("actionMap",
                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_actionMap result ;
  const GALGAS_actionMap * p = (const GALGAS_actionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("actionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

cMapElement_controllerMap::cMapElement_controllerMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_string & in_mControllerClassName,
                                                      const GALGAS_lstring & in_mControlledClassOrEntityName,
                                                      const GALGAS_bool & in_mIsEntity,
                                                      const GALGAS_outletBindingListForGeneration & in_mControllerBindingList,
                                                      const GALGAS_actionMap & in_mActionMap,
                                                      const GALGAS_observablePropertyMap & in_mObservableAttributeMap
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mControllerClassName (in_mControllerClassName),
mAttribute_mControlledClassOrEntityName (in_mControlledClassOrEntityName),
mAttribute_mIsEntity (in_mIsEntity),
mAttribute_mControllerBindingList (in_mControllerBindingList),
mAttribute_mActionMap (in_mActionMap),
mAttribute_mObservableAttributeMap (in_mObservableAttributeMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_controllerMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerClassName.isValid () && mAttribute_mControlledClassOrEntityName.isValid () && mAttribute_mIsEntity.isValid () && mAttribute_mControllerBindingList.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservableAttributeMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_controllerMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerMap (mAttribute_lkey, mAttribute_mControllerClassName, mAttribute_mControlledClassOrEntityName, mAttribute_mIsEntity, mAttribute_mControllerBindingList, mAttribute_mActionMap, mAttribute_mObservableAttributeMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_controllerMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerClassName" ":" ;
  mAttribute_mControllerClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControlledClassOrEntityName" ":" ;
  mAttribute_mControlledClassOrEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsEntity" ":" ;
  mAttribute_mIsEntity.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerBindingList" ":" ;
  mAttribute_mControllerBindingList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableAttributeMap" ":" ;
  mAttribute_mObservableAttributeMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerMap * operand = (cMapElement_controllerMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerClassName.objectCompare (operand->mAttribute_mControllerClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControlledClassOrEntityName.objectCompare (operand->mAttribute_mControlledClassOrEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsEntity.objectCompare (operand->mAttribute_mIsEntity) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerBindingList.objectCompare (operand->mAttribute_mControllerBindingList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeMap.objectCompare (operand->mAttribute_mObservableAttributeMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap::GALGAS_controllerMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap::GALGAS_controllerMap (const GALGAS_controllerMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap & GALGAS_controllerMap::operator = (const GALGAS_controllerMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::constructor_mapWithMapToOverride (const GALGAS_controllerMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_controllerMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                const GALGAS_string & inArgument0,
                                                const GALGAS_lstring & inArgument1,
                                                const GALGAS_bool & inArgument2,
                                                const GALGAS_outletBindingListForGeneration & inArgument3,
                                                const GALGAS_actionMap & inArgument4,
                                                const GALGAS_observablePropertyMap & inArgument5,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_controllerMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@controllerMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_string inArgument0,
                                               GALGAS_lstring inArgument1,
                                               GALGAS_bool inArgument2,
                                               GALGAS_outletBindingListForGeneration inArgument3,
                                               GALGAS_actionMap inArgument4,
                                               GALGAS_observablePropertyMap inArgument5,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_controllerMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerMap_searchKey = "the '%K' controller is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_string & outArgument0,
                                             GALGAS_lstring & outArgument1,
                                             GALGAS_bool & outArgument2,
                                             GALGAS_outletBindingListForGeneration & outArgument3,
                                             GALGAS_actionMap & outArgument4,
                                             GALGAS_observablePropertyMap & outArgument5,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_controllerMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    outArgument0 = p->mAttribute_mControllerClassName ;
    outArgument1 = p->mAttribute_mControlledClassOrEntityName ;
    outArgument2 = p->mAttribute_mIsEntity ;
    outArgument3 = p->mAttribute_mControllerBindingList ;
    outArgument4 = p->mAttribute_mActionMap ;
    outArgument5 = p->mAttribute_mObservableAttributeMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap::reader_mControllerClassNameForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    result = p->mAttribute_mControllerClassName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap::reader_mControlledClassOrEntityNameForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    result = p->mAttribute_mControlledClassOrEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerMap::reader_mIsEntityForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    result = p->mAttribute_mIsEntity ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_controllerMap::reader_mControllerBindingListForKey (const GALGAS_string & inKey,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    result = p->mAttribute_mControllerBindingList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerMap::reader_mObservableAttributeMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    result = p->mAttribute_mObservableAttributeMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControllerClassNameForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControllerClassName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControlledClassOrEntityNameForKey (GALGAS_lstring inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControlledClassOrEntityName = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMIsEntityForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mIsEntity = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControllerBindingListForKey (GALGAS_outletBindingListForGeneration inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControllerBindingList = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMObservableAttributeMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mObservableAttributeMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_controllerMap * GALGAS_controllerMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                     const GALGAS_string & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement_controllerMap * result = (cMapElement_controllerMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_controllerMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_controllerMap::cEnumerator_controllerMap (const GALGAS_controllerMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element cEnumerator_controllerMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return GALGAS_controllerMap_2D_element (p->mAttribute_lkey, p->mAttribute_mControllerClassName, p->mAttribute_mControlledClassOrEntityName, p->mAttribute_mIsEntity, p->mAttribute_mControllerBindingList, p->mAttribute_mActionMap, p->mAttribute_mObservableAttributeMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_controllerMap::current_mControllerClassName (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return p->mAttribute_mControllerClassName ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerMap::current_mControlledClassOrEntityName (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return p->mAttribute_mControlledClassOrEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cEnumerator_controllerMap::current_mIsEntity (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return p->mAttribute_mIsEntity ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_controllerMap::current_mControllerBindingList (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return p->mAttribute_mControllerBindingList ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return p->mAttribute_mActionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_controllerMap::current_mObservableAttributeMap (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_controllerMap) ;
  return p->mAttribute_mObservableAttributeMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                             @controllerMap type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerMap ("controllerMap",
                                      NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  const GALGAS_controllerMap * p = (const GALGAS_controllerMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//              Class for element of '@directDependancyList' list              *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_directDependancyList : public cCollectionElement {
  public : GALGAS_directDependancyList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_directDependancyList (const GALGAS_abstractTransientDependencyForImplementation & in_mDependency
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_directDependancyList::cCollectionElement_directDependancyList (const GALGAS_abstractTransientDependencyForImplementation & in_mDependency
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mDependency) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_directDependancyList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_directDependancyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_directDependancyList (mObject.mAttribute_mDependency COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_directDependancyList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDependency" ":" ;
  mObject.mAttribute_mDependency.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_directDependancyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_directDependancyList * operand = (cCollectionElement_directDependancyList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_directDependancyList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList::GALGAS_directDependancyList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList::GALGAS_directDependancyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::constructor_listWithValue (const GALGAS_abstractTransientDependencyForImplementation & inOperand0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_directDependancyList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_abstractTransientDependencyForImplementation & in_mDependency
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_directDependancyList * p = NULL ;
  macroMyNew (p, cCollectionElement_directDependancyList (in_mDependency COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::addAssign_operation (const GALGAS_abstractTransientDependencyForImplementation & inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_directDependancyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_insertAtIndex (const GALGAS_abstractTransientDependencyForImplementation inOperand0,
                                                          const GALGAS_uint inInsertionIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_directDependancyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_removeAtIndex (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                          const GALGAS_uint inRemoveIndex,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
      outOperand0 = p->mObject.mAttribute_mDependency ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_popFirst (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_popLast (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::method_first (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::method_last (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::operator_concat (const GALGAS_directDependancyList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_directDependancyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::add_operation (const GALGAS_directDependancyList & inOperand,
                                                                        C_Compiler * /* inCompiler */
                                                                        COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_directDependancyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_directDependancyList result = GALGAS_directDependancyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_directDependancyList result = GALGAS_directDependancyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList::dotAssign_operation (const GALGAS_directDependancyList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation GALGAS_directDependancyList::reader_mDependencyAtIndex (const GALGAS_uint & inIndex,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  GALGAS_abstractTransientDependencyForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    result = p->mObject.mAttribute_mDependency ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_directDependancyList::cEnumerator_directDependancyList (const GALGAS_directDependancyList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList_2D_element cEnumerator_directDependancyList::current (LOCATION_ARGS) const {
  const cCollectionElement_directDependancyList * p = (const cCollectionElement_directDependancyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation cEnumerator_directDependancyList::current_mDependency (LOCATION_ARGS) const {
  const cCollectionElement_directDependancyList * p = (const cCollectionElement_directDependancyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
  return p->mObject.mAttribute_mDependency ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                         @directDependancyList type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_directDependancyList ("directDependancyList",
                                             NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_directDependancyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_directDependancyList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_directDependancyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_directDependancyList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  const GALGAS_directDependancyList * p = (const GALGAS_directDependancyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_directDependancyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("directDependancyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//         Class for element of '@transientListForImplementation' list         *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_transientListForImplementation : public cCollectionElement {
  public : GALGAS_transientListForImplementation_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_transientListForImplementation (const GALGAS_ebType & in_mTransientType,
                                                              const GALGAS_string & in_mTransientName,
                                                              const GALGAS_directDependancyList & in_mDependencyList,
                                                              const GALGAS_stringlist & in_mRootSignDependencyList
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_transientListForImplementation::cCollectionElement_transientListForImplementation (const GALGAS_ebType & in_mTransientType,
                                                                                                      const GALGAS_string & in_mTransientName,
                                                                                                      const GALGAS_directDependancyList & in_mDependencyList,
                                                                                                      const GALGAS_stringlist & in_mRootSignDependencyList
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTransientType, in_mTransientName, in_mDependencyList, in_mRootSignDependencyList) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_transientListForImplementation::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_transientListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_transientListForImplementation (mObject.mAttribute_mTransientType, mObject.mAttribute_mTransientName, mObject.mAttribute_mDependencyList, mObject.mAttribute_mRootSignDependencyList COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_transientListForImplementation::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientType" ":" ;
  mObject.mAttribute_mTransientType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientName" ":" ;
  mObject.mAttribute_mTransientName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDependencyList" ":" ;
  mObject.mAttribute_mDependencyList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootSignDependencyList" ":" ;
  mObject.mAttribute_mRootSignDependencyList.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_transientListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_transientListForImplementation * operand = (cCollectionElement_transientListForImplementation *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_transientListForImplementation) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation::GALGAS_transientListForImplementation (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation::GALGAS_transientListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::constructor_listWithValue (const GALGAS_ebType & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_directDependancyList & inOperand2,
                                                                                                        const GALGAS_stringlist & inOperand3
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_transientListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_ebType & in_mTransientType,
                                                                       const GALGAS_string & in_mTransientName,
                                                                       const GALGAS_directDependancyList & in_mDependencyList,
                                                                       const GALGAS_stringlist & in_mRootSignDependencyList
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_transientListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_transientListForImplementation (in_mTransientType,
                                                                    in_mTransientName,
                                                                    in_mDependencyList,
                                                                    in_mRootSignDependencyList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::addAssign_operation (const GALGAS_ebType & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_directDependancyList & inOperand2,
                                                                 const GALGAS_stringlist & inOperand3
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_transientListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_insertAtIndex (const GALGAS_ebType inOperand0,
                                                                    const GALGAS_string inOperand1,
                                                                    const GALGAS_directDependancyList inOperand2,
                                                                    const GALGAS_stringlist inOperand3,
                                                                    const GALGAS_uint inInsertionIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_transientListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_removeAtIndex (GALGAS_ebType & outOperand0,
                                                                    GALGAS_string & outOperand1,
                                                                    GALGAS_directDependancyList & outOperand2,
                                                                    GALGAS_stringlist & outOperand3,
                                                                    const GALGAS_uint inRemoveIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
      outOperand1.drop () ;
      outOperand2.drop () ;
      outOperand3.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
      outOperand0 = p->mObject.mAttribute_mTransientType ;
      outOperand1 = p->mObject.mAttribute_mTransientName ;
      outOperand2 = p->mObject.mAttribute_mDependencyList ;
      outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_popFirst (GALGAS_ebType & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_directDependancyList & outOperand2,
                                                               GALGAS_stringlist & outOperand3,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_popLast (GALGAS_ebType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_directDependancyList & outOperand2,
                                                              GALGAS_stringlist & outOperand3,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::method_first (GALGAS_ebType & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_directDependancyList & outOperand2,
                                                          GALGAS_stringlist & outOperand3,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::method_last (GALGAS_ebType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_directDependancyList & outOperand2,
                                                         GALGAS_stringlist & outOperand3,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::operator_concat (const GALGAS_transientListForImplementation & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::add_operation (const GALGAS_transientListForImplementation & inOperand,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result = GALGAS_transientListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result = GALGAS_transientListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::dotAssign_operation (const GALGAS_transientListForImplementation inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_transientListForImplementation::reader_mTransientTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_ebType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mTransientType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientListForImplementation::reader_mTransientNameAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mTransientName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_transientListForImplementation::reader_mDependencyListAtIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_directDependancyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mDependencyList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_transientListForImplementation::reader_mRootSignDependencyListAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mRootSignDependencyList ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_transientListForImplementation::cEnumerator_transientListForImplementation (const GALGAS_transientListForImplementation & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element cEnumerator_transientListForImplementation::current (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_ebType cEnumerator_transientListForImplementation::current_mTransientType (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mTransientType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cEnumerator_transientListForImplementation::current_mTransientName (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mTransientName ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList cEnumerator_transientListForImplementation::current_mDependencyList (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mDependencyList ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringlist cEnumerator_transientListForImplementation::current_mRootSignDependencyList (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mRootSignDependencyList ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    @transientListForImplementation type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientListForImplementation ("transientListForImplementation",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientListForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientListForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  const GALGAS_transientListForImplementation * p = (const GALGAS_transientListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                      '@transientDependencyGraph' graph                      *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_transientDependencyGraph::GALGAS_transientDependencyGraph (void) :
AC_GALGAS_graph () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_transientDependencyGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_transientDependencyGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::modifier_addNode (GALGAS_lstring inKey,
                                                        GALGAS_string inArgument_0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_stringlist::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' transient is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::method_topologicalSort (GALGAS_stringlist & outSortedList,
                                                              GALGAS_lstringlist & outSortedKeyList,
                                                              GALGAS_stringlist & outUnsortedList,
                                                              GALGAS_lstringlist & outUnsortedKeyList,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_stringlist (sortedList) ;
  outUnsortedList = GALGAS_stringlist (unsortedList) ;
  GALGAS_stringlist::detachSharedList (sortedList) ;
  GALGAS_stringlist::detachSharedList (unsortedList) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::method_depthFirstTopologicalSort (GALGAS_stringlist & outSortedList,
                                                                        GALGAS_lstringlist & outSortedKeyList,
                                                                        GALGAS_stringlist & outUnsortedList,
                                                                        GALGAS_lstringlist & outUnsortedKeyList,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_stringlist (sortedList) ;
  outUnsortedList = GALGAS_stringlist (unsortedList) ;
  GALGAS_stringlist::detachSharedList (sortedList) ;
  GALGAS_stringlist::detachSharedList (unsortedList) ;
}


//-----------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_transientDependencyGraph::reader_reversedGraph (LOCATION_ARGS) const {
  GALGAS_transientDependencyGraph result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::method_nodesWithNoSuccessor (GALGAS_stringlist & outInfoList,
                                                                   GALGAS_lstringlist & outKeyList
                                                                   COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_stringlist (infoList) ;
  GALGAS_stringlist::detachSharedList (infoList) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::method_nodesWithNoPredecessor (GALGAS_stringlist & outInfoList,
                                                                     GALGAS_lstringlist & outKeyList
                                                                     COMMA_LOCATION_ARGS) const {
  cSharedList * infoList = NULL ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_stringlist (infoList) ;
  GALGAS_stringlist::detachSharedList (infoList) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_transientDependencyGraph::reader_subgraphFromNodes (const GALGAS_lstringlist & inStartKeyList,
                                                                                           const GALGAS_stringset & inKeysToExclude,
                                                                                           C_Compiler * inCompiler
                                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_transientDependencyGraph result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                       @transientDependencyGraph type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyGraph ("transientDependencyGraph",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyGraph ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyGraph (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_transientDependencyGraph::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyGraph result ;
  const GALGAS_transientDependencyGraph * p = (const GALGAS_transientDependencyGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                      Once function 'predefinedColors'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_predefinedColors (C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("decoratedTypes.gSemantics", 1205)) ;
  result_outResult.addAssign_operation (GALGAS_string ("blackColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1206)) ;
  result_outResult.addAssign_operation (GALGAS_string ("blueColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1207)) ;
  result_outResult.addAssign_operation (GALGAS_string ("brownColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1208)) ;
  result_outResult.addAssign_operation (GALGAS_string ("clearColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1209)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1210)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlDarkShadowColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1211)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlHighlightColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1212)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlLightHighlightColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1213)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlShadowColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1214)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1215)) ;
  result_outResult.addAssign_operation (GALGAS_string ("cyanColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1216)) ;
  result_outResult.addAssign_operation (GALGAS_string ("darkGrayColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1217)) ;
  result_outResult.addAssign_operation (GALGAS_string ("disabledControlTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1218)) ;
  result_outResult.addAssign_operation (GALGAS_string ("grayColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1219)) ;
  result_outResult.addAssign_operation (GALGAS_string ("greenColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1220)) ;
  result_outResult.addAssign_operation (GALGAS_string ("gridColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1221)) ;
  result_outResult.addAssign_operation (GALGAS_string ("headerColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1222)) ;
  result_outResult.addAssign_operation (GALGAS_string ("headerTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1223)) ;
  result_outResult.addAssign_operation (GALGAS_string ("highlightColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1224)) ;
  result_outResult.addAssign_operation (GALGAS_string ("keyboardFocusIndicatorColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1225)) ;
  result_outResult.addAssign_operation (GALGAS_string ("knobColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1226)) ;
  result_outResult.addAssign_operation (GALGAS_string ("lightGrayColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1227)) ;
  result_outResult.addAssign_operation (GALGAS_string ("magentaColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1228)) ;
  result_outResult.addAssign_operation (GALGAS_string ("orangeColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1229)) ;
  result_outResult.addAssign_operation (GALGAS_string ("purpleColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1230)) ;
  result_outResult.addAssign_operation (GALGAS_string ("redColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1231)) ;
  result_outResult.addAssign_operation (GALGAS_string ("scrollBarColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1232)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedControlColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1233)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedControlTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1234)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedKnobColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1235)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedMenuItemColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1236)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedMenuItemTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1237)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedTextBackgroundColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1238)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1239)) ;
  result_outResult.addAssign_operation (GALGAS_string ("shadowColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1240)) ;
  result_outResult.addAssign_operation (GALGAS_string ("textBackgroundColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1241)) ;
  result_outResult.addAssign_operation (GALGAS_string ("textColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1242)) ;
  result_outResult.addAssign_operation (GALGAS_string ("whiteColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1243)) ;
  result_outResult.addAssign_operation (GALGAS_string ("windowBackgroundColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1244)) ;
  result_outResult.addAssign_operation (GALGAS_string ("windowFrameColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1245)) ;
  result_outResult.addAssign_operation (GALGAS_string ("windowFrameTextColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1246)) ;
  result_outResult.addAssign_operation (GALGAS_string ("yellowColor")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1247)) ;
//---
  return result_outResult ;
}



//-----------------------------------------------------------------------------*
//  Function implementation                                                    *
//-----------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_predefinedColors = false ;
static GALGAS_stringset gOnceFunctionResult_predefinedColors ;

//-----------------------------------------------------------------------------*

GALGAS_stringset function_predefinedColors (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_predefinedColors) {
    gOnceFunctionResult_predefinedColors = onceFunction_predefinedColors (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_predefinedColors = true ;
  }
  return gOnceFunctionResult_predefinedColors ;
}

//-----------------------------------------------------------------------------*

static void releaseOnceFunctionResult_predefinedColors (void) {
  gOnceFunctionResult_predefinedColors.drop () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_predefinedColors (NULL,
                                                              releaseOnceFunctionResult_predefinedColors) ;

//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_predefinedColors [1] = {
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_predefinedColors (C_Compiler * inCompiler,
                                                                 const cObjectArray & /* inEffectiveParameterArray */,
                                                                 const GALGAS_location & /* inErrorLocation */
                                                                 COMMA_LOCATION_ARGS) {
  return function_predefinedColors (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_predefinedColors ("predefinedColors",
                                                                  functionWithGenericHeader_predefinedColors,
                                                                  & kTypeDescriptor_GALGAS_stringset,
                                                                  0,
                                                                  functionArgs_predefinedColors) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                       Once function 'predefinedDates'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_predefinedDates (C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("decoratedTypes.gSemantics", 1253)) ;
  result_outResult.addAssign_operation (GALGAS_string ("date")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1254)) ;
//---
  return result_outResult ;
}



//-----------------------------------------------------------------------------*
//  Function implementation                                                    *
//-----------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_predefinedDates = false ;
static GALGAS_stringset gOnceFunctionResult_predefinedDates ;

//-----------------------------------------------------------------------------*

GALGAS_stringset function_predefinedDates (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_predefinedDates) {
    gOnceFunctionResult_predefinedDates = onceFunction_predefinedDates (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_predefinedDates = true ;
  }
  return gOnceFunctionResult_predefinedDates ;
}

//-----------------------------------------------------------------------------*

static void releaseOnceFunctionResult_predefinedDates (void) {
  gOnceFunctionResult_predefinedDates.drop () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_predefinedDates (NULL,
                                                             releaseOnceFunctionResult_predefinedDates) ;

//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_predefinedDates [1] = {
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_predefinedDates (C_Compiler * inCompiler,
                                                                const cObjectArray & /* inEffectiveParameterArray */,
                                                                const GALGAS_location & /* inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  return function_predefinedDates (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_predefinedDates ("predefinedDates",
                                                                 functionWithGenericHeader_predefinedDates,
                                                                 & kTypeDescriptor_GALGAS_stringset,
                                                                 0,
                                                                 functionArgs_predefinedDates) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//                       Once function 'predefinedFonts'                       *
//                                                                             *
//-----------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_predefinedFonts (C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("decoratedTypes.gSemantics", 1330)) ;
  result_outResult.addAssign_operation (GALGAS_string ("boldSystemFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1331)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlContentFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1332)) ;
  result_outResult.addAssign_operation (GALGAS_string ("labelFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1333)) ;
  result_outResult.addAssign_operation (GALGAS_string ("menuFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1334)) ;
  result_outResult.addAssign_operation (GALGAS_string ("menuBarFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1335)) ;
  result_outResult.addAssign_operation (GALGAS_string ("messageFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1336)) ;
  result_outResult.addAssign_operation (GALGAS_string ("paletteFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1337)) ;
  result_outResult.addAssign_operation (GALGAS_string ("systemFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1338)) ;
  result_outResult.addAssign_operation (GALGAS_string ("titleBarFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1339)) ;
  result_outResult.addAssign_operation (GALGAS_string ("toolTipsFontOfSize")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1340)) ;
//---
  return result_outResult ;
}



//-----------------------------------------------------------------------------*
//  Function implementation                                                    *
//-----------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_predefinedFonts = false ;
static GALGAS_stringset gOnceFunctionResult_predefinedFonts ;

//-----------------------------------------------------------------------------*

GALGAS_stringset function_predefinedFonts (class C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_predefinedFonts) {
    gOnceFunctionResult_predefinedFonts = onceFunction_predefinedFonts (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_predefinedFonts = true ;
  }
  return gOnceFunctionResult_predefinedFonts ;
}

//-----------------------------------------------------------------------------*

static void releaseOnceFunctionResult_predefinedFonts (void) {
  gOnceFunctionResult_predefinedFonts.drop () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_predefinedFonts (NULL,
                                                             releaseOnceFunctionResult_predefinedFonts) ;

//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_predefinedFonts [1] = {
  NULL
} ;

//-----------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_predefinedFonts (C_Compiler * inCompiler,
                                                                const cObjectArray & /* inEffectiveParameterArray */,
                                                                const GALGAS_location & /* inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  return function_predefinedFonts (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_predefinedFonts ("predefinedFonts",
                                                                 functionWithGenericHeader_predefinedFonts,
                                                                 & kTypeDescriptor_GALGAS_stringset,
                                                                 0,
                                                                 functionArgs_predefinedFonts) ;

//-----------------------------------------------------------------------------*

cMapElement_observablePropertyMapMap::cMapElement_observablePropertyMapMap (const GALGAS_lstring & inKey,
                                                                            const GALGAS_typeKind & in_mType,
                                                                            const GALGAS_observablePropertyMap & in_mObservablePropertyMap
                                                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap) {
}

//-----------------------------------------------------------------------------*

bool cMapElement_observablePropertyMapMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mObservablePropertyMap.isValid () ;
}

//-----------------------------------------------------------------------------*

cMapElement * cMapElement_observablePropertyMapMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_observablePropertyMapMap (mAttribute_lkey, mAttribute_mType, mAttribute_mObservablePropertyMap COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cMapElement_observablePropertyMapMap::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cMapElement_observablePropertyMapMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_observablePropertyMapMap * operand = (cMapElement_observablePropertyMapMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap::GALGAS_observablePropertyMapMap (void) :
AC_GALGAS_map () {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap::GALGAS_observablePropertyMapMap (const GALGAS_observablePropertyMapMap & inSource) :
AC_GALGAS_map (inSource) {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap & GALGAS_observablePropertyMapMap::operator = (const GALGAS_observablePropertyMapMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap GALGAS_observablePropertyMapMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_observablePropertyMapMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap GALGAS_observablePropertyMapMap::constructor_mapWithMapToOverride (const GALGAS_observablePropertyMapMap & inMapToOverride
                                                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMapMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap GALGAS_observablePropertyMapMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_observablePropertyMapMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap::addAssign_operation (const GALGAS_lstring & inKey,
                                                           const GALGAS_typeKind & inArgument0,
                                                           const GALGAS_observablePropertyMap & inArgument1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMapMap * p = NULL ;
  macroMyNew (p, cMapElement_observablePropertyMapMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "@observablePropertyMapMap insert error: '%K' already in map" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap::modifier_insertKey (GALGAS_lstring inKey,
                                                          GALGAS_typeKind inArgument0,
                                                          GALGAS_observablePropertyMap inArgument1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMapMap * p = NULL ;
  macroMyNew (p, cMapElement_observablePropertyMapMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' key is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

const char * kSearchErrorMessage_observablePropertyMapMap_searchKey = "the '%K' key is not declared" ;

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap::method_searchKey (GALGAS_lstring inKey,
                                                        GALGAS_typeKind & outArgument0,
                                                        GALGAS_observablePropertyMap & outArgument1,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_observablePropertyMapMap * p = (const cMapElement_observablePropertyMapMap *) performSearch (inKey,
                                                                                                                   inCompiler,
                                                                                                                   kSearchErrorMessage_observablePropertyMapMap_searchKey
                                                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mObservablePropertyMap ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_observablePropertyMapMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMapMap * p = (const cMapElement_observablePropertyMapMap *) attributes ;
  GALGAS_typeKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMapMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMapMap * p = (const cMapElement_observablePropertyMapMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap::modifier_setMTypeForKey (GALGAS_typeKind inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMapMap * p = (cMapElement_observablePropertyMapMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMapMap * p = (cMapElement_observablePropertyMapMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//-----------------------------------------------------------------------------*

cMapElement_observablePropertyMapMap * GALGAS_observablePropertyMapMap::readWriteAccessForWithInstruction (C_Compiler * inCompiler,
                                                                                                           const GALGAS_string & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMapMap * result = (cMapElement_observablePropertyMapMap *) searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  macroNullOrValidSharedObject (result, cMapElement_observablePropertyMapMap) ;
  return result ;
}

//-----------------------------------------------------------------------------*

cEnumerator_observablePropertyMapMap::cEnumerator_observablePropertyMapMap (const GALGAS_observablePropertyMapMap & inEnumeratedObject,
                                                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element cEnumerator_observablePropertyMapMap::current (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMapMap * p = (const cMapElement_observablePropertyMapMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
  return GALGAS_observablePropertyMapMap_2D_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_observablePropertyMapMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement) ;
  return p->mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_typeKind cEnumerator_observablePropertyMapMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMapMap * p = (const cMapElement_observablePropertyMapMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
  return p->mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_observablePropertyMapMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMapMap * p = (const cMapElement_observablePropertyMapMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cMapElement_observablePropertyMapMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @observablePropertyMapMap type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyMapMap ("observablePropertyMapMap",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyMapMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyMapMap ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyMapMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyMapMap (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap GALGAS_observablePropertyMapMap::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMapMap result ;
  const GALGAS_observablePropertyMapMap * p = (const GALGAS_observablePropertyMapMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyMapMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyMapMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                 Class for element of '@generationList' list                 *
//                                                                             *
//-----------------------------------------------------------------------------*

class cCollectionElement_generationList : public cCollectionElement {
  public : GALGAS_generationList_2D_element mObject ;

//--- Constructor
  public : cCollectionElement_generationList (const GALGAS_generation & in_mGeneration
                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const int32_t inIndentation) const ;
} ;

//-----------------------------------------------------------------------------*

cCollectionElement_generationList::cCollectionElement_generationList (const GALGAS_generation & in_mGeneration
                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mGeneration) {
}

//-----------------------------------------------------------------------------*

bool cCollectionElement_generationList::isValid (void) const {
  return mObject.isValid () ;
}

//-----------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_generationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_generationList (mObject.mAttribute_mGeneration COMMA_HERE)) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void cCollectionElement_generationList::description (C_String & ioString, const int32_t inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGeneration" ":" ;
  mObject.mAttribute_mGeneration.description (ioString, inIndentation) ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_generationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_generationList * operand = (cCollectionElement_generationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_generationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList::GALGAS_generationList (void) :
AC_GALGAS_list () {
}

//-----------------------------------------------------------------------------*

GALGAS_generationList::GALGAS_generationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_generationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::constructor_listWithValue (const GALGAS_generation & inOperand0
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_generationList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_generationList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                       const GALGAS_generation & in_mGeneration
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_generationList * p = NULL ;
  macroMyNew (p, cCollectionElement_generationList (in_mGeneration COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::addAssign_operation (const GALGAS_generation & inOperand0
                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_generationList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::modifier_insertAtIndex (const GALGAS_generation inOperand0,
                                                    const GALGAS_uint inInsertionIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inInsertionIndex.isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_generationList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObjectAtIndex (attributes, inInsertionIndex.uintValue (), inCompiler COMMA_THERE) ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::modifier_removeAtIndex (GALGAS_generation & outOperand0,
                                                    const GALGAS_uint inRemoveIndex,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inRemoveIndex.isValid ()) {
    capCollectionElement attributes ;
    removeObjectAtIndex (attributes, inRemoveIndex.uintValue (), inCompiler COMMA_THERE) ;
    cCollectionElement_generationList * p = (cCollectionElement_generationList *) attributes.ptr () ;
    if (NULL == p) {
      outOperand0.drop () ;
    }else{
      macroValidSharedObject (p, cCollectionElement_generationList) ;
      outOperand0 = p->mObject.mAttribute_mGeneration ;
    }
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::modifier_popFirst (GALGAS_generation & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_generationList * p = (cCollectionElement_generationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_generationList) ;
    outOperand0 = p->mObject.mAttribute_mGeneration ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::modifier_popLast (GALGAS_generation & outOperand0,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_generationList * p = (cCollectionElement_generationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_generationList) ;
    outOperand0 = p->mObject.mAttribute_mGeneration ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::method_first (GALGAS_generation & outOperand0,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_generationList * p = (cCollectionElement_generationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_generationList) ;
    outOperand0 = p->mObject.mAttribute_mGeneration ;
  }
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::method_last (GALGAS_generation & outOperand0,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_generationList * p = (cCollectionElement_generationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_generationList) ;
    outOperand0 = p->mObject.mAttribute_mGeneration ;
  }
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::operator_concat (const GALGAS_generationList & inOperand
                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_generationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::add_operation (const GALGAS_generationList & inOperand,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_generationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_generationList result = GALGAS_generationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_generationList result = GALGAS_generationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList::dotAssign_operation (const GALGAS_generationList inOperand
                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//-----------------------------------------------------------------------------*

GALGAS_generation GALGAS_generationList::reader_mGenerationAtIndex (const GALGAS_uint & inIndex,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_generationList * p = (cCollectionElement_generationList *) attributes.ptr () ;
  GALGAS_generation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_generationList) ;
    result = p->mObject.mAttribute_mGeneration ;
  }
  return result ;
}



//-----------------------------------------------------------------------------*

cEnumerator_generationList::cEnumerator_generationList (const GALGAS_generationList & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList_2D_element cEnumerator_generationList::current (LOCATION_ARGS) const {
  const cCollectionElement_generationList * p = (const cCollectionElement_generationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_generationList) ;
  return p->mObject ;
}


//-----------------------------------------------------------------------------*

GALGAS_generation cEnumerator_generationList::current_mGeneration (LOCATION_ARGS) const {
  const cCollectionElement_generationList * p = (const cCollectionElement_generationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, cCollectionElement_generationList) ;
  return p->mObject.mAttribute_mGeneration ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                            @generationList type                             *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_generationList ("generationList",
                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_generationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_generationList ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_generationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_generationList (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList GALGAS_generationList::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_generationList result ;
  const GALGAS_generationList * p = (const GALGAS_generationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_generationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("generationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractBindingForGeneration::objectCompare (const GALGAS_abstractBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration::GALGAS_abstractBindingForGeneration (void) :
AC_GALGAS_class () {
}

//-----------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration::GALGAS_abstractBindingForGeneration (const cPtr_abstractBindingForGeneration * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractBindingForGeneration) ;
}

//-----------------------------------------------------------------------------*
//            Pointer class for @abstractBindingForGeneration class            *
//-----------------------------------------------------------------------------*

cPtr_abstractBindingForGeneration::cPtr_abstractBindingForGeneration (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @abstractBindingForGeneration type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractBindingForGeneration ("abstractBindingForGeneration",
                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractBindingForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractBindingForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_abstractBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_abstractBindingForGeneration result ;
  const GALGAS_abstractBindingForGeneration * p = (const GALGAS_abstractBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_regularBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeType.objectCompare (p->mAttribute_mObservableAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingName.objectCompare (p->mAttribute_mBindingName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredFormatter.objectCompare (p->mAttribute_mRequiredFormatter) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservedObjectName.objectCompare (p->mAttribute_mObservedObjectName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeName.objectCompare (p->mAttribute_mObservableAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (p->mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_regularBindingForGeneration::objectCompare (const GALGAS_regularBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//-----------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_regularBindingForGeneration::constructor_new (GALGAS_ebType::constructor_default (HERE),
                                                              GALGAS_string::constructor_default (HERE),
                                                              GALGAS_formatterEnum::constructor_noFormatter (HERE),
                                                              GALGAS_string::constructor_default (HERE),
                                                              GALGAS_string::constructor_default (HERE),
                                                              GALGAS_bindingOptionListForGeneration::constructor_emptyList (HERE)
                                                              COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (const cPtr_regularBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_regularBindingForGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::constructor_new (const GALGAS_ebType & inAttribute_mObservableAttributeType,
                                                                                        const GALGAS_string & inAttribute_mBindingName,
                                                                                        const GALGAS_formatterEnum & inAttribute_mRequiredFormatter,
                                                                                        const GALGAS_string & inAttribute_mObservedObjectName,
                                                                                        const GALGAS_string & inAttribute_mObservableAttributeName,
                                                                                        const GALGAS_bindingOptionListForGeneration & inAttribute_mOutletBindingOptionList
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  if (inAttribute_mObservableAttributeType.isValid () && inAttribute_mBindingName.isValid () && inAttribute_mRequiredFormatter.isValid () && inAttribute_mObservedObjectName.isValid () && inAttribute_mObservableAttributeName.isValid () && inAttribute_mOutletBindingOptionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_regularBindingForGeneration (inAttribute_mObservableAttributeType, inAttribute_mBindingName, inAttribute_mRequiredFormatter, inAttribute_mObservedObjectName, inAttribute_mObservableAttributeName, inAttribute_mOutletBindingOptionList COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_regularBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_regularBindingForGeneration * p = (cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    cPtr_regularBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_regularBindingForGeneration (p->mAttribute_mObservableAttributeType, p->mAttribute_mBindingName, p->mAttribute_mRequiredFormatter, p->mAttribute_mObservedObjectName, p->mAttribute_mObservableAttributeName, p->mAttribute_mOutletBindingOptionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_regularBindingForGeneration::reader_mObservableAttributeType (UNUSED_LOCATION_ARGS) const {
  GALGAS_ebType result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservableAttributeType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cPtr_regularBindingForGeneration::reader_mObservableAttributeType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mBindingName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingName ;
}

//-----------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  GALGAS_formatterEnum result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mRequiredFormatter ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_formatterEnum cPtr_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredFormatter ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservedObjectName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedObjectName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration GALGAS_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_bindingOptionListForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration cPtr_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}

//-----------------------------------------------------------------------------*
//            Pointer class for @regularBindingForGeneration class             *
//-----------------------------------------------------------------------------*

cPtr_regularBindingForGeneration::cPtr_regularBindingForGeneration (const GALGAS_ebType & in_mObservableAttributeType,
                                                                    const GALGAS_string & in_mBindingName,
                                                                    const GALGAS_formatterEnum & in_mRequiredFormatter,
                                                                    const GALGAS_string & in_mObservedObjectName,
                                                                    const GALGAS_string & in_mObservableAttributeName,
                                                                    const GALGAS_bindingOptionListForGeneration & in_mOutletBindingOptionList
                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mObservableAttributeType (in_mObservableAttributeType),
mAttribute_mBindingName (in_mBindingName),
mAttribute_mRequiredFormatter (in_mRequiredFormatter),
mAttribute_mObservedObjectName (in_mObservedObjectName),
mAttribute_mObservableAttributeName (in_mObservableAttributeName),
mAttribute_mOutletBindingOptionList (in_mOutletBindingOptionList) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_regularBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

void cPtr_regularBindingForGeneration::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "[@regularBindingForGeneration:" ;
  mAttribute_mObservableAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mBindingName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRequiredFormatter.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservedObjectName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @regularBindingForGeneration type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_regularBindingForGeneration ("regularBindingForGeneration",
                                                    & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_regularBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_regularBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_regularBindingForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  const GALGAS_regularBindingForGeneration * p = (const GALGAS_regularBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_regularBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("regularBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_runBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTargetName.objectCompare (p->mAttribute_mTargetName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionName.objectCompare (p->mAttribute_mActionName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_runBindingForGeneration::objectCompare (const GALGAS_runBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//-----------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_runBindingForGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                          GALGAS_string::constructor_default (HERE)
                                                          COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (const cPtr_runBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_runBindingForGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mTargetName,
                                                                                const GALGAS_string & inAttribute_mActionName
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  if (inAttribute_mTargetName.isValid () && inAttribute_mActionName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_runBindingForGeneration (inAttribute_mTargetName, inAttribute_mActionName COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_runBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_runBindingForGeneration * p = (cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
    cPtr_runBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_runBindingForGeneration (p->mAttribute_mTargetName, p->mAttribute_mActionName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mTargetName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mActionName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionName ;
}

//-----------------------------------------------------------------------------*
//              Pointer class for @runBindingForGeneration class               *
//-----------------------------------------------------------------------------*

cPtr_runBindingForGeneration::cPtr_runBindingForGeneration (const GALGAS_string & in_mTargetName,
                                                            const GALGAS_string & in_mActionName
                                                            COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mTargetName (in_mTargetName),
mAttribute_mActionName (in_mActionName) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_runBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

void cPtr_runBindingForGeneration::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "[@runBindingForGeneration:" ;
  mAttribute_mTargetName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @runBindingForGeneration type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_runBindingForGeneration ("runBindingForGeneration",
                                                & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_runBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_runBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_runBindingForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  const GALGAS_runBindingForGeneration * p = (const GALGAS_runBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_runBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("runBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_tableValueBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mColumnBindingForTableValueBindingForGeneration.objectCompare (p->mAttribute_mColumnBindingForTableValueBindingForGeneration) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_tableValueBindingForGeneration::objectCompare (const GALGAS_tableValueBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//-----------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_tableValueBindingForGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                                 GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (HERE)
                                                                 COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (const cPtr_tableValueBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_tableValueBindingForGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mControllerName,
                                                                                              const GALGAS_columnBindingForTableValueBindingForGeneration & inAttribute_mColumnBindingForTableValueBindingForGeneration
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  if (inAttribute_mControllerName.isValid () && inAttribute_mColumnBindingForTableValueBindingForGeneration.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_tableValueBindingForGeneration (inAttribute_mControllerName, inAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_tableValueBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_tableValueBindingForGeneration * p = (cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
    cPtr_tableValueBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_tableValueBindingForGeneration (p->mAttribute_mControllerName, p->mAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mColumnBindingForTableValueBindingForGeneration ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration cPtr_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnBindingForTableValueBindingForGeneration ;
}

//-----------------------------------------------------------------------------*
//           Pointer class for @tableValueBindingForGeneration class           *
//-----------------------------------------------------------------------------*

cPtr_tableValueBindingForGeneration::cPtr_tableValueBindingForGeneration (const GALGAS_string & in_mControllerName,
                                                                          const GALGAS_columnBindingForTableValueBindingForGeneration & in_mColumnBindingForTableValueBindingForGeneration
                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mColumnBindingForTableValueBindingForGeneration (in_mColumnBindingForTableValueBindingForGeneration) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_tableValueBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

void cPtr_tableValueBindingForGeneration::description (C_String & ioString,
                                                       const int32_t inIndentation) const {
  ioString << "[@tableValueBindingForGeneration:" ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mColumnBindingForTableValueBindingForGeneration.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                    @tableValueBindingForGeneration type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_tableValueBindingForGeneration ("tableValueBindingForGeneration",
                                                       & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_tableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_tableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_tableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  const GALGAS_tableValueBindingForGeneration * p = (const GALGAS_tableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_tableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("tableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_treeControllerForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_treeControllerForGeneration * p = (const cPtr_treeControllerForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_treeControllerForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mChildrenKeyPathName.objectCompare (p->mAttribute_mChildrenKeyPathName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_treeControllerForGeneration::objectCompare (const GALGAS_treeControllerForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_treeControllerForGeneration::GALGAS_treeControllerForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//-----------------------------------------------------------------------------*

GALGAS_treeControllerForGeneration GALGAS_treeControllerForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_treeControllerForGeneration::constructor_new (GALGAS_string::constructor_default (HERE)
                                                              COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_treeControllerForGeneration::GALGAS_treeControllerForGeneration (const cPtr_treeControllerForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_treeControllerForGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_treeControllerForGeneration GALGAS_treeControllerForGeneration::constructor_new (const GALGAS_string & inAttribute_mChildrenKeyPathName
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_treeControllerForGeneration result ;
  if (inAttribute_mChildrenKeyPathName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_treeControllerForGeneration (inAttribute_mChildrenKeyPathName COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_treeControllerForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_treeControllerForGeneration * p = (cPtr_treeControllerForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_treeControllerForGeneration) ;
    cPtr_treeControllerForGeneration * r = NULL ;
    macroMyNew (r, cPtr_treeControllerForGeneration (p->mAttribute_mChildrenKeyPathName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_treeControllerForGeneration::reader_mChildrenKeyPathName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_treeControllerForGeneration * p = (const cPtr_treeControllerForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_treeControllerForGeneration) ;
    result = p->mAttribute_mChildrenKeyPathName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_treeControllerForGeneration::reader_mChildrenKeyPathName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mChildrenKeyPathName ;
}

//-----------------------------------------------------------------------------*
//            Pointer class for @treeControllerForGeneration class             *
//-----------------------------------------------------------------------------*

cPtr_treeControllerForGeneration::cPtr_treeControllerForGeneration (const GALGAS_string & in_mChildrenKeyPathName
                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mChildrenKeyPathName (in_mChildrenKeyPathName) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_treeControllerForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_treeControllerForGeneration ;
}

void cPtr_treeControllerForGeneration::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "[@treeControllerForGeneration:" ;
  mAttribute_mChildrenKeyPathName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @treeControllerForGeneration type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_treeControllerForGeneration ("treeControllerForGeneration",
                                                    & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_treeControllerForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_treeControllerForGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_treeControllerForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_treeControllerForGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_treeControllerForGeneration GALGAS_treeControllerForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_treeControllerForGeneration result ;
  const GALGAS_treeControllerForGeneration * p = (const GALGAS_treeControllerForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_treeControllerForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("treeControllerForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractTransientDependencyForImplementation::objectCompare (const GALGAS_abstractTransientDependencyForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation::GALGAS_abstractTransientDependencyForImplementation (void) :
AC_GALGAS_class () {
}

//-----------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation::GALGAS_abstractTransientDependencyForImplementation (const cPtr_abstractTransientDependencyForImplementation * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_abstractTransientDependencyForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_abstractTransientDependencyForImplementation::reader_mMasterAttributeType (UNUSED_LOCATION_ARGS) const {
  GALGAS_ebType result ;
  if (NULL != mObjectPtr) {
    const cPtr_abstractTransientDependencyForImplementation * p = (const cPtr_abstractTransientDependencyForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_abstractTransientDependencyForImplementation) ;
    result = p->mAttribute_mMasterAttributeType ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType cPtr_abstractTransientDependencyForImplementation::reader_mMasterAttributeType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeType ;
}

//-----------------------------------------------------------------------------*
//    Pointer class for @abstractTransientDependencyForImplementation class    *
//-----------------------------------------------------------------------------*

cPtr_abstractTransientDependencyForImplementation::cPtr_abstractTransientDependencyForImplementation (const GALGAS_ebType & in_mMasterAttributeType
                                                                                                      COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_mMasterAttributeType (in_mMasterAttributeType) {
}



//-----------------------------------------------------------------------------*
//                                                                             *
//             @abstractTransientDependencyForImplementation type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation ("abstractTransientDependencyForImplementation",
                                                                     NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractTransientDependencyForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractTransientDependencyForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractTransientDependencyForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation GALGAS_abstractTransientDependencyForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_abstractTransientDependencyForImplementation result ;
  const GALGAS_abstractTransientDependencyForImplementation * p = (const GALGAS_abstractTransientDependencyForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractTransientDependencyForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractTransientDependencyForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromControllerForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromControllerForImplementation * p = (const cPtr_transientDependencyFromControllerForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientDependencyFromControllerForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromControllerForImplementation::objectCompare (const GALGAS_transientDependencyFromControllerForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation::GALGAS_transientDependencyFromControllerForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation GALGAS_transientDependencyFromControllerForImplementation::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientDependencyFromControllerForImplementation::constructor_new (GALGAS_ebType::constructor_default (HERE),
                                                                                     GALGAS_string::constructor_default (HERE),
                                                                                     GALGAS_string::constructor_default (HERE)
                                                                                     COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation::GALGAS_transientDependencyFromControllerForImplementation (const cPtr_transientDependencyFromControllerForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientDependencyFromControllerForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation GALGAS_transientDependencyFromControllerForImplementation::constructor_new (const GALGAS_ebType & inAttribute_mMasterAttributeType,
                                                                                                                                      const GALGAS_string & inAttribute_mControllerName,
                                                                                                                                      const GALGAS_string & inAttribute_mMasterAttributeName
                                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromControllerForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mControllerName.isValid () && inAttribute_mMasterAttributeName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromControllerForImplementation (inAttribute_mMasterAttributeType, inAttribute_mControllerName, inAttribute_mMasterAttributeName COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyFromControllerForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromControllerForImplementation * p = (cPtr_transientDependencyFromControllerForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromControllerForImplementation) ;
    cPtr_transientDependencyFromControllerForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromControllerForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mControllerName, p->mAttribute_mMasterAttributeName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromControllerForImplementation::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromControllerForImplementation * p = (const cPtr_transientDependencyFromControllerForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromControllerForImplementation) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromControllerForImplementation::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromControllerForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromControllerForImplementation * p = (const cPtr_transientDependencyFromControllerForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromControllerForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromControllerForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//-----------------------------------------------------------------------------*
// Pointer class for @transientDependencyFromControllerForImplementation class *
//-----------------------------------------------------------------------------*

cPtr_transientDependencyFromControllerForImplementation::cPtr_transientDependencyFromControllerForImplementation (const GALGAS_ebType & in_mMasterAttributeType,
                                                                                                                  const GALGAS_string & in_mControllerName,
                                                                                                                  const GALGAS_string & in_mMasterAttributeName
                                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mMasterAttributeName (in_mMasterAttributeName) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromControllerForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromControllerForImplementation ;
}

void cPtr_transientDependencyFromControllerForImplementation::description (C_String & ioString,
                                                                           const int32_t inIndentation) const {
  ioString << "[@transientDependencyFromControllerForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//          @transientDependencyFromControllerForImplementation type           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromControllerForImplementation ("transientDependencyFromControllerForImplementation",
                                                                           & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromControllerForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromControllerForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromControllerForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromControllerForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation GALGAS_transientDependencyFromControllerForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                                    C_Compiler * inCompiler
                                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromControllerForImplementation result ;
  const GALGAS_transientDependencyFromControllerForImplementation * p = (const GALGAS_transientDependencyFromControllerForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromControllerForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromControllerForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromPreferenceForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientDependencyFromPreferenceForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPreferenceName.objectCompare (p->mAttribute_mPreferenceName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterIsTransient.objectCompare (p->mAttribute_mMasterIsTransient) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromPreferenceForImplementation::objectCompare (const GALGAS_transientDependencyFromPreferenceForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation::GALGAS_transientDependencyFromPreferenceForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation GALGAS_transientDependencyFromPreferenceForImplementation::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientDependencyFromPreferenceForImplementation::constructor_new (GALGAS_ebType::constructor_default (HERE),
                                                                                     GALGAS_string::constructor_default (HERE),
                                                                                     GALGAS_string::constructor_default (HERE),
                                                                                     GALGAS_bool::constructor_default (HERE)
                                                                                     COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation::GALGAS_transientDependencyFromPreferenceForImplementation (const cPtr_transientDependencyFromPreferenceForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientDependencyFromPreferenceForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation GALGAS_transientDependencyFromPreferenceForImplementation::constructor_new (const GALGAS_ebType & inAttribute_mMasterAttributeType,
                                                                                                                                      const GALGAS_string & inAttribute_mPreferenceName,
                                                                                                                                      const GALGAS_string & inAttribute_mMasterAttributeName,
                                                                                                                                      const GALGAS_bool & inAttribute_mMasterIsTransient
                                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromPreferenceForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mPreferenceName.isValid () && inAttribute_mMasterAttributeName.isValid () && inAttribute_mMasterIsTransient.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromPreferenceForImplementation (inAttribute_mMasterAttributeType, inAttribute_mPreferenceName, inAttribute_mMasterAttributeName, inAttribute_mMasterIsTransient COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyFromPreferenceForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromPreferenceForImplementation * p = (cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromPreferenceForImplementation) ;
    cPtr_transientDependencyFromPreferenceForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromPreferenceForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mPreferenceName, p->mAttribute_mMasterAttributeName, p->mAttribute_mMasterIsTransient COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromPreferenceForImplementation::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromPreferenceForImplementation) ;
    result = p->mAttribute_mPreferenceName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromPreferenceForImplementation::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferenceName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromPreferenceForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromPreferenceForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromPreferenceForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientDependencyFromPreferenceForImplementation::reader_mMasterIsTransient (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromPreferenceForImplementation) ;
    result = p->mAttribute_mMasterIsTransient ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cPtr_transientDependencyFromPreferenceForImplementation::reader_mMasterIsTransient (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterIsTransient ;
}

//-----------------------------------------------------------------------------*
// Pointer class for @transientDependencyFromPreferenceForImplementation class *
//-----------------------------------------------------------------------------*

cPtr_transientDependencyFromPreferenceForImplementation::cPtr_transientDependencyFromPreferenceForImplementation (const GALGAS_ebType & in_mMasterAttributeType,
                                                                                                                  const GALGAS_string & in_mPreferenceName,
                                                                                                                  const GALGAS_string & in_mMasterAttributeName,
                                                                                                                  const GALGAS_bool & in_mMasterIsTransient
                                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mPreferenceName (in_mPreferenceName),
mAttribute_mMasterAttributeName (in_mMasterAttributeName),
mAttribute_mMasterIsTransient (in_mMasterIsTransient) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromPreferenceForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromPreferenceForImplementation ;
}

void cPtr_transientDependencyFromPreferenceForImplementation::description (C_String & ioString,
                                                                           const int32_t inIndentation) const {
  ioString << "[@transientDependencyFromPreferenceForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mPreferenceName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterIsTransient.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//          @transientDependencyFromPreferenceForImplementation type           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromPreferenceForImplementation ("transientDependencyFromPreferenceForImplementation",
                                                                           & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromPreferenceForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromPreferenceForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromPreferenceForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromPreferenceForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation GALGAS_transientDependencyFromPreferenceForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                                    C_Compiler * inCompiler
                                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromPreferenceForImplementation result ;
  const GALGAS_transientDependencyFromPreferenceForImplementation * p = (const GALGAS_transientDependencyFromPreferenceForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromPreferenceForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromPreferenceForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromRootForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientDependencyFromRootForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTriggerRoutineName.objectCompare (p->mAttribute_mTriggerRoutineName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromRootForImplementation::objectCompare (const GALGAS_transientDependencyFromRootForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation::GALGAS_transientDependencyFromRootForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation GALGAS_transientDependencyFromRootForImplementation::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientDependencyFromRootForImplementation::constructor_new (GALGAS_ebType::constructor_default (HERE),
                                                                               GALGAS_string::constructor_default (HERE),
                                                                               GALGAS_bool::constructor_default (HERE),
                                                                               GALGAS_string::constructor_default (HERE)
                                                                               COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation::GALGAS_transientDependencyFromRootForImplementation (const cPtr_transientDependencyFromRootForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientDependencyFromRootForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation GALGAS_transientDependencyFromRootForImplementation::constructor_new (const GALGAS_ebType & inAttribute_mMasterAttributeType,
                                                                                                                          const GALGAS_string & inAttribute_mMasterAttributeName,
                                                                                                                          const GALGAS_bool & inAttribute_mNamesCountOption,
                                                                                                                          const GALGAS_string & inAttribute_mTriggerRoutineName
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromRootForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mMasterAttributeName.isValid () && inAttribute_mNamesCountOption.isValid () && inAttribute_mTriggerRoutineName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromRootForImplementation (inAttribute_mMasterAttributeType, inAttribute_mMasterAttributeName, inAttribute_mNamesCountOption, inAttribute_mTriggerRoutineName COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyFromRootForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromRootForImplementation * p = (cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromRootForImplementation) ;
    cPtr_transientDependencyFromRootForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromRootForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mMasterAttributeName, p->mAttribute_mNamesCountOption, p->mAttribute_mTriggerRoutineName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromRootForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromRootForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromRootForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientDependencyFromRootForImplementation::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromRootForImplementation) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cPtr_transientDependencyFromRootForImplementation::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromRootForImplementation::reader_mTriggerRoutineName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromRootForImplementation) ;
    result = p->mAttribute_mTriggerRoutineName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromRootForImplementation::reader_mTriggerRoutineName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTriggerRoutineName ;
}

//-----------------------------------------------------------------------------*
//    Pointer class for @transientDependencyFromRootForImplementation class    *
//-----------------------------------------------------------------------------*

cPtr_transientDependencyFromRootForImplementation::cPtr_transientDependencyFromRootForImplementation (const GALGAS_ebType & in_mMasterAttributeType,
                                                                                                      const GALGAS_string & in_mMasterAttributeName,
                                                                                                      const GALGAS_bool & in_mNamesCountOption,
                                                                                                      const GALGAS_string & in_mTriggerRoutineName
                                                                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mMasterAttributeName (in_mMasterAttributeName),
mAttribute_mNamesCountOption (in_mNamesCountOption),
mAttribute_mTriggerRoutineName (in_mTriggerRoutineName) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromRootForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromRootForImplementation ;
}

void cPtr_transientDependencyFromRootForImplementation::description (C_String & ioString,
                                                                     const int32_t inIndentation) const {
  ioString << "[@transientDependencyFromRootForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTriggerRoutineName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//             @transientDependencyFromRootForImplementation type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromRootForImplementation ("transientDependencyFromRootForImplementation",
                                                                     & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromRootForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromRootForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromRootForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromRootForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation GALGAS_transientDependencyFromRootForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromRootForImplementation result ;
  const GALGAS_transientDependencyFromRootForImplementation * p = (const GALGAS_transientDependencyFromRootForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromRootForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromRootForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromSelfForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromSelfForImplementation * p = (const cPtr_transientDependencyFromSelfForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_transientDependencyFromSelfForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromSelfForImplementation::objectCompare (const GALGAS_transientDependencyFromSelfForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation::GALGAS_transientDependencyFromSelfForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation GALGAS_transientDependencyFromSelfForImplementation::constructor_default (LOCATION_ARGS) {
  return GALGAS_transientDependencyFromSelfForImplementation::constructor_new (GALGAS_ebType::constructor_default (HERE),
                                                                               GALGAS_string::constructor_default (HERE),
                                                                               GALGAS_bool::constructor_default (HERE)
                                                                               COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation::GALGAS_transientDependencyFromSelfForImplementation (const cPtr_transientDependencyFromSelfForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_transientDependencyFromSelfForImplementation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation GALGAS_transientDependencyFromSelfForImplementation::constructor_new (const GALGAS_ebType & inAttribute_mMasterAttributeType,
                                                                                                                          const GALGAS_string & inAttribute_mMasterAttributeName,
                                                                                                                          const GALGAS_bool & inAttribute_mNamesCountOption
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromSelfForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mMasterAttributeName.isValid () && inAttribute_mNamesCountOption.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromSelfForImplementation (inAttribute_mMasterAttributeType, inAttribute_mMasterAttributeName, inAttribute_mNamesCountOption COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientDependencyFromSelfForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromSelfForImplementation * p = (cPtr_transientDependencyFromSelfForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromSelfForImplementation) ;
    cPtr_transientDependencyFromSelfForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromSelfForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mMasterAttributeName, p->mAttribute_mNamesCountOption COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromSelfForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromSelfForImplementation * p = (const cPtr_transientDependencyFromSelfForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromSelfForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromSelfForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientDependencyFromSelfForImplementation::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromSelfForImplementation * p = (const cPtr_transientDependencyFromSelfForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromSelfForImplementation) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cPtr_transientDependencyFromSelfForImplementation::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//-----------------------------------------------------------------------------*
//    Pointer class for @transientDependencyFromSelfForImplementation class    *
//-----------------------------------------------------------------------------*

cPtr_transientDependencyFromSelfForImplementation::cPtr_transientDependencyFromSelfForImplementation (const GALGAS_ebType & in_mMasterAttributeType,
                                                                                                      const GALGAS_string & in_mMasterAttributeName,
                                                                                                      const GALGAS_bool & in_mNamesCountOption
                                                                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mMasterAttributeName (in_mMasterAttributeName),
mAttribute_mNamesCountOption (in_mNamesCountOption) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromSelfForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromSelfForImplementation ;
}

void cPtr_transientDependencyFromSelfForImplementation::description (C_String & ioString,
                                                                     const int32_t inIndentation) const {
  ioString << "[@transientDependencyFromSelfForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//             @transientDependencyFromSelfForImplementation type              *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromSelfForImplementation ("transientDependencyFromSelfForImplementation",
                                                                     & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromSelfForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromSelfForImplementation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromSelfForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromSelfForImplementation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation GALGAS_transientDependencyFromSelfForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromSelfForImplementation result ;
  const GALGAS_transientDependencyFromSelfForImplementation * p = (const GALGAS_transientDependencyFromSelfForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromSelfForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromSelfForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*



typeComparisonResult GALGAS_generation::objectCompare (const GALGAS_generation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generation::GALGAS_generation (void) :
AC_GALGAS_class () {
}

//-----------------------------------------------------------------------------*

GALGAS_generation::GALGAS_generation (const cPtr_generation * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_generation) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_generation::reader_mGenerationName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_generation * p = (const cPtr_generation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_generation) ;
    result = p->mAttribute_mGenerationName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_generation::reader_mGenerationName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationName ;
}

//-----------------------------------------------------------------------------*
//                     Pointer class for @generation class                     *
//-----------------------------------------------------------------------------*

cPtr_generation::cPtr_generation (const GALGAS_string & in_mGenerationName
                                  COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_mGenerationName (in_mGenerationName) {
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                              @generation type                               *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_generation ("generation",
                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_generation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_generation ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_generation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_generation (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generation GALGAS_generation::extractObject (const GALGAS_object & inObject,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  GALGAS_generation result ;
  const GALGAS_generation * p = (const GALGAS_generation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_generation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("generation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_classTypeGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_classTypeGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (p->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (p->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (p->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (p->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (p->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllArrayPropertyForImplementation.objectCompare (p->mAttribute_mAllArrayPropertyForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentArrayPropertyForImplementation.objectCompare (p->mAttribute_mCurrentArrayPropertyForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInclusionSet.objectCompare (p->mAttribute_mInclusionSet) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_classTypeGeneration::objectCompare (const GALGAS_classTypeGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classTypeGeneration::GALGAS_classTypeGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_classTypeGeneration GALGAS_classTypeGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_classTypeGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                      GALGAS_string::constructor_default (HERE),
                                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                      GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                      GALGAS_propertyArrayMap::constructor_emptyMap (HERE),
                                                      GALGAS_propertyArrayMap::constructor_emptyMap (HERE),
                                                      GALGAS_fileInclusionSet::constructor_default (HERE)
                                                      COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_classTypeGeneration::GALGAS_classTypeGeneration (const cPtr_classTypeGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_classTypeGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_classTypeGeneration GALGAS_classTypeGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                        const GALGAS_string & inAttribute_mSuperClassName,
                                                                        const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForInitMethodHeader,
                                                                        const GALGAS_attributeListForImplementation & inAttribute_mInheritedAttributeListForImplementation,
                                                                        const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForImplementation,
                                                                        const GALGAS_transientListForImplementation & inAttribute_mTransientListForImplementation,
                                                                        const GALGAS_propertyArrayMap & inAttribute_mAllArrayPropertyForImplementation,
                                                                        const GALGAS_propertyArrayMap & inAttribute_mCurrentArrayPropertyForImplementation,
                                                                        const GALGAS_fileInclusionSet & inAttribute_mInclusionSet
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_classTypeGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mSuperClassName.isValid () && inAttribute_mAttributeListForInitMethodHeader.isValid () && inAttribute_mInheritedAttributeListForImplementation.isValid () && inAttribute_mAttributeListForImplementation.isValid () && inAttribute_mTransientListForImplementation.isValid () && inAttribute_mAllArrayPropertyForImplementation.isValid () && inAttribute_mCurrentArrayPropertyForImplementation.isValid () && inAttribute_mInclusionSet.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_classTypeGeneration (inAttribute_mGenerationName, inAttribute_mSuperClassName, inAttribute_mAttributeListForInitMethodHeader, inAttribute_mInheritedAttributeListForImplementation, inAttribute_mAttributeListForImplementation, inAttribute_mTransientListForImplementation, inAttribute_mAllArrayPropertyForImplementation, inAttribute_mCurrentArrayPropertyForImplementation, inAttribute_mInclusionSet COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_classTypeGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_classTypeGeneration * p = (cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    cPtr_classTypeGeneration * r = NULL ;
    macroMyNew (r, cPtr_classTypeGeneration (p->mAttribute_mGenerationName, p->mAttribute_mSuperClassName, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mAllArrayPropertyForImplementation, p->mAttribute_mCurrentArrayPropertyForImplementation, p->mAttribute_mInclusionSet COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_classTypeGeneration::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_classTypeGeneration::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classTypeGeneration::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_classTypeGeneration::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classTypeGeneration::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_classTypeGeneration::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classTypeGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_classTypeGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classTypeGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cPtr_classTypeGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_classTypeGeneration::reader_mAllArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyArrayMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mAllArrayPropertyForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap cPtr_classTypeGeneration::reader_mAllArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllArrayPropertyForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_classTypeGeneration::reader_mCurrentArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyArrayMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mCurrentArrayPropertyForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap cPtr_classTypeGeneration::reader_mCurrentArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentArrayPropertyForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_classTypeGeneration::reader_mInclusionSet (UNUSED_LOCATION_ARGS) const {
  GALGAS_fileInclusionSet result ;
  if (NULL != mObjectPtr) {
    const cPtr_classTypeGeneration * p = (const cPtr_classTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_classTypeGeneration) ;
    result = p->mAttribute_mInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cPtr_classTypeGeneration::reader_mInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInclusionSet ;
}

//-----------------------------------------------------------------------------*
//                Pointer class for @classTypeGeneration class                 *
//-----------------------------------------------------------------------------*

cPtr_classTypeGeneration::cPtr_classTypeGeneration (const GALGAS_string & in_mGenerationName,
                                                    const GALGAS_string & in_mSuperClassName,
                                                    const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                    const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                    const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                    const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                    const GALGAS_propertyArrayMap & in_mAllArrayPropertyForImplementation,
                                                    const GALGAS_propertyArrayMap & in_mCurrentArrayPropertyForImplementation,
                                                    const GALGAS_fileInclusionSet & in_mInclusionSet
                                                    COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mAllArrayPropertyForImplementation (in_mAllArrayPropertyForImplementation),
mAttribute_mCurrentArrayPropertyForImplementation (in_mCurrentArrayPropertyForImplementation),
mAttribute_mInclusionSet (in_mInclusionSet) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_classTypeGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classTypeGeneration ;
}

void cPtr_classTypeGeneration::description (C_String & ioString,
                                            const int32_t inIndentation) const {
  ioString << "[@classTypeGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAllArrayPropertyForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mCurrentArrayPropertyForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInclusionSet.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @classTypeGeneration type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classTypeGeneration ("classTypeGeneration",
                                            & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classTypeGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classTypeGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classTypeGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classTypeGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classTypeGeneration GALGAS_classTypeGeneration::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_classTypeGeneration result ;
  const GALGAS_classTypeGeneration * p = (const GALGAS_classTypeGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classTypeGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classTypeGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_controllerClassGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_controllerClassGeneration * p = (const cPtr_controllerClassGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_controllerClassGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (p->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (p->mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_controllerClassGeneration::objectCompare (const GALGAS_controllerClassGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassGeneration::GALGAS_controllerClassGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassGeneration GALGAS_controllerClassGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_controllerClassGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                            GALGAS_outletClassBindingMap::constructor_emptyMap (HERE),
                                                            GALGAS_observablePropertyMap::constructor_emptyMap (HERE)
                                                            COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassGeneration::GALGAS_controllerClassGeneration (const cPtr_controllerClassGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_controllerClassGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassGeneration GALGAS_controllerClassGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                                    const GALGAS_outletClassBindingMap & inAttribute_mBindingMap,
                                                                                    const GALGAS_observablePropertyMap & inAttribute_mObservablePropertyMap
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mBindingMap.isValid () && inAttribute_mObservablePropertyMap.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_controllerClassGeneration (inAttribute_mGenerationName, inAttribute_mBindingMap, inAttribute_mObservablePropertyMap COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_controllerClassGeneration * p = (cPtr_controllerClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_controllerClassGeneration) ;
    cPtr_controllerClassGeneration * r = NULL ;
    macroMyNew (r, cPtr_controllerClassGeneration (p->mAttribute_mGenerationName, p->mAttribute_mBindingMap, p->mAttribute_mObservablePropertyMap COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassGeneration::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_controllerClassGeneration * p = (const cPtr_controllerClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_controllerClassGeneration) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cPtr_controllerClassGeneration::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassGeneration::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_observablePropertyMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_controllerClassGeneration * p = (const cPtr_controllerClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_controllerClassGeneration) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cPtr_controllerClassGeneration::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*
//             Pointer class for @controllerClassGeneration class              *
//-----------------------------------------------------------------------------*

cPtr_controllerClassGeneration::cPtr_controllerClassGeneration (const GALGAS_string & in_mGenerationName,
                                                                const GALGAS_outletClassBindingMap & in_mBindingMap,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap
                                                                COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_controllerClassGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassGeneration ;
}

void cPtr_controllerClassGeneration::description (C_String & ioString,
                                                  const int32_t inIndentation) const {
  ioString << "[@controllerClassGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @controllerClassGeneration type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassGeneration ("controllerClassGeneration",
                                                  & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassGeneration GALGAS_controllerClassGeneration::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassGeneration result ;
  const GALGAS_controllerClassGeneration * p = (const GALGAS_controllerClassGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerClassGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_documentGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_documentGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityName.objectCompare (p->mAttribute_mRootEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (p->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (p->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (p->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (p->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (p->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (p->mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_documentGeneration::objectCompare (const GALGAS_documentGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_documentGeneration::GALGAS_documentGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_documentGeneration GALGAS_documentGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_documentGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                     GALGAS_string::constructor_default (HERE),
                                                     GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                                     GALGAS_controllerMap::constructor_emptyMap (HERE),
                                                     GALGAS_lstringlist::constructor_emptyList (HERE),
                                                     GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                     GALGAS_fileInclusionSet::constructor_default (HERE),
                                                     GALGAS_attributeListForImplementation::constructor_emptyList (HERE)
                                                     COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_documentGeneration::GALGAS_documentGeneration (const cPtr_documentGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_documentGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_documentGeneration GALGAS_documentGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                      const GALGAS_string & inAttribute_mRootEntityName,
                                                                      const GALGAS_outletGenerationList & inAttribute_mOutletDeclarationList,
                                                                      const GALGAS_controllerMap & inAttribute_mControllerMap,
                                                                      const GALGAS_lstringlist & inAttribute_mActionList,
                                                                      const GALGAS_transientListForImplementation & inAttribute_mTransientListForImplementation,
                                                                      const GALGAS_fileInclusionSet & inAttribute_mFileInclusionSet,
                                                                      const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForImplementation
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_documentGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mRootEntityName.isValid () && inAttribute_mOutletDeclarationList.isValid () && inAttribute_mControllerMap.isValid () && inAttribute_mActionList.isValid () && inAttribute_mTransientListForImplementation.isValid () && inAttribute_mFileInclusionSet.isValid () && inAttribute_mAttributeListForImplementation.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_documentGeneration (inAttribute_mGenerationName, inAttribute_mRootEntityName, inAttribute_mOutletDeclarationList, inAttribute_mControllerMap, inAttribute_mActionList, inAttribute_mTransientListForImplementation, inAttribute_mFileInclusionSet, inAttribute_mAttributeListForImplementation COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_documentGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_documentGeneration * p = (cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    cPtr_documentGeneration * r = NULL ;
    macroMyNew (r, cPtr_documentGeneration (p->mAttribute_mGenerationName, p->mAttribute_mRootEntityName, p->mAttribute_mOutletDeclarationList, p->mAttribute_mControllerMap, p->mAttribute_mActionList, p->mAttribute_mTransientListForImplementation, p->mAttribute_mFileInclusionSet, p->mAttribute_mAttributeListForImplementation COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_documentGeneration::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mRootEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_documentGeneration::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentGeneration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList cPtr_documentGeneration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentGeneration::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap cPtr_documentGeneration::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentGeneration::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cPtr_documentGeneration::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cPtr_documentGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_documentGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  GALGAS_fileInclusionSet result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cPtr_documentGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_documentGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_documentGeneration * p = (const cPtr_documentGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_documentGeneration) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_documentGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*
//                 Pointer class for @documentGeneration class                 *
//-----------------------------------------------------------------------------*

cPtr_documentGeneration::cPtr_documentGeneration (const GALGAS_string & in_mGenerationName,
                                                  const GALGAS_string & in_mRootEntityName,
                                                  const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                  const GALGAS_controllerMap & in_mControllerMap,
                                                  const GALGAS_lstringlist & in_mActionList,
                                                  const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                  const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                  const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation
                                                  COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mRootEntityName (in_mRootEntityName),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mActionList (in_mActionList),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_documentGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentGeneration ;
}

void cPtr_documentGeneration::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "[@documentGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRootEntityName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @documentGeneration type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentGeneration ("documentGeneration",
                                           & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_documentGeneration GALGAS_documentGeneration::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_documentGeneration result ;
  const GALGAS_documentGeneration * p = (const GALGAS_documentGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("documentGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_entityGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_entityGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperEntityName.objectCompare (p->mAttribute_mSuperEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (p->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (p->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (p->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (p->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (p->mAttribute_mCurrentRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (p->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignList.objectCompare (p->mAttribute_mSignList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mToManyRelationshipList.objectCompare (p->mAttribute_mToManyRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mToOneRelationshipList.objectCompare (p->mAttribute_mToOneRelationshipList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_entityGeneration::objectCompare (const GALGAS_entityGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityGeneration::GALGAS_entityGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_entityGeneration GALGAS_entityGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_entityGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                   GALGAS_string::constructor_default (HERE),
                                                   GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                   GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                   GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                   GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                   GALGAS_relationshipList::constructor_emptyList (HERE),
                                                   GALGAS_fileInclusionSet::constructor_default (HERE),
                                                   GALGAS_signListForGeneration::constructor_emptyList (HERE),
                                                   GALGAS__32_stringlist::constructor_emptyList (HERE),
                                                   GALGAS__32_stringlist::constructor_emptyList (HERE)
                                                   COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityGeneration::GALGAS_entityGeneration (const cPtr_entityGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_entityGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityGeneration GALGAS_entityGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                  const GALGAS_string & inAttribute_mSuperEntityName,
                                                                  const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForInitMethodHeader,
                                                                  const GALGAS_attributeListForImplementation & inAttribute_mInheritedAttributeListForImplementation,
                                                                  const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForImplementation,
                                                                  const GALGAS_transientListForImplementation & inAttribute_mTransientListForImplementation,
                                                                  const GALGAS_relationshipList & inAttribute_mCurrentRelationshipList,
                                                                  const GALGAS_fileInclusionSet & inAttribute_mFileInclusionSet,
                                                                  const GALGAS_signListForGeneration & inAttribute_mSignList,
                                                                  const GALGAS__32_stringlist & inAttribute_mToManyRelationshipList,
                                                                  const GALGAS__32_stringlist & inAttribute_mToOneRelationshipList
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_entityGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mSuperEntityName.isValid () && inAttribute_mAttributeListForInitMethodHeader.isValid () && inAttribute_mInheritedAttributeListForImplementation.isValid () && inAttribute_mAttributeListForImplementation.isValid () && inAttribute_mTransientListForImplementation.isValid () && inAttribute_mCurrentRelationshipList.isValid () && inAttribute_mFileInclusionSet.isValid () && inAttribute_mSignList.isValid () && inAttribute_mToManyRelationshipList.isValid () && inAttribute_mToOneRelationshipList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_entityGeneration (inAttribute_mGenerationName, inAttribute_mSuperEntityName, inAttribute_mAttributeListForInitMethodHeader, inAttribute_mInheritedAttributeListForImplementation, inAttribute_mAttributeListForImplementation, inAttribute_mTransientListForImplementation, inAttribute_mCurrentRelationshipList, inAttribute_mFileInclusionSet, inAttribute_mSignList, inAttribute_mToManyRelationshipList, inAttribute_mToOneRelationshipList COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_entityGeneration * p = (cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    cPtr_entityGeneration * r = NULL ;
    macroMyNew (r, cPtr_entityGeneration (p->mAttribute_mGenerationName, p->mAttribute_mSuperEntityName, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mCurrentRelationshipList, p->mAttribute_mFileInclusionSet, p->mAttribute_mSignList, p->mAttribute_mToManyRelationshipList, p->mAttribute_mToOneRelationshipList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityGeneration::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mSuperEntityName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_entityGeneration::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityGeneration::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_entityGeneration::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityGeneration::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_entityGeneration::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_entityGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cPtr_entityGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityGeneration::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  GALGAS_relationshipList result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList cPtr_entityGeneration::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  GALGAS_fileInclusionSet result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cPtr_entityGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityGeneration::reader_mSignList (UNUSED_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mSignList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration cPtr_entityGeneration::reader_mSignList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignList ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityGeneration::reader_mToManyRelationshipList (UNUSED_LOCATION_ARGS) const {
  GALGAS__32_stringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mToManyRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist cPtr_entityGeneration::reader_mToManyRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToManyRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityGeneration::reader_mToOneRelationshipList (UNUSED_LOCATION_ARGS) const {
  GALGAS__32_stringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_entityGeneration * p = (const cPtr_entityGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_entityGeneration) ;
    result = p->mAttribute_mToOneRelationshipList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist cPtr_entityGeneration::reader_mToOneRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToOneRelationshipList ;
}

//-----------------------------------------------------------------------------*
//                  Pointer class for @entityGeneration class                  *
//-----------------------------------------------------------------------------*

cPtr_entityGeneration::cPtr_entityGeneration (const GALGAS_string & in_mGenerationName,
                                              const GALGAS_string & in_mSuperEntityName,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                              const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                              const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                              const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                              const GALGAS_signListForGeneration & in_mSignList,
                                              const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                              const GALGAS__32_stringlist & in_mToOneRelationshipList
                                              COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mSuperEntityName (in_mSuperEntityName),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mCurrentRelationshipList (in_mCurrentRelationshipList),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mSignList (in_mSignList),
mAttribute_mToManyRelationshipList (in_mToManyRelationshipList),
mAttribute_mToOneRelationshipList (in_mToOneRelationshipList) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_entityGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityGeneration ;
}

void cPtr_entityGeneration::description (C_String & ioString,
                                         const int32_t inIndentation) const {
  ioString << "[@entityGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSignList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mToManyRelationshipList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mToOneRelationshipList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @entityGeneration type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityGeneration ("entityGeneration",
                                         & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityGeneration GALGAS_entityGeneration::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_entityGeneration result ;
  const GALGAS_entityGeneration * p = (const GALGAS_entityGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_enumTypeGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_enumTypeGeneration * p = (const cPtr_enumTypeGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_enumTypeGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mConstantOrderedList.objectCompare (p->mAttribute_mConstantOrderedList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_enumTypeGeneration::objectCompare (const GALGAS_enumTypeGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumTypeGeneration::GALGAS_enumTypeGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_enumTypeGeneration GALGAS_enumTypeGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_enumTypeGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                     GALGAS_lstringlist::constructor_emptyList (HERE)
                                                     COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumTypeGeneration::GALGAS_enumTypeGeneration (const cPtr_enumTypeGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_enumTypeGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumTypeGeneration GALGAS_enumTypeGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                      const GALGAS_lstringlist & inAttribute_mConstantOrderedList
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_enumTypeGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mConstantOrderedList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_enumTypeGeneration (inAttribute_mGenerationName, inAttribute_mConstantOrderedList COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumTypeGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_enumTypeGeneration * p = (cPtr_enumTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_enumTypeGeneration) ;
    cPtr_enumTypeGeneration * r = NULL ;
    macroMyNew (r, cPtr_enumTypeGeneration (p->mAttribute_mGenerationName, p->mAttribute_mConstantOrderedList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumTypeGeneration::reader_mConstantOrderedList (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_enumTypeGeneration * p = (const cPtr_enumTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_enumTypeGeneration) ;
    result = p->mAttribute_mConstantOrderedList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cPtr_enumTypeGeneration::reader_mConstantOrderedList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mConstantOrderedList ;
}

//-----------------------------------------------------------------------------*
//                 Pointer class for @enumTypeGeneration class                 *
//-----------------------------------------------------------------------------*

cPtr_enumTypeGeneration::cPtr_enumTypeGeneration (const GALGAS_string & in_mGenerationName,
                                                  const GALGAS_lstringlist & in_mConstantOrderedList
                                                  COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mConstantOrderedList (in_mConstantOrderedList) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_enumTypeGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumTypeGeneration ;
}

void cPtr_enumTypeGeneration::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "[@enumTypeGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mConstantOrderedList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @enumTypeGeneration type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumTypeGeneration ("enumTypeGeneration",
                                           & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumTypeGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumTypeGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumTypeGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumTypeGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumTypeGeneration GALGAS_enumTypeGeneration::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_enumTypeGeneration result ;
  const GALGAS_enumTypeGeneration * p = (const GALGAS_enumTypeGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumTypeGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumTypeGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_nibClassTypeGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (p->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (p->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (p->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (p->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (p->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (p->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (p->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayMap.objectCompare (p->mAttribute_mArrayMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_nibClassTypeGeneration::objectCompare (const GALGAS_nibClassTypeGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassTypeGeneration::GALGAS_nibClassTypeGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassTypeGeneration GALGAS_nibClassTypeGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_nibClassTypeGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                         GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                         GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                         GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                                         GALGAS_lstringlist::constructor_emptyList (HERE),
                                                         GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                                         GALGAS_fileInclusionSet::constructor_default (HERE),
                                                         GALGAS_controllerMap::constructor_emptyMap (HERE),
                                                         GALGAS_propertyArrayMap::constructor_emptyMap (HERE)
                                                         COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassTypeGeneration::GALGAS_nibClassTypeGeneration (const cPtr_nibClassTypeGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_nibClassTypeGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassTypeGeneration GALGAS_nibClassTypeGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                              const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForImplementation,
                                                                              const GALGAS_transientListForImplementation & inAttribute_mTransientListForImplementation,
                                                                              const GALGAS_outletGenerationList & inAttribute_mOutletDeclarationList,
                                                                              const GALGAS_lstringlist & inAttribute_mActionList,
                                                                              const GALGAS_observablePropertyMap & inAttribute_mObservablePropertyMap,
                                                                              const GALGAS_fileInclusionSet & inAttribute_mFileInclusionSet,
                                                                              const GALGAS_controllerMap & inAttribute_mControllerMap,
                                                                              const GALGAS_propertyArrayMap & inAttribute_mArrayMap
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_nibClassTypeGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mAttributeListForImplementation.isValid () && inAttribute_mTransientListForImplementation.isValid () && inAttribute_mOutletDeclarationList.isValid () && inAttribute_mActionList.isValid () && inAttribute_mObservablePropertyMap.isValid () && inAttribute_mFileInclusionSet.isValid () && inAttribute_mControllerMap.isValid () && inAttribute_mArrayMap.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_nibClassTypeGeneration (inAttribute_mGenerationName, inAttribute_mAttributeListForImplementation, inAttribute_mTransientListForImplementation, inAttribute_mOutletDeclarationList, inAttribute_mActionList, inAttribute_mObservablePropertyMap, inAttribute_mFileInclusionSet, inAttribute_mControllerMap, inAttribute_mArrayMap COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassTypeGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_nibClassTypeGeneration * p = (cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    cPtr_nibClassTypeGeneration * r = NULL ;
    macroMyNew (r, cPtr_nibClassTypeGeneration (p->mAttribute_mGenerationName, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mObservablePropertyMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mControllerMap, p->mAttribute_mArrayMap COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_nibClassTypeGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_nibClassTypeGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_nibClassTypeGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cPtr_nibClassTypeGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_nibClassTypeGeneration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList cPtr_nibClassTypeGeneration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_nibClassTypeGeneration::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cPtr_nibClassTypeGeneration::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_nibClassTypeGeneration::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_observablePropertyMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap cPtr_nibClassTypeGeneration::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_nibClassTypeGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  GALGAS_fileInclusionSet result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cPtr_nibClassTypeGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_nibClassTypeGeneration::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap cPtr_nibClassTypeGeneration::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_nibClassTypeGeneration::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_propertyArrayMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_nibClassTypeGeneration * p = (const cPtr_nibClassTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_nibClassTypeGeneration) ;
    result = p->mAttribute_mArrayMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap cPtr_nibClassTypeGeneration::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayMap ;
}

//-----------------------------------------------------------------------------*
//               Pointer class for @nibClassTypeGeneration class               *
//-----------------------------------------------------------------------------*

cPtr_nibClassTypeGeneration::cPtr_nibClassTypeGeneration (const GALGAS_string & in_mGenerationName,
                                                          const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                          const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                          const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                          const GALGAS_lstringlist & in_mActionList,
                                                          const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                          const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                          const GALGAS_controllerMap & in_mControllerMap,
                                                          const GALGAS_propertyArrayMap & in_mArrayMap
                                                          COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mArrayMap (in_mArrayMap) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_nibClassTypeGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nibClassTypeGeneration ;
}

void cPtr_nibClassTypeGeneration::description (C_String & ioString,
                                               const int32_t inIndentation) const {
  ioString << "[@nibClassTypeGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mArrayMap.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @nibClassTypeGeneration type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nibClassTypeGeneration ("nibClassTypeGeneration",
                                               & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nibClassTypeGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nibClassTypeGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nibClassTypeGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nibClassTypeGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassTypeGeneration GALGAS_nibClassTypeGeneration::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_nibClassTypeGeneration result ;
  const GALGAS_nibClassTypeGeneration * p = (const GALGAS_nibClassTypeGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nibClassTypeGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nibClassTypeGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_outletClassGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_outletClassGeneration * p = (const cPtr_outletClassGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_outletClassGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (p->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (p->mAttribute_mAdoptedProtocolList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (p->mAttribute_mImplementsDeallocProtocol) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentBindingMap.objectCompare (p->mAttribute_mCurrentBindingMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_outletClassGeneration::objectCompare (const GALGAS_outletClassGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassGeneration::GALGAS_outletClassGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassGeneration GALGAS_outletClassGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_outletClassGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                        GALGAS_string::constructor_default (HERE),
                                                        GALGAS_protocolList::constructor_emptyList (HERE),
                                                        GALGAS_bool::constructor_default (HERE),
                                                        GALGAS_outletClassBindingMap::constructor_emptyMap (HERE)
                                                        COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassGeneration::GALGAS_outletClassGeneration (const cPtr_outletClassGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_outletClassGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassGeneration GALGAS_outletClassGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                            const GALGAS_string & inAttribute_mSuperClassName,
                                                                            const GALGAS_protocolList & inAttribute_mAdoptedProtocolList,
                                                                            const GALGAS_bool & inAttribute_mImplementsDeallocProtocol,
                                                                            const GALGAS_outletClassBindingMap & inAttribute_mCurrentBindingMap
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mSuperClassName.isValid () && inAttribute_mAdoptedProtocolList.isValid () && inAttribute_mImplementsDeallocProtocol.isValid () && inAttribute_mCurrentBindingMap.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_outletClassGeneration (inAttribute_mGenerationName, inAttribute_mSuperClassName, inAttribute_mAdoptedProtocolList, inAttribute_mImplementsDeallocProtocol, inAttribute_mCurrentBindingMap COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_outletClassGeneration * p = (cPtr_outletClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_outletClassGeneration) ;
    cPtr_outletClassGeneration * r = NULL ;
    macroMyNew (r, cPtr_outletClassGeneration (p->mAttribute_mGenerationName, p->mAttribute_mSuperClassName, p->mAttribute_mAdoptedProtocolList, p->mAttribute_mImplementsDeallocProtocol, p->mAttribute_mCurrentBindingMap COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassGeneration::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_outletClassGeneration * p = (const cPtr_outletClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_outletClassGeneration) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_string cPtr_outletClassGeneration::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_outletClassGeneration::reader_mAdoptedProtocolList (UNUSED_LOCATION_ARGS) const {
  GALGAS_protocolList result ;
  if (NULL != mObjectPtr) {
    const cPtr_outletClassGeneration * p = (const cPtr_outletClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_outletClassGeneration) ;
    result = p->mAttribute_mAdoptedProtocolList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList cPtr_outletClassGeneration::reader_mAdoptedProtocolList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAdoptedProtocolList ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassGeneration::reader_mImplementsDeallocProtocol (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_outletClassGeneration * p = (const cPtr_outletClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_outletClassGeneration) ;
    result = p->mAttribute_mImplementsDeallocProtocol ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool cPtr_outletClassGeneration::reader_mImplementsDeallocProtocol (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementsDeallocProtocol ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassGeneration::reader_mCurrentBindingMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_outletClassGeneration * p = (const cPtr_outletClassGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_outletClassGeneration) ;
    result = p->mAttribute_mCurrentBindingMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cPtr_outletClassGeneration::reader_mCurrentBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentBindingMap ;
}

//-----------------------------------------------------------------------------*
//               Pointer class for @outletClassGeneration class                *
//-----------------------------------------------------------------------------*

cPtr_outletClassGeneration::cPtr_outletClassGeneration (const GALGAS_string & in_mGenerationName,
                                                        const GALGAS_string & in_mSuperClassName,
                                                        const GALGAS_protocolList & in_mAdoptedProtocolList,
                                                        const GALGAS_bool & in_mImplementsDeallocProtocol,
                                                        const GALGAS_outletClassBindingMap & in_mCurrentBindingMap
                                                        COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mAdoptedProtocolList (in_mAdoptedProtocolList),
mAttribute_mImplementsDeallocProtocol (in_mImplementsDeallocProtocol),
mAttribute_mCurrentBindingMap (in_mCurrentBindingMap) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_outletClassGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassGeneration ;
}

void cPtr_outletClassGeneration::description (C_String & ioString,
                                              const int32_t inIndentation) const {
  ioString << "[@outletClassGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAdoptedProtocolList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mCurrentBindingMap.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @outletClassGeneration type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassGeneration ("outletClassGeneration",
                                              & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassGeneration GALGAS_outletClassGeneration::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassGeneration result ;
  const GALGAS_outletClassGeneration * p = (const GALGAS_outletClassGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_preferenceTypeGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (p->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (p->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (p->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (p->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (p->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (p->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayMap.objectCompare (p->mAttribute_mArrayMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_preferenceTypeGeneration::objectCompare (const GALGAS_preferenceTypeGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferenceTypeGeneration::GALGAS_preferenceTypeGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_preferenceTypeGeneration GALGAS_preferenceTypeGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_preferenceTypeGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                           GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                           GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                           GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                                           GALGAS_lstringlist::constructor_emptyList (HERE),
                                                           GALGAS_fileInclusionSet::constructor_default (HERE),
                                                           GALGAS_controllerMap::constructor_emptyMap (HERE),
                                                           GALGAS_preferencesPropertyArrayMap::constructor_emptyMap (HERE)
                                                           COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferenceTypeGeneration::GALGAS_preferenceTypeGeneration (const cPtr_preferenceTypeGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_preferenceTypeGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferenceTypeGeneration GALGAS_preferenceTypeGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                                  const GALGAS_attributeListForImplementation & inAttribute_mAttributeListForImplementation,
                                                                                  const GALGAS_transientListForImplementation & inAttribute_mTransientListForImplementation,
                                                                                  const GALGAS_outletGenerationList & inAttribute_mOutletDeclarationList,
                                                                                  const GALGAS_lstringlist & inAttribute_mActionList,
                                                                                  const GALGAS_fileInclusionSet & inAttribute_mFileInclusionSet,
                                                                                  const GALGAS_controllerMap & inAttribute_mControllerMap,
                                                                                  const GALGAS_preferencesPropertyArrayMap & inAttribute_mArrayMap
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_preferenceTypeGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mAttributeListForImplementation.isValid () && inAttribute_mTransientListForImplementation.isValid () && inAttribute_mOutletDeclarationList.isValid () && inAttribute_mActionList.isValid () && inAttribute_mFileInclusionSet.isValid () && inAttribute_mControllerMap.isValid () && inAttribute_mArrayMap.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_preferenceTypeGeneration (inAttribute_mGenerationName, inAttribute_mAttributeListForImplementation, inAttribute_mTransientListForImplementation, inAttribute_mOutletDeclarationList, inAttribute_mActionList, inAttribute_mFileInclusionSet, inAttribute_mControllerMap, inAttribute_mArrayMap COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferenceTypeGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_preferenceTypeGeneration * p = (cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    cPtr_preferenceTypeGeneration * r = NULL ;
    macroMyNew (r, cPtr_preferenceTypeGeneration (p->mAttribute_mGenerationName, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mFileInclusionSet, p->mAttribute_mControllerMap, p->mAttribute_mArrayMap COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferenceTypeGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cPtr_preferenceTypeGeneration::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferenceTypeGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation cPtr_preferenceTypeGeneration::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferenceTypeGeneration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList cPtr_preferenceTypeGeneration::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferenceTypeGeneration::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist cPtr_preferenceTypeGeneration::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_preferenceTypeGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  GALGAS_fileInclusionSet result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet cPtr_preferenceTypeGeneration::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_preferenceTypeGeneration::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_controllerMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap cPtr_preferenceTypeGeneration::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap GALGAS_preferenceTypeGeneration::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  GALGAS_preferencesPropertyArrayMap result ;
  if (NULL != mObjectPtr) {
    const cPtr_preferenceTypeGeneration * p = (const cPtr_preferenceTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_preferenceTypeGeneration) ;
    result = p->mAttribute_mArrayMap ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap cPtr_preferenceTypeGeneration::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayMap ;
}

//-----------------------------------------------------------------------------*
//              Pointer class for @preferenceTypeGeneration class              *
//-----------------------------------------------------------------------------*

cPtr_preferenceTypeGeneration::cPtr_preferenceTypeGeneration (const GALGAS_string & in_mGenerationName,
                                                              const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                              const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                              const GALGAS_lstringlist & in_mActionList,
                                                              const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                              const GALGAS_controllerMap & in_mControllerMap,
                                                              const GALGAS_preferencesPropertyArrayMap & in_mArrayMap
                                                              COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mArrayMap (in_mArrayMap) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_preferenceTypeGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceTypeGeneration ;
}

void cPtr_preferenceTypeGeneration::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "[@preferenceTypeGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mArrayMap.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @preferenceTypeGeneration type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferenceTypeGeneration ("preferenceTypeGeneration",
                                                 & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferenceTypeGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceTypeGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferenceTypeGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferenceTypeGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferenceTypeGeneration GALGAS_preferenceTypeGeneration::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_preferenceTypeGeneration result ;
  const GALGAS_preferenceTypeGeneration * p = (const GALGAS_preferenceTypeGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferenceTypeGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferenceTypeGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//   Object comparison                                                         *
//-----------------------------------------------------------------------------*

typeComparisonResult cPtr_structTypeGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_structTypeGeneration * p = (const cPtr_structTypeGeneration *) inOperandPtr ;
  macroValidSharedObject (p, cPtr_structTypeGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationName.objectCompare (p->mAttribute_mGenerationName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFieldList.objectCompare (p->mAttribute_mFieldList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHeaderFileInclusionSet.objectCompare (p->mAttribute_mHeaderFileInclusionSet) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*


typeComparisonResult GALGAS_structTypeGeneration::objectCompare (const GALGAS_structTypeGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const int32_t mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const int32_t operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeGeneration::GALGAS_structTypeGeneration (void) :
GALGAS_generation () {
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeGeneration GALGAS_structTypeGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_structTypeGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                       GALGAS_structFieldList::constructor_emptyList (HERE),
                                                       GALGAS_stringset::constructor_emptySet (HERE)
                                                       COMMA_THERE) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeGeneration::GALGAS_structTypeGeneration (const cPtr_structTypeGeneration * inSourcePtr) :
GALGAS_generation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, cPtr_structTypeGeneration) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeGeneration GALGAS_structTypeGeneration::constructor_new (const GALGAS_string & inAttribute_mGenerationName,
                                                                          const GALGAS_structFieldList & inAttribute_mFieldList,
                                                                          const GALGAS_stringset & inAttribute_mHeaderFileInclusionSet
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_structTypeGeneration result ;
  if (inAttribute_mGenerationName.isValid () && inAttribute_mFieldList.isValid () && inAttribute_mHeaderFileInclusionSet.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_structTypeGeneration (inAttribute_mGenerationName, inAttribute_mFieldList, inAttribute_mHeaderFileInclusionSet COMMA_THERE)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structTypeGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_structTypeGeneration * p = (cPtr_structTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_structTypeGeneration) ;
    cPtr_structTypeGeneration * r = NULL ;
    macroMyNew (r, cPtr_structTypeGeneration (p->mAttribute_mGenerationName, p->mAttribute_mFieldList, p->mAttribute_mHeaderFileInclusionSet COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structTypeGeneration::reader_mFieldList (UNUSED_LOCATION_ARGS) const {
  GALGAS_structFieldList result ;
  if (NULL != mObjectPtr) {
    const cPtr_structTypeGeneration * p = (const cPtr_structTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_structTypeGeneration) ;
    result = p->mAttribute_mFieldList ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList cPtr_structTypeGeneration::reader_mFieldList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldList ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset GALGAS_structTypeGeneration::reader_mHeaderFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  GALGAS_stringset result ;
  if (NULL != mObjectPtr) {
    const cPtr_structTypeGeneration * p = (const cPtr_structTypeGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_structTypeGeneration) ;
    result = p->mAttribute_mHeaderFileInclusionSet ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset cPtr_structTypeGeneration::reader_mHeaderFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderFileInclusionSet ;
}

//-----------------------------------------------------------------------------*
//                Pointer class for @structTypeGeneration class                *
//-----------------------------------------------------------------------------*

cPtr_structTypeGeneration::cPtr_structTypeGeneration (const GALGAS_string & in_mGenerationName,
                                                      const GALGAS_structFieldList & in_mFieldList,
                                                      const GALGAS_stringset & in_mHeaderFileInclusionSet
                                                      COMMA_LOCATION_ARGS) :
cPtr_generation (in_mGenerationName COMMA_THERE),
mAttribute_mFieldList (in_mFieldList),
mAttribute_mHeaderFileInclusionSet (in_mHeaderFileInclusionSet) {
}

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_structTypeGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structTypeGeneration ;
}

void cPtr_structTypeGeneration::description (C_String & ioString,
                                             const int32_t inIndentation) const {
  ioString << "[@structTypeGeneration:" ;
  mAttribute_mGenerationName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mFieldList.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mHeaderFileInclusionSet.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @structTypeGeneration type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structTypeGeneration ("structTypeGeneration",
                                             & kTypeDescriptor_GALGAS_generation) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structTypeGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structTypeGeneration ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structTypeGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structTypeGeneration (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeGeneration GALGAS_structTypeGeneration::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_structTypeGeneration result ;
  const GALGAS_structTypeGeneration * p = (const GALGAS_structTypeGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structTypeGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structTypeGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//          Abstract category method '@astDeclaration typeInventory'           *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_astDeclaration_typeInventory> gCategoryMethodTable_astDeclaration_typeInventory ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_typeInventory (const int32_t inClassIndex,
                                        categoryMethodSignature_astDeclaration_typeInventory inMethod) {
  gCategoryMethodTable_astDeclaration_typeInventory.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_astDeclaration_typeInventory (void) {
  gCategoryMethodTable_astDeclaration_typeInventory.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_astDeclaration_typeInventory (NULL,
                                                         freeCategoryMethod_astDeclaration_typeInventory) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_typeInventory (const cPtr_astDeclaration * inObject,
                                       GALGAS_unifiedTypeMap & io_ioUnifiedTypeMap,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_astDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_astDeclaration_typeInventory f = NULL ;
    if (classIndex < gCategoryMethodTable_astDeclaration_typeInventory.count ()) {
      f = gCategoryMethodTable_astDeclaration_typeInventory (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_astDeclaration_typeInventory.count ()) {
           f = gCategoryMethodTable_astDeclaration_typeInventory (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_astDeclaration_typeInventory.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, io_ioUnifiedTypeMap, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebType::GALGAS_ebType (void) :
mAttribute_mTypeName (),
mAttribute_mKind () {
}

//-----------------------------------------------------------------------------*

GALGAS_ebType::~ GALGAS_ebType (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_ebType::GALGAS_ebType (const GALGAS_lstring & inOperand0,
                              const GALGAS_typeKind & inOperand1) :
mAttribute_mTypeName (inOperand0),
mAttribute_mKind (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebType::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_ebType (GALGAS_lstring::constructor_default (HERE),
                        GALGAS_typeKind::constructor_classType (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebType::constructor_new (const GALGAS_lstring & inOperand0,
                                              const GALGAS_typeKind & inOperand1 
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ebType result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_ebType (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_ebType::objectCompare (const GALGAS_ebType & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTypeName.objectCompare (inOperand.mAttribute_mTypeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mKind.objectCompare (inOperand.mAttribute_mKind) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_ebType::isValid (void) const {
  return mAttribute_mTypeName.isValid () && mAttribute_mKind.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebType::drop (void) {
  mAttribute_mTypeName.drop () ;
  mAttribute_mKind.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebType::description (C_String & ioString,
                                 const int32_t inIndentation) const {
  ioString << "<struct @ebType:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTypeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mKind.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_ebType::reader_mTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_ebType::reader_mKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mKind ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                                @ebType type                                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ebType ("ebType",
                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ebType::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ebType ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ebType::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ebType (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebType::extractObject (const GALGAS_object & inObject,
                                            C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) {
  GALGAS_ebType result ;
  const GALGAS_ebType * p = (const GALGAS_ebType *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ebType *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ebType", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//                     Category Reader '@ebType isPODtype'                     *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_bool categoryReader_isPODtype (const GALGAS_ebType & inObject,
                                      C_Compiler * /* inCompiler */
                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: {
      result_outResult = GALGAS_bool (false) ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_bool (true) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    Category Reader '@ebType ebTypeName'                     *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_ebTypeName (const GALGAS_ebType & inObject,
                                         C_Compiler * /* inCompiler */
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_enumType: case GALGAS_typeKind::kEnum_structType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string ;
      } break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("BOOL") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSInteger") ;
      } break ;
    case GALGAS_typeKind::kEnum_uintegerType: {
      result_outResult = GALGAS_string ("NSUInteger") ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("double") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                  Category Reader '@ebType equalExpression'                  *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_equalExpression (const GALGAS_ebType & inObject,
                                              const GALGAS_string & constinArgument_inExp_31_,
                                              const GALGAS_string & constinArgument_inExp_32_,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: {
      result_outResult = GALGAS_string ("[").operator_concat (constinArgument_inExp_31_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 75)).operator_concat (GALGAS_string (" isEqual:")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 75)).operator_concat (constinArgument_inExp_32_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 75)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 75)) ;
      } break ;
    case GALGAS_typeKind::kEnum_stringType: {
      result_outResult = GALGAS_string ("[").operator_concat (constinArgument_inExp_31_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 77)).operator_concat (GALGAS_string (" isEqualToString:")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 77)).operator_concat (constinArgument_inExp_32_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 77)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 77)) ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: {
      result_outResult = GALGAS_string ("equal").operator_concat (inObject.mAttribute_mTypeName.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 79))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 79)).operator_concat (GALGAS_string ("s (")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 79)).operator_concat (constinArgument_inExp_31_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 79)).operator_concat (GALGAS_string (", ")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 79)).operator_concat (constinArgument_inExp_32_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 79)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 79)) ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = constinArgument_inExp_31_.operator_concat (GALGAS_string (" == ")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 81)).operator_concat (constinArgument_inExp_32_  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 81)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    Category Reader '@ebType ocTypeName'                     *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_ocTypeName (const GALGAS_ebType & inObject,
                                         C_Compiler * /* inCompiler */
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string.operator_concat (GALGAS_string (" *")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 97)) ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string ;
      } break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("BOOL") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSInteger") ;
      } break ;
    case GALGAS_typeKind::kEnum_uintegerType: {
      result_outResult = GALGAS_string ("NSUInteger") ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("double") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                   Category Reader '@ebType swiftTypeName'                   *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_swiftTypeName (const GALGAS_ebType & inObject,
                                            C_Compiler * /* inCompiler */
                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string ;
      } break ;
    case GALGAS_typeKind::kEnum_stringType: {
      result_outResult = GALGAS_string ("String") ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string ;
      } break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("Bool") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("Int64") ;
      } break ;
    case GALGAS_typeKind::kEnum_uintegerType: {
      result_outResult = GALGAS_string ("UInt") ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("Double") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                 Category Reader '@ebType swiftDefaultValue'                 *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_swiftDefaultValue (const GALGAS_ebType & inObject,
                                                C_Compiler * /* inCompiler */
                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: {
      result_outResult = GALGAS_string ("nil") ;
      } break ;
    case GALGAS_typeKind::kEnum_stringType: {
      result_outResult = GALGAS_string ("\"\"") ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string ;
      } break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("false") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("0") ;
      } break ;
    case GALGAS_typeKind::kEnum_uintegerType: {
      result_outResult = GALGAS_string ("0") ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("0.0") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//          Category Reader '@ebType dictionarySaverTransformerName'           *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_dictionarySaverTransformerName (const GALGAS_ebType & inObject,
                                                             GALGAS_string inArgument_inName,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = inArgument_inName ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = inArgument_inName.operator_concat (GALGAS_string (".toRaw ()")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 183)) ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSNumber (longLong:").operator_concat (inArgument_inName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 185)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 185)) ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: {
      result_outResult = GALGAS_string ("NSArchiver.archivedDataWithRootObject (").operator_concat (inArgument_inName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 187)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 187)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                Category Reader '@ebType valueForUndoManager'                *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_valueForUndoManager (const GALGAS_ebType & inObject,
                                                  GALGAS_string inArgument_inName,
                                                  C_Compiler * /* inCompiler */
                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_enumType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = inArgument_inName ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSNumber (longLong:").operator_concat (inArgument_inName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 207)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 207)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//              Category Reader '@ebType propertyAttributeString'              *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_propertyAttributeString (const GALGAS_ebType & inObject,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_protocolType: {
      result_outResult = GALGAS_string (" (copy)") ;
      } break ;
    case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                   Category Reader '@ebType copyOnAssign'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_bool categoryReader_copyOnAssign (const GALGAS_ebType & inObject,
                                         C_Compiler * /* inCompiler */
                                         COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: {
      result_outResult = GALGAS_bool (true) ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_bool (false) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//       Category Reader '@ebType requiredCellTypeInTableColumnBinding'        *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_requiredCellTypeInTableColumnBinding (const GALGAS_ebType & inObject,
                                                                   C_Compiler * /* inCompiler */
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_dateType: {
      result_outResult = GALGAS_string ("NSDateFieldCell") ;
      } break ;
    case GALGAS_typeKind::kEnum_imageType: {
      result_outResult = GALGAS_string ("NSImageCell") ;
      } break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("NSButtonCell") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_stringType: {
      result_outResult = GALGAS_string ("NSTextFieldCell") ;
      } break ;
    case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//     Category Reader '@ebType preferencesGetterTransformerFunctionName'      *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_preferencesGetterTransformerFunctionName (const GALGAS_ebType & inObject,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("boolFromNSNumber") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSIntegerFromNSNumber") ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_string ("(").operator_concat (inObject.mAttribute_mTypeName.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 290))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 290)).operator_concat (GALGAS_string (") NSIntegerFromNSNumber")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 290)) ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("doubleFromNSNumber") ;
      } break ;
    case GALGAS_typeKind::kEnum_fontType: {
      result_outResult = GALGAS_string ("fontFromData") ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: {
      result_outResult = GALGAS_string ("valueFromData") ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string.operator_concat (GALGAS_string ("FromData")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 298)) ;
      } break ;
    case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: {
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//              Category Reader '@ebType preferencesSwiftGetter'               *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_preferencesSwiftGetter (const GALGAS_ebType & inObject,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("(value as NSNumber).boolValue ()") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("(value as NSNumber).longLongValue ()") ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_string ("(").operator_concat (inObject.mAttribute_mTypeName.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 321))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 321)).operator_concat (GALGAS_string (") NSIntegerFromNSNumber")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 321)) ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("(value as NSNumber).doubleValue ()") ;
      } break ;
    case GALGAS_typeKind::kEnum_fontType: {
      result_outResult = GALGAS_string ("NSUnarchiver.unarchiveObjectWithData (value as NSData) as NSFont") ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: {
      result_outResult = GALGAS_string ("NSUnarchiver.unarchiveObjectWithData (value as NSData) as NSColor") ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string.operator_concat (GALGAS_string ("FromData")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 329)) ;
      } break ;
    case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: {
      result_outResult = GALGAS_string ("value as ").operator_concat (inObject.mAttribute_mTypeName.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 335)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//              Category Reader '@ebType preferencesSwiftSetter'               *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_preferencesSwiftSetter (const GALGAS_ebType & inObject,
                                                     const GALGAS_string & constinArgument_inValueName,
                                                     C_Compiler * /* inCompiler */
                                                     COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("NSNumber.numberWithBool (").operator_concat (constinArgument_inValueName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 349)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 349)) ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSNumber.numberWithLongLong (").operator_concat (constinArgument_inValueName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 351)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 351)) ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_string ("(").operator_concat (inObject.mAttribute_mTypeName.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 353))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 353)).operator_concat (GALGAS_string (") NSIntegerFromNSNumber")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 353)) ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("NSNumber.numberWithDouble (").operator_concat (constinArgument_inValueName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 355)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 355)) ;
      } break ;
    case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: {
      result_outResult = GALGAS_string ("NSArchiver.archivedDataWithRootObject (").operator_concat (constinArgument_inValueName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 357)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 357)) ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string.operator_concat (GALGAS_string ("FromData")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 359)) ;
      } break ;
    case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: {
      result_outResult = constinArgument_inValueName ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//     Category Reader '@ebType preferencesSetterTransformerFunctionName'      *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_preferencesSetterTransformerFunctionName (const GALGAS_ebType & inObject,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = GALGAS_string ("numberEncodedBool") ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = GALGAS_string ("numberEncodedNSInteger") ;
      } break ;
    case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("numberEncodedDouble") ;
      } break ;
    case GALGAS_typeKind::kEnum_fontType: {
      result_outResult = GALGAS_string ("dataFromFont") ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: {
      result_outResult = GALGAS_string ("dataEncodedValue") ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: {
      result_outResult = GALGAS_string ("dataEncoded").operator_concat (inObject.mAttribute_mTypeName.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 388)) ;
      } break ;
    case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: {
      result_outResult = GALGAS_string::makeEmptyString () ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                      Category Reader '@ebType isClass'                      *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_bool categoryReader_isClass (const GALGAS_ebType & inObject,
                                    C_Compiler * /* inCompiler */
                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bool result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_enumType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_structType: {
      result_outResult = GALGAS_bool (false) ;
      } break ;
    case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: case GALGAS_typeKind::kEnum_entityType: {
      result_outResult = GALGAS_bool (true) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//           Category Reader '@ebType functionForComputingSignature'           *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_functionForComputingSignature (const GALGAS_ebType & inObject,
                                                            const GALGAS_bool & constinArgument_inIsToMany,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  const enumGalgasBool test_0 = constinArgument_inIsToMany.boolEnum () ;
  if (kBoolTrue == test_0) {
    result_outResult = GALGAS_string ("computeToManyEntitySignature") ;
  }else if (kBoolFalse == test_0) {
    if (inObject.mAttribute_mKind.isValid ()) {
      switch (inObject.mAttribute_mKind.enumValue ()) {
      case GALGAS_typeKind::kNotBuilt:
        break ;
      case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_enumType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_structType: {
        result_outResult = GALGAS_string ("computeIntegerSignature") ;
        } break ;
      case GALGAS_typeKind::kEnum_stringType: {
        result_outResult = GALGAS_string ("computeNSStringSignature") ;
        } break ;
      case GALGAS_typeKind::kEnum_entityType: {
        result_outResult = GALGAS_string ("computeToOneEntitySignature") ;
        } break ;
      case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: {
        result_outResult = GALGAS_string::makeEmptyString () ;
        } break ;
      }
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//             Category method '@ebType addInclusionInHeaderFile'              *
//                                                                             *
//-----------------------------------------------------------------------------*

void categoryMethod_addInclusionInHeaderFile (const GALGAS_ebType inObject,
                                              GALGAS_stringset & ioArgument_ioInclusionSet,
                                              C_Compiler * /* inCompiler */
                                              COMMA_UNUSED_LOCATION_ARGS) {
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: {
      } break ;
    case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      ioArgument_ioInclusionSet.addAssign_operation (inObject.mAttribute_mTypeName.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 464)) ;
      } break ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//         Category method '@ebType addInclusionInImplementationFile'          *
//                                                                             *
//-----------------------------------------------------------------------------*

void categoryMethod_addInclusionInImplementationFile (const GALGAS_ebType inObject,
                                                      GALGAS_stringset & ioArgument_ioInclusionSet,
                                                      C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: {
      } break ;
    case GALGAS_typeKind::kEnum_entityType: {
      ioArgument_ioInclusionSet.addAssign_operation (inObject.mAttribute_mTypeName.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 485)) ;
      } break ;
    }
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//          Category Reader '@ebType valueAccessorForExplorerWindow'           *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_valueAccessorForExplorerWindow (const GALGAS_ebType & inObject,
                                                             const GALGAS_string & constinArgument_inName,
                                                             C_Compiler * /* inCompiler */
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: {
      result_outResult = constinArgument_inName ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = constinArgument_inName.operator_concat (GALGAS_string (".string ()")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 507)) ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: {
      result_outResult = constinArgument_inName.operator_concat (GALGAS_string (".description")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 509)) ;
      } break ;
    case GALGAS_typeKind::kEnum_integerType: {
      result_outResult = GALGAS_string ("NSString (format:\"%lld\", ").operator_concat (constinArgument_inName  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 511)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 511)) ;
      } break ;
    case GALGAS_typeKind::kEnum_boolType: {
      result_outResult = constinArgument_inName.operator_concat (GALGAS_string (" \? \"true\" : \"false\"")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 513)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//               Category Reader '@ebType keyPathForObservable'                *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_keyPathForObservable (const GALGAS_ebType & inObject,
                                                   const GALGAS_string & constinArgument_inName,
                                                   C_Compiler * /* inCompiler */
                                                   COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: case GALGAS_typeKind::kEnum_fontType: case GALGAS_typeKind::kEnum_bezierPathType: case GALGAS_typeKind::kEnum_menuType: case GALGAS_typeKind::kEnum_dateType: case GALGAS_typeKind::kEnum_imageType: case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_dataType: case GALGAS_typeKind::kEnum_stringType: case GALGAS_typeKind::kEnum_colorType: case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: {
      result_outResult = constinArgument_inName ;
      } break ;
    case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = constinArgument_inName.operator_concat (GALGAS_string ("__as__number")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 535)) ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*
//                                                                             *
//                    Category Reader '@ebType ocClassName'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

GALGAS_string categoryReader_ocClassName (const GALGAS_ebType & inObject,
                                          C_Compiler * /* inCompiler */
                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_string result_outResult ; // Returned variable
  if (inObject.mAttribute_mKind.isValid ()) {
    switch (inObject.mAttribute_mKind.enumValue ()) {
    case GALGAS_typeKind::kNotBuilt:
      break ;
    case GALGAS_typeKind::kEnum_boolType: case GALGAS_typeKind::kEnum_integerType: case GALGAS_typeKind::kEnum_uintegerType: case GALGAS_typeKind::kEnum_doubleType: {
      result_outResult = GALGAS_string ("NSNumber") ;
      } break ;
    case GALGAS_typeKind::kEnum_fontType: {
      result_outResult = GALGAS_string ("NSFont") ;
      } break ;
    case GALGAS_typeKind::kEnum_stringType: {
      result_outResult = GALGAS_string ("NSString") ;
      } break ;
    case GALGAS_typeKind::kEnum_imageType: {
      result_outResult = GALGAS_string ("NSImage") ;
      } break ;
    case GALGAS_typeKind::kEnum_dataType: {
      result_outResult = GALGAS_string ("NSData") ;
      } break ;
    case GALGAS_typeKind::kEnum_colorType: {
      result_outResult = GALGAS_string ("NSColor") ;
      } break ;
    case GALGAS_typeKind::kEnum_dateType: {
      result_outResult = GALGAS_string ("NSDate") ;
      } break ;
    case GALGAS_typeKind::kEnum_menuType: {
      result_outResult = GALGAS_string ("NSMenu") ;
      } break ;
    case GALGAS_typeKind::kEnum_bezierPathType: {
      result_outResult = GALGAS_string ("NSBezierPath") ;
      } break ;
    case GALGAS_typeKind::kEnum_structType: case GALGAS_typeKind::kEnum_enumType: {
      result_outResult = inObject.mAttribute_mTypeName.mAttribute_string ;
      } break ;
    case GALGAS_typeKind::kEnum_protocolType: case GALGAS_typeKind::kEnum_entityType: case GALGAS_typeKind::kEnum_nibClassType: case GALGAS_typeKind::kEnum_outletClassType: case GALGAS_typeKind::kEnum_preferencesType: case GALGAS_typeKind::kEnum_classType: case GALGAS_typeKind::kEnum_controllerClassType: case GALGAS_typeKind::kEnum_documentType: {
      result_outResult = GALGAS_string ("**@ebType ocClassName**") ;
      } break ;
    }
  }
//---
  return result_outResult ;
}




//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet::GALGAS_fileInclusionSet (void) :
mAttribute_mHeaderPredeclarationSet (),
mAttribute_mHeaderFileInclusionSet (),
mAttribute_mImplementationFileInclusionSet () {
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet::~ GALGAS_fileInclusionSet (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet::GALGAS_fileInclusionSet (const GALGAS_stringset & inOperand0,
                                                  const GALGAS_stringset & inOperand1,
                                                  const GALGAS_stringset & inOperand2) :
mAttribute_mHeaderPredeclarationSet (inOperand0),
mAttribute_mHeaderFileInclusionSet (inOperand1),
mAttribute_mImplementationFileInclusionSet (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_fileInclusionSet::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_fileInclusionSet (GALGAS_stringset::constructor_emptySet (HERE),
                                  GALGAS_stringset::constructor_emptySet (HERE),
                                  GALGAS_stringset::constructor_emptySet (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_fileInclusionSet::constructor_new (const GALGAS_stringset & inOperand0,
                                                                  const GALGAS_stringset & inOperand1,
                                                                  const GALGAS_stringset & inOperand2 
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_fileInclusionSet result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_fileInclusionSet (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_fileInclusionSet::objectCompare (const GALGAS_fileInclusionSet & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderPredeclarationSet.objectCompare (inOperand.mAttribute_mHeaderPredeclarationSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderFileInclusionSet.objectCompare (inOperand.mAttribute_mHeaderFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_fileInclusionSet::isValid (void) const {
  return mAttribute_mHeaderPredeclarationSet.isValid () && mAttribute_mHeaderFileInclusionSet.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_fileInclusionSet::drop (void) {
  mAttribute_mHeaderPredeclarationSet.drop () ;
  mAttribute_mHeaderFileInclusionSet.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_fileInclusionSet::description (C_String & ioString,
                                           const int32_t inIndentation) const {
  ioString << "<struct @fileInclusionSet:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mHeaderPredeclarationSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHeaderFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset GALGAS_fileInclusionSet::reader_mHeaderPredeclarationSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderPredeclarationSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset GALGAS_fileInclusionSet::reader_mHeaderFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringset GALGAS_fileInclusionSet::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @fileInclusionSet type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_fileInclusionSet ("fileInclusionSet",
                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_fileInclusionSet::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_fileInclusionSet ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_fileInclusionSet::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_fileInclusionSet (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_fileInclusionSet::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_fileInclusionSet result ;
  const GALGAS_fileInclusionSet * p = (const GALGAS_fileInclusionSet *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_fileInclusionSet *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("fileInclusionSet", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct::GALGAS_contextAnalysisStruct (void) :
mAttribute_mObservablePropertyMapMap (),
mAttribute_mStructTypeMap (),
mAttribute_mEnumMap (),
mAttribute_mGlobalEnumConstantMap (),
mAttribute_mUserCursorMap (),
mAttribute_mClassMap (),
mAttribute_mProtocolMap (),
mAttribute_mPreferencesMap (),
mAttribute_mEntityMap (),
mAttribute_mControllerClassMap (),
mAttribute_mOutletClassMap (),
mAttribute_mTransientDependencyGraph (),
mAttribute_mContainsDocument () {
}

//-----------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct::~ GALGAS_contextAnalysisStruct (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct::GALGAS_contextAnalysisStruct (const GALGAS_observablePropertyMapMap & inOperand0,
                                                            const GALGAS_structTypeMap & inOperand1,
                                                            const GALGAS_enumMap & inOperand2,
                                                            const GALGAS_globalEnumConstantMap & inOperand3,
                                                            const GALGAS_userCursorMap & inOperand4,
                                                            const GALGAS_classMap & inOperand5,
                                                            const GALGAS_protocolMap & inOperand6,
                                                            const GALGAS_preferencesMap & inOperand7,
                                                            const GALGAS_entityMap & inOperand8,
                                                            const GALGAS_controllerClassMap & inOperand9,
                                                            const GALGAS_outletClassMap & inOperand10,
                                                            const GALGAS_transientDependencyGraph & inOperand11,
                                                            const GALGAS_bool & inOperand12) :
mAttribute_mObservablePropertyMapMap (inOperand0),
mAttribute_mStructTypeMap (inOperand1),
mAttribute_mEnumMap (inOperand2),
mAttribute_mGlobalEnumConstantMap (inOperand3),
mAttribute_mUserCursorMap (inOperand4),
mAttribute_mClassMap (inOperand5),
mAttribute_mProtocolMap (inOperand6),
mAttribute_mPreferencesMap (inOperand7),
mAttribute_mEntityMap (inOperand8),
mAttribute_mControllerClassMap (inOperand9),
mAttribute_mOutletClassMap (inOperand10),
mAttribute_mTransientDependencyGraph (inOperand11),
mAttribute_mContainsDocument (inOperand12) {
}

//-----------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct GALGAS_contextAnalysisStruct::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_contextAnalysisStruct (GALGAS_observablePropertyMapMap::constructor_emptyMap (HERE),
                                       GALGAS_structTypeMap::constructor_emptyMap (HERE),
                                       GALGAS_enumMap::constructor_emptyMap (HERE),
                                       GALGAS_globalEnumConstantMap::constructor_emptyMap (HERE),
                                       GALGAS_userCursorMap::constructor_emptyMap (HERE),
                                       GALGAS_classMap::constructor_emptyMap (HERE),
                                       GALGAS_protocolMap::constructor_emptyMap (HERE),
                                       GALGAS_preferencesMap::constructor_emptyMap (HERE),
                                       GALGAS_entityMap::constructor_emptyMap (HERE),
                                       GALGAS_controllerClassMap::constructor_emptyMap (HERE),
                                       GALGAS_outletClassMap::constructor_emptyMap (HERE),
                                       GALGAS_transientDependencyGraph::constructor_emptyGraph (HERE),
                                       GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct GALGAS_contextAnalysisStruct::constructor_new (const GALGAS_observablePropertyMapMap & inOperand0,
                                                                            const GALGAS_structTypeMap & inOperand1,
                                                                            const GALGAS_enumMap & inOperand2,
                                                                            const GALGAS_globalEnumConstantMap & inOperand3,
                                                                            const GALGAS_userCursorMap & inOperand4,
                                                                            const GALGAS_classMap & inOperand5,
                                                                            const GALGAS_protocolMap & inOperand6,
                                                                            const GALGAS_preferencesMap & inOperand7,
                                                                            const GALGAS_entityMap & inOperand8,
                                                                            const GALGAS_controllerClassMap & inOperand9,
                                                                            const GALGAS_outletClassMap & inOperand10,
                                                                            const GALGAS_transientDependencyGraph & inOperand11,
                                                                            const GALGAS_bool & inOperand12 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_contextAnalysisStruct result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid ()) {
    result = GALGAS_contextAnalysisStruct (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_contextAnalysisStruct::objectCompare (const GALGAS_contextAnalysisStruct & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMapMap.objectCompare (inOperand.mAttribute_mObservablePropertyMapMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mStructTypeMap.objectCompare (inOperand.mAttribute_mStructTypeMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumMap.objectCompare (inOperand.mAttribute_mEnumMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGlobalEnumConstantMap.objectCompare (inOperand.mAttribute_mGlobalEnumConstantMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUserCursorMap.objectCompare (inOperand.mAttribute_mUserCursorMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mClassMap.objectCompare (inOperand.mAttribute_mClassMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mProtocolMap.objectCompare (inOperand.mAttribute_mProtocolMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPreferencesMap.objectCompare (inOperand.mAttribute_mPreferencesMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEntityMap.objectCompare (inOperand.mAttribute_mEntityMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerClassMap.objectCompare (inOperand.mAttribute_mControllerClassMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassMap.objectCompare (inOperand.mAttribute_mOutletClassMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientDependencyGraph.objectCompare (inOperand.mAttribute_mTransientDependencyGraph) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mContainsDocument.objectCompare (inOperand.mAttribute_mContainsDocument) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_contextAnalysisStruct::isValid (void) const {
  return mAttribute_mObservablePropertyMapMap.isValid () && mAttribute_mStructTypeMap.isValid () && mAttribute_mEnumMap.isValid () && mAttribute_mGlobalEnumConstantMap.isValid () && mAttribute_mUserCursorMap.isValid () && mAttribute_mClassMap.isValid () && mAttribute_mProtocolMap.isValid () && mAttribute_mPreferencesMap.isValid () && mAttribute_mEntityMap.isValid () && mAttribute_mControllerClassMap.isValid () && mAttribute_mOutletClassMap.isValid () && mAttribute_mTransientDependencyGraph.isValid () && mAttribute_mContainsDocument.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_contextAnalysisStruct::drop (void) {
  mAttribute_mObservablePropertyMapMap.drop () ;
  mAttribute_mStructTypeMap.drop () ;
  mAttribute_mEnumMap.drop () ;
  mAttribute_mGlobalEnumConstantMap.drop () ;
  mAttribute_mUserCursorMap.drop () ;
  mAttribute_mClassMap.drop () ;
  mAttribute_mProtocolMap.drop () ;
  mAttribute_mPreferencesMap.drop () ;
  mAttribute_mEntityMap.drop () ;
  mAttribute_mControllerClassMap.drop () ;
  mAttribute_mOutletClassMap.drop () ;
  mAttribute_mTransientDependencyGraph.drop () ;
  mAttribute_mContainsDocument.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_contextAnalysisStruct::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "<struct @contextAnalysisStruct:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mObservablePropertyMapMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mStructTypeMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGlobalEnumConstantMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUserCursorMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mClassMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mProtocolMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPreferencesMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEntityMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerClassMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientDependencyGraph.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mContainsDocument.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap GALGAS_contextAnalysisStruct::reader_mObservablePropertyMapMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMapMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_contextAnalysisStruct::reader_mStructTypeMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStructTypeMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_contextAnalysisStruct::reader_mEnumMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_contextAnalysisStruct::reader_mGlobalEnumConstantMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGlobalEnumConstantMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_contextAnalysisStruct::reader_mUserCursorMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUserCursorMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap GALGAS_contextAnalysisStruct::reader_mClassMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mClassMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_contextAnalysisStruct::reader_mProtocolMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProtocolMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_contextAnalysisStruct::reader_mPreferencesMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferencesMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_contextAnalysisStruct::reader_mEntityMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_contextAnalysisStruct::reader_mControllerClassMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerClassMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_contextAnalysisStruct::reader_mOutletClassMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_contextAnalysisStruct::reader_mTransientDependencyGraph (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientDependencyGraph ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_contextAnalysisStruct::reader_mContainsDocument (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mContainsDocument ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @contextAnalysisStruct type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_contextAnalysisStruct ("contextAnalysisStruct",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_contextAnalysisStruct::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_contextAnalysisStruct ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_contextAnalysisStruct::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_contextAnalysisStruct (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct GALGAS_contextAnalysisStruct::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_contextAnalysisStruct result ;
  const GALGAS_contextAnalysisStruct * p = (const GALGAS_contextAnalysisStruct *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_contextAnalysisStruct *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("contextAnalysisStruct", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Abstract category reader '@abstractBindingForGeneration generateObjectiveCBinding'*
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateObjectiveCBinding> gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding ;

//-----------------------------------------------------------------------------*

void enterCategoryReader_generateObjectiveCBinding (const int32_t inClassIndex,
                                                    categoryReaderSignature_abstractBindingForGeneration_generateObjectiveCBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateObjectiveCBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateObjectiveCBinding (NULL,
                                                                                   freeCategoryReader_abstractBindingForGeneration_generateObjectiveCBinding) ;

//-----------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateObjectiveCBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                            const GALGAS_string & in_inOutletName,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateObjectiveCBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Abstract category reader '@abstractBindingForGeneration generateSwiftBinding'*
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateSwiftBinding> gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding ;

//-----------------------------------------------------------------------------*

void enterCategoryReader_generateSwiftBinding (const int32_t inClassIndex,
                                               categoryReaderSignature_abstractBindingForGeneration_generateSwiftBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateSwiftBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateSwiftBinding (NULL,
                                                                              freeCategoryReader_abstractBindingForGeneration_generateSwiftBinding) ;

//-----------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateSwiftBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                       const GALGAS_string & in_inOutletName,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateSwiftBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateSwiftBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//      Abstract category method '@abstractBinding analyzeOutletBinding'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBinding_analyzeOutletBinding> gCategoryMethodTable_abstractBinding_analyzeOutletBinding ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_analyzeOutletBinding (const int32_t inClassIndex,
                                               categoryMethodSignature_abstractBinding_analyzeOutletBinding inMethod) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBinding_analyzeOutletBinding (void) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBinding_analyzeOutletBinding (NULL,
                                                                 freeCategoryMethod_abstractBinding_analyzeOutletBinding) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                              const GALGAS_observablePropertyMap constin_inRootEntityObservableAttributeMap,
                                              const GALGAS_observablePropertyMap constin_inSelfObservableAttributeMap,
                                              const GALGAS_outletClassBindingMap constin_inBoundObjectBindingMap,
                                              const GALGAS_controllerMap constin_inControllerMap,
                                              const GALGAS_actionMap constin_inActionMap,
                                              const GALGAS_bool constin_inHasTableValueBinding,
                                              const GALGAS_contextAnalysisStruct constin_inContextAnalysisStruct,
                                              GALGAS_outletBindingListForGeneration & io_ioOutletBindingListForGeneration,
                                              GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBinding) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBinding_analyzeOutletBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
      f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
           f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRootEntityObservableAttributeMap, constin_inSelfObservableAttributeMap, constin_inBoundObjectBindingMap, constin_inControllerMap, constin_inActionMap, constin_inHasTableValueBinding, constin_inContextAnalysisStruct, io_ioOutletBindingListForGeneration, io_ioFileInclusionSet, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Abstract category reader '@abstractBindingForGeneration generateObjectiveCRemoveBinding'*
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateObjectiveCRemoveBinding> gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding ;

//-----------------------------------------------------------------------------*

void enterCategoryReader_generateObjectiveCRemoveBinding (const int32_t inClassIndex,
                                                          categoryReaderSignature_abstractBindingForGeneration_generateObjectiveCRemoveBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateObjectiveCRemoveBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateObjectiveCRemoveBinding (NULL,
                                                                                         freeCategoryReader_abstractBindingForGeneration_generateObjectiveCRemoveBinding) ;

//-----------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateObjectiveCRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                                  const GALGAS_string & in_inOutletName,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateObjectiveCRemoveBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateObjectiveCRemoveBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//Abstract category reader '@abstractBindingForGeneration generateSwiftRemoveBinding'*
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateSwiftRemoveBinding> gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding ;

//-----------------------------------------------------------------------------*

void enterCategoryReader_generateSwiftRemoveBinding (const int32_t inClassIndex,
                                                     categoryReaderSignature_abstractBindingForGeneration_generateSwiftRemoveBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateSwiftRemoveBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateSwiftRemoveBinding (NULL,
                                                                                    freeCategoryReader_abstractBindingForGeneration_generateSwiftRemoveBinding) ;

//-----------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateSwiftRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                             const GALGAS_string & in_inOutletName,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateSwiftRemoveBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateSwiftRemoveBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//-----------------------------------------------------------------------------*
//                                                                             *
//  Abstract category method '@abstractDefaultValue analyzeDefaultValueType'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType> gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_analyzeDefaultValueType (const int32_t inClassIndex,
                                                  categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType inMethod) {
  gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_abstractDefaultValue_analyzeDefaultValueType (void) {
  gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDefaultValue_analyzeDefaultValueType (NULL,
                                                                         freeCategoryMethod_abstractDefaultValue_analyzeDefaultValueType) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                 const GALGAS_ebTypeList constin_inAttributeActualTypeList,
                                                 const GALGAS_contextAnalysisStruct constin_inContextAnalysisStruct,
                                                 GALGAS_string & out_outDirectDefaultValueAsString,
                                                 GALGAS_string & out_outObjectiveCDefaultValueAsString,
                                                 GALGAS_string & out_outSwiftDefaultValueAsString,
                                                 GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outDirectDefaultValueAsString.drop () ;
  out_outObjectiveCDefaultValueAsString.drop () ;
  out_outSwiftDefaultValueAsString.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractDefaultValue) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.count ()) {
      f = gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.count ()) {
           f = gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAttributeActualTypeList, constin_inContextAnalysisStruct, out_outDirectDefaultValueAsString, out_outObjectiveCDefaultValueAsString, out_outSwiftDefaultValueAsString, io_ioFileInclusionSet, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@boolAsDefaultValue analyzeDefaultValueType'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_boolAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                       const GALGAS_ebTypeList constinArgument_inAttributeActualTypeList,
                                                                       const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                       GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                       GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                       GALGAS_string & outArgument_outSwiftDefaultValueAsString,
                                                                       GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_boolAsDefaultValue * object = (const cPtr_boolAsDefaultValue *) inObject ;
  macroValidSharedObject (object, cPtr_boolAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outSwiftDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_ebTypeList enumerator_38304 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1100)).isValidAndTrue () ;
  if (enumerator_38304.hasCurrentObject () && bool_0) {
    while (enumerator_38304.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_38304.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_boolType (SOURCE_FILE ("decoratedTypes.gSemantics", 1101)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_string temp_2 ;
        const enumGalgasBool test_3 = object->mAttribute_mValue.mAttribute_bool.boolEnum () ;
        if (kBoolTrue == test_3) {
          temp_2 = GALGAS_string ("YES") ;
        }else if (kBoolFalse == test_3) {
          temp_2 = GALGAS_string ("NO") ;
        }
        outArgument_outDirectDefaultValueAsString = temp_2 ;
        outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithBool:").operator_concat (outArgument_outDirectDefaultValueAsString  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1103)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1103)) ;
        GALGAS_string temp_4 ;
        const enumGalgasBool test_5 = object->mAttribute_mValue.mAttribute_bool.boolEnum () ;
        if (kBoolTrue == test_5) {
          temp_4 = GALGAS_string ("true") ;
        }else if (kBoolFalse == test_5) {
          temp_4 = GALGAS_string ("false") ;
        }
        outArgument_outSwiftDefaultValueAsString = temp_4 ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_38304.gotoNextObject () ;
      if (enumerator_38304.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1100)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_6 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1108)).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_location location_7 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_7, GALGAS_string ("only a boolean attribute can be initialized by YES or NO")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1109)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_boolAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_boolAsDefaultValue.mSlotID,
                                               categoryMethod_boolAsDefaultValue_analyzeDefaultValueType) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_boolAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_boolAsDefaultValue_analyzeDefaultValueType, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@integerAsDefaultValue analyzeDefaultValueType' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_integerAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                          const GALGAS_ebTypeList constinArgument_inAttributeActualTypeList,
                                                                          const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                          GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                          GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                          GALGAS_string & outArgument_outSwiftDefaultValueAsString,
                                                                          GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_integerAsDefaultValue * object = (const cPtr_integerAsDefaultValue *) inObject ;
  macroValidSharedObject (object, cPtr_integerAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outSwiftDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_ebTypeList enumerator_39442 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1129)).isValidAndTrue () ;
  if (enumerator_39442.hasCurrentObject () && bool_0) {
    while (enumerator_39442.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_39442.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_integerType (SOURCE_FILE ("decoratedTypes.gSemantics", 1130)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        outArgument_outDirectDefaultValueAsString = object->mAttribute_mValue.mAttribute_uint.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1131)) ;
        outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithInteger:").operator_concat (outArgument_outDirectDefaultValueAsString  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1132)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1132)) ;
        outArgument_outSwiftDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_39442.gotoNextObject () ;
      if (enumerator_39442.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1129)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1137)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("only an integer attribute can be initialized by an integer constant")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1138)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_integerAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_integerAsDefaultValue.mSlotID,
                                               categoryMethod_integerAsDefaultValue_analyzeDefaultValueType) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_integerAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_integerAsDefaultValue_analyzeDefaultValueType, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@doubleAsDefaultValue analyzeDefaultValueType'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_doubleAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                         const GALGAS_ebTypeList constinArgument_inAttributeActualTypeList,
                                                                         const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                         GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                         GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                         GALGAS_string & outArgument_outSwiftDefaultValueAsString,
                                                                         GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_doubleAsDefaultValue * object = (const cPtr_doubleAsDefaultValue *) inObject ;
  macroValidSharedObject (object, cPtr_doubleAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outSwiftDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_ebTypeList enumerator_40563 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1158)).isValidAndTrue () ;
  if (enumerator_40563.hasCurrentObject () && bool_0) {
    while (enumerator_40563.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_40563.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_doubleType (SOURCE_FILE ("decoratedTypes.gSemantics", 1159)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        outArgument_outDirectDefaultValueAsString = object->mAttribute_mValue.mAttribute_double.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1160)) ;
        outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithDouble:").operator_concat (outArgument_outDirectDefaultValueAsString  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1161)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1161)) ;
        outArgument_outSwiftDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_40563.gotoNextObject () ;
      if (enumerator_40563.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1158)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1166)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("only a double attribute can be initialized by a floating point constant")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1167)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_doubleAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_doubleAsDefaultValue.mSlotID,
                                               categoryMethod_doubleAsDefaultValue_analyzeDefaultValueType) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_doubleAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_doubleAsDefaultValue_analyzeDefaultValueType, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@stringAsDefaultValue analyzeDefaultValueType'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_stringAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                         const GALGAS_ebTypeList constinArgument_inAttributeActualTypeList,
                                                                         const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                         GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                         GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                         GALGAS_string & outArgument_outSwiftDefaultValueAsString,
                                                                         GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_stringAsDefaultValue * object = (const cPtr_stringAsDefaultValue *) inObject ;
  macroValidSharedObject (object, cPtr_stringAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outSwiftDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_ebTypeList enumerator_41687 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1187)).isValidAndTrue () ;
  if (enumerator_41687.hasCurrentObject () && bool_0) {
    while (enumerator_41687.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_41687.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_stringType (SOURCE_FILE ("decoratedTypes.gSemantics", 1188)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        outArgument_outDirectDefaultValueAsString = GALGAS_string ("@").operator_concat (object->mAttribute_mValue.mAttribute_string.reader_utf_38_Representation (SOURCE_FILE ("decoratedTypes.gSemantics", 1189))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1189)) ;
        outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
        outArgument_outSwiftDefaultValueAsString = GALGAS_string ("\"").operator_concat (object->mAttribute_mValue.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1191)).operator_concat (GALGAS_string ("\"")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1191)) ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_41687.gotoNextObject () ;
      if (enumerator_41687.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1187)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1195)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("only a string attribute can be initialized by a string constant")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1196)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_stringAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_stringAsDefaultValue.mSlotID,
                                               categoryMethod_stringAsDefaultValue_analyzeDefaultValueType) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_stringAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_stringAsDefaultValue_analyzeDefaultValueType, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@identifierAsDefaultValue analyzeDefaultValueType'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_identifierAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                             const GALGAS_ebTypeList constinArgument_inAttributeActualTypeList,
                                                                             const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                             GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                             GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                             GALGAS_string & outArgument_outSwiftDefaultValueAsString,
                                                                             GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_identifierAsDefaultValue * object = (const cPtr_identifierAsDefaultValue *) inObject ;
  macroValidSharedObject (object, cPtr_identifierAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outSwiftDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_ebTypeList enumerator_44677 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1271)).isValidAndTrue () ;
  if (enumerator_44677.hasCurrentObject () && bool_0) {
    while (enumerator_44677.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_44677.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_colorType (SOURCE_FILE ("decoratedTypes.gSemantics", 1272)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_found = GALGAS_bool (true) ;
        const enumGalgasBool test_2 = function_predefinedColors (inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1274)).reader_hasKey (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1274)).boolEnum () ;
        if (kBoolTrue == test_2) {
          outArgument_outDirectDefaultValueAsString = GALGAS_string ("[NSColor ").operator_concat (object->mAttribute_mValue.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1275)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1275)) ;
          outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
          outArgument_outSwiftDefaultValueAsString = GALGAS_string ("NSColor.").operator_concat (object->mAttribute_mValue.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1277)).operator_concat (GALGAS_string (" ()")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1277)) ;
        }else if (kBoolFalse == test_2) {
          GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("unknown predefined color")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1279)) ;
          outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
          outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
        }
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_4 = GALGAS_bool (kIsEqual, enumerator_44677.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_dateType (SOURCE_FILE ("decoratedTypes.gSemantics", 1284)))).boolEnum () ;
        if (kBoolTrue == test_4) {
          var_found = GALGAS_bool (true) ;
          const enumGalgasBool test_5 = function_predefinedDates (inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1286)).reader_hasKey (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1286)).boolEnum () ;
          if (kBoolTrue == test_5) {
            outArgument_outDirectDefaultValueAsString = GALGAS_string ("[NSDate ").operator_concat (object->mAttribute_mValue.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1287)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1287)) ;
            outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
            outArgument_outSwiftDefaultValueAsString = GALGAS_string ("NSDate ()") ;
          }else if (kBoolFalse == test_5) {
            GALGAS_location location_6 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_6, GALGAS_string ("unknown predefined date")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1291)) ;
            outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
            outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
          }
        }else if (kBoolFalse == test_4) {
          const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, enumerator_44677.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_enumType (SOURCE_FILE ("decoratedTypes.gSemantics", 1296)))).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_found = GALGAS_bool (true) ;
            const enumGalgasBool test_8 = constinArgument_inContextAnalysisStruct.mAttribute_mGlobalEnumConstantMap.reader_hasKey (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1298)).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_lstring var_inEnumTypeName ;
              constinArgument_inContextAnalysisStruct.mAttribute_mGlobalEnumConstantMap.method_searchKey (object->mAttribute_mValue, var_inEnumTypeName, inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1299)) ;
              ioArgument_ioFileInclusionSet.mAttribute_mHeaderFileInclusionSet.addAssign_operation (var_inEnumTypeName.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1300)) ;
              const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, categoryReader_ebTypeName (enumerator_44677.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1301)).objectCompare (var_inEnumTypeName.mAttribute_string)).boolEnum () ;
              if (kBoolTrue == test_9) {
                outArgument_outDirectDefaultValueAsString = object->mAttribute_mValue.mAttribute_string ;
                outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithInteger:").operator_concat (object->mAttribute_mValue.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1303)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1303)) ;
                outArgument_outSwiftDefaultValueAsString = var_inEnumTypeName.mAttribute_string.operator_concat (GALGAS_string (".")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1304)).operator_concat (object->mAttribute_mValue.mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1304)) ;
              }else if (kBoolFalse == test_9) {
                GALGAS_location location_10 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_10, GALGAS_string ("bad enum constant, belongs to the '").operator_concat (var_inEnumTypeName.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1307))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1307)).operator_concat (GALGAS_string ("' enum type")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1307))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1306)) ;
                outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
                outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
              }
            }else if (kBoolFalse == test_8) {
              GALGAS_location location_11 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_11, GALGAS_string ("the '").operator_concat (categoryReader_ebTypeName (enumerator_44677.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1313))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1313)).operator_concat (GALGAS_string ("' enumeration does not define '")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1313)).operator_concat (object->mAttribute_mValue.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1313))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1313)).operator_concat (GALGAS_string ("' constant")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1313))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1312)) ;
              outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
              outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
            }
          }
        }
      }
      enumerator_44677.gotoNextObject () ;
      if (enumerator_44677.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1271)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_12 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1319)).boolEnum () ;
  if (kBoolTrue == test_12) {
    GALGAS_location location_13 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_13, GALGAS_string ("unknow type for this identifier")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1320)) ;
    outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
    outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_identifierAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_identifierAsDefaultValue.mSlotID,
                                               categoryMethod_identifierAsDefaultValue_analyzeDefaultValueType) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_identifierAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_identifierAsDefaultValue_analyzeDefaultValueType, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@listAsDefaultValue analyzeDefaultValueType'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_listAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                       const GALGAS_ebTypeList constinArgument_inAttributeActualTypeList,
                                                                       const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                       GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                       GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                       GALGAS_string & outArgument_outSwiftDefaultValueAsString,
                                                                       GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listAsDefaultValue * object = (const cPtr_listAsDefaultValue *) inObject ;
  macroValidSharedObject (object, cPtr_listAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outSwiftDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_ebTypeList enumerator_48224 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1357)).isValidAndTrue () ;
  if (enumerator_48224.hasCurrentObject () && bool_0) {
    while (enumerator_48224.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsEqual, enumerator_48224.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_structType (SOURCE_FILE ("decoratedTypes.gSemantics", 1358)))).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_found = GALGAS_bool (true) ;
        ioArgument_ioFileInclusionSet.mAttribute_mHeaderFileInclusionSet.addAssign_operation (categoryReader_ebTypeName (enumerator_48224.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1360))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1360)) ;
        GALGAS_structFieldList var_fieldList ;
        constinArgument_inContextAnalysisStruct.mAttribute_mStructTypeMap.method_searchKey (enumerator_48224.current_mType (HERE).mAttribute_mTypeName, var_fieldList, inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1361)) ;
        const enumGalgasBool test_2 = GALGAS_bool (kIsNotEqual, object->mAttribute_mDefaultValueList.reader_length (SOURCE_FILE ("decoratedTypes.gSemantics", 1365)).objectCompare (var_fieldList.reader_length (SOURCE_FILE ("decoratedTypes.gSemantics", 1365)))).boolEnum () ;
        if (kBoolTrue == test_2) {
          inCompiler->emitSemanticError (object->mAttribute_mStartLocation, GALGAS_string ("the '").operator_concat (categoryReader_ebTypeName (enumerator_48224.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1366))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1366)).operator_concat (GALGAS_string ("' struct needs ")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1366)).operator_concat (var_fieldList.reader_length (SOURCE_FILE ("decoratedTypes.gSemantics", 1366)).reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1366))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1366)).operator_concat (GALGAS_string (" values for initialization")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1366))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1366)) ;
        }else if (kBoolFalse == test_2) {
          outArgument_outDirectDefaultValueAsString = GALGAS_string ("make").operator_concat (categoryReader_ebTypeName (enumerator_48224.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1368))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1368)).operator_concat (GALGAS_string (" (")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1368)) ;
          cEnumerator_defaultValueList enumerator_48840 (object->mAttribute_mDefaultValueList, kEnumeration_up) ;
          cEnumerator_structFieldList enumerator_48851 (var_fieldList, kEnumeration_up) ;
          while (enumerator_48840.hasCurrentObject () && enumerator_48851.hasCurrentObject ()) {
            GALGAS_string var_directDefaultValueAsString ;
            GALGAS_string joker_49063_2 ; // Joker input parameter
            GALGAS_string joker_49063_1 ; // Joker input parameter
            callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_48840.current_mDefaultValue (HERE).ptr (), GALGAS_ebTypeList::constructor_listWithValue (enumerator_48851.current_mFieldType (HERE)  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1372)), constinArgument_inContextAnalysisStruct, var_directDefaultValueAsString, joker_49063_2, joker_49063_1, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1371)) ;
            outArgument_outDirectDefaultValueAsString.dotAssign_operation (var_directDefaultValueAsString  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1378)) ;
            if (enumerator_48840.hasNextObject () && enumerator_48851.hasNextObject ()) {
              outArgument_outDirectDefaultValueAsString.dotAssign_operation (GALGAS_string (", ")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1380)) ;
            }
            enumerator_48840.gotoNextObject () ;
            enumerator_48851.gotoNextObject () ;
          }
          outArgument_outDirectDefaultValueAsString.dotAssign_operation (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1382)) ;
        }
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, enumerator_48224.current_mType (HERE).mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_fontType (SOURCE_FILE ("decoratedTypes.gSemantics", 1384)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          var_found = GALGAS_bool (true) ;
          GALGAS_string var_errorMessage = GALGAS_string ("an NSFont should be initialized by a (fontName, fontSize) value") ;
          const enumGalgasBool test_4 = GALGAS_bool (kIsNotEqual, object->mAttribute_mDefaultValueList.reader_length (SOURCE_FILE ("decoratedTypes.gSemantics", 1387)).objectCompare (GALGAS_uint ((uint32_t) 2U))).boolEnum () ;
          if (kBoolTrue == test_4) {
            inCompiler->emitSemanticError (object->mAttribute_mStartLocation, var_errorMessage  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1388)) ;
          }else if (kBoolFalse == test_4) {
            GALGAS_abstractDefaultValue var_v_30_ = object->mAttribute_mDefaultValueList.reader_mDefaultValueAtIndex (GALGAS_uint ((uint32_t) 0U), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1390)) ;
            GALGAS_abstractDefaultValue var_v_31_ = object->mAttribute_mDefaultValueList.reader_mDefaultValueAtIndex (GALGAS_uint ((uint32_t) 1U), inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1391)) ;
            GALGAS_identifierAsDefaultValue var_fontName ;
            const enumGalgasBool test_5 = GALGAS_bool (var_v_30_.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_identifierAsDefaultValue).boolEnum () ;
            if (kBoolTrue == test_5) {
              GALGAS_identifierAsDefaultValue temp_6 ;
              if (var_v_30_.isValid ()) {
                if (NULL != dynamic_cast <const cPtr_identifierAsDefaultValue *> (var_v_30_.ptr ())) {
                  temp_6 = (cPtr_identifierAsDefaultValue *) var_v_30_.ptr () ;
                }else{
                  inCompiler->castError ("identifierAsDefaultValue", var_v_30_.ptr ()->classDescriptor () COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1394)) ;
                }
              }
              var_fontName = temp_6 ;
            }else if (kBoolFalse == test_5) {
              inCompiler->emitSemanticError (object->mAttribute_mStartLocation, var_errorMessage  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1396)) ;
              var_fontName.drop () ; // Release error dropped variable
            }
            GALGAS_integerAsDefaultValue var_fontSize ;
            const enumGalgasBool test_7 = GALGAS_bool (var_v_31_.dynamicTypeDescriptor () == & kTypeDescriptor_GALGAS_integerAsDefaultValue).boolEnum () ;
            if (kBoolTrue == test_7) {
              GALGAS_integerAsDefaultValue temp_8 ;
              if (var_v_31_.isValid ()) {
                if (NULL != dynamic_cast <const cPtr_integerAsDefaultValue *> (var_v_31_.ptr ())) {
                  temp_8 = (cPtr_integerAsDefaultValue *) var_v_31_.ptr () ;
                }else{
                  inCompiler->castError ("integerAsDefaultValue", var_v_31_.ptr ()->classDescriptor () COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1400)) ;
                }
              }
              var_fontSize = temp_8 ;
            }else if (kBoolFalse == test_7) {
              inCompiler->emitSemanticError (object->mAttribute_mStartLocation, var_errorMessage  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1402)) ;
              var_fontSize.drop () ; // Release error dropped variable
            }
            const enumGalgasBool test_9 = function_predefinedFonts (inCompiler COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1404)).reader_hasKey (var_fontName.reader_mValue (SOURCE_FILE ("decoratedTypes.gSemantics", 1404)).mAttribute_string COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1404)).boolEnum () ;
            if (kBoolTrue == test_9) {
              outArgument_outDirectDefaultValueAsString = GALGAS_string ("[NSFont ").operator_concat (var_fontName.reader_mValue (SOURCE_FILE ("decoratedTypes.gSemantics", 1405)).mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1405)).operator_concat (GALGAS_string (":")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1405)).operator_concat (var_fontSize.reader_mValue (SOURCE_FILE ("decoratedTypes.gSemantics", 1405)).mAttribute_uint.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1405))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1405)).operator_concat (GALGAS_string ("]")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1405)) ;
              outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
              outArgument_outSwiftDefaultValueAsString = GALGAS_string ("NSFont (").operator_concat (var_fontName.reader_mValue (SOURCE_FILE ("decoratedTypes.gSemantics", 1407)).mAttribute_string  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1407)).operator_concat (GALGAS_string (", ")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1407)).operator_concat (var_fontSize.reader_mValue (SOURCE_FILE ("decoratedTypes.gSemantics", 1407)).mAttribute_uint.reader_string (SOURCE_FILE ("decoratedTypes.gSemantics", 1407))  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1407)).operator_concat (GALGAS_string (")")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1407)) ;
            }else if (kBoolFalse == test_9) {
              GALGAS_location location_10 (var_fontName.reader_mValue (SOURCE_FILE ("decoratedTypes.gSemantics", 1409)).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_10, GALGAS_string ("unknown predefined font name")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1409)) ;
              outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
              outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
            }
          }
        }
      }
      enumerator_48224.gotoNextObject () ;
      if (enumerator_48224.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1357)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_11 = var_found.operator_not (SOURCE_FILE ("decoratedTypes.gSemantics", 1417)).boolEnum () ;
  if (kBoolTrue == test_11) {
    inCompiler->emitSemanticError (object->mAttribute_mStartLocation, GALGAS_string ("invalid initialization value")  COMMA_SOURCE_FILE ("decoratedTypes.gSemantics", 1418)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_listAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_listAsDefaultValue.mSlotID,
                                               categoryMethod_listAsDefaultValue_analyzeDefaultValueType) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_listAsDefaultValue_analyzeDefaultValueType, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Abstract category method '@astDeclaration buildObservablePropertyMap'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_astDeclaration_buildObservablePropertyMap> gCategoryMethodTable_astDeclaration_buildObservablePropertyMap ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_buildObservablePropertyMap (const int32_t inClassIndex,
                                                     categoryMethodSignature_astDeclaration_buildObservablePropertyMap inMethod) {
  gCategoryMethodTable_astDeclaration_buildObservablePropertyMap.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_astDeclaration_buildObservablePropertyMap (void) {
  gCategoryMethodTable_astDeclaration_buildObservablePropertyMap.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_astDeclaration_buildObservablePropertyMap (NULL,
                                                                      freeCategoryMethod_astDeclaration_buildObservablePropertyMap) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                    const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                    GALGAS_observablePropertyMapMap & io_ioObservablePropertyMapMap,
                                                    GALGAS_transientDependencyGraph & io_ioTransientDependencyGraph,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_astDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_astDeclaration_buildObservablePropertyMap f = NULL ;
    if (classIndex < gCategoryMethodTable_astDeclaration_buildObservablePropertyMap.count ()) {
      f = gCategoryMethodTable_astDeclaration_buildObservablePropertyMap (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_astDeclaration_buildObservablePropertyMap.count ()) {
           f = gCategoryMethodTable_astDeclaration_buildObservablePropertyMap (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_astDeclaration_buildObservablePropertyMap.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inUnifiedTypeMap, io_ioObservablePropertyMapMap, io_ioTransientDependencyGraph, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//         Abstract category method '@astDeclaration semanticAnalysis'         *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_astDeclaration_semanticAnalysis> gCategoryMethodTable_astDeclaration_semanticAnalysis ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_semanticAnalysis (const int32_t inClassIndex,
                                           categoryMethodSignature_astDeclaration_semanticAnalysis inMethod) {
  gCategoryMethodTable_astDeclaration_semanticAnalysis.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_astDeclaration_semanticAnalysis (void) {
  gCategoryMethodTable_astDeclaration_semanticAnalysis.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_astDeclaration_semanticAnalysis (NULL,
                                                            freeCategoryMethod_astDeclaration_semanticAnalysis) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_semanticAnalysis (const cPtr_astDeclaration * inObject,
                                          const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                          GALGAS_contextAnalysisStruct & io_ioContextAnalysisStruct,
                                          GALGAS_generationList & io_ioGenerationList,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_astDeclaration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_astDeclaration_semanticAnalysis f = NULL ;
    if (classIndex < gCategoryMethodTable_astDeclaration_semanticAnalysis.count ()) {
      f = gCategoryMethodTable_astDeclaration_semanticAnalysis (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_astDeclaration_semanticAnalysis.count ()) {
           f = gCategoryMethodTable_astDeclaration_semanticAnalysis (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_astDeclaration_semanticAnalysis.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inUnifiedTypeMap, io_ioContextAnalysisStruct, io_ioGenerationList, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//               Abstract category method '@generation generate'               *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_generation_generate> gCategoryMethodTable_generation_generate ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_generate (const int32_t inClassIndex,
                                   categoryMethodSignature_generation_generate inMethod) {
  gCategoryMethodTable_generation_generate.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_generation_generate (void) {
  gCategoryMethodTable_generation_generate.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_generation_generate (NULL,
                                                freeCategoryMethod_generation_generate) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_generate (const cPtr_generation * inObject,
                                  const GALGAS_string constin_inOutputDirectory,
                                  C_Compiler * inCompiler
                                  COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_generation) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_generation_generate f = NULL ;
    if (classIndex < gCategoryMethodTable_generation_generate.count ()) {
      f = gCategoryMethodTable_generation_generate (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_generation_generate.count ()) {
           f = gCategoryMethodTable_generation_generate (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_generation_generate.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inOutputDirectory, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element::GALGAS_ebTypeList_2D_element (void) :
mAttribute_mType () {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element::~ GALGAS_ebTypeList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element::GALGAS_ebTypeList_2D_element (const GALGAS_ebType & inOperand0) :
mAttribute_mType (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element GALGAS_ebTypeList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_ebTypeList_2D_element (GALGAS_ebType::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element GALGAS_ebTypeList_2D_element::constructor_new (const GALGAS_ebType & inOperand0 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ebTypeList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_ebTypeList_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_ebTypeList_2D_element::objectCompare (const GALGAS_ebTypeList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_ebTypeList_2D_element::isValid (void) const {
  return mAttribute_mType.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList_2D_element::drop (void) {
  mAttribute_mType.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeList_2D_element::description (C_String & ioString,
                                                const int32_t inIndentation) const {
  ioString << "<struct @ebTypeList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebTypeList_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @ebTypeList-element type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ebTypeList_2D_element ("ebTypeList-element",
                                              NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ebTypeList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ebTypeList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ebTypeList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ebTypeList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList_2D_element GALGAS_ebTypeList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_ebTypeList_2D_element result ;
  const GALGAS_ebTypeList_2D_element * p = (const GALGAS_ebTypeList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ebTypeList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ebTypeList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element::GALGAS_unifiedTypeProxyList_2D_element (void) :
mAttribute_mTypeProxy () {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element::~ GALGAS_unifiedTypeProxyList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element::GALGAS_unifiedTypeProxyList_2D_element (const GALGAS_unifiedTypeProxy & inOperand0) :
mAttribute_mTypeProxy (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element GALGAS_unifiedTypeProxyList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_unifiedTypeProxyList_2D_element (GALGAS_unifiedTypeProxy::constructor_null (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element GALGAS_unifiedTypeProxyList_2D_element::constructor_new (const GALGAS_unifiedTypeProxy & inOperand0 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_unifiedTypeProxyList_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_unifiedTypeProxyList_2D_element::objectCompare (const GALGAS_unifiedTypeProxyList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTypeProxy.objectCompare (inOperand.mAttribute_mTypeProxy) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_unifiedTypeProxyList_2D_element::isValid (void) const {
  return mAttribute_mTypeProxy.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList_2D_element::drop (void) {
  mAttribute_mTypeProxy.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @unifiedTypeProxyList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTypeProxy.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxyList_2D_element::reader_mTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeProxy ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @unifiedTypeProxyList-element type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxyList_2D_element ("unifiedTypeProxyList-element",
                                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxyList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxyList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxyList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxyList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2D_element GALGAS_unifiedTypeProxyList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList_2D_element result ;
  const GALGAS_unifiedTypeProxyList_2D_element * p = (const GALGAS_unifiedTypeProxyList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxyList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxyList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element::GALGAS_ebTypeAndFormatterList_2D_element (void) :
mAttribute_mType (),
mAttribute_mRequiredFormatter () {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element::~ GALGAS_ebTypeAndFormatterList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element::GALGAS_ebTypeAndFormatterList_2D_element (const GALGAS_ebType & inOperand0,
                                                                                    const GALGAS_formatterEnum & inOperand1) :
mAttribute_mType (inOperand0),
mAttribute_mRequiredFormatter (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element GALGAS_ebTypeAndFormatterList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_ebTypeAndFormatterList_2D_element (GALGAS_ebType::constructor_default (HERE),
                                                   GALGAS_formatterEnum::constructor_noFormatter (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element GALGAS_ebTypeAndFormatterList_2D_element::constructor_new (const GALGAS_ebType & inOperand0,
                                                                                                    const GALGAS_formatterEnum & inOperand1 
                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_ebTypeAndFormatterList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_ebTypeAndFormatterList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_ebTypeAndFormatterList_2D_element::objectCompare (const GALGAS_ebTypeAndFormatterList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredFormatter.objectCompare (inOperand.mAttribute_mRequiredFormatter) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_ebTypeAndFormatterList_2D_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mRequiredFormatter.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList_2D_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mRequiredFormatter.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_ebTypeAndFormatterList_2D_element::description (C_String & ioString,
                                                            const int32_t inIndentation) const {
  ioString << "<struct @ebTypeAndFormatterList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredFormatter.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_ebTypeAndFormatterList_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_ebTypeAndFormatterList_2D_element::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredFormatter ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                    @ebTypeAndFormatterList-element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_ebTypeAndFormatterList_2D_element ("ebTypeAndFormatterList-element",
                                                          NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_ebTypeAndFormatterList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_ebTypeAndFormatterList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_ebTypeAndFormatterList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_ebTypeAndFormatterList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList_2D_element GALGAS_ebTypeAndFormatterList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_ebTypeAndFormatterList_2D_element result ;
  const GALGAS_ebTypeAndFormatterList_2D_element * p = (const GALGAS_ebTypeAndFormatterList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_ebTypeAndFormatterList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("ebTypeAndFormatterList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element::GALGAS_outletClassBindingOptionMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element::~ GALGAS_outletClassBindingOptionMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element::GALGAS_outletClassBindingOptionMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_ebTypeList & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element GALGAS_outletClassBindingOptionMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassBindingOptionMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_ebTypeList::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element GALGAS_outletClassBindingOptionMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_ebTypeList & inOperand1 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_outletClassBindingOptionMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingOptionMap_2D_element::objectCompare (const GALGAS_outletClassBindingOptionMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_outletClassBindingOptionMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2D_element::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "<struct @outletClassBindingOptionMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingOptionMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeList GALGAS_outletClassBindingOptionMap_2D_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @outletClassBindingOptionMap-element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2D_element ("outletClassBindingOptionMap-element",
                                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2D_element GALGAS_outletClassBindingOptionMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2D_element result ;
  const GALGAS_outletClassBindingOptionMap_2D_element * p = (const GALGAS_outletClassBindingOptionMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingOptionMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element::GALGAS_outletClassBindingMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList (),
mAttribute_mOutletClassBindingOptionMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element::~ GALGAS_outletClassBindingMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element::GALGAS_outletClassBindingMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_ebTypeAndFormatterList & inOperand1,
                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1),
mAttribute_mOutletClassBindingOptionMap (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element GALGAS_outletClassBindingMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassBindingMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_ebTypeAndFormatterList::constructor_emptyList (HERE),
                                                  GALGAS_outletClassBindingOptionMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element GALGAS_outletClassBindingMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_ebTypeAndFormatterList & inOperand1,
                                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_outletClassBindingMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingMap_2D_element::objectCompare (const GALGAS_outletClassBindingMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (inOperand.mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_outletClassBindingMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
  mAttribute_mOutletClassBindingOptionMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @outletClassBindingMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebTypeAndFormatterList GALGAS_outletClassBindingMap_2D_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap_2D_element::reader_mOutletClassBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassBindingOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @outletClassBindingMap-element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap_2D_element ("outletClassBindingMap-element",
                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2D_element GALGAS_outletClassBindingMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2D_element result ;
  const GALGAS_outletClassBindingMap_2D_element * p = (const GALGAS_outletClassBindingMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element::GALGAS_structFieldList_2D_element (void) :
mAttribute_mFieldType (),
mAttribute_mFieldName () {
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element::~ GALGAS_structFieldList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element::GALGAS_structFieldList_2D_element (const GALGAS_ebType & inOperand0,
                                                                      const GALGAS_string & inOperand1) :
mAttribute_mFieldType (inOperand0),
mAttribute_mFieldName (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element GALGAS_structFieldList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_structFieldList_2D_element (GALGAS_ebType::constructor_default (HERE),
                                            GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element GALGAS_structFieldList_2D_element::constructor_new (const GALGAS_ebType & inOperand0,
                                                                                      const GALGAS_string & inOperand1 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_structFieldList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_structFieldList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_structFieldList_2D_element::objectCompare (const GALGAS_structFieldList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mFieldType.objectCompare (inOperand.mAttribute_mFieldType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFieldName.objectCompare (inOperand.mAttribute_mFieldName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_structFieldList_2D_element::isValid (void) const {
  return mAttribute_mFieldType.isValid () && mAttribute_mFieldName.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList_2D_element::drop (void) {
  mAttribute_mFieldType.drop () ;
  mAttribute_mFieldName.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structFieldList_2D_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @structFieldList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mFieldType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFieldName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_structFieldList_2D_element::reader_mFieldType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_structFieldList_2D_element::reader_mFieldName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldName ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @structFieldList-element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structFieldList_2D_element ("structFieldList-element",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structFieldList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structFieldList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structFieldList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structFieldList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList_2D_element GALGAS_structFieldList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_structFieldList_2D_element result ;
  const GALGAS_structFieldList_2D_element * p = (const GALGAS_structFieldList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structFieldList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structFieldList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element::GALGAS_enumConstantMap_2D_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element::~ GALGAS_enumConstantMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element::GALGAS_enumConstantMap_2D_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element GALGAS_enumConstantMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_enumConstantMap_2D_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element GALGAS_enumConstantMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_enumConstantMap_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_enumConstantMap_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_enumConstantMap_2D_element::objectCompare (const GALGAS_enumConstantMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_enumConstantMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumConstantMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumConstantMap_2D_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @enumConstantMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_enumConstantMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @enumConstantMap-element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumConstantMap_2D_element ("enumConstantMap-element",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumConstantMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumConstantMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumConstantMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumConstantMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap_2D_element GALGAS_enumConstantMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_enumConstantMap_2D_element result ;
  const GALGAS_enumConstantMap_2D_element * p = (const GALGAS_enumConstantMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumConstantMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumConstantMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element::GALGAS_globalEnumConstantMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mEnumTypeName () {
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element::~ GALGAS_globalEnumConstantMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element::GALGAS_globalEnumConstantMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_lstring & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mEnumTypeName (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element GALGAS_globalEnumConstantMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_globalEnumConstantMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element GALGAS_globalEnumConstantMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_lstring & inOperand1 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_globalEnumConstantMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_globalEnumConstantMap_2D_element::objectCompare (const GALGAS_globalEnumConstantMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumTypeName.objectCompare (inOperand.mAttribute_mEnumTypeName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_globalEnumConstantMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mEnumTypeName.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mEnumTypeName.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @globalEnumConstantMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumTypeName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_globalEnumConstantMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_globalEnumConstantMap_2D_element::reader_mEnumTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumTypeName ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @globalEnumConstantMap-element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalEnumConstantMap_2D_element ("globalEnumConstantMap-element",
                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalEnumConstantMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalEnumConstantMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalEnumConstantMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalEnumConstantMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2D_element GALGAS_globalEnumConstantMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap_2D_element result ;
  const GALGAS_globalEnumConstantMap_2D_element * p = (const GALGAS_globalEnumConstantMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalEnumConstantMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalEnumConstantMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element::GALGAS_enumMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mConstantOrderedList (),
mAttribute_mEnumConstantMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element::~ GALGAS_enumMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element::GALGAS_enumMap_2D_element (const GALGAS_lstring & inOperand0,
                                                      const GALGAS_lstringlist & inOperand1,
                                                      const GALGAS_enumConstantMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mConstantOrderedList (inOperand1),
mAttribute_mEnumConstantMap (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element GALGAS_enumMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_enumMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                    GALGAS_lstringlist::constructor_emptyList (HERE),
                                    GALGAS_enumConstantMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element GALGAS_enumMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_lstringlist & inOperand1,
                                                                      const GALGAS_enumConstantMap & inOperand2 
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_enumMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_enumMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_enumMap_2D_element::objectCompare (const GALGAS_enumMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mConstantOrderedList.objectCompare (inOperand.mAttribute_mConstantOrderedList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumConstantMap.objectCompare (inOperand.mAttribute_mEnumConstantMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_enumMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mConstantOrderedList.isValid () && mAttribute_mEnumConstantMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mConstantOrderedList.drop () ;
  mAttribute_mEnumConstantMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_enumMap_2D_element::description (C_String & ioString,
                                             const int32_t inIndentation) const {
  ioString << "<struct @enumMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mConstantOrderedList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumConstantMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_enumMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumMap_2D_element::reader_mConstantOrderedList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mConstantOrderedList ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumMap_2D_element::reader_mEnumConstantMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumConstantMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                            @enumMap-element type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumMap_2D_element ("enumMap-element",
                                           NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_enumMap_2D_element GALGAS_enumMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_enumMap_2D_element result ;
  const GALGAS_enumMap_2D_element * p = (const GALGAS_enumMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element::GALGAS_userCursorMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mHotSpotX (),
mAttribute_mHotSpotY () {
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element::~ GALGAS_userCursorMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element::GALGAS_userCursorMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_double & inOperand1,
                                                                  const GALGAS_double & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mHotSpotX (inOperand1),
mAttribute_mHotSpotY (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element GALGAS_userCursorMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_userCursorMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_double::constructor_default (HERE),
                                          GALGAS_double::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element GALGAS_userCursorMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_double & inOperand1,
                                                                                  const GALGAS_double & inOperand2 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_userCursorMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_userCursorMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_userCursorMap_2D_element::objectCompare (const GALGAS_userCursorMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotX.objectCompare (inOperand.mAttribute_mHotSpotX) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotY.objectCompare (inOperand.mAttribute_mHotSpotY) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_userCursorMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mHotSpotX.drop () ;
  mAttribute_mHotSpotY.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_userCursorMap_2D_element::description (C_String & ioString,
                                                   const int32_t inIndentation) const {
  ioString << "<struct @userCursorMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotX.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotY.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_userCursorMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap_2D_element::reader_mHotSpotX (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotX ;
}

//-----------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap_2D_element::reader_mHotSpotY (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotY ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @userCursorMap-element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_userCursorMap_2D_element ("userCursorMap-element",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_userCursorMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_userCursorMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_userCursorMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_userCursorMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_userCursorMap_2D_element GALGAS_userCursorMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap_2D_element result ;
  const GALGAS_userCursorMap_2D_element * p = (const GALGAS_userCursorMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_userCursorMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("userCursorMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element::GALGAS_structTypeMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mFieldList () {
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element::~ GALGAS_structTypeMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element::GALGAS_structTypeMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_structFieldList & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mFieldList (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element GALGAS_structTypeMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_structTypeMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_structFieldList::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element GALGAS_structTypeMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_structFieldList & inOperand1 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_structTypeMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_structTypeMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_structTypeMap_2D_element::objectCompare (const GALGAS_structTypeMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFieldList.objectCompare (inOperand.mAttribute_mFieldList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_structTypeMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFieldList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structTypeMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFieldList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_structTypeMap_2D_element::description (C_String & ioString,
                                                   const int32_t inIndentation) const {
  ioString << "<struct @structTypeMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFieldList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_structTypeMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structTypeMap_2D_element::reader_mFieldList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @structTypeMap-element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structTypeMap_2D_element ("structTypeMap-element",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structTypeMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structTypeMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structTypeMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structTypeMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_structTypeMap_2D_element GALGAS_structTypeMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_structTypeMap_2D_element result ;
  const GALGAS_structTypeMap_2D_element * p = (const GALGAS_structTypeMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structTypeMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structTypeMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element::GALGAS_classMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mAllArrayPropertyForImplementation () {
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element::~ GALGAS_classMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element::GALGAS_classMap_2D_element (const GALGAS_lstring & inOperand0,
                                                        const GALGAS_attributeListForImplementation & inOperand1,
                                                        const GALGAS_propertyArrayMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeListForInitMethodHeader (inOperand1),
mAttribute_mAllArrayPropertyForImplementation (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element GALGAS_classMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_classMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                     GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                     GALGAS_propertyArrayMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element GALGAS_classMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_attributeListForImplementation & inOperand1,
                                                                        const GALGAS_propertyArrayMap & inOperand2 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_classMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_classMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_classMap_2D_element::objectCompare (const GALGAS_classMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllArrayPropertyForImplementation.objectCompare (inOperand.mAttribute_mAllArrayPropertyForImplementation) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_classMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mAllArrayPropertyForImplementation.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_classMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mAllArrayPropertyForImplementation.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_classMap_2D_element::description (C_String & ioString,
                                              const int32_t inIndentation) const {
  ioString << "<struct @classMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllArrayPropertyForImplementation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_classMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2D_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_classMap_2D_element::reader_mAllArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllArrayPropertyForImplementation ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @classMap-element type                            *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap_2D_element ("classMap-element",
                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_classMap_2D_element GALGAS_classMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_classMap_2D_element result ;
  const GALGAS_classMap_2D_element * p = (const GALGAS_classMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element::GALGAS_entityMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mSuperEntityName (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mCurrentRelationshipList (),
mAttribute_mAllRelationshipList (),
mAttribute_mAllPropertyMap (),
mAttribute_mCurrentRelationshipMap (),
mAttribute_mAllRelationshipMap (),
mAttribute_mFileInclusionSet (),
mAttribute_mSignList () {
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element::~ GALGAS_entityMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element::GALGAS_entityMap_2D_element (const GALGAS_lstring & inOperand0,
                                                          const GALGAS_string & inOperand1,
                                                          const GALGAS_attributeListForImplementation & inOperand2,
                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                          const GALGAS_transientListForImplementation & inOperand5,
                                                          const GALGAS_relationshipList & inOperand6,
                                                          const GALGAS_relationshipList & inOperand7,
                                                          const GALGAS_propertyMap & inOperand8,
                                                          const GALGAS_relationshipMap & inOperand9,
                                                          const GALGAS_relationshipMap & inOperand10,
                                                          const GALGAS_fileInclusionSet & inOperand11,
                                                          const GALGAS_signListForGeneration & inOperand12) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mAttributeListForInitMethodHeader (inOperand2),
mAttribute_mInheritedAttributeListForImplementation (inOperand3),
mAttribute_mAttributeListForImplementation (inOperand4),
mAttribute_mTransientListForImplementation (inOperand5),
mAttribute_mCurrentRelationshipList (inOperand6),
mAttribute_mAllRelationshipList (inOperand7),
mAttribute_mAllPropertyMap (inOperand8),
mAttribute_mCurrentRelationshipMap (inOperand9),
mAttribute_mAllRelationshipMap (inOperand10),
mAttribute_mFileInclusionSet (inOperand11),
mAttribute_mSignList (inOperand12) {
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element GALGAS_entityMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_entityMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                      GALGAS_string::constructor_default (HERE),
                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_relationshipList::constructor_emptyList (HERE),
                                      GALGAS_relationshipList::constructor_emptyList (HERE),
                                      GALGAS_propertyMap::constructor_emptyMap (HERE),
                                      GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                      GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                      GALGAS_fileInclusionSet::constructor_default (HERE),
                                      GALGAS_signListForGeneration::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element GALGAS_entityMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_string & inOperand1,
                                                                          const GALGAS_attributeListForImplementation & inOperand2,
                                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                                          const GALGAS_transientListForImplementation & inOperand5,
                                                                          const GALGAS_relationshipList & inOperand6,
                                                                          const GALGAS_relationshipList & inOperand7,
                                                                          const GALGAS_propertyMap & inOperand8,
                                                                          const GALGAS_relationshipMap & inOperand9,
                                                                          const GALGAS_relationshipMap & inOperand10,
                                                                          const GALGAS_fileInclusionSet & inOperand11,
                                                                          const GALGAS_signListForGeneration & inOperand12 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid ()) {
    result = GALGAS_entityMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityMap_2D_element::objectCompare (const GALGAS_entityMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (inOperand.mAttribute_mCurrentRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipList.objectCompare (inOperand.mAttribute_mAllRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllPropertyMap.objectCompare (inOperand.mAttribute_mAllPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (inOperand.mAttribute_mCurrentRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipMap.objectCompare (inOperand.mAttribute_mAllRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignList.objectCompare (inOperand.mAttribute_mSignList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_entityMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mSignList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mCurrentRelationshipList.drop () ;
  mAttribute_mAllRelationshipList.drop () ;
  mAttribute_mAllPropertyMap.drop () ;
  mAttribute_mCurrentRelationshipMap.drop () ;
  mAttribute_mAllRelationshipMap.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mSignList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityMap_2D_element::description (C_String & ioString,
                                               const int32_t inIndentation) const {
  ioString << "<struct @entityMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_entityMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2D_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2D_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2D_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2D_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap_2D_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2D_element::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2D_element::reader_mAllRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap_2D_element::reader_mAllPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllPropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2D_element::reader_mCurrentRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2D_element::reader_mAllRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityMap_2D_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityMap_2D_element::reader_mSignList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @entityMap-element type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap_2D_element ("entityMap-element",
                                             NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityMap_2D_element GALGAS_entityMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_entityMap_2D_element result ;
  const GALGAS_entityMap_2D_element * p = (const GALGAS_entityMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element::GALGAS_signListForGeneration_2D_element (void) :
mAttribute_mPropertyName (),
mAttribute_mPropertyType (),
mAttribute_mIsToMany () {
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element::~ GALGAS_signListForGeneration_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element::GALGAS_signListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                  const GALGAS_ebType & inOperand1,
                                                                                  const GALGAS_bool & inOperand2) :
mAttribute_mPropertyName (inOperand0),
mAttribute_mPropertyType (inOperand1),
mAttribute_mIsToMany (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element GALGAS_signListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_signListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                  GALGAS_ebType::constructor_default (HERE),
                                                  GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element GALGAS_signListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                  const GALGAS_ebType & inOperand1,
                                                                                                  const GALGAS_bool & inOperand2 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_signListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_signListForGeneration_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_signListForGeneration_2D_element::objectCompare (const GALGAS_signListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyName.objectCompare (inOperand.mAttribute_mPropertyName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyType.objectCompare (inOperand.mAttribute_mPropertyType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsToMany.objectCompare (inOperand.mAttribute_mIsToMany) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_signListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mPropertyName.isValid () && mAttribute_mPropertyType.isValid () && mAttribute_mIsToMany.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration_2D_element::drop (void) {
  mAttribute_mPropertyName.drop () ;
  mAttribute_mPropertyType.drop () ;
  mAttribute_mIsToMany.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_signListForGeneration_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @signListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mPropertyName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertyType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsToMany.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_signListForGeneration_2D_element::reader_mPropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyName ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_signListForGeneration_2D_element::reader_mPropertyType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyType ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_signListForGeneration_2D_element::reader_mIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsToMany ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @signListForGeneration-element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_signListForGeneration_2D_element ("signListForGeneration-element",
                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_signListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_signListForGeneration_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_signListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_signListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration_2D_element GALGAS_signListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_signListForGeneration_2D_element result ;
  const GALGAS_signListForGeneration_2D_element * p = (const GALGAS_signListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_signListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("signListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element::GALGAS_entityListForGeneration_2D_element (void) :
mAttribute_mEntityName (),
mAttribute_mSuperEntityName (),
mAttribute_mObservablePropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mCurrentRelationshipList (),
mAttribute_mAllRelationshipList (),
mAttribute_mAllPropertyMap (),
mAttribute_mCurrentRelationshipMap (),
mAttribute_mAllRelationshipMap (),
mAttribute_mToManyRelationshipList (),
mAttribute_mFileInclusionSet (),
mAttribute_mToOneRelationshipList (),
mAttribute_mSignList () {
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element::~ GALGAS_entityListForGeneration_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element::GALGAS_entityListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                      const GALGAS_string & inOperand1,
                                                                                      const GALGAS_observablePropertyMap & inOperand2,
                                                                                      const GALGAS_attributeListForImplementation & inOperand3,
                                                                                      const GALGAS_attributeListForImplementation & inOperand4,
                                                                                      const GALGAS_attributeListForImplementation & inOperand5,
                                                                                      const GALGAS_transientListForImplementation & inOperand6,
                                                                                      const GALGAS_relationshipList & inOperand7,
                                                                                      const GALGAS_relationshipList & inOperand8,
                                                                                      const GALGAS_propertyMap & inOperand9,
                                                                                      const GALGAS_relationshipMap & inOperand10,
                                                                                      const GALGAS_relationshipMap & inOperand11,
                                                                                      const GALGAS__32_stringlist & inOperand12,
                                                                                      const GALGAS_fileInclusionSet & inOperand13,
                                                                                      const GALGAS__32_stringlist & inOperand14,
                                                                                      const GALGAS_signListForGeneration & inOperand15) :
mAttribute_mEntityName (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mObservablePropertyMap (inOperand2),
mAttribute_mAttributeListForInitMethodHeader (inOperand3),
mAttribute_mInheritedAttributeListForImplementation (inOperand4),
mAttribute_mAttributeListForImplementation (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mCurrentRelationshipList (inOperand7),
mAttribute_mAllRelationshipList (inOperand8),
mAttribute_mAllPropertyMap (inOperand9),
mAttribute_mCurrentRelationshipMap (inOperand10),
mAttribute_mAllRelationshipMap (inOperand11),
mAttribute_mToManyRelationshipList (inOperand12),
mAttribute_mFileInclusionSet (inOperand13),
mAttribute_mToOneRelationshipList (inOperand14),
mAttribute_mSignList (inOperand15) {
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element GALGAS_entityListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_entityListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                    GALGAS_string::constructor_default (HERE),
                                                    GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                                    GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_relationshipList::constructor_emptyList (HERE),
                                                    GALGAS_relationshipList::constructor_emptyList (HERE),
                                                    GALGAS_propertyMap::constructor_emptyMap (HERE),
                                                    GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                                    GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                                    GALGAS__32_stringlist::constructor_emptyList (HERE),
                                                    GALGAS_fileInclusionSet::constructor_default (HERE),
                                                    GALGAS__32_stringlist::constructor_emptyList (HERE),
                                                    GALGAS_signListForGeneration::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element GALGAS_entityListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                      const GALGAS_string & inOperand1,
                                                                                                      const GALGAS_observablePropertyMap & inOperand2,
                                                                                                      const GALGAS_attributeListForImplementation & inOperand3,
                                                                                                      const GALGAS_attributeListForImplementation & inOperand4,
                                                                                                      const GALGAS_attributeListForImplementation & inOperand5,
                                                                                                      const GALGAS_transientListForImplementation & inOperand6,
                                                                                                      const GALGAS_relationshipList & inOperand7,
                                                                                                      const GALGAS_relationshipList & inOperand8,
                                                                                                      const GALGAS_propertyMap & inOperand9,
                                                                                                      const GALGAS_relationshipMap & inOperand10,
                                                                                                      const GALGAS_relationshipMap & inOperand11,
                                                                                                      const GALGAS__32_stringlist & inOperand12,
                                                                                                      const GALGAS_fileInclusionSet & inOperand13,
                                                                                                      const GALGAS__32_stringlist & inOperand14,
                                                                                                      const GALGAS_signListForGeneration & inOperand15 
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    result = GALGAS_entityListForGeneration_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityListForGeneration_2D_element::objectCompare (const GALGAS_entityListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mEntityName.objectCompare (inOperand.mAttribute_mEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (inOperand.mAttribute_mCurrentRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipList.objectCompare (inOperand.mAttribute_mAllRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllPropertyMap.objectCompare (inOperand.mAttribute_mAllPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (inOperand.mAttribute_mCurrentRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipMap.objectCompare (inOperand.mAttribute_mAllRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mToManyRelationshipList.objectCompare (inOperand.mAttribute_mToManyRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mToOneRelationshipList.objectCompare (inOperand.mAttribute_mToOneRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignList.objectCompare (inOperand.mAttribute_mSignList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_entityListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mEntityName.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mToManyRelationshipList.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mToOneRelationshipList.isValid () && mAttribute_mSignList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration_2D_element::drop (void) {
  mAttribute_mEntityName.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mCurrentRelationshipList.drop () ;
  mAttribute_mAllRelationshipList.drop () ;
  mAttribute_mAllPropertyMap.drop () ;
  mAttribute_mCurrentRelationshipMap.drop () ;
  mAttribute_mAllRelationshipMap.drop () ;
  mAttribute_mToManyRelationshipList.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mToOneRelationshipList.drop () ;
  mAttribute_mSignList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_entityListForGeneration_2D_element::description (C_String & ioString,
                                                             const int32_t inIndentation) const {
  ioString << "<struct @entityListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mToManyRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mToOneRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration_2D_element::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration_2D_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityListForGeneration_2D_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration_2D_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration_2D_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration_2D_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityListForGeneration_2D_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration_2D_element::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration_2D_element::reader_mAllRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityListForGeneration_2D_element::reader_mAllPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllPropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration_2D_element::reader_mCurrentRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration_2D_element::reader_mAllRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipMap ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration_2D_element::reader_mToManyRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToManyRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityListForGeneration_2D_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration_2D_element::reader_mToOneRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToOneRelationshipList ;
}

//-----------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityListForGeneration_2D_element::reader_mSignList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                    @entityListForGeneration-element type                    *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityListForGeneration_2D_element ("entityListForGeneration-element",
                                                           NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityListForGeneration_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2D_element GALGAS_entityListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration_2D_element result ;
  const GALGAS_entityListForGeneration_2D_element * p = (const GALGAS_entityListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element::GALGAS_bindingOptionListForGeneration_2D_element (void) :
mAttribute_mOptionName (),
mAttribute_mObjectiveCOptionString (),
mAttribute_mSwiftOptionString () {
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element::~ GALGAS_bindingOptionListForGeneration_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element::GALGAS_bindingOptionListForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_string & inOperand2) :
mAttribute_mOptionName (inOperand0),
mAttribute_mObjectiveCOptionString (inOperand1),
mAttribute_mSwiftOptionString (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element GALGAS_bindingOptionListForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_bindingOptionListForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element GALGAS_bindingOptionListForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_string & inOperand2 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_bindingOptionListForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_bindingOptionListForGeneration_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_bindingOptionListForGeneration_2D_element::objectCompare (const GALGAS_bindingOptionListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOptionName.objectCompare (inOperand.mAttribute_mOptionName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObjectiveCOptionString.objectCompare (inOperand.mAttribute_mObjectiveCOptionString) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSwiftOptionString.objectCompare (inOperand.mAttribute_mSwiftOptionString) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_bindingOptionListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mOptionName.isValid () && mAttribute_mObjectiveCOptionString.isValid () && mAttribute_mSwiftOptionString.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration_2D_element::drop (void) {
  mAttribute_mOptionName.drop () ;
  mAttribute_mObjectiveCOptionString.drop () ;
  mAttribute_mSwiftOptionString.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_bindingOptionListForGeneration_2D_element::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "<struct @bindingOptionListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOptionName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObjectiveCOptionString.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSwiftOptionString.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_bindingOptionListForGeneration_2D_element::reader_mOptionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOptionName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_bindingOptionListForGeneration_2D_element::reader_mObjectiveCOptionString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObjectiveCOptionString ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_bindingOptionListForGeneration_2D_element::reader_mSwiftOptionString (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSwiftOptionString ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                @bindingOptionListForGeneration-element type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_bindingOptionListForGeneration_2D_element ("bindingOptionListForGeneration-element",
                                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_bindingOptionListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_bindingOptionListForGeneration_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_bindingOptionListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_bindingOptionListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_bindingOptionListForGeneration_2D_element GALGAS_bindingOptionListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_bindingOptionListForGeneration_2D_element result ;
  const GALGAS_bindingOptionListForGeneration_2D_element * p = (const GALGAS_bindingOptionListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_bindingOptionListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("bindingOptionListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::GALGAS_columnBindingForTableValueBindingForGeneration_2D_element (void) :
mAttribute_mColumnIdentifier (),
mAttribute_mRequiredCellClass (),
mAttribute_mObservableAttributeName (),
mAttribute_mOutletBindingOptionList () {
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::~ GALGAS_columnBindingForTableValueBindingForGeneration_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::GALGAS_columnBindingForTableValueBindingForGeneration_2D_element (const GALGAS_string & inOperand0,
                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                    const GALGAS__32_stringlist & inOperand3) :
mAttribute_mColumnIdentifier (inOperand0),
mAttribute_mRequiredCellClass (inOperand1),
mAttribute_mObservableAttributeName (inOperand2),
mAttribute_mOutletBindingOptionList (inOperand3) {
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_columnBindingForTableValueBindingForGeneration_2D_element (GALGAS_string::constructor_default (HERE),
                                                                           GALGAS_string::constructor_default (HERE),
                                                                           GALGAS_string::constructor_default (HERE),
                                                                           GALGAS__32_stringlist::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                                    const GALGAS__32_stringlist & inOperand3 
                                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_columnBindingForTableValueBindingForGeneration_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::objectCompare (const GALGAS_columnBindingForTableValueBindingForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mColumnIdentifier.objectCompare (inOperand.mAttribute_mColumnIdentifier) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredCellClass.objectCompare (inOperand.mAttribute_mRequiredCellClass) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableAttributeName.objectCompare (inOperand.mAttribute_mObservableAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (inOperand.mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::isValid (void) const {
  return mAttribute_mColumnIdentifier.isValid () && mAttribute_mRequiredCellClass.isValid () && mAttribute_mObservableAttributeName.isValid () && mAttribute_mOutletBindingOptionList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::drop (void) {
  mAttribute_mColumnIdentifier.drop () ;
  mAttribute_mRequiredCellClass.drop () ;
  mAttribute_mObservableAttributeName.drop () ;
  mAttribute_mOutletBindingOptionList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::description (C_String & ioString,
                                                                                    const int32_t inIndentation) const {
  ioString << "<struct @columnBindingForTableValueBindingForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mColumnIdentifier.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredCellClass.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::reader_mColumnIdentifier (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnIdentifier ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::reader_mRequiredCellClass (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredCellClass ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//        @columnBindingForTableValueBindingForGeneration-element type         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2D_element ("columnBindingForTableValueBindingForGeneration-element",
                                                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2D_element GALGAS_columnBindingForTableValueBindingForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                                  C_Compiler * inCompiler
                                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2D_element result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration_2D_element * p = (const GALGAS_columnBindingForTableValueBindingForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("columnBindingForTableValueBindingForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element::GALGAS_protocolMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mIsPredefined () {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element::~ GALGAS_protocolMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element::GALGAS_protocolMap_2D_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_bool & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mIsPredefined (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element GALGAS_protocolMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_protocolMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element GALGAS_protocolMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_bool & inOperand1 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_protocolMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_protocolMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_protocolMap_2D_element::objectCompare (const GALGAS_protocolMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsPredefined.objectCompare (inOperand.mAttribute_mIsPredefined) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_protocolMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsPredefined.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIsPredefined.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolMap_2D_element::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "<struct @protocolMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsPredefined.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_protocolMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_protocolMap_2D_element::reader_mIsPredefined (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsPredefined ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @protocolMap-element type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolMap_2D_element ("protocolMap-element",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolMap_2D_element GALGAS_protocolMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap_2D_element result ;
  const GALGAS_protocolMap_2D_element * p = (const GALGAS_protocolMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("protocolMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element::GALGAS_protocolList_2D_element (void) :
mAttribute_mNeedsInclusionInHeader (),
mAttribute_mProtocolName () {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element::~ GALGAS_protocolList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element::GALGAS_protocolList_2D_element (const GALGAS_bool & inOperand0,
                                                                const GALGAS_string & inOperand1) :
mAttribute_mNeedsInclusionInHeader (inOperand0),
mAttribute_mProtocolName (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element GALGAS_protocolList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_protocolList_2D_element (GALGAS_bool::constructor_default (HERE),
                                         GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element GALGAS_protocolList_2D_element::constructor_new (const GALGAS_bool & inOperand0,
                                                                                const GALGAS_string & inOperand1 
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_protocolList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_protocolList_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_protocolList_2D_element::objectCompare (const GALGAS_protocolList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mNeedsInclusionInHeader.objectCompare (inOperand.mAttribute_mNeedsInclusionInHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mProtocolName.objectCompare (inOperand.mAttribute_mProtocolName) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_protocolList_2D_element::isValid (void) const {
  return mAttribute_mNeedsInclusionInHeader.isValid () && mAttribute_mProtocolName.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList_2D_element::drop (void) {
  mAttribute_mNeedsInclusionInHeader.drop () ;
  mAttribute_mProtocolName.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_protocolList_2D_element::description (C_String & ioString,
                                                  const int32_t inIndentation) const {
  ioString << "<struct @protocolList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mNeedsInclusionInHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mProtocolName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_protocolList_2D_element::reader_mNeedsInclusionInHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNeedsInclusionInHeader ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_protocolList_2D_element::reader_mProtocolName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mProtocolName ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @protocolList-element type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolList_2D_element ("protocolList-element",
                                                NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList_2D_element GALGAS_protocolList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_protocolList_2D_element result ;
  const GALGAS_protocolList_2D_element * p = (const GALGAS_protocolList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("protocolList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element::GALGAS_outletClassMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mGenerationKind (),
mAttribute_mSuperClassName (),
mAttribute_mAdoptedProtocolList (),
mAttribute_mImplementsDeallocProtocol (),
mAttribute_mAllBindingMap (),
mAttribute_mCurrentBindingMap (),
mAttribute_mHasTableValueBinding () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element::~ GALGAS_outletClassMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element::GALGAS_outletClassMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_generationKind & inOperand1,
                                                                    const GALGAS_string & inOperand2,
                                                                    const GALGAS_protocolList & inOperand3,
                                                                    const GALGAS_bool & inOperand4,
                                                                    const GALGAS_outletClassBindingMap & inOperand5,
                                                                    const GALGAS_outletClassBindingMap & inOperand6,
                                                                    const GALGAS_bool & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mGenerationKind (inOperand1),
mAttribute_mSuperClassName (inOperand2),
mAttribute_mAdoptedProtocolList (inOperand3),
mAttribute_mImplementsDeallocProtocol (inOperand4),
mAttribute_mAllBindingMap (inOperand5),
mAttribute_mCurrentBindingMap (inOperand6),
mAttribute_mHasTableValueBinding (inOperand7) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element GALGAS_outletClassMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_generationKind::constructor_fullGeneration (HERE),
                                           GALGAS_string::constructor_default (HERE),
                                           GALGAS_protocolList::constructor_emptyList (HERE),
                                           GALGAS_bool::constructor_default (HERE),
                                           GALGAS_outletClassBindingMap::constructor_emptyMap (HERE),
                                           GALGAS_outletClassBindingMap::constructor_emptyMap (HERE),
                                           GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element GALGAS_outletClassMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_generationKind & inOperand1,
                                                                                    const GALGAS_string & inOperand2,
                                                                                    const GALGAS_protocolList & inOperand3,
                                                                                    const GALGAS_bool & inOperand4,
                                                                                    const GALGAS_outletClassBindingMap & inOperand5,
                                                                                    const GALGAS_outletClassBindingMap & inOperand6,
                                                                                    const GALGAS_bool & inOperand7 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_outletClassMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassMap_2D_element::objectCompare (const GALGAS_outletClassMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerationKind.objectCompare (inOperand.mAttribute_mGenerationKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (inOperand.mAttribute_mAdoptedProtocolList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (inOperand.mAttribute_mImplementsDeallocProtocol) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllBindingMap.objectCompare (inOperand.mAttribute_mAllBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentBindingMap.objectCompare (inOperand.mAttribute_mCurrentBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasTableValueBinding.objectCompare (inOperand.mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_outletClassMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mAdoptedProtocolList.isValid () && mAttribute_mImplementsDeallocProtocol.isValid () && mAttribute_mAllBindingMap.isValid () && mAttribute_mCurrentBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mGenerationKind.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mAdoptedProtocolList.drop () ;
  mAttribute_mImplementsDeallocProtocol.drop () ;
  mAttribute_mAllBindingMap.drop () ;
  mAttribute_mCurrentBindingMap.drop () ;
  mAttribute_mHasTableValueBinding.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletClassMap_2D_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @outletClassMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerationKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAdoptedProtocolList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasTableValueBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_outletClassMap_2D_element::reader_mGenerationKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap_2D_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//-----------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_outletClassMap_2D_element::reader_mAdoptedProtocolList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAdoptedProtocolList ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2D_element::reader_mImplementsDeallocProtocol (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementsDeallocProtocol ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap_2D_element::reader_mAllBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassMap_2D_element::reader_mCurrentBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2D_element::reader_mHasTableValueBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasTableValueBinding ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @outletClassMap-element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap_2D_element ("outletClassMap-element",
                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassMap_2D_element GALGAS_outletClassMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap_2D_element result ;
  const GALGAS_outletClassMap_2D_element * p = (const GALGAS_outletClassMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element::GALGAS_controllerClassMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mControllerKind (),
mAttribute_mGenerationKind (),
mAttribute_mBindingMap (),
mAttribute_mActionMap (),
mAttribute_mObservablePropertyMap (),
mAttribute_mControlledObjectAvailableBindingOptionMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element::~ GALGAS_controllerClassMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element::GALGAS_controllerClassMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_controllerKind & inOperand1,
                                                                            const GALGAS_generationKind & inOperand2,
                                                                            const GALGAS_outletClassBindingMap & inOperand3,
                                                                            const GALGAS_actionMap & inOperand4,
                                                                            const GALGAS_observablePropertyMap & inOperand5,
                                                                            const GALGAS_outletClassBindingOptionMap & inOperand6) :
mAttribute_lkey (inOperand0),
mAttribute_mControllerKind (inOperand1),
mAttribute_mGenerationKind (inOperand2),
mAttribute_mBindingMap (inOperand3),
mAttribute_mActionMap (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mControlledObjectAvailableBindingOptionMap (inOperand6) {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element GALGAS_controllerClassMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerClassMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                               GALGAS_controllerKind::constructor_simpleController (HERE),
                                               GALGAS_generationKind::constructor_fullGeneration (HERE),
                                               GALGAS_outletClassBindingMap::constructor_emptyMap (HERE),
                                               GALGAS_actionMap::constructor_emptyMap (HERE),
                                               GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                               GALGAS_outletClassBindingOptionMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element GALGAS_controllerClassMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_controllerKind & inOperand1,
                                                                                            const GALGAS_generationKind & inOperand2,
                                                                                            const GALGAS_outletClassBindingMap & inOperand3,
                                                                                            const GALGAS_actionMap & inOperand4,
                                                                                            const GALGAS_observablePropertyMap & inOperand5,
                                                                                            const GALGAS_outletClassBindingOptionMap & inOperand6 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result = GALGAS_controllerClassMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerClassMap_2D_element::objectCompare (const GALGAS_controllerClassMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerKind.objectCompare (inOperand.mAttribute_mControllerKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerationKind.objectCompare (inOperand.mAttribute_mGenerationKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingMap.objectCompare (inOperand.mAttribute_mBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControlledObjectAvailableBindingOptionMap.objectCompare (inOperand.mAttribute_mControlledObjectAvailableBindingOptionMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_controllerClassMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerKind.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mControlledObjectAvailableBindingOptionMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mControllerKind.drop () ;
  mAttribute_mGenerationKind.drop () ;
  mAttribute_mBindingMap.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mControlledObjectAvailableBindingOptionMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2D_element::description (C_String & ioString,
                                                        const int32_t inIndentation) const {
  ioString << "<struct @controllerClassMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerationKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControlledObjectAvailableBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerClassMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerKind GALGAS_controllerClassMap_2D_element::reader_mControllerKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_controllerClassMap_2D_element::reader_mGenerationKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationKind ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_controllerClassMap_2D_element::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap_2D_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap_2D_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_controllerClassMap_2D_element::reader_mControlledObjectAvailableBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControlledObjectAvailableBindingOptionMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @controllerClassMap-element type                       *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap_2D_element ("controllerClassMap-element",
                                                      NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerClassMap_2D_element GALGAS_controllerClassMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2D_element result ;
  const GALGAS_controllerClassMap_2D_element * p = (const GALGAS_controllerClassMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerClassMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element::GALGAS_relationshipMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mIsToMany (),
mAttribute_mDestinationEntityName (),
mAttribute_mInverseRelationshipName (),
mAttribute_mInverseIsToMany (),
mAttribute_mDeleteRule () {
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element::~ GALGAS_relationshipMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element::GALGAS_relationshipMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_bool & inOperand1,
                                                                      const GALGAS_lstring & inOperand2,
                                                                      const GALGAS_lstring & inOperand3,
                                                                      const GALGAS_bool & inOperand4,
                                                                      const GALGAS_deleteRuleEnum & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mIsToMany (inOperand1),
mAttribute_mDestinationEntityName (inOperand2),
mAttribute_mInverseRelationshipName (inOperand3),
mAttribute_mInverseIsToMany (inOperand4),
mAttribute_mDeleteRule (inOperand5) {
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element GALGAS_relationshipMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_relationshipMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_bool::constructor_default (HERE),
                                            GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_bool::constructor_default (HERE),
                                            GALGAS_deleteRuleEnum::constructor_nullifyDeleteRule (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element GALGAS_relationshipMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_bool & inOperand1,
                                                                                      const GALGAS_lstring & inOperand2,
                                                                                      const GALGAS_lstring & inOperand3,
                                                                                      const GALGAS_bool & inOperand4,
                                                                                      const GALGAS_deleteRuleEnum & inOperand5 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_relationshipMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_relationshipMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_relationshipMap_2D_element::objectCompare (const GALGAS_relationshipMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsToMany.objectCompare (inOperand.mAttribute_mIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDestinationEntityName.objectCompare (inOperand.mAttribute_mDestinationEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseRelationshipName.objectCompare (inOperand.mAttribute_mInverseRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseIsToMany.objectCompare (inOperand.mAttribute_mInverseIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDeleteRule.objectCompare (inOperand.mAttribute_mDeleteRule) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_relationshipMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mInverseIsToMany.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIsToMany.drop () ;
  mAttribute_mDestinationEntityName.drop () ;
  mAttribute_mInverseRelationshipName.drop () ;
  mAttribute_mInverseIsToMany.drop () ;
  mAttribute_mDeleteRule.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_relationshipMap_2D_element::description (C_String & ioString,
                                                     const int32_t inIndentation) const {
  ioString << "<struct @relationshipMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDestinationEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDeleteRule.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap_2D_element::reader_mIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsToMany ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2D_element::reader_mDestinationEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDestinationEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2D_element::reader_mInverseRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseRelationshipName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap_2D_element::reader_mInverseIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseIsToMany ;
}

//-----------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap_2D_element::reader_mDeleteRule (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeleteRule ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @relationshipMap-element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap_2D_element ("relationshipMap-element",
                                                   NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_relationshipMap_2D_element GALGAS_relationshipMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap_2D_element result ;
  const GALGAS_relationshipMap_2D_element * p = (const GALGAS_relationshipMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("relationshipMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element::GALGAS_propertyMap_2D_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element::~ GALGAS_propertyMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element::GALGAS_propertyMap_2D_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element GALGAS_propertyMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_propertyMap_2D_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element GALGAS_propertyMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_propertyMap_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_propertyMap_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_propertyMap_2D_element::objectCompare (const GALGAS_propertyMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_propertyMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyMap_2D_element::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "<struct @propertyMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_propertyMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @propertyMap-element type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap_2D_element ("propertyMap-element",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyMap_2D_element GALGAS_propertyMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap_2D_element result ;
  const GALGAS_propertyMap_2D_element * p = (const GALGAS_propertyMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element::GALGAS_attributeListForImplementation_2D_element (void) :
mAttribute_mType (),
mAttribute_mAttributeName (),
mAttribute_mDefaultValueAsObjectiveCObject (),
mAttribute_mDirectOCDefaultValue (),
mAttribute_mDirectSwiftDefaultValue () {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element::~ GALGAS_attributeListForImplementation_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element::GALGAS_attributeListForImplementation_2D_element (const GALGAS_ebType & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_string & inOperand2,
                                                                                                    const GALGAS_string & inOperand3,
                                                                                                    const GALGAS_string & inOperand4) :
mAttribute_mType (inOperand0),
mAttribute_mAttributeName (inOperand1),
mAttribute_mDefaultValueAsObjectiveCObject (inOperand2),
mAttribute_mDirectOCDefaultValue (inOperand3),
mAttribute_mDirectSwiftDefaultValue (inOperand4) {
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element GALGAS_attributeListForImplementation_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_attributeListForImplementation_2D_element (GALGAS_ebType::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element GALGAS_attributeListForImplementation_2D_element::constructor_new (const GALGAS_ebType & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                    const GALGAS_string & inOperand3,
                                                                                                                    const GALGAS_string & inOperand4 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_attributeListForImplementation_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeListForImplementation_2D_element::objectCompare (const GALGAS_attributeListForImplementation_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeName.objectCompare (inOperand.mAttribute_mAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValueAsObjectiveCObject.objectCompare (inOperand.mAttribute_mDefaultValueAsObjectiveCObject) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDirectOCDefaultValue.objectCompare (inOperand.mAttribute_mDirectOCDefaultValue) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDirectSwiftDefaultValue.objectCompare (inOperand.mAttribute_mDirectSwiftDefaultValue) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_attributeListForImplementation_2D_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mAttributeName.isValid () && mAttribute_mDefaultValueAsObjectiveCObject.isValid () && mAttribute_mDirectOCDefaultValue.isValid () && mAttribute_mDirectSwiftDefaultValue.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation_2D_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mAttributeName.drop () ;
  mAttribute_mDefaultValueAsObjectiveCObject.drop () ;
  mAttribute_mDirectOCDefaultValue.drop () ;
  mAttribute_mDirectSwiftDefaultValue.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation_2D_element::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "<struct @attributeListForImplementation-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDirectOCDefaultValue.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDirectSwiftDefaultValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_attributeListForImplementation_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2D_element::reader_mAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2D_element::reader_mDefaultValueAsObjectiveCObject (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValueAsObjectiveCObject ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2D_element::reader_mDirectOCDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDirectOCDefaultValue ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2D_element::reader_mDirectSwiftDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDirectSwiftDefaultValue ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                @attributeListForImplementation-element type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeListForImplementation_2D_element ("attributeListForImplementation-element",
                                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeListForImplementation_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeListForImplementation_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeListForImplementation_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeListForImplementation_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2D_element GALGAS_attributeListForImplementation_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation_2D_element result ;
  const GALGAS_attributeListForImplementation_2D_element * p = (const GALGAS_attributeListForImplementation_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeListForImplementation_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeListForImplementation-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2D_element::GALGAS_outletBindingListForGeneration_2D_element (void) :
mAttribute_mBinding () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2D_element::~ GALGAS_outletBindingListForGeneration_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2D_element::GALGAS_outletBindingListForGeneration_2D_element (const GALGAS_abstractBindingForGeneration & inOperand0) :
mAttribute_mBinding (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2D_element GALGAS_outletBindingListForGeneration_2D_element::constructor_new (const GALGAS_abstractBindingForGeneration & inOperand0 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_outletBindingListForGeneration_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletBindingListForGeneration_2D_element::objectCompare (const GALGAS_outletBindingListForGeneration_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mBinding.objectCompare (inOperand.mAttribute_mBinding) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_outletBindingListForGeneration_2D_element::isValid (void) const {
  return mAttribute_mBinding.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration_2D_element::drop (void) {
  mAttribute_mBinding.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration_2D_element::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "<struct @outletBindingListForGeneration-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_outletBindingListForGeneration_2D_element::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBinding ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                @outletBindingListForGeneration-element type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration_2D_element ("outletBindingListForGeneration-element",
                                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2D_element GALGAS_outletBindingListForGeneration_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration_2D_element result ;
  const GALGAS_outletBindingListForGeneration_2D_element * p = (const GALGAS_outletBindingListForGeneration_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletBindingListForGeneration-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element::GALGAS_outletGenerationList_2D_element (void) :
mAttribute_mOutletType (),
mAttribute_mOutletName (),
mAttribute_mOutletBindingList (),
mAttribute_mImplementsDeallocProtocol () {
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element::~ GALGAS_outletGenerationList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element::GALGAS_outletGenerationList_2D_element (const GALGAS_string & inOperand0,
                                                                                const GALGAS_string & inOperand1,
                                                                                const GALGAS_outletBindingListForGeneration & inOperand2,
                                                                                const GALGAS_bool & inOperand3) :
mAttribute_mOutletType (inOperand0),
mAttribute_mOutletName (inOperand1),
mAttribute_mOutletBindingList (inOperand2),
mAttribute_mImplementsDeallocProtocol (inOperand3) {
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element GALGAS_outletGenerationList_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletGenerationList_2D_element (GALGAS_string::constructor_default (HERE),
                                                 GALGAS_string::constructor_default (HERE),
                                                 GALGAS_outletBindingListForGeneration::constructor_emptyList (HERE),
                                                 GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element GALGAS_outletGenerationList_2D_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_string & inOperand1,
                                                                                                const GALGAS_outletBindingListForGeneration & inOperand2,
                                                                                                const GALGAS_bool & inOperand3 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_outletGenerationList_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletGenerationList_2D_element::objectCompare (const GALGAS_outletGenerationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOutletType.objectCompare (inOperand.mAttribute_mOutletType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingList.objectCompare (inOperand.mAttribute_mOutletBindingList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (inOperand.mAttribute_mImplementsDeallocProtocol) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_outletGenerationList_2D_element::isValid (void) const {
  return mAttribute_mOutletType.isValid () && mAttribute_mOutletName.isValid () && mAttribute_mOutletBindingList.isValid () && mAttribute_mImplementsDeallocProtocol.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2D_element::drop (void) {
  mAttribute_mOutletType.drop () ;
  mAttribute_mOutletName.drop () ;
  mAttribute_mOutletBindingList.drop () ;
  mAttribute_mImplementsDeallocProtocol.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @outletGenerationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOutletType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2D_element::reader_mOutletType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2D_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList_2D_element::reader_mOutletBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingList ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletGenerationList_2D_element::reader_mImplementsDeallocProtocol (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementsDeallocProtocol ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @outletGenerationList-element type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList_2D_element ("outletGenerationList-element",
                                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList_2D_element GALGAS_outletGenerationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2D_element result ;
  const GALGAS_outletGenerationList_2D_element * p = (const GALGAS_outletGenerationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletGenerationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element::GALGAS_propertyArrayMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mElementType () {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element::~ GALGAS_propertyArrayMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element::GALGAS_propertyArrayMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_ebType & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mElementType (inOperand1) {
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element GALGAS_propertyArrayMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_propertyArrayMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                             GALGAS_ebType::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element GALGAS_propertyArrayMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_ebType & inOperand1 
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_propertyArrayMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_propertyArrayMap_2D_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_propertyArrayMap_2D_element::objectCompare (const GALGAS_propertyArrayMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mElementType.objectCompare (inOperand.mAttribute_mElementType) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_propertyArrayMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mElementType.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyArrayMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mElementType.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_propertyArrayMap_2D_element::description (C_String & ioString,
                                                      const int32_t inIndentation) const {
  ioString << "<struct @propertyArrayMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mElementType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_propertyArrayMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_propertyArrayMap_2D_element::reader_mElementType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mElementType ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                       @propertyArrayMap-element type                        *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyArrayMap_2D_element ("propertyArrayMap-element",
                                                    NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyArrayMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyArrayMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyArrayMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyArrayMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap_2D_element GALGAS_propertyArrayMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_propertyArrayMap_2D_element result ;
  const GALGAS_propertyArrayMap_2D_element * p = (const GALGAS_propertyArrayMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyArrayMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyArrayMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element::GALGAS_preferencesPropertyArrayMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mElementType (),
mAttribute_mAttributeListForImplementation () {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element::~ GALGAS_preferencesPropertyArrayMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element::GALGAS_preferencesPropertyArrayMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_ebType & inOperand1,
                                                                                              const GALGAS_attributeListForImplementation & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mElementType (inOperand1),
mAttribute_mAttributeListForImplementation (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element GALGAS_preferencesPropertyArrayMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_preferencesPropertyArrayMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_ebType::constructor_default (HERE),
                                                        GALGAS_attributeListForImplementation::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element GALGAS_preferencesPropertyArrayMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_ebType & inOperand1,
                                                                                                              const GALGAS_attributeListForImplementation & inOperand2 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_preferencesPropertyArrayMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_preferencesPropertyArrayMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_preferencesPropertyArrayMap_2D_element::objectCompare (const GALGAS_preferencesPropertyArrayMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mElementType.objectCompare (inOperand.mAttribute_mElementType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_preferencesPropertyArrayMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mElementType.isValid () && mAttribute_mAttributeListForImplementation.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mElementType.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesPropertyArrayMap_2D_element::description (C_String & ioString,
                                                                 const int32_t inIndentation) const {
  ioString << "<struct @preferencesPropertyArrayMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mElementType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferencesPropertyArrayMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_preferencesPropertyArrayMap_2D_element::reader_mElementType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mElementType ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesPropertyArrayMap_2D_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                  @preferencesPropertyArrayMap-element type                  *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesPropertyArrayMap_2D_element ("preferencesPropertyArrayMap-element",
                                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesPropertyArrayMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesPropertyArrayMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesPropertyArrayMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesPropertyArrayMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesPropertyArrayMap_2D_element GALGAS_preferencesPropertyArrayMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_preferencesPropertyArrayMap_2D_element result ;
  const GALGAS_preferencesPropertyArrayMap_2D_element * p = (const GALGAS_preferencesPropertyArrayMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesPropertyArrayMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferencesPropertyArrayMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element::GALGAS_preferencesMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mOutletDeclarationList (),
mAttribute_mActionList (),
mAttribute_mObservablePropertyMap (),
mAttribute_mFileInclusionSet (),
mAttribute_mControllerMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element::~ GALGAS_preferencesMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element::GALGAS_preferencesMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_attributeListForImplementation & inOperand1,
                                                                    const GALGAS_transientListForImplementation & inOperand2,
                                                                    const GALGAS_outletGenerationList & inOperand3,
                                                                    const GALGAS_lstringlist & inOperand4,
                                                                    const GALGAS_observablePropertyMap & inOperand5,
                                                                    const GALGAS_fileInclusionSet & inOperand6,
                                                                    const GALGAS_controllerMap & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeListForImplementation (inOperand1),
mAttribute_mTransientListForImplementation (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mActionList (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mFileInclusionSet (inOperand6),
mAttribute_mControllerMap (inOperand7) {
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element GALGAS_preferencesMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_preferencesMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                           GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                           GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                           GALGAS_lstringlist::constructor_emptyList (HERE),
                                           GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                           GALGAS_fileInclusionSet::constructor_default (HERE),
                                           GALGAS_controllerMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element GALGAS_preferencesMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_attributeListForImplementation & inOperand1,
                                                                                    const GALGAS_transientListForImplementation & inOperand2,
                                                                                    const GALGAS_outletGenerationList & inOperand3,
                                                                                    const GALGAS_lstringlist & inOperand4,
                                                                                    const GALGAS_observablePropertyMap & inOperand5,
                                                                                    const GALGAS_fileInclusionSet & inOperand6,
                                                                                    const GALGAS_controllerMap & inOperand7 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_preferencesMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_preferencesMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_preferencesMap_2D_element::objectCompare (const GALGAS_preferencesMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_preferencesMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mControllerMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_preferencesMap_2D_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @preferencesMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferencesMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesMap_2D_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferencesMap_2D_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap_2D_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferencesMap_2D_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferencesMap_2D_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_preferencesMap_2D_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_preferencesMap_2D_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @preferencesMap-element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap_2D_element ("preferencesMap-element",
                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_preferencesMap_2D_element GALGAS_preferencesMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap_2D_element result ;
  const GALGAS_preferencesMap_2D_element * p = (const GALGAS_preferencesMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferencesMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element::GALGAS_nibClassMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mOutletDeclarationList (),
mAttribute_mActionList (),
mAttribute_mObservablePropertyMap (),
mAttribute_mFileInclusionSet (),
mAttribute_mControllerMap (),
mAttribute_mArrayMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element::~ GALGAS_nibClassMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element::GALGAS_nibClassMap_2D_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_attributeListForImplementation & inOperand1,
                                                              const GALGAS_transientListForImplementation & inOperand2,
                                                              const GALGAS_outletGenerationList & inOperand3,
                                                              const GALGAS_lstringlist & inOperand4,
                                                              const GALGAS_observablePropertyMap & inOperand5,
                                                              const GALGAS_fileInclusionSet & inOperand6,
                                                              const GALGAS_controllerMap & inOperand7,
                                                              const GALGAS_propertyArrayMap & inOperand8) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeListForImplementation (inOperand1),
mAttribute_mTransientListForImplementation (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mActionList (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mFileInclusionSet (inOperand6),
mAttribute_mControllerMap (inOperand7),
mAttribute_mArrayMap (inOperand8) {
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element GALGAS_nibClassMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_nibClassMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                        GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                        GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                        GALGAS_lstringlist::constructor_emptyList (HERE),
                                        GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                        GALGAS_fileInclusionSet::constructor_default (HERE),
                                        GALGAS_controllerMap::constructor_emptyMap (HERE),
                                        GALGAS_propertyArrayMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element GALGAS_nibClassMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_attributeListForImplementation & inOperand1,
                                                                              const GALGAS_transientListForImplementation & inOperand2,
                                                                              const GALGAS_outletGenerationList & inOperand3,
                                                                              const GALGAS_lstringlist & inOperand4,
                                                                              const GALGAS_observablePropertyMap & inOperand5,
                                                                              const GALGAS_fileInclusionSet & inOperand6,
                                                                              const GALGAS_controllerMap & inOperand7,
                                                                              const GALGAS_propertyArrayMap & inOperand8 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_nibClassMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid ()) {
    result = GALGAS_nibClassMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_nibClassMap_2D_element::objectCompare (const GALGAS_nibClassMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayMap.objectCompare (inOperand.mAttribute_mArrayMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_nibClassMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mArrayMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mControllerMap.drop () ;
  mAttribute_mArrayMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_nibClassMap_2D_element::description (C_String & ioString,
                                                 const int32_t inIndentation) const {
  ioString << "<struct @nibClassMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_nibClassMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_nibClassMap_2D_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_nibClassMap_2D_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_nibClassMap_2D_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_nibClassMap_2D_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_nibClassMap_2D_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_nibClassMap_2D_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_nibClassMap_2D_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_propertyArrayMap GALGAS_nibClassMap_2D_element::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                          @nibClassMap-element type                          *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nibClassMap_2D_element ("nibClassMap-element",
                                               NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nibClassMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nibClassMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nibClassMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nibClassMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_nibClassMap_2D_element GALGAS_nibClassMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_nibClassMap_2D_element result ;
  const GALGAS_nibClassMap_2D_element * p = (const GALGAS_nibClassMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nibClassMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nibClassMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element::GALGAS_observablePropertyMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mType (),
mAttribute_mIsTransient (),
mAttribute_mPropertySignature (),
mAttribute_mIsCollection () {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element::~ GALGAS_observablePropertyMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element::GALGAS_observablePropertyMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_ebType & inOperand1,
                                                                                  const GALGAS_bool & inOperand2,
                                                                                  const GALGAS_lstring & inOperand3,
                                                                                  const GALGAS_bool & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mType (inOperand1),
mAttribute_mIsTransient (inOperand2),
mAttribute_mPropertySignature (inOperand3),
mAttribute_mIsCollection (inOperand4) {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element GALGAS_observablePropertyMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_observablePropertyMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_ebType::constructor_default (HERE),
                                                  GALGAS_bool::constructor_default (HERE),
                                                  GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_bool::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element GALGAS_observablePropertyMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_ebType & inOperand1,
                                                                                                  const GALGAS_bool & inOperand2,
                                                                                                  const GALGAS_lstring & inOperand3,
                                                                                                  const GALGAS_bool & inOperand4 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_observablePropertyMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_observablePropertyMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_observablePropertyMap_2D_element::objectCompare (const GALGAS_observablePropertyMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsTransient.objectCompare (inOperand.mAttribute_mIsTransient) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertySignature.objectCompare (inOperand.mAttribute_mPropertySignature) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsCollection.objectCompare (inOperand.mAttribute_mIsCollection) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_observablePropertyMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mIsTransient.isValid () && mAttribute_mPropertySignature.isValid () && mAttribute_mIsCollection.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mType.drop () ;
  mAttribute_mIsTransient.drop () ;
  mAttribute_mPropertySignature.drop () ;
  mAttribute_mIsCollection.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMap_2D_element::description (C_String & ioString,
                                                           const int32_t inIndentation) const {
  ioString << "<struct @observablePropertyMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsTransient.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertySignature.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsCollection.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observablePropertyMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_observablePropertyMap_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_observablePropertyMap_2D_element::reader_mIsTransient (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsTransient ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observablePropertyMap_2D_element::reader_mPropertySignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertySignature ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_observablePropertyMap_2D_element::reader_mIsCollection (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsCollection ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @observablePropertyMap-element type                     *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyMap_2D_element ("observablePropertyMap-element",
                                                         NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2D_element GALGAS_observablePropertyMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMap_2D_element result ;
  const GALGAS_observablePropertyMap_2D_element * p = (const GALGAS_observablePropertyMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element::GALGAS_observableObjectMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mObservableObjectOCName (),
mAttribute_mObservableObjectTypeOCName (),
mAttribute_mIncludeFileName (),
mAttribute_mObservableProperties () {
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element::~ GALGAS_observableObjectMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element::GALGAS_observableObjectMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_string & inOperand1,
                                                                              const GALGAS_string & inOperand2,
                                                                              const GALGAS_string & inOperand3,
                                                                              const GALGAS_observablePropertyMap & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mObservableObjectOCName (inOperand1),
mAttribute_mObservableObjectTypeOCName (inOperand2),
mAttribute_mIncludeFileName (inOperand3),
mAttribute_mObservableProperties (inOperand4) {
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element GALGAS_observableObjectMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_observableObjectMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                GALGAS_string::constructor_default (HERE),
                                                GALGAS_string::constructor_default (HERE),
                                                GALGAS_string::constructor_default (HERE),
                                                GALGAS_observablePropertyMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element GALGAS_observableObjectMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_string & inOperand1,
                                                                                              const GALGAS_string & inOperand2,
                                                                                              const GALGAS_string & inOperand3,
                                                                                              const GALGAS_observablePropertyMap & inOperand4 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_observableObjectMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_observableObjectMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_observableObjectMap_2D_element::objectCompare (const GALGAS_observableObjectMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableObjectOCName.objectCompare (inOperand.mAttribute_mObservableObjectOCName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableObjectTypeOCName.objectCompare (inOperand.mAttribute_mObservableObjectTypeOCName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIncludeFileName.objectCompare (inOperand.mAttribute_mIncludeFileName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableProperties.objectCompare (inOperand.mAttribute_mObservableProperties) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_observableObjectMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mObservableObjectOCName.isValid () && mAttribute_mObservableObjectTypeOCName.isValid () && mAttribute_mIncludeFileName.isValid () && mAttribute_mObservableProperties.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mObservableObjectOCName.drop () ;
  mAttribute_mObservableObjectTypeOCName.drop () ;
  mAttribute_mIncludeFileName.drop () ;
  mAttribute_mObservableProperties.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observableObjectMap_2D_element::description (C_String & ioString,
                                                         const int32_t inIndentation) const {
  ioString << "<struct @observableObjectMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableObjectOCName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableObjectTypeOCName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIncludeFileName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableProperties.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observableObjectMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap_2D_element::reader_mObservableObjectOCName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableObjectOCName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap_2D_element::reader_mObservableObjectTypeOCName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableObjectTypeOCName ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap_2D_element::reader_mIncludeFileName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIncludeFileName ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observableObjectMap_2D_element::reader_mObservableProperties (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableProperties ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                      @observableObjectMap-element type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observableObjectMap_2D_element ("observableObjectMap-element",
                                                       NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observableObjectMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observableObjectMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observableObjectMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observableObjectMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observableObjectMap_2D_element GALGAS_observableObjectMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_observableObjectMap_2D_element result ;
  const GALGAS_observableObjectMap_2D_element * p = (const GALGAS_observableObjectMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observableObjectMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observableObjectMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element::GALGAS_actionMap_2D_element (void) :
mAttribute_lkey () {
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element::~ GALGAS_actionMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element::GALGAS_actionMap_2D_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element GALGAS_actionMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_actionMap_2D_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element GALGAS_actionMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_actionMap_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_actionMap_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_actionMap_2D_element::objectCompare (const GALGAS_actionMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_actionMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_actionMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_actionMap_2D_element::description (C_String & ioString,
                                               const int32_t inIndentation) const {
  ioString << "<struct @actionMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_actionMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                           @actionMap-element type                           *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionMap_2D_element ("actionMap-element",
                                             NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap_2D_element GALGAS_actionMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_actionMap_2D_element result ;
  const GALGAS_actionMap_2D_element * p = (const GALGAS_actionMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("actionMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element::GALGAS_controllerMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mControllerClassName (),
mAttribute_mControlledClassOrEntityName (),
mAttribute_mIsEntity (),
mAttribute_mControllerBindingList (),
mAttribute_mActionMap (),
mAttribute_mObservableAttributeMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element::~ GALGAS_controllerMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element::GALGAS_controllerMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_string & inOperand1,
                                                                  const GALGAS_lstring & inOperand2,
                                                                  const GALGAS_bool & inOperand3,
                                                                  const GALGAS_outletBindingListForGeneration & inOperand4,
                                                                  const GALGAS_actionMap & inOperand5,
                                                                  const GALGAS_observablePropertyMap & inOperand6) :
mAttribute_lkey (inOperand0),
mAttribute_mControllerClassName (inOperand1),
mAttribute_mControlledClassOrEntityName (inOperand2),
mAttribute_mIsEntity (inOperand3),
mAttribute_mControllerBindingList (inOperand4),
mAttribute_mActionMap (inOperand5),
mAttribute_mObservableAttributeMap (inOperand6) {
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element GALGAS_controllerMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_string::constructor_default (HERE),
                                          GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_bool::constructor_default (HERE),
                                          GALGAS_outletBindingListForGeneration::constructor_emptyList (HERE),
                                          GALGAS_actionMap::constructor_emptyMap (HERE),
                                          GALGAS_observablePropertyMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element GALGAS_controllerMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_string & inOperand1,
                                                                                  const GALGAS_lstring & inOperand2,
                                                                                  const GALGAS_bool & inOperand3,
                                                                                  const GALGAS_outletBindingListForGeneration & inOperand4,
                                                                                  const GALGAS_actionMap & inOperand5,
                                                                                  const GALGAS_observablePropertyMap & inOperand6 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result = GALGAS_controllerMap_2D_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerMap_2D_element::objectCompare (const GALGAS_controllerMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerClassName.objectCompare (inOperand.mAttribute_mControllerClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControlledClassOrEntityName.objectCompare (inOperand.mAttribute_mControlledClassOrEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsEntity.objectCompare (inOperand.mAttribute_mIsEntity) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerBindingList.objectCompare (inOperand.mAttribute_mControllerBindingList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableAttributeMap.objectCompare (inOperand.mAttribute_mObservableAttributeMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_controllerMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerClassName.isValid () && mAttribute_mControlledClassOrEntityName.isValid () && mAttribute_mIsEntity.isValid () && mAttribute_mControllerBindingList.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservableAttributeMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mControllerClassName.drop () ;
  mAttribute_mControlledClassOrEntityName.drop () ;
  mAttribute_mIsEntity.drop () ;
  mAttribute_mControllerBindingList.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservableAttributeMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_controllerMap_2D_element::description (C_String & ioString,
                                                   const int32_t inIndentation) const {
  ioString << "<struct @controllerMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControlledClassOrEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsEntity.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerBindingList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableAttributeMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap_2D_element::reader_mControllerClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerClassName ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap_2D_element::reader_mControlledClassOrEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControlledClassOrEntityName ;
}

//-----------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerMap_2D_element::reader_mIsEntity (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsEntity ;
}

//-----------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_controllerMap_2D_element::reader_mControllerBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerBindingList ;
}

//-----------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerMap_2D_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerMap_2D_element::reader_mObservableAttributeMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                         @controllerMap-element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerMap_2D_element ("controllerMap-element",
                                                 NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_controllerMap_2D_element GALGAS_controllerMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap_2D_element result ;
  const GALGAS_controllerMap_2D_element * p = (const GALGAS_controllerMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList_2D_element::GALGAS_directDependancyList_2D_element (void) :
mAttribute_mDependency () {
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList_2D_element::~ GALGAS_directDependancyList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList_2D_element::GALGAS_directDependancyList_2D_element (const GALGAS_abstractTransientDependencyForImplementation & inOperand0) :
mAttribute_mDependency (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList_2D_element GALGAS_directDependancyList_2D_element::constructor_new (const GALGAS_abstractTransientDependencyForImplementation & inOperand0 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_directDependancyList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_directDependancyList_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_directDependancyList_2D_element::objectCompare (const GALGAS_directDependancyList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDependency.objectCompare (inOperand.mAttribute_mDependency) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_directDependancyList_2D_element::isValid (void) const {
  return mAttribute_mDependency.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList_2D_element::drop (void) {
  mAttribute_mDependency.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_directDependancyList_2D_element::description (C_String & ioString,
                                                          const int32_t inIndentation) const {
  ioString << "<struct @directDependancyList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDependency.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation GALGAS_directDependancyList_2D_element::reader_mDependency (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependency ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                     @directDependancyList-element type                      *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_directDependancyList_2D_element ("directDependancyList-element",
                                                        NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_directDependancyList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_directDependancyList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_directDependancyList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_directDependancyList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList_2D_element GALGAS_directDependancyList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList_2D_element result ;
  const GALGAS_directDependancyList_2D_element * p = (const GALGAS_directDependancyList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_directDependancyList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("directDependancyList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element::GALGAS_transientListForImplementation_2D_element (void) :
mAttribute_mTransientType (),
mAttribute_mTransientName (),
mAttribute_mDependencyList (),
mAttribute_mRootSignDependencyList () {
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element::~ GALGAS_transientListForImplementation_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element::GALGAS_transientListForImplementation_2D_element (const GALGAS_ebType & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_directDependancyList & inOperand2,
                                                                                                    const GALGAS_stringlist & inOperand3) :
mAttribute_mTransientType (inOperand0),
mAttribute_mTransientName (inOperand1),
mAttribute_mDependencyList (inOperand2),
mAttribute_mRootSignDependencyList (inOperand3) {
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element GALGAS_transientListForImplementation_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_transientListForImplementation_2D_element (GALGAS_ebType::constructor_default (HERE),
                                                           GALGAS_string::constructor_default (HERE),
                                                           GALGAS_directDependancyList::constructor_emptyList (HERE),
                                                           GALGAS_stringlist::constructor_emptyList (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element GALGAS_transientListForImplementation_2D_element::constructor_new (const GALGAS_ebType & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_directDependancyList & inOperand2,
                                                                                                                    const GALGAS_stringlist & inOperand3 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_transientListForImplementation_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_transientListForImplementation_2D_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_transientListForImplementation_2D_element::objectCompare (const GALGAS_transientListForImplementation_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTransientType.objectCompare (inOperand.mAttribute_mTransientType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientName.objectCompare (inOperand.mAttribute_mTransientName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDependencyList.objectCompare (inOperand.mAttribute_mDependencyList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootSignDependencyList.objectCompare (inOperand.mAttribute_mRootSignDependencyList) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_transientListForImplementation_2D_element::isValid (void) const {
  return mAttribute_mTransientType.isValid () && mAttribute_mTransientName.isValid () && mAttribute_mDependencyList.isValid () && mAttribute_mRootSignDependencyList.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation_2D_element::drop (void) {
  mAttribute_mTransientType.drop () ;
  mAttribute_mTransientName.drop () ;
  mAttribute_mDependencyList.drop () ;
  mAttribute_mRootSignDependencyList.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_transientListForImplementation_2D_element::description (C_String & ioString,
                                                                    const int32_t inIndentation) const {
  ioString << "<struct @transientListForImplementation-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTransientType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDependencyList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootSignDependencyList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_ebType GALGAS_transientListForImplementation_2D_element::reader_mTransientType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientType ;
}

//-----------------------------------------------------------------------------*

GALGAS_string GALGAS_transientListForImplementation_2D_element::reader_mTransientName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientName ;
}

//-----------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_transientListForImplementation_2D_element::reader_mDependencyList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependencyList ;
}

//-----------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_transientListForImplementation_2D_element::reader_mRootSignDependencyList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootSignDependencyList ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                @transientListForImplementation-element type                 *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientListForImplementation_2D_element ("transientListForImplementation-element",
                                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientListForImplementation_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientListForImplementation_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientListForImplementation_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientListForImplementation_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2D_element GALGAS_transientListForImplementation_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation_2D_element result ;
  const GALGAS_transientListForImplementation_2D_element * p = (const GALGAS_transientListForImplementation_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientListForImplementation_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientListForImplementation-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element::GALGAS_observablePropertyMapMap_2D_element (void) :
mAttribute_lkey (),
mAttribute_mType (),
mAttribute_mObservablePropertyMap () {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element::~ GALGAS_observablePropertyMapMap_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element::GALGAS_observablePropertyMapMap_2D_element (const GALGAS_lstring & inOperand0,
                                                                                        const GALGAS_typeKind & inOperand1,
                                                                                        const GALGAS_observablePropertyMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mType (inOperand1),
mAttribute_mObservablePropertyMap (inOperand2) {
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element GALGAS_observablePropertyMapMap_2D_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_observablePropertyMapMap_2D_element (GALGAS_lstring::constructor_default (HERE),
                                                     GALGAS_typeKind::constructor_classType (HERE),
                                                     GALGAS_observablePropertyMap::constructor_emptyMap (HERE)) ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element GALGAS_observablePropertyMapMap_2D_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                        const GALGAS_typeKind & inOperand1,
                                                                                                        const GALGAS_observablePropertyMap & inOperand2 
                                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_observablePropertyMapMap_2D_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_observablePropertyMapMap_2D_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_observablePropertyMapMap_2D_element::objectCompare (const GALGAS_observablePropertyMapMap_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_observablePropertyMapMap_2D_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mObservablePropertyMap.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap_2D_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mType.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_observablePropertyMapMap_2D_element::description (C_String & ioString,
                                                              const int32_t inIndentation) const {
  ioString << "<struct @observablePropertyMapMap-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observablePropertyMapMap_2D_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//-----------------------------------------------------------------------------*

GALGAS_typeKind GALGAS_observablePropertyMapMap_2D_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMapMap_2D_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                   @observablePropertyMapMap-element type                    *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyMapMap_2D_element ("observablePropertyMapMap-element",
                                                            NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyMapMap_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyMapMap_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyMapMap_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyMapMap_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_observablePropertyMapMap_2D_element GALGAS_observablePropertyMapMap_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMapMap_2D_element result ;
  const GALGAS_observablePropertyMapMap_2D_element * p = (const GALGAS_observablePropertyMapMap_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyMapMap_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyMapMap-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList_2D_element::GALGAS_generationList_2D_element (void) :
mAttribute_mGeneration () {
}

//-----------------------------------------------------------------------------*

GALGAS_generationList_2D_element::~ GALGAS_generationList_2D_element (void) {
}

//-----------------------------------------------------------------------------*

GALGAS_generationList_2D_element::GALGAS_generationList_2D_element (const GALGAS_generation & inOperand0) :
mAttribute_mGeneration (inOperand0) {
}

//-----------------------------------------------------------------------------*

GALGAS_generationList_2D_element GALGAS_generationList_2D_element::constructor_new (const GALGAS_generation & inOperand0 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_generationList_2D_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_generationList_2D_element (inOperand0) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

typeComparisonResult GALGAS_generationList_2D_element::objectCompare (const GALGAS_generationList_2D_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mGeneration.objectCompare (inOperand.mAttribute_mGeneration) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

bool GALGAS_generationList_2D_element::isValid (void) const {
  return mAttribute_mGeneration.isValid () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList_2D_element::drop (void) {
  mAttribute_mGeneration.drop () ;
}

//-----------------------------------------------------------------------------*

void GALGAS_generationList_2D_element::description (C_String & ioString,
                                                    const int32_t inIndentation) const {
  ioString << "<struct @generationList-element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mGeneration.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//-----------------------------------------------------------------------------*

GALGAS_generation GALGAS_generationList_2D_element::reader_mGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGeneration ;
}



//-----------------------------------------------------------------------------*
//                                                                             *
//                        @generationList-element type                         *
//                                                                             *
//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_generationList_2D_element ("generationList-element",
                                                  NULL) ;

//-----------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_generationList_2D_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_generationList_2D_element ;
}

//-----------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_generationList_2D_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_generationList_2D_element (*this)) ;
  }
  return result ;
}

//-----------------------------------------------------------------------------*

GALGAS_generationList_2D_element GALGAS_generationList_2D_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_generationList_2D_element result ;
  const GALGAS_generationList_2D_element * p = (const GALGAS_generationList_2D_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_generationList_2D_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("generationList-element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


