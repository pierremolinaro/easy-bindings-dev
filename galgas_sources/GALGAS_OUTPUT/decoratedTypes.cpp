//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'decoratedTypes.cpp'                          *
//                        Generated by version 2.5.0                         *
//                      july 16th, 2013, at 21h45'58"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "decoratedTypes.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "decoratedTypes.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'predefinedColors'                        *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_stringset function_predefinedColors (C_Compiler * inCompiler
                                            COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'predefinedDates'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_stringset function_predefinedDates (C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'predefinedFonts'                         *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_stringset function_predefinedFonts (C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind::GALGAS_unifiedTypeKind (void) :
mEnum (kNotBuilt) {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_integerType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_integerType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_uintegerType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_uintegerType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_boolType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_boolType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_doubleType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_doubleType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_anyScalarType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_anyScalarType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_anyNumberType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_anyNumberType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_decimalType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_decimalType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_colorType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_colorType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_stringType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_stringType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_dataType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_dataType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_dateType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_dateType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_fontType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_fontType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_imageType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_imageType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_bezierPathType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_bezierPathType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_enumerationType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_enumerationType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_structType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_structType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_classType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_classType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_nibClassType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_nibClassType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_entityType (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_entityType ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::constructor_outletClass (UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  result.mEnum = kEnum_outletClass ;
  return result ;
}

//---------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_unifiedTypeKind [21] = {
  "(not built)",
  "integerType",
  "uintegerType",
  "boolType",
  "doubleType",
  "anyScalarType",
  "anyNumberType",
  "decimalType",
  "colorType",
  "stringType",
  "dataType",
  "dateType",
  "fontType",
  "imageType",
  "bezierPathType",
  "enumerationType",
  "structType",
  "classType",
  "nibClassType",
  "entityType",
  "outletClass"
} ;

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeKind::description (C_String & ioString,
                                          const PMSInt32 /* inIndentation */) const {
  ioString << "<enum @unifiedTypeKind: " << gEnumNameArrayFor_unifiedTypeKind [mEnum] << ">" ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_unifiedTypeKind::objectCompare (const GALGAS_unifiedTypeKind & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                           @unifiedTypeKind type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeKind ("unifiedTypeKind",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeKind::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeKind ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeKind::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeKind (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeKind::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeKind result ;
  const GALGAS_unifiedTypeKind * p = (const GALGAS_unifiedTypeKind *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeKind *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeKind", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_unifiedTypeMap::cMapElement_unifiedTypeMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_unifiedTypeKind & in_mKind,
                                                        const GALGAS_unifiedTypeProxy & in_mSuperClassProxy,
                                                        const GALGAS_enumConstantMap & in_mEnumConstantMap,
                                                        const GALGAS_unifiedTypeProxyList & in_mAttributeTypeList,
                                                        const GALGAS_outletClassBindingMap & in_mOutletClassBindingMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mKind (in_mKind),
mAttribute_mSuperClassProxy (in_mSuperClassProxy),
mAttribute_mEnumConstantMap (in_mEnumConstantMap),
mAttribute_mAttributeTypeList (in_mAttributeTypeList),
mAttribute_mOutletClassBindingMap (in_mOutletClassBindingMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_unifiedTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mKind.isValid () && mAttribute_mSuperClassProxy.isValid () && mAttribute_mEnumConstantMap.isValid () && mAttribute_mAttributeTypeList.isValid () && mAttribute_mOutletClassBindingMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_unifiedTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_unifiedTypeMap (mAttribute_lkey, mAttribute_mKind, mAttribute_mSuperClassProxy, mAttribute_mEnumConstantMap, mAttribute_mAttributeTypeList, mAttribute_mOutletClassBindingMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_unifiedTypeMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mKind" ":" ;
  mAttribute_mKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassProxy" ":" ;
  mAttribute_mSuperClassProxy.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumConstantMap" ":" ;
  mAttribute_mEnumConstantMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeTypeList" ":" ;
  mAttribute_mAttributeTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingMap" ":" ;
  mAttribute_mOutletClassBindingMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_unifiedTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_unifiedTypeMap * operand = (cMapElement_unifiedTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mKind.objectCompare (operand->mAttribute_mKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassProxy.objectCompare (operand->mAttribute_mSuperClassProxy) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEnumConstantMap.objectCompare (operand->mAttribute_mEnumConstantMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeTypeList.objectCompare (operand->mAttribute_mAttributeTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingMap.objectCompare (operand->mAttribute_mOutletClassBindingMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (void) :
AC_GALGAS_uniqueMap () {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMap::GALGAS_unifiedTypeMap (const GALGAS_unifiedTypeMap & inSource) :
AC_GALGAS_uniqueMap (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMap & GALGAS_unifiedTypeMap::operator = (const GALGAS_unifiedTypeMap & inSource) {
  * ((AC_GALGAS_uniqueMap *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*
//  Map automaton states                                                     *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//  Map automaton state names                                                *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//  Map automaton actions                                                    *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//  Map automaton action names                                               *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//  Map automaton transitions                                                *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*
//  Map automaton final state issues                                         *
//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_unifiedTypeKind inArgument0,
                                                GALGAS_unifiedTypeProxy inArgument1,
                                                GALGAS_enumConstantMap inArgument2,
                                                GALGAS_unifiedTypeProxyList inArgument3,
                                                GALGAS_outletClassBindingMap inArgument4,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_unifiedTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_unifiedTypeMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' type is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes,
                        inCompiler,
                        0,
                        NULL,
                        kInsertErrorMessage,
                        kShadowErrorMessage
                        COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_unifiedTypeMap_searchKey = "the '%K' type is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_unifiedTypeKind & outArgument0,
                                              GALGAS_unifiedTypeProxy & outArgument1,
                                              GALGAS_enumConstantMap & outArgument2,
                                              GALGAS_unifiedTypeProxyList & outArgument3,
                                              GALGAS_outletClassBindingMap & outArgument4,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_unifiedTypeMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    outArgument0 = p->mAttribute_mKind ;
    outArgument1 = p->mAttribute_mSuperClassProxy ;
    outArgument2 = p->mAttribute_mEnumConstantMap ;
    outArgument3 = p->mAttribute_mAttributeTypeList ;
    outArgument4 = p->mAttribute_mOutletClassBindingMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeMap::reader_mKindForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_unifiedTypeKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeMap::reader_mSuperClassProxyForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mSuperClassProxy ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_unifiedTypeMap::reader_mEnumConstantMapForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_enumConstantMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mEnumConstantMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeMap::reader_mAttributeTypeListForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_unifiedTypeProxyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mAttributeTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_unifiedTypeMap::reader_mOutletClassBindingMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) attributes ;
  GALGAS_outletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mOutletClassBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMKindForKey (GALGAS_unifiedTypeKind inAttributeValue,
                                                     GALGAS_string inKey,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMSuperClassProxyForKey (GALGAS_unifiedTypeProxy inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mSuperClassProxy = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMEnumConstantMapForKey (GALGAS_enumConstantMap inAttributeValue,
                                                                GALGAS_string inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mEnumConstantMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMAttributeTypeListForKey (GALGAS_unifiedTypeProxyList inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mAttributeTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeMap::modifier_setMOutletClassBindingMapForKey (GALGAS_outletClassBindingMap inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * p = (cMapElement_unifiedTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_unifiedTypeMap) ;
    p->mAttribute_mOutletClassBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_unifiedTypeMap * GALGAS_unifiedTypeMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_unifiedTypeMap * result = (cMapElement_unifiedTypeMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_unifiedTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_unifiedTypeMap * GALGAS_unifiedTypeMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_unifiedTypeMap_searchKey COMMA_THERE) ;
  cMapElement_unifiedTypeMap * result = (cMapElement_unifiedTypeMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_unifiedTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_unifiedTypeMap::cEnumerator_unifiedTypeMap (const GALGAS_unifiedTypeMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_unifiedTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind cEnumerator_unifiedTypeMap::current_mKind (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mKind ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_unifiedTypeMap::current_mSuperClassProxy (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mSuperClassProxy ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap cEnumerator_unifiedTypeMap::current_mEnumConstantMap (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mEnumConstantMap ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList cEnumerator_unifiedTypeMap::current_mAttributeTypeList (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mAttributeTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap cEnumerator_unifiedTypeMap::current_mOutletClassBindingMap (LOCATION_ARGS) const {
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
  return p->mAttribute_mOutletClassBindingMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @unifiedTypeMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeMap ("unifiedTypeMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeMap GALGAS_unifiedTypeMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeMap result ;
  const GALGAS_unifiedTypeMap * p = (const GALGAS_unifiedTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy::GALGAS_unifiedTypeProxy (void) :
AC_GALGAS_uniqueMapProxy () {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::constructor_null (LOCATION_ARGS) {
  GALGAS_unifiedTypeProxy result ;
  result.makeNullProxy (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxy::class_method_makeProxy (GALGAS_unifiedTypeMap & ioMap,
                                                      GALGAS_lstring inKey,
                                                      GALGAS_unifiedTypeProxy & outProxy
                                                      COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxy (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxy::class_method_makeProxyFromString (GALGAS_unifiedTypeMap & ioMap,
                                                                GALGAS_string inKey,
                                                                GALGAS_unifiedTypeProxy & outProxy
                                                                COMMA_LOCATION_ARGS) {
  outProxy.internalMakeProxyFromString (ioMap, inKey COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeKind GALGAS_unifiedTypeProxy::reader_mKind (C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeKind result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mKind" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mKind;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::reader_mSuperClassProxy (C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxy result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mSuperClassProxy" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mSuperClassProxy;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_unifiedTypeProxy::reader_mEnumConstantMap (C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_enumConstantMap result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mEnumConstantMap" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mEnumConstantMap;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxy::reader_mAttributeTypeList (C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mAttributeTypeList" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mAttributeTypeList;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_unifiedTypeProxy::reader_mOutletClassBindingMap (C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  const cMapElement_unifiedTypeMap * p = (const cMapElement_unifiedTypeMap *) getAttributeListPointer (inCompiler, "mOutletClassBindingMap" COMMA_THERE) ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_unifiedTypeMap) ;
    result = p->mAttribute_mOutletClassBindingMap;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::constructor_searchKey (const GALGAS_unifiedTypeMap & inMap,
                                                                        const GALGAS_lstring & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxy result ;
  result.internalMakeRegularProxyBySearchingKey (inMap, inKey, kSearchErrorMessage_unifiedTypeMap_searchKey, inCompiler COMMA_THERE) ;
  return result ;
}


//---------------------------------------------------------------------------*
//                                                                           *
//                          @unifiedTypeProxy type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxy ("unifiedTypeProxy",
                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxy::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxy ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxy::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxy (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxy::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxy result ;
  const GALGAS_unifiedTypeProxy * p = (const GALGAS_unifiedTypeProxy *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxy *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxy", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@unifiedTypeProxyList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_unifiedTypeProxyList : public cCollectionElement {
  public : GALGAS_unifiedTypeProxyList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_unifiedTypeProxyList (const GALGAS_unifiedTypeProxy & in_mTypeProxy
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_unifiedTypeProxyList::cCollectionElement_unifiedTypeProxyList (const GALGAS_unifiedTypeProxy & in_mTypeProxy
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTypeProxy) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_unifiedTypeProxyList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_unifiedTypeProxyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_unifiedTypeProxyList (mObject.mAttribute_mTypeProxy COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_unifiedTypeProxyList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTypeProxy" ":" ;
  mObject.mAttribute_mTypeProxy.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_unifiedTypeProxyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_unifiedTypeProxyList * operand = (cCollectionElement_unifiedTypeProxyList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_unifiedTypeProxyList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList::GALGAS_unifiedTypeProxyList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList::GALGAS_unifiedTypeProxyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::constructor_listWithValue (const GALGAS_unifiedTypeProxy & inOperand0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_unifiedTypeProxyList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_unifiedTypeProxy & in_mTypeProxy
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_unifiedTypeProxyList * p = NULL ;
  macroMyNew (p, cCollectionElement_unifiedTypeProxyList (in_mTypeProxy COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::addAssign_operation (const GALGAS_unifiedTypeProxy & inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_unifiedTypeProxyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_prependValue (GALGAS_unifiedTypeProxy inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_unifiedTypeProxyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_popFirst (GALGAS_unifiedTypeProxy & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::modifier_popLast (GALGAS_unifiedTypeProxy & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::method_first (GALGAS_unifiedTypeProxy & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::method_last (GALGAS_unifiedTypeProxy & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    outOperand0 = p->mObject.mAttribute_mTypeProxy ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::operator_concat (const GALGAS_unifiedTypeProxyList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result = GALGAS_unifiedTypeProxyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_unifiedTypeProxyList result = GALGAS_unifiedTypeProxyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList::dotAssign_operation (const GALGAS_unifiedTypeProxyList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxyList::reader_mTypeProxyAtIndex (const GALGAS_uint & inIndex,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_unifiedTypeProxyList * p = (cCollectionElement_unifiedTypeProxyList *) attributes.ptr () ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_unifiedTypeProxyList) ;
    result = p->mObject.mAttribute_mTypeProxy ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_unifiedTypeProxyList::cEnumerator_unifiedTypeProxyList (const GALGAS_unifiedTypeProxyList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element cEnumerator_unifiedTypeProxyList::current (LOCATION_ARGS) const {
  const cCollectionElement_unifiedTypeProxyList * p = (const cCollectionElement_unifiedTypeProxyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_unifiedTypeProxyList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_unifiedTypeProxyList::current_mTypeProxy (LOCATION_ARGS) const {
  const cCollectionElement_unifiedTypeProxyList * p = (const cCollectionElement_unifiedTypeProxyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_unifiedTypeProxyList) ;
  return p->mObject.mAttribute_mTypeProxy ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @unifiedTypeProxyList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxyList ("unifiedTypeProxyList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxyList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxyList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_unifiedTypeProxyList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList result ;
  const GALGAS_unifiedTypeProxyList * p = (const GALGAS_unifiedTypeProxyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_globalEnumConstantMap::cMapElement_globalEnumConstantMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_lstring & in_mEnumTypeName
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mEnumTypeName (in_mEnumTypeName) {
}

//---------------------------------------------------------------------------*

bool cMapElement_globalEnumConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mEnumTypeName.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_globalEnumConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_globalEnumConstantMap (mAttribute_lkey, mAttribute_mEnumTypeName COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_globalEnumConstantMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumTypeName" ":" ;
  mAttribute_mEnumTypeName.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_globalEnumConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_globalEnumConstantMap * operand = (cMapElement_globalEnumConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mEnumTypeName.objectCompare (operand->mAttribute_mEnumTypeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap::GALGAS_globalEnumConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap::GALGAS_globalEnumConstantMap (const GALGAS_globalEnumConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap & GALGAS_globalEnumConstantMap::operator = (const GALGAS_globalEnumConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::constructor_mapWithMapToOverride (const GALGAS_globalEnumConstantMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_globalEnumConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_lstring inArgument0,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_globalEnumConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_globalEnumConstantMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' enumeration constant is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_globalEnumConstantMap_searchKey = "the '%K' enumeration constant is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_lstring & outArgument0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_globalEnumConstantMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_globalEnumConstantMap) ;
    outArgument0 = p->mAttribute_mEnumTypeName ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_globalEnumConstantMap::reader_mEnumTypeNameForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_globalEnumConstantMap) ;
    result = p->mAttribute_mEnumTypeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap::modifier_setMEnumTypeNameForKey (GALGAS_lstring inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalEnumConstantMap * p = (cMapElement_globalEnumConstantMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_globalEnumConstantMap) ;
    p->mAttribute_mEnumTypeName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_globalEnumConstantMap * GALGAS_globalEnumConstantMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                            const GALGAS_string & inKey
                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_globalEnumConstantMap * result = (cMapElement_globalEnumConstantMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_globalEnumConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_globalEnumConstantMap * GALGAS_globalEnumConstantMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                               const GALGAS_lstring & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_globalEnumConstantMap_searchKey COMMA_THERE) ;
  cMapElement_globalEnumConstantMap * result = (cMapElement_globalEnumConstantMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_globalEnumConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_globalEnumConstantMap::cEnumerator_globalEnumConstantMap (const GALGAS_globalEnumConstantMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element cEnumerator_globalEnumConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_globalEnumConstantMap) ;
  return GALGAS_globalEnumConstantMap_2E_element (p->mAttribute_lkey, p->mAttribute_mEnumTypeName) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalEnumConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_globalEnumConstantMap::current_mEnumTypeName (LOCATION_ARGS) const {
  const cMapElement_globalEnumConstantMap * p = (const cMapElement_globalEnumConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_globalEnumConstantMap) ;
  return p->mAttribute_mEnumTypeName ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @globalEnumConstantMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalEnumConstantMap ("globalEnumConstantMap",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalEnumConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalEnumConstantMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalEnumConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalEnumConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_globalEnumConstantMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap result ;
  const GALGAS_globalEnumConstantMap * p = (const GALGAS_globalEnumConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalEnumConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalEnumConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_enumConstantMap::cMapElement_enumConstantMap (const GALGAS_lstring & inKey
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_enumConstantMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_enumConstantMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_enumConstantMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_enumConstantMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_enumConstantMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_enumConstantMap * operand = (cMapElement_enumConstantMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap::GALGAS_enumConstantMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap::GALGAS_enumConstantMap (const GALGAS_enumConstantMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap & GALGAS_enumConstantMap::operator = (const GALGAS_enumConstantMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_enumConstantMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::constructor_mapWithMapToOverride (const GALGAS_enumConstantMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_enumConstantMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_enumConstantMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_enumConstantMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_enumConstantMap * p = NULL ;
  macroMyNew (p, cMapElement_enumConstantMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' enumeration constant is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_enumConstantMap_searchKey = "the '%K' enumeration constant is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_enumConstantMap::method_searchKey (GALGAS_lstring inKey,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_enumConstantMap * p = (const cMapElement_enumConstantMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_enumConstantMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_enumConstantMap) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_enumConstantMap * GALGAS_enumConstantMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_enumConstantMap * result = (cMapElement_enumConstantMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_enumConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_enumConstantMap * GALGAS_enumConstantMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_enumConstantMap_searchKey COMMA_THERE) ;
  cMapElement_enumConstantMap * result = (cMapElement_enumConstantMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_enumConstantMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_enumConstantMap::cEnumerator_enumConstantMap (const GALGAS_enumConstantMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element cEnumerator_enumConstantMap::current (LOCATION_ARGS) const {
  const cMapElement_enumConstantMap * p = (const cMapElement_enumConstantMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_enumConstantMap) ;
  return GALGAS_enumConstantMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_enumConstantMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @enumConstantMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumConstantMap ("enumConstantMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumConstantMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumConstantMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumConstantMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumConstantMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumConstantMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_enumConstantMap result ;
  const GALGAS_enumConstantMap * p = (const GALGAS_enumConstantMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumConstantMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumConstantMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_structTypeMap::cMapElement_structTypeMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_structFieldList & in_mFieldList,
                                                      const GALGAS_stringset & in_mHeaderFileInclusionSet
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mFieldList (in_mFieldList),
mAttribute_mHeaderFileInclusionSet (in_mHeaderFileInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_structTypeMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFieldList.isValid () && mAttribute_mHeaderFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_structTypeMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_structTypeMap (mAttribute_lkey, mAttribute_mFieldList, mAttribute_mHeaderFileInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_structTypeMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFieldList" ":" ;
  mAttribute_mFieldList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHeaderFileInclusionSet" ":" ;
  mAttribute_mHeaderFileInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_structTypeMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_structTypeMap * operand = (cMapElement_structTypeMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mFieldList.objectCompare (operand->mAttribute_mFieldList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHeaderFileInclusionSet.objectCompare (operand->mAttribute_mHeaderFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap::GALGAS_structTypeMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap::GALGAS_structTypeMap (const GALGAS_structTypeMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap & GALGAS_structTypeMap::operator = (const GALGAS_structTypeMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_structTypeMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::constructor_mapWithMapToOverride (const GALGAS_structTypeMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_structTypeMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_structTypeMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_structTypeMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_structFieldList inArgument0,
                                               GALGAS_stringset inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_structTypeMap * p = NULL ;
  macroMyNew (p, cMapElement_structTypeMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' plain struct type is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_structTypeMap_searchKey = "the '%K' plain struct type is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_structTypeMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_structFieldList & outArgument0,
                                             GALGAS_stringset & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_structTypeMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_structTypeMap) ;
    outArgument0 = p->mAttribute_mFieldList ;
    outArgument1 = p->mAttribute_mHeaderFileInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structTypeMap::reader_mFieldListForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) attributes ;
  GALGAS_structFieldList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_structTypeMap) ;
    result = p->mAttribute_mFieldList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_structTypeMap::reader_mHeaderFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) attributes ;
  GALGAS_stringset result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_structTypeMap) ;
    result = p->mAttribute_mHeaderFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_structTypeMap::modifier_setMFieldListForKey (GALGAS_structFieldList inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_structTypeMap * p = (cMapElement_structTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_structTypeMap) ;
    p->mAttribute_mFieldList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_structTypeMap::modifier_setMHeaderFileInclusionSetForKey (GALGAS_stringset inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_structTypeMap * p = (cMapElement_structTypeMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_structTypeMap) ;
    p->mAttribute_mHeaderFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_structTypeMap * GALGAS_structTypeMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_structTypeMap * result = (cMapElement_structTypeMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_structTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_structTypeMap * GALGAS_structTypeMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_structTypeMap_searchKey COMMA_THERE) ;
  cMapElement_structTypeMap * result = (cMapElement_structTypeMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_structTypeMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_structTypeMap::cEnumerator_structTypeMap (const GALGAS_structTypeMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element cEnumerator_structTypeMap::current (LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_structTypeMap) ;
  return GALGAS_structTypeMap_2E_element (p->mAttribute_lkey, p->mAttribute_mFieldList, p->mAttribute_mHeaderFileInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_structTypeMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_structFieldList cEnumerator_structTypeMap::current_mFieldList (LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_structTypeMap) ;
  return p->mAttribute_mFieldList ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset cEnumerator_structTypeMap::current_mHeaderFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_structTypeMap * p = (const cMapElement_structTypeMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_structTypeMap) ;
  return p->mAttribute_mHeaderFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @structTypeMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structTypeMap ("structTypeMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structTypeMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structTypeMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structTypeMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structTypeMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_structTypeMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_structTypeMap result ;
  const GALGAS_structTypeMap * p = (const GALGAS_structTypeMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structTypeMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structTypeMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_enumMap::cMapElement_enumMap (const GALGAS_lstring & inKey,
                                          const GALGAS_lstringlist & in_mConstantOrderedList,
                                          const GALGAS_enumConstantMap & in_mEnumConstantMap
                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mConstantOrderedList (in_mConstantOrderedList),
mAttribute_mEnumConstantMap (in_mEnumConstantMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_enumMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mConstantOrderedList.isValid () && mAttribute_mEnumConstantMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_enumMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_enumMap (mAttribute_lkey, mAttribute_mConstantOrderedList, mAttribute_mEnumConstantMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_enumMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mConstantOrderedList" ":" ;
  mAttribute_mConstantOrderedList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEnumConstantMap" ":" ;
  mAttribute_mEnumConstantMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_enumMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_enumMap * operand = (cMapElement_enumMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mConstantOrderedList.objectCompare (operand->mAttribute_mConstantOrderedList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mEnumConstantMap.objectCompare (operand->mAttribute_mEnumConstantMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap::GALGAS_enumMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_enumMap::GALGAS_enumMap (const GALGAS_enumMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_enumMap & GALGAS_enumMap::operator = (const GALGAS_enumMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_enumMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::constructor_mapWithMapToOverride (const GALGAS_enumMap & inMapToOverride
                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_enumMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::reader_overriddenMap (C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_enumMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_enumMap::modifier_insertKey (GALGAS_lstring inKey,
                                         GALGAS_lstringlist inArgument0,
                                         GALGAS_enumConstantMap inArgument1,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) {
  cMapElement_enumMap * p = NULL ;
  macroMyNew (p, cMapElement_enumMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' enumeration is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_enumMap_searchKey = "the '%K' enumeration is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_enumMap::method_searchKey (GALGAS_lstring inKey,
                                       GALGAS_lstringlist & outArgument0,
                                       GALGAS_enumConstantMap & outArgument1,
                                       C_Compiler * inCompiler
                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) performSearch (inKey,
                                                                                 inCompiler,
                                                                                 kSearchErrorMessage_enumMap_searchKey
                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_enumMap) ;
    outArgument0 = p->mAttribute_mConstantOrderedList ;
    outArgument1 = p->mAttribute_mEnumConstantMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumMap::reader_mConstantOrderedListForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_enumMap) ;
    result = p->mAttribute_mConstantOrderedList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumMap::reader_mEnumConstantMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) attributes ;
  GALGAS_enumConstantMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_enumMap) ;
    result = p->mAttribute_mEnumConstantMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_enumMap::modifier_setMConstantOrderedListForKey (GALGAS_lstringlist inAttributeValue,
                                                             GALGAS_string inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_enumMap * p = (cMapElement_enumMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_enumMap) ;
    p->mAttribute_mConstantOrderedList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_enumMap::modifier_setMEnumConstantMapForKey (GALGAS_enumConstantMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_enumMap * p = (cMapElement_enumMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_enumMap) ;
    p->mAttribute_mEnumConstantMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_enumMap * GALGAS_enumMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                const GALGAS_string & inKey
                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_enumMap * result = (cMapElement_enumMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_enumMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_enumMap * GALGAS_enumMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                   const GALGAS_lstring & inKey
                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_enumMap_searchKey COMMA_THERE) ;
  cMapElement_enumMap * result = (cMapElement_enumMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_enumMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_enumMap::cEnumerator_enumMap (const GALGAS_enumMap & inEnumeratedObject,
                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element cEnumerator_enumMap::current (LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_enumMap) ;
  return GALGAS_enumMap_2E_element (p->mAttribute_lkey, p->mAttribute_mConstantOrderedList, p->mAttribute_mEnumConstantMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_enumMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_enumMap::current_mConstantOrderedList (LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_enumMap) ;
  return p->mAttribute_mConstantOrderedList ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap cEnumerator_enumMap::current_mEnumConstantMap (LOCATION_ARGS) const {
  const cMapElement_enumMap * p = (const cMapElement_enumMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_enumMap) ;
  return p->mAttribute_mEnumConstantMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                               @enumMap type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumMap ("enumMap",
                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_enumMap::extractObject (const GALGAS_object & inObject,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
  GALGAS_enumMap result ;
  const GALGAS_enumMap * p = (const GALGAS_enumMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_userCursorMap::cMapElement_userCursorMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_double & in_mHotSpotX,
                                                      const GALGAS_double & in_mHotSpotY
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mHotSpotX (in_mHotSpotX),
mAttribute_mHotSpotY (in_mHotSpotY) {
}

//---------------------------------------------------------------------------*

bool cMapElement_userCursorMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_userCursorMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_userCursorMap (mAttribute_lkey, mAttribute_mHotSpotX, mAttribute_mHotSpotY COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_userCursorMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHotSpotX" ":" ;
  mAttribute_mHotSpotX.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHotSpotY" ":" ;
  mAttribute_mHotSpotY.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_userCursorMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_userCursorMap * operand = (cMapElement_userCursorMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mHotSpotX.objectCompare (operand->mAttribute_mHotSpotX) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHotSpotY.objectCompare (operand->mAttribute_mHotSpotY) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap::GALGAS_userCursorMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap::GALGAS_userCursorMap (const GALGAS_userCursorMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap & GALGAS_userCursorMap::operator = (const GALGAS_userCursorMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::constructor_mapWithMapToOverride (const GALGAS_userCursorMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_userCursorMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_double inArgument0,
                                               GALGAS_double inArgument1,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_userCursorMap * p = NULL ;
  macroMyNew (p, cMapElement_userCursorMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' cursor is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_userCursorMap_searchKey = "the '%K' cursor is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_double & outArgument0,
                                             GALGAS_double & outArgument1,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_userCursorMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_userCursorMap) ;
    outArgument0 = p->mAttribute_mHotSpotX ;
    outArgument1 = p->mAttribute_mHotSpotY ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap::reader_mHotSpotXForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) attributes ;
  GALGAS_double result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_userCursorMap) ;
    result = p->mAttribute_mHotSpotX ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap::reader_mHotSpotYForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) attributes ;
  GALGAS_double result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_userCursorMap) ;
    result = p->mAttribute_mHotSpotY ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_setMHotSpotXForKey (GALGAS_double inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * p = (cMapElement_userCursorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    p->mAttribute_mHotSpotX = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap::modifier_setMHotSpotYForKey (GALGAS_double inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * p = (cMapElement_userCursorMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_userCursorMap) ;
    p->mAttribute_mHotSpotY = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_userCursorMap * GALGAS_userCursorMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_userCursorMap * result = (cMapElement_userCursorMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_userCursorMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_userCursorMap * GALGAS_userCursorMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_userCursorMap_searchKey COMMA_THERE) ;
  cMapElement_userCursorMap * result = (cMapElement_userCursorMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_userCursorMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_userCursorMap::cEnumerator_userCursorMap (const GALGAS_userCursorMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element cEnumerator_userCursorMap::current (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_userCursorMap) ;
  return GALGAS_userCursorMap_2E_element (p->mAttribute_lkey, p->mAttribute_mHotSpotX, p->mAttribute_mHotSpotY) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_userCursorMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_double cEnumerator_userCursorMap::current_mHotSpotX (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_userCursorMap) ;
  return p->mAttribute_mHotSpotX ;
}

//---------------------------------------------------------------------------*

GALGAS_double cEnumerator_userCursorMap::current_mHotSpotY (LOCATION_ARGS) const {
  const cMapElement_userCursorMap * p = (const cMapElement_userCursorMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_userCursorMap) ;
  return p->mAttribute_mHotSpotY ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @userCursorMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_userCursorMap ("userCursorMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_userCursorMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_userCursorMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_userCursorMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_userCursorMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_userCursorMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap result ;
  const GALGAS_userCursorMap * p = (const GALGAS_userCursorMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_userCursorMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("userCursorMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap::cMapElement_classMap (const GALGAS_lstring & inKey,
                                            const GALGAS_string & in_mSuperClassName,
                                            const GALGAS_observablePropertyMap & in_mPropertyMap,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                            const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                            const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                            const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                            const GALGAS_preferenceArrayMap & in_mAllArrayPropertyForImplementation,
                                            const GALGAS_preferenceArrayMap & in_mCurrentArrayPropertyForImplementation,
                                            const GALGAS_fileInclusionSet & in_mInclusionSet
                                            COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mPropertyMap (in_mPropertyMap),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mAllArrayPropertyForImplementation (in_mAllArrayPropertyForImplementation),
mAttribute_mCurrentArrayPropertyForImplementation (in_mCurrentArrayPropertyForImplementation),
mAttribute_mInclusionSet (in_mInclusionSet) {
}

//---------------------------------------------------------------------------*

bool cMapElement_classMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mAllArrayPropertyForImplementation.isValid () && mAttribute_mCurrentArrayPropertyForImplementation.isValid () && mAttribute_mInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_classMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_classMap (mAttribute_lkey, mAttribute_mSuperClassName, mAttribute_mPropertyMap, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mAllArrayPropertyForImplementation, mAttribute_mCurrentArrayPropertyForImplementation, mAttribute_mInclusionSet COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_classMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyMap" ":" ;
  mAttribute_mPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllArrayPropertyForImplementation" ":" ;
  mAttribute_mAllArrayPropertyForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentArrayPropertyForImplementation" ":" ;
  mAttribute_mCurrentArrayPropertyForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInclusionSet" ":" ;
  mAttribute_mInclusionSet.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_classMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_classMap * operand = (cMapElement_classMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertyMap.objectCompare (operand->mAttribute_mPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllArrayPropertyForImplementation.objectCompare (operand->mAttribute_mAllArrayPropertyForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentArrayPropertyForImplementation.objectCompare (operand->mAttribute_mCurrentArrayPropertyForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInclusionSet.objectCompare (operand->mAttribute_mInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap::GALGAS_classMap (const GALGAS_classMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap & GALGAS_classMap::operator = (const GALGAS_classMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::constructor_mapWithMapToOverride (const GALGAS_classMap & inMapToOverride
                                                                   COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::reader_overriddenMap (C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  GALGAS_classMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_insertKey (GALGAS_lstring inKey,
                                          GALGAS_string inArgument0,
                                          GALGAS_observablePropertyMap inArgument1,
                                          GALGAS_attributeListForImplementation inArgument2,
                                          GALGAS_attributeListForImplementation inArgument3,
                                          GALGAS_attributeListForImplementation inArgument4,
                                          GALGAS_transientListForImplementation inArgument5,
                                          GALGAS_preferenceArrayMap inArgument6,
                                          GALGAS_preferenceArrayMap inArgument7,
                                          GALGAS_fileInclusionSet inArgument8,
                                          C_Compiler * inCompiler
                                          COMMA_LOCATION_ARGS) {
  cMapElement_classMap * p = NULL ;
  macroMyNew (p, cMapElement_classMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_classMap_searchKey = "the '%K' class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_classMap::method_searchKey (GALGAS_lstring inKey,
                                        GALGAS_string & outArgument0,
                                        GALGAS_observablePropertyMap & outArgument1,
                                        GALGAS_attributeListForImplementation & outArgument2,
                                        GALGAS_attributeListForImplementation & outArgument3,
                                        GALGAS_attributeListForImplementation & outArgument4,
                                        GALGAS_transientListForImplementation & outArgument5,
                                        GALGAS_preferenceArrayMap & outArgument6,
                                        GALGAS_preferenceArrayMap & outArgument7,
                                        GALGAS_fileInclusionSet & outArgument8,
                                        C_Compiler * inCompiler
                                        COMMA_LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) performSearch (inKey,
                                                                                   inCompiler,
                                                                                   kSearchErrorMessage_classMap_searchKey
                                                                                   COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_classMap) ;
    outArgument0 = p->mAttribute_mSuperClassName ;
    outArgument1 = p->mAttribute_mPropertyMap ;
    outArgument2 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument3 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument4 = p->mAttribute_mAttributeListForImplementation ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mAllArrayPropertyForImplementation ;
    outArgument7 = p->mAttribute_mCurrentArrayPropertyForImplementation ;
    outArgument8 = p->mAttribute_mInclusionSet ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_classMap::reader_mPropertyMapForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                              C_Compiler * inCompiler
                                                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_classMap::reader_mAllArrayPropertyForImplementationForKey (const GALGAS_string & inKey,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_preferenceArrayMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mAllArrayPropertyForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_classMap::reader_mCurrentArrayPropertyForImplementationForKey (const GALGAS_string & inKey,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_preferenceArrayMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mCurrentArrayPropertyForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_classMap::reader_mInclusionSetForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_classMap * p = (const cMapElement_classMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_classMap) ;
    result = p->mAttribute_mInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMPropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                  GALGAS_string inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMAllArrayPropertyForImplementationForKey (GALGAS_preferenceArrayMap inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mAllArrayPropertyForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMCurrentArrayPropertyForImplementationForKey (GALGAS_preferenceArrayMap inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mCurrentArrayPropertyForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_classMap::modifier_setMInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                       GALGAS_string inKey,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * p = (cMapElement_classMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_classMap) ;
    p->mAttribute_mInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                  const GALGAS_string & inKey
                                                                                  COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_classMap * GALGAS_classMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                     const GALGAS_lstring & inKey
                                                                                     COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_classMap_searchKey COMMA_THERE) ;
  cMapElement_classMap * result = (cMapElement_classMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_classMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_classMap::cEnumerator_classMap (const GALGAS_classMap & inEnumeratedObject,
                                            const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element cEnumerator_classMap::current (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return GALGAS_classMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSuperClassName, p->mAttribute_mPropertyMap, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mAllArrayPropertyForImplementation, p->mAttribute_mCurrentArrayPropertyForImplementation, p->mAttribute_mInclusionSet) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_classMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_classMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_classMap::current_mPropertyMap (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_classMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_classMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap cEnumerator_classMap::current_mAllArrayPropertyForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mAllArrayPropertyForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap cEnumerator_classMap::current_mCurrentArrayPropertyForImplementation (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mCurrentArrayPropertyForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_classMap::current_mInclusionSet (LOCATION_ARGS) const {
  const cMapElement_classMap * p = (const cMapElement_classMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_classMap) ;
  return p->mAttribute_mInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @classMap type                               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap ("classMap",
                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap GALGAS_classMap::extractObject (const GALGAS_object & inObject,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  GALGAS_classMap result ;
  const GALGAS_classMap * p = (const GALGAS_classMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap::cMapElement_entityMap (const GALGAS_lstring & inKey,
                                              const GALGAS_string & in_mSuperEntityName,
                                              const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                              const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                              const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                              const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                              const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                              const GALGAS_relationshipList & in_mAllRelationshipList,
                                              const GALGAS_propertyMap & in_mAllPropertyMap,
                                              const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                              const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                              const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                              const GALGAS_signListForGeneration & in_mSignList
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mSuperEntityName (in_mSuperEntityName),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mAttributeListForInitMethodHeader (in_mAttributeListForInitMethodHeader),
mAttribute_mInheritedAttributeListForImplementation (in_mInheritedAttributeListForImplementation),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mCurrentRelationshipList (in_mCurrentRelationshipList),
mAttribute_mAllRelationshipList (in_mAllRelationshipList),
mAttribute_mAllPropertyMap (in_mAllPropertyMap),
mAttribute_mCurrentRelationshipMap (in_mCurrentRelationshipMap),
mAttribute_mAllRelationshipMap (in_mAllRelationshipMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mSignList (in_mSignList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_entityMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mSignList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_entityMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_entityMap (mAttribute_lkey, mAttribute_mSuperEntityName, mAttribute_mObservablePropertyMap, mAttribute_mAttributeListForInitMethodHeader, mAttribute_mInheritedAttributeListForImplementation, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mCurrentRelationshipList, mAttribute_mAllRelationshipList, mAttribute_mAllPropertyMap, mAttribute_mCurrentRelationshipMap, mAttribute_mAllRelationshipMap, mAttribute_mFileInclusionSet, mAttribute_mSignList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_entityMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipList" ":" ;
  mAttribute_mCurrentRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipList" ":" ;
  mAttribute_mAllRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllPropertyMap" ":" ;
  mAttribute_mAllPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipMap" ":" ;
  mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipMap" ":" ;
  mAttribute_mAllRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignList" ":" ;
  mAttribute_mSignList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_entityMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_entityMap * operand = (cMapElement_entityMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mSuperEntityName.objectCompare (operand->mAttribute_mSuperEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (operand->mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (operand->mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (operand->mAttribute_mCurrentRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipList.objectCompare (operand->mAttribute_mAllRelationshipList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllPropertyMap.objectCompare (operand->mAttribute_mAllPropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (operand->mAttribute_mCurrentRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllRelationshipMap.objectCompare (operand->mAttribute_mAllRelationshipMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSignList.objectCompare (operand->mAttribute_mSignList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap::GALGAS_entityMap (const GALGAS_entityMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap & GALGAS_entityMap::operator = (const GALGAS_entityMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::constructor_mapWithMapToOverride (const GALGAS_entityMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::reader_overriddenMap (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_entityMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_insertKey (GALGAS_lstring inKey,
                                           GALGAS_string inArgument0,
                                           GALGAS_observablePropertyMap inArgument1,
                                           GALGAS_attributeListForImplementation inArgument2,
                                           GALGAS_attributeListForImplementation inArgument3,
                                           GALGAS_attributeListForImplementation inArgument4,
                                           GALGAS_transientListForImplementation inArgument5,
                                           GALGAS_relationshipList inArgument6,
                                           GALGAS_relationshipList inArgument7,
                                           GALGAS_propertyMap inArgument8,
                                           GALGAS_relationshipMap inArgument9,
                                           GALGAS_relationshipMap inArgument10,
                                           GALGAS_fileInclusionSet inArgument11,
                                           GALGAS_signListForGeneration inArgument12,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_entityMap * p = NULL ;
  macroMyNew (p, cMapElement_entityMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7, inArgument8, inArgument9, inArgument10, inArgument11, inArgument12 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' entity is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_entityMap_searchKey = "the '%K' entity is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_entityMap::method_searchKey (GALGAS_lstring inKey,
                                         GALGAS_string & outArgument0,
                                         GALGAS_observablePropertyMap & outArgument1,
                                         GALGAS_attributeListForImplementation & outArgument2,
                                         GALGAS_attributeListForImplementation & outArgument3,
                                         GALGAS_attributeListForImplementation & outArgument4,
                                         GALGAS_transientListForImplementation & outArgument5,
                                         GALGAS_relationshipList & outArgument6,
                                         GALGAS_relationshipList & outArgument7,
                                         GALGAS_propertyMap & outArgument8,
                                         GALGAS_relationshipMap & outArgument9,
                                         GALGAS_relationshipMap & outArgument10,
                                         GALGAS_fileInclusionSet & outArgument11,
                                         GALGAS_signListForGeneration & outArgument12,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_entityMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
    outArgument8.drop () ;
    outArgument9.drop () ;
    outArgument10.drop () ;
    outArgument11.drop () ;
    outArgument12.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    outArgument0 = p->mAttribute_mSuperEntityName ;
    outArgument1 = p->mAttribute_mObservablePropertyMap ;
    outArgument2 = p->mAttribute_mAttributeListForInitMethodHeader ;
    outArgument3 = p->mAttribute_mInheritedAttributeListForImplementation ;
    outArgument4 = p->mAttribute_mAttributeListForImplementation ;
    outArgument5 = p->mAttribute_mTransientListForImplementation ;
    outArgument6 = p->mAttribute_mCurrentRelationshipList ;
    outArgument7 = p->mAttribute_mAllRelationshipList ;
    outArgument8 = p->mAttribute_mAllPropertyMap ;
    outArgument9 = p->mAttribute_mCurrentRelationshipMap ;
    outArgument10 = p->mAttribute_mAllRelationshipMap ;
    outArgument11 = p->mAttribute_mFileInclusionSet ;
    outArgument12 = p->mAttribute_mSignList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap::reader_mSuperEntityNameForKey (const GALGAS_string & inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSuperEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForInitMethodHeaderForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mInheritedAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mCurrentRelationshipListForKey (const GALGAS_string & inKey,
                                                                                 C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap::reader_mAllRelationshipListForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap::reader_mAllPropertyMapForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_propertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mCurrentRelationshipMapForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mCurrentRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap::reader_mAllRelationshipMapForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mAllRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityMap::reader_mSignListForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) attributes ;
  GALGAS_signListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_entityMap) ;
    result = p->mAttribute_mSignList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSuperEntityNameForKey (GALGAS_string inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSuperEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForInitMethodHeaderForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForInitMethodHeader = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMInheritedAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mInheritedAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipListForKey (GALGAS_relationshipList inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllPropertyMapForKey (GALGAS_propertyMap inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllPropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMCurrentRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mCurrentRelationshipMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMAllRelationshipMapForKey (GALGAS_relationshipMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mAllRelationshipMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap::modifier_setMSignListForKey (GALGAS_signListForGeneration inAttributeValue,
                                                    GALGAS_string inKey,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * p = (cMapElement_entityMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_entityMap) ;
    p->mAttribute_mSignList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_entityMap * GALGAS_entityMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_entityMap_searchKey COMMA_THERE) ;
  cMapElement_entityMap * result = (cMapElement_entityMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_entityMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_entityMap::cEnumerator_entityMap (const GALGAS_entityMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element cEnumerator_entityMap::current (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return GALGAS_entityMap_2E_element (p->mAttribute_lkey, p->mAttribute_mSuperEntityName, p->mAttribute_mObservablePropertyMap, p->mAttribute_mAttributeListForInitMethodHeader, p->mAttribute_mInheritedAttributeListForImplementation, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mCurrentRelationshipList, p->mAttribute_mAllRelationshipList, p->mAttribute_mAllPropertyMap, p->mAttribute_mCurrentRelationshipMap, p->mAttribute_mAllRelationshipMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mSignList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_entityMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityMap::current_mSuperEntityName (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_entityMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mCurrentRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityMap::current_mAllRelationshipList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap cEnumerator_entityMap::current_mAllPropertyMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mCurrentRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityMap::current_mAllRelationshipMap (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_entityMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration cEnumerator_entityMap::current_mSignList (LOCATION_ARGS) const {
  const cMapElement_entityMap * p = (const cMapElement_entityMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_entityMap) ;
  return p->mAttribute_mSignList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @entityMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap ("entityMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap GALGAS_entityMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_entityMap result ;
  const GALGAS_entityMap * p = (const GALGAS_entityMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Class for element of '@signListForGeneration' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_signListForGeneration : public cCollectionElement {
  public : GALGAS_signListForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_signListForGeneration (const GALGAS_string & in_mPropertyName,
                                                     const GALGAS_easyBindingType & in_mPropertyType
                                                     COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_signListForGeneration::cCollectionElement_signListForGeneration (const GALGAS_string & in_mPropertyName,
                                                                                    const GALGAS_easyBindingType & in_mPropertyType
                                                                                    COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mPropertyName, in_mPropertyType) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_signListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_signListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_signListForGeneration (mObject.mAttribute_mPropertyName, mObject.mAttribute_mPropertyType COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_signListForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyName" ":" ;
  mObject.mAttribute_mPropertyName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertyType" ":" ;
  mObject.mAttribute_mPropertyType.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_signListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_signListForGeneration * operand = (cCollectionElement_signListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_signListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration::GALGAS_signListForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration::GALGAS_signListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_signListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                      const GALGAS_easyBindingType & inOperand1
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_signListForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_signListForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                              const GALGAS_string & in_mPropertyName,
                                                              const GALGAS_easyBindingType & in_mPropertyType
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement_signListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_signListForGeneration (in_mPropertyName,
                                                           in_mPropertyType COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                        const GALGAS_easyBindingType & inOperand1
                                                        COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_signListForGeneration (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_prependValue (GALGAS_string inOperand0,
                                                          GALGAS_easyBindingType inOperand1
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_signListForGeneration (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                      GALGAS_easyBindingType & outOperand1,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                     GALGAS_easyBindingType & outOperand1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::method_first (GALGAS_string & outOperand0,
                                                 GALGAS_easyBindingType & outOperand1,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::method_last (GALGAS_string & outOperand0,
                                                GALGAS_easyBindingType & outOperand1,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mPropertyName ;
    outOperand1 = p->mObject.mAttribute_mPropertyType ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::operator_concat (const GALGAS_signListForGeneration & inOperand
                                                                            COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result = GALGAS_signListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  GALGAS_signListForGeneration result = GALGAS_signListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration::dotAssign_operation (const GALGAS_signListForGeneration inOperand
                                                        COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_signListForGeneration::reader_mPropertyNameAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    result = p->mObject.mAttribute_mPropertyName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_signListForGeneration::reader_mPropertyTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_signListForGeneration * p = (cCollectionElement_signListForGeneration *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_signListForGeneration) ;
    result = p->mObject.mAttribute_mPropertyType ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_signListForGeneration::cEnumerator_signListForGeneration (const GALGAS_signListForGeneration & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration_2E_element cEnumerator_signListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_signListForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_signListForGeneration::current_mPropertyName (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_signListForGeneration) ;
  return p->mObject.mAttribute_mPropertyName ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_signListForGeneration::current_mPropertyType (LOCATION_ARGS) const {
  const cCollectionElement_signListForGeneration * p = (const cCollectionElement_signListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_signListForGeneration) ;
  return p->mObject.mAttribute_mPropertyType ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @signListForGeneration type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_signListForGeneration ("signListForGeneration",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_signListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_signListForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_signListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_signListForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_signListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_signListForGeneration result ;
  const GALGAS_signListForGeneration * p = (const GALGAS_signListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_signListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("signListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Class for element of '@entityListForGeneration' list            *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_entityListForGeneration : public cCollectionElement {
  public : GALGAS_entityListForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_entityListForGeneration (const GALGAS_string & in_mEntityName,
                                                       const GALGAS_string & in_mSuperEntityName,
                                                       const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                       const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                       const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                       const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                       const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                       const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                                       const GALGAS_relationshipList & in_mAllRelationshipList,
                                                       const GALGAS_propertyMap & in_mAllPropertyMap,
                                                       const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                                       const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                                       const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                                       const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                       const GALGAS__32_stringlist & in_mToOneRelationshipList,
                                                       const GALGAS_signListForGeneration & in_mSignList
                                                       COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_entityListForGeneration::cCollectionElement_entityListForGeneration (const GALGAS_string & in_mEntityName,
                                                                                        const GALGAS_string & in_mSuperEntityName,
                                                                                        const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                                                        const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                                                        const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                                                        const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                                                                        const GALGAS_relationshipList & in_mAllRelationshipList,
                                                                                        const GALGAS_propertyMap & in_mAllPropertyMap,
                                                                                        const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                                                                        const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                                                                        const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                                                                        const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                                                        const GALGAS__32_stringlist & in_mToOneRelationshipList,
                                                                                        const GALGAS_signListForGeneration & in_mSignList
                                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mEntityName, in_mSuperEntityName, in_mObservablePropertyMap, in_mAttributeListForInitMethodHeader, in_mInheritedAttributeListForImplementation, in_mAttributeListForImplementation, in_mTransientListForImplementation, in_mCurrentRelationshipList, in_mAllRelationshipList, in_mAllPropertyMap, in_mCurrentRelationshipMap, in_mAllRelationshipMap, in_mToManyRelationshipList, in_mFileInclusionSet, in_mToOneRelationshipList, in_mSignList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_entityListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_entityListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_entityListForGeneration (mObject.mAttribute_mEntityName, mObject.mAttribute_mSuperEntityName, mObject.mAttribute_mObservablePropertyMap, mObject.mAttribute_mAttributeListForInitMethodHeader, mObject.mAttribute_mInheritedAttributeListForImplementation, mObject.mAttribute_mAttributeListForImplementation, mObject.mAttribute_mTransientListForImplementation, mObject.mAttribute_mCurrentRelationshipList, mObject.mAttribute_mAllRelationshipList, mObject.mAttribute_mAllPropertyMap, mObject.mAttribute_mCurrentRelationshipMap, mObject.mAttribute_mAllRelationshipMap, mObject.mAttribute_mToManyRelationshipList, mObject.mAttribute_mFileInclusionSet, mObject.mAttribute_mToOneRelationshipList, mObject.mAttribute_mSignList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_entityListForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mEntityName" ":" ;
  mObject.mAttribute_mEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperEntityName" ":" ;
  mObject.mAttribute_mSuperEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mObject.mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForInitMethodHeader" ":" ;
  mObject.mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInheritedAttributeListForImplementation" ":" ;
  mObject.mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mObject.mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mObject.mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipList" ":" ;
  mObject.mAttribute_mCurrentRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipList" ":" ;
  mObject.mAttribute_mAllRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllPropertyMap" ":" ;
  mObject.mAttribute_mAllPropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentRelationshipMap" ":" ;
  mObject.mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllRelationshipMap" ":" ;
  mObject.mAttribute_mAllRelationshipMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mToManyRelationshipList" ":" ;
  mObject.mAttribute_mToManyRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mObject.mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mToOneRelationshipList" ":" ;
  mObject.mAttribute_mToOneRelationshipList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSignList" ":" ;
  mObject.mAttribute_mSignList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_entityListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_entityListForGeneration * operand = (cCollectionElement_entityListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_entityListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration::GALGAS_entityListForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration::GALGAS_entityListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_entityListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                          const GALGAS_string & inOperand1,
                                                                                          const GALGAS_observablePropertyMap & inOperand2,
                                                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                                                          const GALGAS_transientListForImplementation & inOperand6,
                                                                                          const GALGAS_relationshipList & inOperand7,
                                                                                          const GALGAS_relationshipList & inOperand8,
                                                                                          const GALGAS_propertyMap & inOperand9,
                                                                                          const GALGAS_relationshipMap & inOperand10,
                                                                                          const GALGAS_relationshipMap & inOperand11,
                                                                                          const GALGAS__32_stringlist & inOperand12,
                                                                                          const GALGAS_fileInclusionSet & inOperand13,
                                                                                          const GALGAS__32_stringlist & inOperand14,
                                                                                          const GALGAS_signListForGeneration & inOperand15
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_entityListForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                const GALGAS_string & in_mEntityName,
                                                                const GALGAS_string & in_mSuperEntityName,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                                const GALGAS_attributeListForImplementation & in_mAttributeListForInitMethodHeader,
                                                                const GALGAS_attributeListForImplementation & in_mInheritedAttributeListForImplementation,
                                                                const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                                const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                                const GALGAS_relationshipList & in_mCurrentRelationshipList,
                                                                const GALGAS_relationshipList & in_mAllRelationshipList,
                                                                const GALGAS_propertyMap & in_mAllPropertyMap,
                                                                const GALGAS_relationshipMap & in_mCurrentRelationshipMap,
                                                                const GALGAS_relationshipMap & in_mAllRelationshipMap,
                                                                const GALGAS__32_stringlist & in_mToManyRelationshipList,
                                                                const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                                const GALGAS__32_stringlist & in_mToOneRelationshipList,
                                                                const GALGAS_signListForGeneration & in_mSignList
                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement_entityListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_entityListForGeneration (in_mEntityName,
                                                             in_mSuperEntityName,
                                                             in_mObservablePropertyMap,
                                                             in_mAttributeListForInitMethodHeader,
                                                             in_mInheritedAttributeListForImplementation,
                                                             in_mAttributeListForImplementation,
                                                             in_mTransientListForImplementation,
                                                             in_mCurrentRelationshipList,
                                                             in_mAllRelationshipList,
                                                             in_mAllPropertyMap,
                                                             in_mCurrentRelationshipMap,
                                                             in_mAllRelationshipMap,
                                                             in_mToManyRelationshipList,
                                                             in_mFileInclusionSet,
                                                             in_mToOneRelationshipList,
                                                             in_mSignList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                          const GALGAS_string & inOperand1,
                                                          const GALGAS_observablePropertyMap & inOperand2,
                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                          const GALGAS_transientListForImplementation & inOperand6,
                                                          const GALGAS_relationshipList & inOperand7,
                                                          const GALGAS_relationshipList & inOperand8,
                                                          const GALGAS_propertyMap & inOperand9,
                                                          const GALGAS_relationshipMap & inOperand10,
                                                          const GALGAS_relationshipMap & inOperand11,
                                                          const GALGAS__32_stringlist & inOperand12,
                                                          const GALGAS_fileInclusionSet & inOperand13,
                                                          const GALGAS__32_stringlist & inOperand14,
                                                          const GALGAS_signListForGeneration & inOperand15
                                                          COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_entityListForGeneration (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_prependValue (GALGAS_string inOperand0,
                                                            GALGAS_string inOperand1,
                                                            GALGAS_observablePropertyMap inOperand2,
                                                            GALGAS_attributeListForImplementation inOperand3,
                                                            GALGAS_attributeListForImplementation inOperand4,
                                                            GALGAS_attributeListForImplementation inOperand5,
                                                            GALGAS_transientListForImplementation inOperand6,
                                                            GALGAS_relationshipList inOperand7,
                                                            GALGAS_relationshipList inOperand8,
                                                            GALGAS_propertyMap inOperand9,
                                                            GALGAS_relationshipMap inOperand10,
                                                            GALGAS_relationshipMap inOperand11,
                                                            GALGAS__32_stringlist inOperand12,
                                                            GALGAS_fileInclusionSet inOperand13,
                                                            GALGAS__32_stringlist inOperand14,
                                                            GALGAS_signListForGeneration inOperand15
                                                            COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_entityListForGeneration (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                        GALGAS_string & outOperand1,
                                                        GALGAS_observablePropertyMap & outOperand2,
                                                        GALGAS_attributeListForImplementation & outOperand3,
                                                        GALGAS_attributeListForImplementation & outOperand4,
                                                        GALGAS_attributeListForImplementation & outOperand5,
                                                        GALGAS_transientListForImplementation & outOperand6,
                                                        GALGAS_relationshipList & outOperand7,
                                                        GALGAS_relationshipList & outOperand8,
                                                        GALGAS_propertyMap & outOperand9,
                                                        GALGAS_relationshipMap & outOperand10,
                                                        GALGAS_relationshipMap & outOperand11,
                                                        GALGAS__32_stringlist & outOperand12,
                                                        GALGAS_fileInclusionSet & outOperand13,
                                                        GALGAS__32_stringlist & outOperand14,
                                                        GALGAS_signListForGeneration & outOperand15,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                       GALGAS_string & outOperand1,
                                                       GALGAS_observablePropertyMap & outOperand2,
                                                       GALGAS_attributeListForImplementation & outOperand3,
                                                       GALGAS_attributeListForImplementation & outOperand4,
                                                       GALGAS_attributeListForImplementation & outOperand5,
                                                       GALGAS_transientListForImplementation & outOperand6,
                                                       GALGAS_relationshipList & outOperand7,
                                                       GALGAS_relationshipList & outOperand8,
                                                       GALGAS_propertyMap & outOperand9,
                                                       GALGAS_relationshipMap & outOperand10,
                                                       GALGAS_relationshipMap & outOperand11,
                                                       GALGAS__32_stringlist & outOperand12,
                                                       GALGAS_fileInclusionSet & outOperand13,
                                                       GALGAS__32_stringlist & outOperand14,
                                                       GALGAS_signListForGeneration & outOperand15,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::method_first (GALGAS_string & outOperand0,
                                                   GALGAS_string & outOperand1,
                                                   GALGAS_observablePropertyMap & outOperand2,
                                                   GALGAS_attributeListForImplementation & outOperand3,
                                                   GALGAS_attributeListForImplementation & outOperand4,
                                                   GALGAS_attributeListForImplementation & outOperand5,
                                                   GALGAS_transientListForImplementation & outOperand6,
                                                   GALGAS_relationshipList & outOperand7,
                                                   GALGAS_relationshipList & outOperand8,
                                                   GALGAS_propertyMap & outOperand9,
                                                   GALGAS_relationshipMap & outOperand10,
                                                   GALGAS_relationshipMap & outOperand11,
                                                   GALGAS__32_stringlist & outOperand12,
                                                   GALGAS_fileInclusionSet & outOperand13,
                                                   GALGAS__32_stringlist & outOperand14,
                                                   GALGAS_signListForGeneration & outOperand15,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::method_last (GALGAS_string & outOperand0,
                                                  GALGAS_string & outOperand1,
                                                  GALGAS_observablePropertyMap & outOperand2,
                                                  GALGAS_attributeListForImplementation & outOperand3,
                                                  GALGAS_attributeListForImplementation & outOperand4,
                                                  GALGAS_attributeListForImplementation & outOperand5,
                                                  GALGAS_transientListForImplementation & outOperand6,
                                                  GALGAS_relationshipList & outOperand7,
                                                  GALGAS_relationshipList & outOperand8,
                                                  GALGAS_propertyMap & outOperand9,
                                                  GALGAS_relationshipMap & outOperand10,
                                                  GALGAS_relationshipMap & outOperand11,
                                                  GALGAS__32_stringlist & outOperand12,
                                                  GALGAS_fileInclusionSet & outOperand13,
                                                  GALGAS__32_stringlist & outOperand14,
                                                  GALGAS_signListForGeneration & outOperand15,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
    outOperand4.drop () ;
    outOperand5.drop () ;
    outOperand6.drop () ;
    outOperand7.drop () ;
    outOperand8.drop () ;
    outOperand9.drop () ;
    outOperand10.drop () ;
    outOperand11.drop () ;
    outOperand12.drop () ;
    outOperand13.drop () ;
    outOperand14.drop () ;
    outOperand15.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mEntityName ;
    outOperand1 = p->mObject.mAttribute_mSuperEntityName ;
    outOperand2 = p->mObject.mAttribute_mObservablePropertyMap ;
    outOperand3 = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
    outOperand4 = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
    outOperand5 = p->mObject.mAttribute_mAttributeListForImplementation ;
    outOperand6 = p->mObject.mAttribute_mTransientListForImplementation ;
    outOperand7 = p->mObject.mAttribute_mCurrentRelationshipList ;
    outOperand8 = p->mObject.mAttribute_mAllRelationshipList ;
    outOperand9 = p->mObject.mAttribute_mAllPropertyMap ;
    outOperand10 = p->mObject.mAttribute_mCurrentRelationshipMap ;
    outOperand11 = p->mObject.mAttribute_mAllRelationshipMap ;
    outOperand12 = p->mObject.mAttribute_mToManyRelationshipList ;
    outOperand13 = p->mObject.mAttribute_mFileInclusionSet ;
    outOperand14 = p->mObject.mAttribute_mToOneRelationshipList ;
    outOperand15 = p->mObject.mAttribute_mSignList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::operator_concat (const GALGAS_entityListForGeneration & inOperand
                                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result = GALGAS_entityListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_entityListForGeneration result = GALGAS_entityListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration::dotAssign_operation (const GALGAS_entityListForGeneration inOperand
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration::reader_mEntityNameAtIndex (const GALGAS_uint & inIndex,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration::reader_mSuperEntityNameAtIndex (const GALGAS_uint & inIndex,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mSuperEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityListForGeneration::reader_mObservablePropertyMapAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration::reader_mAttributeListForInitMethodHeaderAtIndex (const GALGAS_uint & inIndex,
                                                                                                                       C_Compiler * inCompiler
                                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration::reader_mInheritedAttributeListForImplementationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                              C_Compiler * inCompiler
                                                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration::reader_mAttributeListForImplementationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityListForGeneration::reader_mTransientListForImplementationAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration::reader_mCurrentRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mCurrentRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration::reader_mAllRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAllRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityListForGeneration::reader_mAllPropertyMapAtIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_propertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAllPropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration::reader_mCurrentRelationshipMapAtIndex (const GALGAS_uint & inIndex,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mCurrentRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration::reader_mAllRelationshipMapAtIndex (const GALGAS_uint & inIndex,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_relationshipMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mAllRelationshipMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration::reader_mToManyRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mToManyRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityListForGeneration::reader_mFileInclusionSetAtIndex (const GALGAS_uint & inIndex,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration::reader_mToOneRelationshipListAtIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mToOneRelationshipList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityListForGeneration::reader_mSignListAtIndex (const GALGAS_uint & inIndex,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_entityListForGeneration * p = (cCollectionElement_entityListForGeneration *) attributes.ptr () ;
  GALGAS_signListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_entityListForGeneration) ;
    result = p->mObject.mAttribute_mSignList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_entityListForGeneration::cEnumerator_entityListForGeneration (const GALGAS_entityListForGeneration & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element cEnumerator_entityListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityListForGeneration::current_mEntityName (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_entityListForGeneration::current_mSuperEntityName (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_entityListForGeneration::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityListForGeneration::current_mAttributeListForInitMethodHeader (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityListForGeneration::current_mInheritedAttributeListForImplementation (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_entityListForGeneration::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_entityListForGeneration::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityListForGeneration::current_mCurrentRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList cEnumerator_entityListForGeneration::current_mAllRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap cEnumerator_entityListForGeneration::current_mAllPropertyMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityListForGeneration::current_mCurrentRelationshipMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap cEnumerator_entityListForGeneration::current_mAllRelationshipMap (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_entityListForGeneration::current_mToManyRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mToManyRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_entityListForGeneration::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_entityListForGeneration::current_mToOneRelationshipList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mToOneRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration cEnumerator_entityListForGeneration::current_mSignList (LOCATION_ARGS) const {
  const cCollectionElement_entityListForGeneration * p = (const cCollectionElement_entityListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_entityListForGeneration) ;
  return p->mObject.mAttribute_mSignList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                       @entityListForGeneration type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityListForGeneration ("entityListForGeneration",
                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityListForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityListForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration GALGAS_entityListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration result ;
  const GALGAS_entityListForGeneration * p = (const GALGAS_entityListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//Class for element of '@columnBindingForTableValueBindingForGeneration' list*
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_columnBindingForTableValueBindingForGeneration : public cCollectionElement {
  public : GALGAS_columnBindingForTableValueBindingForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                              const GALGAS_string & in_mRequiredCellClass,
                                                                              const GALGAS_string & in_mObservableAttributeName,
                                                                              const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_columnBindingForTableValueBindingForGeneration::cCollectionElement_columnBindingForTableValueBindingForGeneration (const GALGAS_string & in_mColumnIdentifier,
                                                                                                                                      const GALGAS_string & in_mRequiredCellClass,
                                                                                                                                      const GALGAS_string & in_mObservableAttributeName,
                                                                                                                                      const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mColumnIdentifier, in_mRequiredCellClass, in_mObservableAttributeName, in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_columnBindingForTableValueBindingForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_columnBindingForTableValueBindingForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_columnBindingForTableValueBindingForGeneration (mObject.mAttribute_mColumnIdentifier, mObject.mAttribute_mRequiredCellClass, mObject.mAttribute_mObservableAttributeName, mObject.mAttribute_mOutletBindingOptionList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_columnBindingForTableValueBindingForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mColumnIdentifier" ":" ;
  mObject.mAttribute_mColumnIdentifier.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredCellClass" ":" ;
  mObject.mAttribute_mRequiredCellClass.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableAttributeName" ":" ;
  mObject.mAttribute_mObservableAttributeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingOptionList" ":" ;
  mObject.mAttribute_mOutletBindingOptionList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_columnBindingForTableValueBindingForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * operand = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration::GALGAS_columnBindingForTableValueBindingForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                                                                        const GALGAS_string & inOperand1,
                                                                                                                                        const GALGAS_string & inOperand2,
                                                                                                                                        const GALGAS__32_stringlist & inOperand3
                                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                                       const GALGAS_string & in_mColumnIdentifier,
                                                                                       const GALGAS_string & in_mRequiredCellClass,
                                                                                       const GALGAS_string & in_mObservableAttributeName,
                                                                                       const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (in_mColumnIdentifier,
                                                                                    in_mRequiredCellClass,
                                                                                    in_mObservableAttributeName,
                                                                                    in_mOutletBindingOptionList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::addAssign_operation (const GALGAS_string & inOperand0,
                                                                                 const GALGAS_string & inOperand1,
                                                                                 const GALGAS_string & inOperand2,
                                                                                 const GALGAS__32_stringlist & inOperand3
                                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_prependValue (GALGAS_string inOperand0,
                                                                                   GALGAS_string inOperand1,
                                                                                   GALGAS_string inOperand2,
                                                                                   GALGAS__32_stringlist inOperand3
                                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_columnBindingForTableValueBindingForGeneration (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popFirst (GALGAS_string & outOperand0,
                                                                               GALGAS_string & outOperand1,
                                                                               GALGAS_string & outOperand2,
                                                                               GALGAS__32_stringlist & outOperand3,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::modifier_popLast (GALGAS_string & outOperand0,
                                                                              GALGAS_string & outOperand1,
                                                                              GALGAS_string & outOperand2,
                                                                              GALGAS__32_stringlist & outOperand3,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_first (GALGAS_string & outOperand0,
                                                                          GALGAS_string & outOperand1,
                                                                          GALGAS_string & outOperand2,
                                                                          GALGAS__32_stringlist & outOperand3,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::method_last (GALGAS_string & outOperand0,
                                                                         GALGAS_string & outOperand1,
                                                                         GALGAS_string & outOperand2,
                                                                         GALGAS__32_stringlist & outOperand3,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mColumnIdentifier ;
    outOperand1 = p->mObject.mAttribute_mRequiredCellClass ;
    outOperand2 = p->mObject.mAttribute_mObservableAttributeName ;
    outOperand3 = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::operator_concat (const GALGAS_columnBindingForTableValueBindingForGeneration & inOperand
                                                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                                                      C_Compiler * inCompiler
                                                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration::dotAssign_operation (const GALGAS_columnBindingForTableValueBindingForGeneration inOperand
                                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mColumnIdentifierAtIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mColumnIdentifier ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mRequiredCellClassAtIndex (const GALGAS_uint & inIndex,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mRequiredCellClass ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration::reader_mObservableAttributeNameAtIndex (const GALGAS_uint & inIndex,
                                                                                                             C_Compiler * inCompiler
                                                                                                             COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration::reader_mOutletBindingOptionListAtIndex (const GALGAS_uint & inIndex,
                                                                                                                     C_Compiler * inCompiler
                                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (cCollectionElement_columnBindingForTableValueBindingForGeneration *) attributes.ptr () ;
  GALGAS__32_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
    result = p->mObject.mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_columnBindingForTableValueBindingForGeneration::cEnumerator_columnBindingForTableValueBindingForGeneration (const GALGAS_columnBindingForTableValueBindingForGeneration & inEnumeratedObject,
                                                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element cEnumerator_columnBindingForTableValueBindingForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mColumnIdentifier (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mColumnIdentifier ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mRequiredCellClass (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mRequiredCellClass ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_columnBindingForTableValueBindingForGeneration::current_mObservableAttributeName (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cEnumerator_columnBindingForTableValueBindingForGeneration::current_mOutletBindingOptionList (LOCATION_ARGS) const {
  const cCollectionElement_columnBindingForTableValueBindingForGeneration * p = (const cCollectionElement_columnBindingForTableValueBindingForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_columnBindingForTableValueBindingForGeneration) ;
  return p->mObject.mAttribute_mOutletBindingOptionList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//           @columnBindingForTableValueBindingForGeneration type            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ("columnBindingForTableValueBindingForGeneration",
                                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_columnBindingForTableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                                                            C_Compiler * inCompiler
                                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration * p = (const GALGAS_columnBindingForTableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("columnBindingForTableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_protocolMap::cMapElement_protocolMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_bool & in_mIsPredefined
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsPredefined (in_mIsPredefined) {
}

//---------------------------------------------------------------------------*

bool cMapElement_protocolMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsPredefined.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_protocolMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_protocolMap (mAttribute_lkey, mAttribute_mIsPredefined COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_protocolMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsPredefined" ":" ;
  mAttribute_mIsPredefined.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_protocolMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_protocolMap * operand = (cMapElement_protocolMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsPredefined.objectCompare (operand->mAttribute_mIsPredefined) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap::GALGAS_protocolMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap::GALGAS_protocolMap (const GALGAS_protocolMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap & GALGAS_protocolMap::operator = (const GALGAS_protocolMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::constructor_mapWithMapToOverride (const GALGAS_protocolMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_protocolMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_protocolMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_bool inArgument0,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_protocolMap * p = NULL ;
  macroMyNew (p, cMapElement_protocolMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' protocol is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_protocolMap_searchKey = "the '%K' protocol is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_protocolMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_bool & outArgument0,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_protocolMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_protocolMap) ;
    outArgument0 = p->mAttribute_mIsPredefined ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_protocolMap::reader_mIsPredefinedForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_protocolMap) ;
    result = p->mAttribute_mIsPredefined ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_protocolMap::modifier_setMIsPredefinedForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_protocolMap * p = (cMapElement_protocolMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_protocolMap) ;
    p->mAttribute_mIsPredefined = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_protocolMap * GALGAS_protocolMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_protocolMap * result = (cMapElement_protocolMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_protocolMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_protocolMap * GALGAS_protocolMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_protocolMap_searchKey COMMA_THERE) ;
  cMapElement_protocolMap * result = (cMapElement_protocolMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_protocolMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_protocolMap::cEnumerator_protocolMap (const GALGAS_protocolMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element cEnumerator_protocolMap::current (LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_protocolMap) ;
  return GALGAS_protocolMap_2E_element (p->mAttribute_lkey, p->mAttribute_mIsPredefined) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_protocolMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_protocolMap::current_mIsPredefined (LOCATION_ARGS) const {
  const cMapElement_protocolMap * p = (const cMapElement_protocolMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_protocolMap) ;
  return p->mAttribute_mIsPredefined ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @protocolMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolMap ("protocolMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap GALGAS_protocolMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap result ;
  const GALGAS_protocolMap * p = (const GALGAS_protocolMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("protocolMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_documentMap::cMapElement_documentMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_string & in_mRootEntityName,
                                                  const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                  const GALGAS_controllerMap & in_mControllerMap,
                                                  const GALGAS_lstringlist & in_mActionList,
                                                  const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                  const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                  const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mRootEntityName (in_mRootEntityName),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mActionList (in_mActionList),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation) {
}

//---------------------------------------------------------------------------*

bool cMapElement_documentMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mActionList.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mAttributeListForImplementation.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_documentMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_documentMap (mAttribute_lkey, mAttribute_mRootEntityName, mAttribute_mOutletDeclarationList, mAttribute_mControllerMap, mAttribute_mActionList, mAttribute_mTransientListForImplementation, mAttribute_mFileInclusionSet, mAttribute_mAttributeListForImplementation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_documentMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootEntityName" ":" ;
  mAttribute_mRootEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_documentMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_documentMap * operand = (cMapElement_documentMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mRootEntityName.objectCompare (operand->mAttribute_mRootEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap::GALGAS_documentMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap::GALGAS_documentMap (const GALGAS_documentMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap & GALGAS_documentMap::operator = (const GALGAS_documentMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_documentMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::constructor_mapWithMapToOverride (const GALGAS_documentMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_documentMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_documentMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_string inArgument0,
                                             GALGAS_outletGenerationList inArgument1,
                                             GALGAS_controllerMap inArgument2,
                                             GALGAS_lstringlist inArgument3,
                                             GALGAS_transientListForImplementation inArgument4,
                                             GALGAS_fileInclusionSet inArgument5,
                                             GALGAS_attributeListForImplementation inArgument6,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_documentMap * p = NULL ;
  macroMyNew (p, cMapElement_documentMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' document is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_documentMap_searchKey = "the '%K' document is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_documentMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_string & outArgument0,
                                           GALGAS_outletGenerationList & outArgument1,
                                           GALGAS_controllerMap & outArgument2,
                                           GALGAS_lstringlist & outArgument3,
                                           GALGAS_transientListForImplementation & outArgument4,
                                           GALGAS_fileInclusionSet & outArgument5,
                                           GALGAS_attributeListForImplementation & outArgument6,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_documentMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    outArgument0 = p->mAttribute_mRootEntityName ;
    outArgument1 = p->mAttribute_mOutletDeclarationList ;
    outArgument2 = p->mAttribute_mControllerMap ;
    outArgument3 = p->mAttribute_mActionList ;
    outArgument4 = p->mAttribute_mTransientListForImplementation ;
    outArgument5 = p->mAttribute_mFileInclusionSet ;
    outArgument6 = p->mAttribute_mAttributeListForImplementation ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap::reader_mRootEntityNameForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mRootEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_documentMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_documentMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_documentMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMRootEntityNameForKey (GALGAS_string inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mRootEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * p = (cMapElement_documentMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_documentMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_documentMap * GALGAS_documentMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_documentMap * result = (cMapElement_documentMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_documentMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_documentMap * GALGAS_documentMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_documentMap_searchKey COMMA_THERE) ;
  cMapElement_documentMap * result = (cMapElement_documentMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_documentMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_documentMap::cEnumerator_documentMap (const GALGAS_documentMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element cEnumerator_documentMap::current (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return GALGAS_documentMap_2E_element (p->mAttribute_lkey, p->mAttribute_mRootEntityName, p->mAttribute_mOutletDeclarationList, p->mAttribute_mControllerMap, p->mAttribute_mActionList, p->mAttribute_mTransientListForImplementation, p->mAttribute_mFileInclusionSet, p->mAttribute_mAttributeListForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_documentMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_documentMap::current_mRootEntityName (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_documentMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_documentMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_documentMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_documentMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_documentMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_documentMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_documentMap * p = (const cMapElement_documentMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_documentMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @documentMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentMap ("documentMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap GALGAS_documentMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_documentMap result ;
  const GALGAS_documentMap * p = (const GALGAS_documentMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("documentMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_EXoutletClassBindingOptionMap::cMapElement_EXoutletClassBindingOptionMap (const GALGAS_lstring & inKey,
                                                                                      const GALGAS_easyBindingTypeList & in_mAcceptableTypeList
                                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_EXoutletClassBindingOptionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_EXoutletClassBindingOptionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_EXoutletClassBindingOptionMap (mAttribute_lkey, mAttribute_mAcceptableTypeList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_EXoutletClassBindingOptionMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_EXoutletClassBindingOptionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_EXoutletClassBindingOptionMap * operand = (cMapElement_EXoutletClassBindingOptionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap::GALGAS_EXoutletClassBindingOptionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap::GALGAS_EXoutletClassBindingOptionMap (const GALGAS_EXoutletClassBindingOptionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap & GALGAS_EXoutletClassBindingOptionMap::operator = (const GALGAS_EXoutletClassBindingOptionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_EXoutletClassBindingOptionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingOptionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_EXoutletClassBindingOptionMap::constructor_mapWithMapToOverride (const GALGAS_EXoutletClassBindingOptionMap & inMapToOverride
                                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingOptionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_EXoutletClassBindingOptionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_EXoutletClassBindingOptionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingOptionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                               GALGAS_easyBindingTypeList inArgument0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cMapElement_EXoutletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_EXoutletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding option is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_EXoutletClassBindingOptionMap_searchKey = "the '%K' binding option is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingOptionMap::method_searchKey (GALGAS_lstring inKey,
                                                             GALGAS_easyBindingTypeList & outArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingOptionMap * p = (const cMapElement_EXoutletClassBindingOptionMap *) performSearch (inKey,
                                                                                                                             inCompiler,
                                                                                                                             kSearchErrorMessage_EXoutletClassBindingOptionMap_searchKey
                                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_EXoutletClassBindingOptionMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_EXoutletClassBindingOptionMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_EXoutletClassBindingOptionMap * p = (const cMapElement_EXoutletClassBindingOptionMap *) attributes ;
  GALGAS_easyBindingTypeList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_EXoutletClassBindingOptionMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingOptionMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeList inAttributeValue,
                                                                                  GALGAS_string inKey,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_EXoutletClassBindingOptionMap * p = (cMapElement_EXoutletClassBindingOptionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_EXoutletClassBindingOptionMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_EXoutletClassBindingOptionMap * GALGAS_EXoutletClassBindingOptionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                            const GALGAS_string & inKey
                                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_EXoutletClassBindingOptionMap * result = (cMapElement_EXoutletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_EXoutletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_EXoutletClassBindingOptionMap * GALGAS_EXoutletClassBindingOptionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                               const GALGAS_lstring & inKey
                                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_EXoutletClassBindingOptionMap_searchKey COMMA_THERE) ;
  cMapElement_EXoutletClassBindingOptionMap * result = (cMapElement_EXoutletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_EXoutletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_EXoutletClassBindingOptionMap::cEnumerator_EXoutletClassBindingOptionMap (const GALGAS_EXoutletClassBindingOptionMap & inEnumeratedObject,
                                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element cEnumerator_EXoutletClassBindingOptionMap::current (LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingOptionMap * p = (const cMapElement_EXoutletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_EXoutletClassBindingOptionMap) ;
  return GALGAS_EXoutletClassBindingOptionMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_EXoutletClassBindingOptionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList cEnumerator_EXoutletClassBindingOptionMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingOptionMap * p = (const cMapElement_EXoutletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_EXoutletClassBindingOptionMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @EXoutletClassBindingOptionMap type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_EXoutletClassBindingOptionMap ("EXoutletClassBindingOptionMap",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_EXoutletClassBindingOptionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_EXoutletClassBindingOptionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_EXoutletClassBindingOptionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_EXoutletClassBindingOptionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_EXoutletClassBindingOptionMap::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingOptionMap result ;
  const GALGAS_EXoutletClassBindingOptionMap * p = (const GALGAS_EXoutletClassBindingOptionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_EXoutletClassBindingOptionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("EXoutletClassBindingOptionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_EXoutletClassBindingMap::cMapElement_EXoutletClassBindingMap (const GALGAS_lstring & inKey,
                                                                          const GALGAS_EXeasyBindingTypeAndFormatterList & in_mAcceptableTypeList,
                                                                          const GALGAS_EXoutletClassBindingOptionMap & in_mOutletClassBindingOptionMap
                                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList),
mAttribute_mOutletClassBindingOptionMap (in_mOutletClassBindingOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_EXoutletClassBindingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_EXoutletClassBindingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_EXoutletClassBindingMap (mAttribute_lkey, mAttribute_mAcceptableTypeList, mAttribute_mOutletClassBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_EXoutletClassBindingMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingOptionMap" ":" ;
  mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_EXoutletClassBindingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_EXoutletClassBindingMap * operand = (cMapElement_EXoutletClassBindingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (operand->mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap::GALGAS_EXoutletClassBindingMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap::GALGAS_EXoutletClassBindingMap (const GALGAS_EXoutletClassBindingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap & GALGAS_EXoutletClassBindingMap::operator = (const GALGAS_EXoutletClassBindingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_EXoutletClassBindingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_EXoutletClassBindingMap::constructor_mapWithMapToOverride (const GALGAS_EXoutletClassBindingMap & inMapToOverride
                                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_EXoutletClassBindingMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_EXoutletClassBindingMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                         GALGAS_EXeasyBindingTypeAndFormatterList inArgument0,
                                                         GALGAS_EXoutletClassBindingOptionMap inArgument1,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cMapElement_EXoutletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_EXoutletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_EXoutletClassBindingMap_searchKey = "the '%K' binding is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingMap::method_searchKey (GALGAS_lstring inKey,
                                                       GALGAS_EXeasyBindingTypeAndFormatterList & outArgument0,
                                                       GALGAS_EXoutletClassBindingOptionMap & outArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingMap * p = (const cMapElement_EXoutletClassBindingMap *) performSearch (inKey,
                                                                                                                 inCompiler,
                                                                                                                 kSearchErrorMessage_EXoutletClassBindingMap_searchKey
                                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_EXoutletClassBindingMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
    outArgument1 = p->mAttribute_mOutletClassBindingOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_EXeasyBindingTypeAndFormatterList GALGAS_EXoutletClassBindingMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_EXoutletClassBindingMap * p = (const cMapElement_EXoutletClassBindingMap *) attributes ;
  GALGAS_EXeasyBindingTypeAndFormatterList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_EXoutletClassBindingMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_EXoutletClassBindingMap::reader_mOutletClassBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_EXoutletClassBindingMap * p = (const cMapElement_EXoutletClassBindingMap *) attributes ;
  GALGAS_EXoutletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_EXoutletClassBindingMap) ;
    result = p->mAttribute_mOutletClassBindingOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingMap::modifier_setMAcceptableTypeListForKey (GALGAS_EXeasyBindingTypeAndFormatterList inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_EXoutletClassBindingMap * p = (cMapElement_EXoutletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_EXoutletClassBindingMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingMap::modifier_setMOutletClassBindingOptionMapForKey (GALGAS_EXoutletClassBindingOptionMap inAttributeValue,
                                                                                     GALGAS_string inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_EXoutletClassBindingMap * p = (cMapElement_EXoutletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_EXoutletClassBindingMap) ;
    p->mAttribute_mOutletClassBindingOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_EXoutletClassBindingMap * GALGAS_EXoutletClassBindingMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                const GALGAS_string & inKey
                                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_EXoutletClassBindingMap * result = (cMapElement_EXoutletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_EXoutletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_EXoutletClassBindingMap * GALGAS_EXoutletClassBindingMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                   const GALGAS_lstring & inKey
                                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_EXoutletClassBindingMap_searchKey COMMA_THERE) ;
  cMapElement_EXoutletClassBindingMap * result = (cMapElement_EXoutletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_EXoutletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_EXoutletClassBindingMap::cEnumerator_EXoutletClassBindingMap (const GALGAS_EXoutletClassBindingMap & inEnumeratedObject,
                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element cEnumerator_EXoutletClassBindingMap::current (LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingMap * p = (const cMapElement_EXoutletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_EXoutletClassBindingMap) ;
  return GALGAS_EXoutletClassBindingMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList, p->mAttribute_mOutletClassBindingOptionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_EXoutletClassBindingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_EXeasyBindingTypeAndFormatterList cEnumerator_EXoutletClassBindingMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingMap * p = (const cMapElement_EXoutletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_EXoutletClassBindingMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap cEnumerator_EXoutletClassBindingMap::current_mOutletClassBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_EXoutletClassBindingMap * p = (const cMapElement_EXoutletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_EXoutletClassBindingMap) ;
  return p->mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @EXoutletClassBindingMap type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_EXoutletClassBindingMap ("EXoutletClassBindingMap",
                                                NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_EXoutletClassBindingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_EXoutletClassBindingMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_EXoutletClassBindingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_EXoutletClassBindingMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_EXoutletClassBindingMap::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingMap result ;
  const GALGAS_EXoutletClassBindingMap * p = (const GALGAS_EXoutletClassBindingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_EXoutletClassBindingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("EXoutletClassBindingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Class for element of '@easyBindingTypeAndFormatterList' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_easyBindingTypeAndFormatterList : public cCollectionElement {
  public : GALGAS_easyBindingTypeAndFormatterList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_easyBindingTypeAndFormatterList (const GALGAS_unifiedTypeProxy & in_mType,
                                                               const GALGAS_formatterEnum & in_mRequiredFormatter
                                                               COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_easyBindingTypeAndFormatterList::cCollectionElement_easyBindingTypeAndFormatterList (const GALGAS_unifiedTypeProxy & in_mType,
                                                                                                        const GALGAS_formatterEnum & in_mRequiredFormatter
                                                                                                        COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mRequiredFormatter) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_easyBindingTypeAndFormatterList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_easyBindingTypeAndFormatterList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_easyBindingTypeAndFormatterList (mObject.mAttribute_mType, mObject.mAttribute_mRequiredFormatter COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_easyBindingTypeAndFormatterList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRequiredFormatter" ":" ;
  mObject.mAttribute_mRequiredFormatter.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_easyBindingTypeAndFormatterList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_easyBindingTypeAndFormatterList * operand = (cCollectionElement_easyBindingTypeAndFormatterList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_easyBindingTypeAndFormatterList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList::GALGAS_easyBindingTypeAndFormatterList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList::GALGAS_easyBindingTypeAndFormatterList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_easyBindingTypeAndFormatterList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_easyBindingTypeAndFormatterList::constructor_listWithValue (const GALGAS_unifiedTypeProxy & inOperand0,
                                                                                                          const GALGAS_formatterEnum & inOperand1
                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_easyBindingTypeAndFormatterList result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_easyBindingTypeAndFormatterList::makeAttributesFromObjects (attributes, inOperand0, inOperand1 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                        const GALGAS_unifiedTypeProxy & in_mType,
                                                                        const GALGAS_formatterEnum & in_mRequiredFormatter
                                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement_easyBindingTypeAndFormatterList * p = NULL ;
  macroMyNew (p, cCollectionElement_easyBindingTypeAndFormatterList (in_mType,
                                                                     in_mRequiredFormatter COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::addAssign_operation (const GALGAS_unifiedTypeProxy & inOperand0,
                                                                  const GALGAS_formatterEnum & inOperand1
                                                                  COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_easyBindingTypeAndFormatterList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::modifier_prependValue (GALGAS_unifiedTypeProxy inOperand0,
                                                                    GALGAS_formatterEnum inOperand1
                                                                    COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_easyBindingTypeAndFormatterList (inOperand0, inOperand1 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::modifier_popFirst (GALGAS_unifiedTypeProxy & outOperand0,
                                                                GALGAS_formatterEnum & outOperand1,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_easyBindingTypeAndFormatterList * p = (cCollectionElement_easyBindingTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_easyBindingTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::modifier_popLast (GALGAS_unifiedTypeProxy & outOperand0,
                                                               GALGAS_formatterEnum & outOperand1,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_easyBindingTypeAndFormatterList * p = (cCollectionElement_easyBindingTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_easyBindingTypeAndFormatterList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::method_first (GALGAS_unifiedTypeProxy & outOperand0,
                                                           GALGAS_formatterEnum & outOperand1,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_easyBindingTypeAndFormatterList * p = (cCollectionElement_easyBindingTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_easyBindingTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::method_last (GALGAS_unifiedTypeProxy & outOperand0,
                                                          GALGAS_formatterEnum & outOperand1,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_easyBindingTypeAndFormatterList * p = (cCollectionElement_easyBindingTypeAndFormatterList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_easyBindingTypeAndFormatterList) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mRequiredFormatter ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_easyBindingTypeAndFormatterList::operator_concat (const GALGAS_easyBindingTypeAndFormatterList & inOperand
                                                                                                COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_easyBindingTypeAndFormatterList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_easyBindingTypeAndFormatterList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_easyBindingTypeAndFormatterList result = GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_easyBindingTypeAndFormatterList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  GALGAS_easyBindingTypeAndFormatterList result = GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList::dotAssign_operation (const GALGAS_easyBindingTypeAndFormatterList inOperand
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_easyBindingTypeAndFormatterList::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_easyBindingTypeAndFormatterList * p = (cCollectionElement_easyBindingTypeAndFormatterList *) attributes.ptr () ;
  GALGAS_unifiedTypeProxy result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_easyBindingTypeAndFormatterList) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_easyBindingTypeAndFormatterList::reader_mRequiredFormatterAtIndex (const GALGAS_uint & inIndex,
                                                                                               C_Compiler * inCompiler
                                                                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_easyBindingTypeAndFormatterList * p = (cCollectionElement_easyBindingTypeAndFormatterList *) attributes.ptr () ;
  GALGAS_formatterEnum result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_easyBindingTypeAndFormatterList) ;
    result = p->mObject.mAttribute_mRequiredFormatter ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_easyBindingTypeAndFormatterList::cEnumerator_easyBindingTypeAndFormatterList (const GALGAS_easyBindingTypeAndFormatterList & inEnumeratedObject,
                                                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element cEnumerator_easyBindingTypeAndFormatterList::current (LOCATION_ARGS) const {
  const cCollectionElement_easyBindingTypeAndFormatterList * p = (const cCollectionElement_easyBindingTypeAndFormatterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_easyBindingTypeAndFormatterList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy cEnumerator_easyBindingTypeAndFormatterList::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_easyBindingTypeAndFormatterList * p = (const cCollectionElement_easyBindingTypeAndFormatterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_easyBindingTypeAndFormatterList) ;
  return p->mObject.mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum cEnumerator_easyBindingTypeAndFormatterList::current_mRequiredFormatter (LOCATION_ARGS) const {
  const cCollectionElement_easyBindingTypeAndFormatterList * p = (const cCollectionElement_easyBindingTypeAndFormatterList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_easyBindingTypeAndFormatterList) ;
  return p->mObject.mAttribute_mRequiredFormatter ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @easyBindingTypeAndFormatterList type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_easyBindingTypeAndFormatterList ("easyBindingTypeAndFormatterList",
                                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_easyBindingTypeAndFormatterList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_easyBindingTypeAndFormatterList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_easyBindingTypeAndFormatterList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_easyBindingTypeAndFormatterList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_easyBindingTypeAndFormatterList::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_easyBindingTypeAndFormatterList result ;
  const GALGAS_easyBindingTypeAndFormatterList * p = (const GALGAS_easyBindingTypeAndFormatterList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_easyBindingTypeAndFormatterList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("easyBindingTypeAndFormatterList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap::cMapElement_outletClassBindingOptionMap (const GALGAS_lstring & inKey,
                                                                                  const GALGAS_unifiedTypeProxyList & in_mAcceptableTypeList
                                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingOptionMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingOptionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingOptionMap (mAttribute_lkey, mAttribute_mAcceptableTypeList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingOptionMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingOptionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingOptionMap * operand = (cMapElement_outletClassBindingOptionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap::GALGAS_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap & GALGAS_outletClassBindingOptionMap::operator = (const GALGAS_outletClassBindingOptionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingOptionMap & inMapToOverride
                                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassBindingOptionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_insertKey (GALGAS_lstring inKey,
                                                             GALGAS_unifiedTypeProxyList inArgument0,
                                                             C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingOptionMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingOptionMap (inKey, inArgument0 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding option is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingOptionMap_searchKey = "the '%K' binding option is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::method_searchKey (GALGAS_lstring inKey,
                                                           GALGAS_unifiedTypeProxyList & outArgument0,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) performSearch (inKey,
                                                                                                                         inCompiler,
                                                                                                                         kSearchErrorMessage_outletClassBindingOptionMap_searchKey
                                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_outletClassBindingOptionMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) attributes ;
  GALGAS_unifiedTypeProxyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap::modifier_setMAcceptableTypeListForKey (GALGAS_unifiedTypeProxyList inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * p = (cMapElement_outletClassBindingOptionMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingOptionMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                                        const GALGAS_string & inKey
                                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingOptionMap * GALGAS_outletClassBindingOptionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                                           const GALGAS_lstring & inKey
                                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingOptionMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingOptionMap * result = (cMapElement_outletClassBindingOptionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingOptionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingOptionMap::cEnumerator_outletClassBindingOptionMap (const GALGAS_outletClassBindingOptionMap & inEnumeratedObject,
                                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element cEnumerator_outletClassBindingOptionMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return GALGAS_outletClassBindingOptionMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingOptionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList cEnumerator_outletClassBindingOptionMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingOptionMap * p = (const cMapElement_outletClassBindingOptionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingOptionMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @outletClassBindingOptionMap type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap ("outletClassBindingOptionMap",
                                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingOptionMap::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap result ;
  const GALGAS_outletClassBindingOptionMap * p = (const GALGAS_outletClassBindingOptionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingOptionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap::cMapElement_outletClassBindingMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_easyBindingTypeAndFormatterList & in_mAcceptableTypeList,
                                                                      const GALGAS_outletClassBindingOptionMap & in_mOutletClassBindingOptionMap
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAcceptableTypeList (in_mAcceptableTypeList),
mAttribute_mOutletClassBindingOptionMap (in_mOutletClassBindingOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassBindingMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassBindingMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassBindingMap (mAttribute_lkey, mAttribute_mAcceptableTypeList, mAttribute_mOutletClassBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassBindingMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAcceptableTypeList" ":" ;
  mAttribute_mAcceptableTypeList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletClassBindingOptionMap" ":" ;
  mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassBindingMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassBindingMap * operand = (cMapElement_outletClassBindingMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAcceptableTypeList.objectCompare (operand->mAttribute_mAcceptableTypeList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (operand->mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap::GALGAS_outletClassBindingMap (const GALGAS_outletClassBindingMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap & GALGAS_outletClassBindingMap::operator = (const GALGAS_outletClassBindingMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::constructor_mapWithMapToOverride (const GALGAS_outletClassBindingMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassBindingMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_easyBindingTypeAndFormatterList inArgument0,
                                                       GALGAS_outletClassBindingOptionMap inArgument1,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_outletClassBindingMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassBindingMap (inKey, inArgument0, inArgument1 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' binding is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassBindingMap_searchKey = "the '%K' binding is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_easyBindingTypeAndFormatterList & outArgument0,
                                                     GALGAS_outletClassBindingOptionMap & outArgument1,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_outletClassBindingMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    outArgument0 = p->mAttribute_mAcceptableTypeList ;
    outArgument1 = p->mAttribute_mOutletClassBindingOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_outletClassBindingMap::reader_mAcceptableTypeListForKey (const GALGAS_string & inKey,
                                                                                                       C_Compiler * inCompiler
                                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_easyBindingTypeAndFormatterList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mAcceptableTypeList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap::reader_mOutletClassBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) attributes ;
  GALGAS_outletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
    result = p->mAttribute_mOutletClassBindingOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMAcceptableTypeListForKey (GALGAS_easyBindingTypeAndFormatterList inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mAcceptableTypeList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap::modifier_setMOutletClassBindingOptionMapForKey (GALGAS_outletClassBindingOptionMap inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * p = (cMapElement_outletClassBindingMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassBindingMap) ;
    p->mAttribute_mOutletClassBindingOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                            const GALGAS_string & inKey
                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassBindingMap * GALGAS_outletClassBindingMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                               const GALGAS_lstring & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassBindingMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassBindingMap * result = (cMapElement_outletClassBindingMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassBindingMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassBindingMap::cEnumerator_outletClassBindingMap (const GALGAS_outletClassBindingMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element cEnumerator_outletClassBindingMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return GALGAS_outletClassBindingMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAcceptableTypeList, p->mAttribute_mOutletClassBindingOptionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassBindingMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList cEnumerator_outletClassBindingMap::current_mAcceptableTypeList (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap cEnumerator_outletClassBindingMap::current_mOutletClassBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_outletClassBindingMap * p = (const cMapElement_outletClassBindingMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassBindingMap) ;
  return p->mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletClassBindingMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap ("outletClassBindingMap",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap GALGAS_outletClassBindingMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap result ;
  const GALGAS_outletClassBindingMap * p = (const GALGAS_outletClassBindingMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap::cMapElement_outletClassMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_generationKind & in_mGenerationKind,
                                                        const GALGAS_string & in_mSuperClassName,
                                                        const GALGAS_protocolList & in_mAdoptedProtocolList,
                                                        const GALGAS_bool & in_mImplementsDeallocProtocol,
                                                        const GALGAS_EXoutletClassBindingMap & in_mAllBindingMap,
                                                        const GALGAS_EXoutletClassBindingMap & in_mCurrentBindingMap,
                                                        const GALGAS_bool & in_mHasTableValueBinding
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mGenerationKind (in_mGenerationKind),
mAttribute_mSuperClassName (in_mSuperClassName),
mAttribute_mAdoptedProtocolList (in_mAdoptedProtocolList),
mAttribute_mImplementsDeallocProtocol (in_mImplementsDeallocProtocol),
mAttribute_mAllBindingMap (in_mAllBindingMap),
mAttribute_mCurrentBindingMap (in_mCurrentBindingMap),
mAttribute_mHasTableValueBinding (in_mHasTableValueBinding) {
}

//---------------------------------------------------------------------------*

bool cMapElement_outletClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mAdoptedProtocolList.isValid () && mAttribute_mImplementsDeallocProtocol.isValid () && mAttribute_mAllBindingMap.isValid () && mAttribute_mCurrentBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_outletClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_outletClassMap (mAttribute_lkey, mAttribute_mGenerationKind, mAttribute_mSuperClassName, mAttribute_mAdoptedProtocolList, mAttribute_mImplementsDeallocProtocol, mAttribute_mAllBindingMap, mAttribute_mCurrentBindingMap, mAttribute_mHasTableValueBinding COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_outletClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerationKind" ":" ;
  mAttribute_mGenerationKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mSuperClassName" ":" ;
  mAttribute_mSuperClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAdoptedProtocolList" ":" ;
  mAttribute_mAdoptedProtocolList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementsDeallocProtocol" ":" ;
  mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAllBindingMap" ":" ;
  mAttribute_mAllBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mCurrentBindingMap" ":" ;
  mAttribute_mCurrentBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mHasTableValueBinding" ":" ;
  mAttribute_mHasTableValueBinding.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_outletClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_outletClassMap * operand = (cMapElement_outletClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationKind.objectCompare (operand->mAttribute_mGenerationKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mSuperClassName.objectCompare (operand->mAttribute_mSuperClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (operand->mAttribute_mAdoptedProtocolList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (operand->mAttribute_mImplementsDeallocProtocol) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAllBindingMap.objectCompare (operand->mAttribute_mAllBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mCurrentBindingMap.objectCompare (operand->mAttribute_mCurrentBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mHasTableValueBinding.objectCompare (operand->mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap::GALGAS_outletClassMap (const GALGAS_outletClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap & GALGAS_outletClassMap::operator = (const GALGAS_outletClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::constructor_mapWithMapToOverride (const GALGAS_outletClassMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_outletClassMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_generationKind inArgument0,
                                                GALGAS_string inArgument1,
                                                GALGAS_protocolList inArgument2,
                                                GALGAS_bool inArgument3,
                                                GALGAS_EXoutletClassBindingMap inArgument4,
                                                GALGAS_EXoutletClassBindingMap inArgument5,
                                                GALGAS_bool inArgument6,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_outletClassMap * p = NULL ;
  macroMyNew (p, cMapElement_outletClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' outlet class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_outletClassMap_searchKey = "the '%K' outlet class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_generationKind & outArgument0,
                                              GALGAS_string & outArgument1,
                                              GALGAS_protocolList & outArgument2,
                                              GALGAS_bool & outArgument3,
                                              GALGAS_EXoutletClassBindingMap & outArgument4,
                                              GALGAS_EXoutletClassBindingMap & outArgument5,
                                              GALGAS_bool & outArgument6,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_outletClassMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    outArgument0 = p->mAttribute_mGenerationKind ;
    outArgument1 = p->mAttribute_mSuperClassName ;
    outArgument2 = p->mAttribute_mAdoptedProtocolList ;
    outArgument3 = p->mAttribute_mImplementsDeallocProtocol ;
    outArgument4 = p->mAttribute_mAllBindingMap ;
    outArgument5 = p->mAttribute_mCurrentBindingMap ;
    outArgument6 = p->mAttribute_mHasTableValueBinding ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_outletClassMap::reader_mGenerationKindForKey (const GALGAS_string & inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_generationKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mGenerationKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap::reader_mSuperClassNameForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mSuperClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_outletClassMap::reader_mAdoptedProtocolListForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_protocolList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mAdoptedProtocolList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mImplementsDeallocProtocolForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mImplementsDeallocProtocol ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_outletClassMap::reader_mAllBindingMapForKey (const GALGAS_string & inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_EXoutletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mAllBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_outletClassMap::reader_mCurrentBindingMapForKey (const GALGAS_string & inKey,
                                                                                       C_Compiler * inCompiler
                                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_EXoutletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mCurrentBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap::reader_mHasTableValueBindingForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_outletClassMap) ;
    result = p->mAttribute_mHasTableValueBinding ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMGenerationKindForKey (GALGAS_generationKind inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mGenerationKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMSuperClassNameForKey (GALGAS_string inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mSuperClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMAdoptedProtocolListForKey (GALGAS_protocolList inAttributeValue,
                                                                    GALGAS_string inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mAdoptedProtocolList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMImplementsDeallocProtocolForKey (GALGAS_bool inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mImplementsDeallocProtocol = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMAllBindingMapForKey (GALGAS_EXoutletClassBindingMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mAllBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMCurrentBindingMapForKey (GALGAS_EXoutletClassBindingMap inAttributeValue,
                                                                  GALGAS_string inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mCurrentBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap::modifier_setMHasTableValueBindingForKey (GALGAS_bool inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * p = (cMapElement_outletClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_outletClassMap) ;
    p->mAttribute_mHasTableValueBinding = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_outletClassMap * GALGAS_outletClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_outletClassMap_searchKey COMMA_THERE) ;
  cMapElement_outletClassMap * result = (cMapElement_outletClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_outletClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_outletClassMap::cEnumerator_outletClassMap (const GALGAS_outletClassMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element cEnumerator_outletClassMap::current (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return GALGAS_outletClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mGenerationKind, p->mAttribute_mSuperClassName, p->mAttribute_mAdoptedProtocolList, p->mAttribute_mImplementsDeallocProtocol, p->mAttribute_mAllBindingMap, p->mAttribute_mCurrentBindingMap, p->mAttribute_mHasTableValueBinding) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_outletClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind cEnumerator_outletClassMap::current_mGenerationKind (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mGenerationKind ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletClassMap::current_mSuperClassName (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolList cEnumerator_outletClassMap::current_mAdoptedProtocolList (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mAdoptedProtocolList ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mImplementsDeallocProtocol (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mImplementsDeallocProtocol ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap cEnumerator_outletClassMap::current_mAllBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mAllBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap cEnumerator_outletClassMap::current_mCurrentBindingMap (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mCurrentBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletClassMap::current_mHasTableValueBinding (LOCATION_ARGS) const {
  const cMapElement_outletClassMap * p = (const cMapElement_outletClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_outletClassMap) ;
  return p->mAttribute_mHasTableValueBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @outletClassMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap ("outletClassMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap GALGAS_outletClassMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap result ;
  const GALGAS_outletClassMap * p = (const GALGAS_outletClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap::cMapElement_controllerClassMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_controllerKind & in_mControllerKind,
                                                                const GALGAS_generationKind & in_mGenerationKind,
                                                                const GALGAS_EXoutletClassBindingMap & in_mBindingMap,
                                                                const GALGAS_actionMap & in_mActionMap,
                                                                const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                                const GALGAS_EXoutletClassBindingOptionMap & in_mControlledObjectAvailableBindingOptionMap
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mControllerKind (in_mControllerKind),
mAttribute_mGenerationKind (in_mGenerationKind),
mAttribute_mBindingMap (in_mBindingMap),
mAttribute_mActionMap (in_mActionMap),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mControlledObjectAvailableBindingOptionMap (in_mControlledObjectAvailableBindingOptionMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_controllerClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerKind.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mControlledObjectAvailableBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_controllerClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerClassMap (mAttribute_lkey, mAttribute_mControllerKind, mAttribute_mGenerationKind, mAttribute_mBindingMap, mAttribute_mActionMap, mAttribute_mObservablePropertyMap, mAttribute_mControlledObjectAvailableBindingOptionMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_controllerClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerKind" ":" ;
  mAttribute_mControllerKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mGenerationKind" ":" ;
  mAttribute_mGenerationKind.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBindingMap" ":" ;
  mAttribute_mBindingMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControlledObjectAvailableBindingOptionMap" ":" ;
  mAttribute_mControlledObjectAvailableBindingOptionMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerClassMap * operand = (cMapElement_controllerClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerKind.objectCompare (operand->mAttribute_mControllerKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mGenerationKind.objectCompare (operand->mAttribute_mGenerationKind) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mBindingMap.objectCompare (operand->mAttribute_mBindingMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControlledObjectAvailableBindingOptionMap.objectCompare (operand->mAttribute_mControlledObjectAvailableBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap::GALGAS_controllerClassMap (const GALGAS_controllerClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap & GALGAS_controllerClassMap::operator = (const GALGAS_controllerClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::constructor_mapWithMapToOverride (const GALGAS_controllerClassMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_controllerClassMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_controllerKind inArgument0,
                                                    GALGAS_generationKind inArgument1,
                                                    GALGAS_EXoutletClassBindingMap inArgument2,
                                                    GALGAS_actionMap inArgument3,
                                                    GALGAS_observablePropertyMap inArgument4,
                                                    GALGAS_EXoutletClassBindingOptionMap inArgument5,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_controllerClassMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerClassMap_searchKey = "the '%K' controller class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_controllerKind & outArgument0,
                                                  GALGAS_generationKind & outArgument1,
                                                  GALGAS_EXoutletClassBindingMap & outArgument2,
                                                  GALGAS_actionMap & outArgument3,
                                                  GALGAS_observablePropertyMap & outArgument4,
                                                  GALGAS_EXoutletClassBindingOptionMap & outArgument5,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_controllerClassMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    outArgument0 = p->mAttribute_mControllerKind ;
    outArgument1 = p->mAttribute_mGenerationKind ;
    outArgument2 = p->mAttribute_mBindingMap ;
    outArgument3 = p->mAttribute_mActionMap ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mControlledObjectAvailableBindingOptionMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_controllerKind GALGAS_controllerClassMap::reader_mControllerKindForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_controllerKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mControllerKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_controllerClassMap::reader_mGenerationKindForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_generationKind result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mGenerationKind ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_controllerClassMap::reader_mBindingMapForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_EXoutletClassBindingMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mBindingMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_controllerClassMap::reader_mControlledObjectAvailableBindingOptionMapForKey (const GALGAS_string & inKey,
                                                                                                                         C_Compiler * inCompiler
                                                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) attributes ;
  GALGAS_EXoutletClassBindingOptionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
    result = p->mAttribute_mControlledObjectAvailableBindingOptionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMControllerKindForKey (GALGAS_controllerKind inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mControllerKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMGenerationKindForKey (GALGAS_generationKind inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mGenerationKind = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMBindingMapForKey (GALGAS_EXoutletClassBindingMap inAttributeValue,
                                                               GALGAS_string inKey,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mBindingMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap::modifier_setMControlledObjectAvailableBindingOptionMapForKey (GALGAS_EXoutletClassBindingOptionMap inAttributeValue,
                                                                                              GALGAS_string inKey,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * p = (cMapElement_controllerClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerClassMap) ;
    p->mAttribute_mControlledObjectAvailableBindingOptionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                      const GALGAS_string & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerClassMap * GALGAS_controllerClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                         const GALGAS_lstring & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_controllerClassMap_searchKey COMMA_THERE) ;
  cMapElement_controllerClassMap * result = (cMapElement_controllerClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_controllerClassMap::cEnumerator_controllerClassMap (const GALGAS_controllerClassMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element cEnumerator_controllerClassMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return GALGAS_controllerClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mControllerKind, p->mAttribute_mGenerationKind, p->mAttribute_mBindingMap, p->mAttribute_mActionMap, p->mAttribute_mObservablePropertyMap, p->mAttribute_mControlledObjectAvailableBindingOptionMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerKind cEnumerator_controllerClassMap::current_mControllerKind (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mControllerKind ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind cEnumerator_controllerClassMap::current_mGenerationKind (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mGenerationKind ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap cEnumerator_controllerClassMap::current_mBindingMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerClassMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_controllerClassMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap cEnumerator_controllerClassMap::current_mControlledObjectAvailableBindingOptionMap (LOCATION_ARGS) const {
  const cMapElement_controllerClassMap * p = (const cMapElement_controllerClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerClassMap) ;
  return p->mAttribute_mControlledObjectAvailableBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @controllerClassMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap ("controllerClassMap",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap GALGAS_controllerClassMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap result ;
  const GALGAS_controllerClassMap * p = (const GALGAS_controllerClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap::cMapElement_relationshipMap (const GALGAS_lstring & inKey,
                                                          const GALGAS_bool & in_mIsToMany,
                                                          const GALGAS_lstring & in_mDestinationEntityName,
                                                          const GALGAS_lstring & in_mInverseRelationshipName,
                                                          const GALGAS_bool & in_mInverseIsToMany,
                                                          const GALGAS_deleteRuleEnum & in_mDeleteRule
                                                          COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mIsToMany (in_mIsToMany),
mAttribute_mDestinationEntityName (in_mDestinationEntityName),
mAttribute_mInverseRelationshipName (in_mInverseRelationshipName),
mAttribute_mInverseIsToMany (in_mInverseIsToMany),
mAttribute_mDeleteRule (in_mDeleteRule) {
}

//---------------------------------------------------------------------------*

bool cMapElement_relationshipMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mInverseIsToMany.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_relationshipMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_relationshipMap (mAttribute_lkey, mAttribute_mIsToMany, mAttribute_mDestinationEntityName, mAttribute_mInverseRelationshipName, mAttribute_mInverseIsToMany, mAttribute_mDeleteRule COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_relationshipMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsToMany" ":" ;
  mAttribute_mIsToMany.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDestinationEntityName" ":" ;
  mAttribute_mDestinationEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInverseRelationshipName" ":" ;
  mAttribute_mInverseRelationshipName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mInverseIsToMany" ":" ;
  mAttribute_mInverseIsToMany.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDeleteRule" ":" ;
  mAttribute_mDeleteRule.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_relationshipMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_relationshipMap * operand = (cMapElement_relationshipMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mIsToMany.objectCompare (operand->mAttribute_mIsToMany) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDestinationEntityName.objectCompare (operand->mAttribute_mDestinationEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInverseRelationshipName.objectCompare (operand->mAttribute_mInverseRelationshipName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mInverseIsToMany.objectCompare (operand->mAttribute_mInverseIsToMany) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mDeleteRule.objectCompare (operand->mAttribute_mDeleteRule) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap::GALGAS_relationshipMap (const GALGAS_relationshipMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap & GALGAS_relationshipMap::operator = (const GALGAS_relationshipMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::constructor_mapWithMapToOverride (const GALGAS_relationshipMap & inMapToOverride
                                                                                 COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  GALGAS_relationshipMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_insertKey (GALGAS_lstring inKey,
                                                 GALGAS_bool inArgument0,
                                                 GALGAS_lstring inArgument1,
                                                 GALGAS_lstring inArgument2,
                                                 GALGAS_bool inArgument3,
                                                 GALGAS_deleteRuleEnum inArgument4,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
  cMapElement_relationshipMap * p = NULL ;
  macroMyNew (p, cMapElement_relationshipMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' relationship is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_relationshipMap_searchKey = "the '%K' relationship is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::method_searchKey (GALGAS_lstring inKey,
                                               GALGAS_bool & outArgument0,
                                               GALGAS_lstring & outArgument1,
                                               GALGAS_lstring & outArgument2,
                                               GALGAS_bool & outArgument3,
                                               GALGAS_deleteRuleEnum & outArgument4,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) performSearch (inKey,
                                                                                                 inCompiler,
                                                                                                 kSearchErrorMessage_relationshipMap_searchKey
                                                                                                 COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    outArgument0 = p->mAttribute_mIsToMany ;
    outArgument1 = p->mAttribute_mDestinationEntityName ;
    outArgument2 = p->mAttribute_mInverseRelationshipName ;
    outArgument3 = p->mAttribute_mInverseIsToMany ;
    outArgument4 = p->mAttribute_mDeleteRule ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap::reader_mIsToManyForKey (const GALGAS_string & inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mIsToMany ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mDestinationEntityNameForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mDestinationEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap::reader_mInverseRelationshipNameForKey (const GALGAS_string & inKey,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mInverseRelationshipName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap::reader_mInverseIsToManyForKey (const GALGAS_string & inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mInverseIsToMany ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap::reader_mDeleteRuleForKey (const GALGAS_string & inKey,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) attributes ;
  GALGAS_deleteRuleEnum result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_relationshipMap) ;
    result = p->mAttribute_mDeleteRule ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMIsToManyForKey (GALGAS_bool inAttributeValue,
                                                          GALGAS_string inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mIsToMany = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDestinationEntityNameForKey (GALGAS_lstring inAttributeValue,
                                                                       GALGAS_string inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDestinationEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMInverseRelationshipNameForKey (GALGAS_lstring inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mInverseRelationshipName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMInverseIsToManyForKey (GALGAS_bool inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mInverseIsToMany = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap::modifier_setMDeleteRuleForKey (GALGAS_deleteRuleEnum inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * p = (cMapElement_relationshipMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_relationshipMap) ;
    p->mAttribute_mDeleteRule = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                const GALGAS_string & inKey
                                                                                                COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_relationshipMap * GALGAS_relationshipMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                   const GALGAS_lstring & inKey
                                                                                                   COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_relationshipMap_searchKey COMMA_THERE) ;
  cMapElement_relationshipMap * result = (cMapElement_relationshipMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_relationshipMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_relationshipMap::cEnumerator_relationshipMap (const GALGAS_relationshipMap & inEnumeratedObject,
                                                          const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element cEnumerator_relationshipMap::current (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return GALGAS_relationshipMap_2E_element (p->mAttribute_lkey, p->mAttribute_mIsToMany, p->mAttribute_mDestinationEntityName, p->mAttribute_mInverseRelationshipName, p->mAttribute_mInverseIsToMany, p->mAttribute_mDeleteRule) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_relationshipMap::current_mIsToMany (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mDestinationEntityName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_relationshipMap::current_mInverseRelationshipName (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_relationshipMap::current_mInverseIsToMany (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mInverseIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum cEnumerator_relationshipMap::current_mDeleteRule (LOCATION_ARGS) const {
  const cMapElement_relationshipMap * p = (const cMapElement_relationshipMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_relationshipMap) ;
  return p->mAttribute_mDeleteRule ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @relationshipMap type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap ("relationshipMap",
                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_relationshipMap::extractObject (const GALGAS_object & inObject,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap result ;
  const GALGAS_relationshipMap * p = (const GALGAS_relationshipMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("relationshipMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_propertyMap::cMapElement_propertyMap (const GALGAS_lstring & inKey
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_propertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_propertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_propertyMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_propertyMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_propertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_propertyMap * operand = (cMapElement_propertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap::GALGAS_propertyMap (const GALGAS_propertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap & GALGAS_propertyMap::operator = (const GALGAS_propertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::constructor_mapWithMapToOverride (const GALGAS_propertyMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_propertyMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_propertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_propertyMap * p = NULL ;
  macroMyNew (p, cMapElement_propertyMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' property (attribute, transient or relationship)" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

cMapElement_propertyMap * GALGAS_propertyMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_propertyMap * result = (cMapElement_propertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_propertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_propertyMap::cEnumerator_propertyMap (const GALGAS_propertyMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element cEnumerator_propertyMap::current (LOCATION_ARGS) const {
  const cMapElement_propertyMap * p = (const cMapElement_propertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_propertyMap) ;
  return GALGAS_propertyMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_propertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @propertyMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap ("propertyMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_propertyMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap result ;
  const GALGAS_propertyMap * p = (const GALGAS_propertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@attributeListForImplementation' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_attributeListForImplementation : public cCollectionElement {
  public : GALGAS_attributeListForImplementation_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_attributeListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                              const GALGAS_string & in_mAttributeName,
                                                              const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                              const GALGAS_string & in_mDirectDefaultValue
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_attributeListForImplementation::cCollectionElement_attributeListForImplementation (const GALGAS_easyBindingType & in_mType,
                                                                                                      const GALGAS_string & in_mAttributeName,
                                                                                                      const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                                                                      const GALGAS_string & in_mDirectDefaultValue
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mType, in_mAttributeName, in_mDefaultValueAsObjectiveCObject, in_mDirectDefaultValue) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_attributeListForImplementation::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_attributeListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_attributeListForImplementation (mObject.mAttribute_mType, mObject.mAttribute_mAttributeName, mObject.mAttribute_mDefaultValueAsObjectiveCObject, mObject.mAttribute_mDirectDefaultValue COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_attributeListForImplementation::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mObject.mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeName" ":" ;
  mObject.mAttribute_mAttributeName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDefaultValueAsObjectiveCObject" ":" ;
  mObject.mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDirectDefaultValue" ":" ;
  mObject.mAttribute_mDirectDefaultValue.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_attributeListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_attributeListForImplementation * operand = (cCollectionElement_attributeListForImplementation *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_attributeListForImplementation) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation::GALGAS_attributeListForImplementation (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation::GALGAS_attributeListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::constructor_listWithValue (const GALGAS_easyBindingType & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_string & inOperand2,
                                                                                                        const GALGAS_string & inOperand3
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_attributeListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_easyBindingType & in_mType,
                                                                       const GALGAS_string & in_mAttributeName,
                                                                       const GALGAS_string & in_mDefaultValueAsObjectiveCObject,
                                                                       const GALGAS_string & in_mDirectDefaultValue
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_attributeListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_attributeListForImplementation (in_mType,
                                                                    in_mAttributeName,
                                                                    in_mDefaultValueAsObjectiveCObject,
                                                                    in_mDirectDefaultValue COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::addAssign_operation (const GALGAS_easyBindingType & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_string & inOperand2,
                                                                 const GALGAS_string & inOperand3
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_attributeListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_prependValue (GALGAS_easyBindingType inOperand0,
                                                                   GALGAS_string inOperand1,
                                                                   GALGAS_string inOperand2,
                                                                   GALGAS_string inOperand3
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_attributeListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_popFirst (GALGAS_easyBindingType & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_string & outOperand2,
                                                               GALGAS_string & outOperand3,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::modifier_popLast (GALGAS_easyBindingType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_string & outOperand2,
                                                              GALGAS_string & outOperand3,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::method_first (GALGAS_easyBindingType & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_string & outOperand2,
                                                          GALGAS_string & outOperand3,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::method_last (GALGAS_easyBindingType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_string & outOperand2,
                                                         GALGAS_string & outOperand3,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mType ;
    outOperand1 = p->mObject.mAttribute_mAttributeName ;
    outOperand2 = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
    outOperand3 = p->mObject.mAttribute_mDirectDefaultValue ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::operator_concat (const GALGAS_attributeListForImplementation & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result = GALGAS_attributeListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_attributeListForImplementation result = GALGAS_attributeListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation::dotAssign_operation (const GALGAS_attributeListForImplementation inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_attributeListForImplementation::reader_mTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mAttributeNameAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDefaultValueAsObjectiveCObjectAtIndex (const GALGAS_uint & inIndex,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation::reader_mDirectDefaultValueAtIndex (const GALGAS_uint & inIndex,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_attributeListForImplementation * p = (cCollectionElement_attributeListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_attributeListForImplementation) ;
    result = p->mObject.mAttribute_mDirectDefaultValue ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_attributeListForImplementation::cEnumerator_attributeListForImplementation (const GALGAS_attributeListForImplementation & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element cEnumerator_attributeListForImplementation::current (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_attributeListForImplementation::current_mType (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mAttributeName (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDefaultValueAsObjectiveCObject (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDefaultValueAsObjectiveCObject ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_attributeListForImplementation::current_mDirectDefaultValue (LOCATION_ARGS) const {
  const cCollectionElement_attributeListForImplementation * p = (const cCollectionElement_attributeListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_attributeListForImplementation) ;
  return p->mObject.mAttribute_mDirectDefaultValue ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @attributeListForImplementation type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeListForImplementation ("attributeListForImplementation",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeListForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeListForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_attributeListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation result ;
  const GALGAS_attributeListForImplementation * p = (const GALGAS_attributeListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@outletBindingListForGeneration' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_outletBindingListForGeneration : public cCollectionElement {
  public : GALGAS_outletBindingListForGeneration_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_outletBindingListForGeneration (const GALGAS_abstractBindingForGeneration & in_mBinding
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_outletBindingListForGeneration::cCollectionElement_outletBindingListForGeneration (const GALGAS_abstractBindingForGeneration & in_mBinding
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mBinding) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_outletBindingListForGeneration::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletBindingListForGeneration::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletBindingListForGeneration (mObject.mAttribute_mBinding COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_outletBindingListForGeneration::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mBinding" ":" ;
  mObject.mAttribute_mBinding.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletBindingListForGeneration::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletBindingListForGeneration * operand = (cCollectionElement_outletBindingListForGeneration *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_outletBindingListForGeneration) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration::GALGAS_outletBindingListForGeneration (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::constructor_listWithValue (const GALGAS_abstractBindingForGeneration & inOperand0
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_abstractBindingForGeneration & in_mBinding
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_outletBindingListForGeneration * p = NULL ;
  macroMyNew (p, cCollectionElement_outletBindingListForGeneration (in_mBinding COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::addAssign_operation (const GALGAS_abstractBindingForGeneration & inOperand0
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_prependValue (GALGAS_abstractBindingForGeneration inOperand0
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletBindingListForGeneration (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popFirst (GALGAS_abstractBindingForGeneration & outOperand0,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::modifier_popLast (GALGAS_abstractBindingForGeneration & outOperand0,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_first (GALGAS_abstractBindingForGeneration & outOperand0,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::method_last (GALGAS_abstractBindingForGeneration & outOperand0,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    outOperand0 = p->mObject.mAttribute_mBinding ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::operator_concat (const GALGAS_outletBindingListForGeneration & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_outletBindingListForGeneration result = GALGAS_outletBindingListForGeneration::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration::dotAssign_operation (const GALGAS_outletBindingListForGeneration inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_outletBindingListForGeneration::reader_mBindingAtIndex (const GALGAS_uint & inIndex,
                                                                                                   C_Compiler * inCompiler
                                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletBindingListForGeneration * p = (cCollectionElement_outletBindingListForGeneration *) attributes.ptr () ;
  GALGAS_abstractBindingForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletBindingListForGeneration) ;
    result = p->mObject.mAttribute_mBinding ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_outletBindingListForGeneration::cEnumerator_outletBindingListForGeneration (const GALGAS_outletBindingListForGeneration & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element cEnumerator_outletBindingListForGeneration::current (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration cEnumerator_outletBindingListForGeneration::current_mBinding (LOCATION_ARGS) const {
  const cCollectionElement_outletBindingListForGeneration * p = (const cCollectionElement_outletBindingListForGeneration *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletBindingListForGeneration) ;
  return p->mObject.mAttribute_mBinding ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @outletBindingListForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration ("outletBindingListForGeneration",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletBindingListForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration result ;
  const GALGAS_outletBindingListForGeneration * p = (const GALGAS_outletBindingListForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletBindingListForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@outletGenerationList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_outletGenerationList : public cCollectionElement {
  public : GALGAS_outletGenerationList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                    const GALGAS_string & in_mOutletName,
                                                    const GALGAS_outletBindingListForGeneration & in_mOutletBindingList,
                                                    const GALGAS_bool & in_mImplementsDeallocProtocol
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_outletGenerationList::cCollectionElement_outletGenerationList (const GALGAS_string & in_mOutletType,
                                                                                  const GALGAS_string & in_mOutletName,
                                                                                  const GALGAS_outletBindingListForGeneration & in_mOutletBindingList,
                                                                                  const GALGAS_bool & in_mImplementsDeallocProtocol
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mOutletType, in_mOutletName, in_mOutletBindingList, in_mImplementsDeallocProtocol) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_outletGenerationList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_outletGenerationList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_outletGenerationList (mObject.mAttribute_mOutletType, mObject.mAttribute_mOutletName, mObject.mAttribute_mOutletBindingList, mObject.mAttribute_mImplementsDeallocProtocol COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_outletGenerationList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletType" ":" ;
  mObject.mAttribute_mOutletType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletName" ":" ;
  mObject.mAttribute_mOutletName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletBindingList" ":" ;
  mObject.mAttribute_mOutletBindingList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mImplementsDeallocProtocol" ":" ;
  mObject.mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_outletGenerationList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_outletGenerationList * operand = (cCollectionElement_outletGenerationList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_outletGenerationList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList::GALGAS_outletGenerationList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::constructor_listWithValue (const GALGAS_string & inOperand0,
                                                                                    const GALGAS_string & inOperand1,
                                                                                    const GALGAS_outletBindingListForGeneration & inOperand2,
                                                                                    const GALGAS_bool & inOperand3
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_outletGenerationList::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_string & in_mOutletType,
                                                             const GALGAS_string & in_mOutletName,
                                                             const GALGAS_outletBindingListForGeneration & in_mOutletBindingList,
                                                             const GALGAS_bool & in_mImplementsDeallocProtocol
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_outletGenerationList * p = NULL ;
  macroMyNew (p, cCollectionElement_outletGenerationList (in_mOutletType,
                                                          in_mOutletName,
                                                          in_mOutletBindingList,
                                                          in_mImplementsDeallocProtocol COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::addAssign_operation (const GALGAS_string & inOperand0,
                                                       const GALGAS_string & inOperand1,
                                                       const GALGAS_outletBindingListForGeneration & inOperand2,
                                                       const GALGAS_bool & inOperand3
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_prependValue (GALGAS_string inOperand0,
                                                         GALGAS_string inOperand1,
                                                         GALGAS_outletBindingListForGeneration inOperand2,
                                                         GALGAS_bool inOperand3
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_outletGenerationList (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popFirst (GALGAS_string & outOperand0,
                                                     GALGAS_string & outOperand1,
                                                     GALGAS_outletBindingListForGeneration & outOperand2,
                                                     GALGAS_bool & outOperand3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::modifier_popLast (GALGAS_string & outOperand0,
                                                    GALGAS_string & outOperand1,
                                                    GALGAS_outletBindingListForGeneration & outOperand2,
                                                    GALGAS_bool & outOperand3,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_first (GALGAS_string & outOperand0,
                                                GALGAS_string & outOperand1,
                                                GALGAS_outletBindingListForGeneration & outOperand2,
                                                GALGAS_bool & outOperand3,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::method_last (GALGAS_string & outOperand0,
                                               GALGAS_string & outOperand1,
                                               GALGAS_outletBindingListForGeneration & outOperand2,
                                               GALGAS_bool & outOperand3,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    outOperand0 = p->mObject.mAttribute_mOutletType ;
    outOperand1 = p->mObject.mAttribute_mOutletName ;
    outOperand2 = p->mObject.mAttribute_mOutletBindingList ;
    outOperand3 = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::operator_concat (const GALGAS_outletGenerationList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_outletGenerationList result = GALGAS_outletGenerationList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList::dotAssign_operation (const GALGAS_outletGenerationList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletTypeAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList::reader_mOutletNameAtIndex (const GALGAS_uint & inIndex,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList::reader_mOutletBindingListAtIndex (const GALGAS_uint & inIndex,
                                                                                                     C_Compiler * inCompiler
                                                                                                     COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mOutletBindingList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletGenerationList::reader_mImplementsDeallocProtocolAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_outletGenerationList * p = (cCollectionElement_outletGenerationList *) attributes.ptr () ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_outletGenerationList) ;
    result = p->mObject.mAttribute_mImplementsDeallocProtocol ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_outletGenerationList::cEnumerator_outletGenerationList (const GALGAS_outletGenerationList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element cEnumerator_outletGenerationList::current (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletType (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_outletGenerationList::current_mOutletName (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_outletGenerationList::current_mOutletBindingList (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mOutletBindingList ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_outletGenerationList::current_mImplementsDeallocProtocol (LOCATION_ARGS) const {
  const cCollectionElement_outletGenerationList * p = (const cCollectionElement_outletGenerationList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_outletGenerationList) ;
  return p->mObject.mAttribute_mImplementsDeallocProtocol ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @outletGenerationList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList ("outletGenerationList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_outletGenerationList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList result ;
  const GALGAS_outletGenerationList * p = (const GALGAS_outletGenerationList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletGenerationList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferenceArrayMap::cMapElement_preferenceArrayMap (const GALGAS_lstring & inKey,
                                                                const GALGAS_string & in_mClassName,
                                                                const GALGAS_observablePropertyMap & in_mClassObservablePropertyMap,
                                                                const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation
                                                                COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mClassName (in_mClassName),
mAttribute_mClassObservablePropertyMap (in_mClassObservablePropertyMap),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation) {
}

//---------------------------------------------------------------------------*

bool cMapElement_preferenceArrayMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mClassName.isValid () && mAttribute_mClassObservablePropertyMap.isValid () && mAttribute_mAttributeListForImplementation.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_preferenceArrayMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_preferenceArrayMap (mAttribute_lkey, mAttribute_mClassName, mAttribute_mClassObservablePropertyMap, mAttribute_mAttributeListForImplementation COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_preferenceArrayMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mClassName" ":" ;
  mAttribute_mClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mClassObservablePropertyMap" ":" ;
  mAttribute_mClassObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_preferenceArrayMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_preferenceArrayMap * operand = (cMapElement_preferenceArrayMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mClassName.objectCompare (operand->mAttribute_mClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mClassObservablePropertyMap.objectCompare (operand->mAttribute_mClassObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap::GALGAS_preferenceArrayMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap::GALGAS_preferenceArrayMap (const GALGAS_preferenceArrayMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap & GALGAS_preferenceArrayMap::operator = (const GALGAS_preferenceArrayMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_preferenceArrayMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_preferenceArrayMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_preferenceArrayMap::constructor_mapWithMapToOverride (const GALGAS_preferenceArrayMap & inMapToOverride
                                                                                       COMMA_LOCATION_ARGS) {
  GALGAS_preferenceArrayMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_preferenceArrayMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) const {
  GALGAS_preferenceArrayMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap::modifier_insertKey (GALGAS_lstring inKey,
                                                    GALGAS_string inArgument0,
                                                    GALGAS_observablePropertyMap inArgument1,
                                                    GALGAS_attributeListForImplementation inArgument2,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  cMapElement_preferenceArrayMap * p = NULL ;
  macroMyNew (p, cMapElement_preferenceArrayMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' array is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_preferenceArrayMap_searchKey = "the '%K' array is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap::method_searchKey (GALGAS_lstring inKey,
                                                  GALGAS_string & outArgument0,
                                                  GALGAS_observablePropertyMap & outArgument1,
                                                  GALGAS_attributeListForImplementation & outArgument2,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) const {
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) performSearch (inKey,
                                                                                                       inCompiler,
                                                                                                       kSearchErrorMessage_preferenceArrayMap_searchKey
                                                                                                       COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
    outArgument0 = p->mAttribute_mClassName ;
    outArgument1 = p->mAttribute_mClassObservablePropertyMap ;
    outArgument2 = p->mAttribute_mAttributeListForImplementation ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_preferenceArrayMap::reader_mClassNameForKey (const GALGAS_string & inKey,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
    result = p->mAttribute_mClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferenceArrayMap::reader_mClassObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
    result = p->mAttribute_mClassObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferenceArrayMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                               C_Compiler * inCompiler
                                                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap::modifier_setMClassNameForKey (GALGAS_string inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferenceArrayMap * p = (cMapElement_preferenceArrayMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferenceArrayMap) ;
    p->mAttribute_mClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap::modifier_setMClassObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferenceArrayMap * p = (cMapElement_preferenceArrayMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferenceArrayMap) ;
    p->mAttribute_mClassObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                                   GALGAS_string inKey,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferenceArrayMap * p = (cMapElement_preferenceArrayMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferenceArrayMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_preferenceArrayMap * GALGAS_preferenceArrayMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                      const GALGAS_string & inKey
                                                                                                      COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferenceArrayMap * result = (cMapElement_preferenceArrayMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferenceArrayMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferenceArrayMap * GALGAS_preferenceArrayMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                         const GALGAS_lstring & inKey
                                                                                                         COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_preferenceArrayMap_searchKey COMMA_THERE) ;
  cMapElement_preferenceArrayMap * result = (cMapElement_preferenceArrayMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferenceArrayMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_preferenceArrayMap::cEnumerator_preferenceArrayMap (const GALGAS_preferenceArrayMap & inEnumeratedObject,
                                                                const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element cEnumerator_preferenceArrayMap::current (LOCATION_ARGS) const {
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
  return GALGAS_preferenceArrayMap_2E_element (p->mAttribute_lkey, p->mAttribute_mClassName, p->mAttribute_mClassObservablePropertyMap, p->mAttribute_mAttributeListForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_preferenceArrayMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_preferenceArrayMap::current_mClassName (LOCATION_ARGS) const {
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
  return p->mAttribute_mClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_preferenceArrayMap::current_mClassObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
  return p->mAttribute_mClassObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_preferenceArrayMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferenceArrayMap * p = (const cMapElement_preferenceArrayMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferenceArrayMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @preferenceArrayMap type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferenceArrayMap ("preferenceArrayMap",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferenceArrayMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceArrayMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferenceArrayMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferenceArrayMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_preferenceArrayMap::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_preferenceArrayMap result ;
  const GALGAS_preferenceArrayMap * p = (const GALGAS_preferenceArrayMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferenceArrayMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferenceArrayMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap::cMapElement_preferencesMap (const GALGAS_lstring & inKey,
                                                        const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                        const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                        const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                        const GALGAS_lstringlist & in_mActionList,
                                                        const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                        const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                        const GALGAS_controllerMap & in_mControllerMap,
                                                        const GALGAS_preferenceArrayMap & in_mArrayMap
                                                        COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mArrayMap (in_mArrayMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_preferencesMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mArrayMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_preferencesMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_preferencesMap (mAttribute_lkey, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mOutletDeclarationList, mAttribute_mActionList, mAttribute_mObservablePropertyMap, mAttribute_mFileInclusionSet, mAttribute_mControllerMap, mAttribute_mArrayMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_preferencesMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mArrayMap" ":" ;
  mAttribute_mArrayMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_preferencesMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_preferencesMap * operand = (cMapElement_preferencesMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayMap.objectCompare (operand->mAttribute_mArrayMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap::GALGAS_preferencesMap (const GALGAS_preferencesMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap & GALGAS_preferencesMap::operator = (const GALGAS_preferencesMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::constructor_mapWithMapToOverride (const GALGAS_preferencesMap & inMapToOverride
                                                                               COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) const {
  GALGAS_preferencesMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_insertKey (GALGAS_lstring inKey,
                                                GALGAS_attributeListForImplementation inArgument0,
                                                GALGAS_transientListForImplementation inArgument1,
                                                GALGAS_outletGenerationList inArgument2,
                                                GALGAS_lstringlist inArgument3,
                                                GALGAS_observablePropertyMap inArgument4,
                                                GALGAS_fileInclusionSet inArgument5,
                                                GALGAS_controllerMap inArgument6,
                                                GALGAS_preferenceArrayMap inArgument7,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) {
  cMapElement_preferencesMap * p = NULL ;
  macroMyNew (p, cMapElement_preferencesMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' preference is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_preferencesMap_searchKey = "the '%K' preference is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::method_searchKey (GALGAS_lstring inKey,
                                              GALGAS_attributeListForImplementation & outArgument0,
                                              GALGAS_transientListForImplementation & outArgument1,
                                              GALGAS_outletGenerationList & outArgument2,
                                              GALGAS_lstringlist & outArgument3,
                                              GALGAS_observablePropertyMap & outArgument4,
                                              GALGAS_fileInclusionSet & outArgument5,
                                              GALGAS_controllerMap & outArgument6,
                                              GALGAS_preferenceArrayMap & outArgument7,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) performSearch (inKey,
                                                                                               inCompiler,
                                                                                               kSearchErrorMessage_preferencesMap_searchKey
                                                                                               COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    outArgument0 = p->mAttribute_mAttributeListForImplementation ;
    outArgument1 = p->mAttribute_mTransientListForImplementation ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mActionList ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mFileInclusionSet ;
    outArgument6 = p->mAttribute_mControllerMap ;
    outArgument7 = p->mAttribute_mArrayMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferencesMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                           C_Compiler * inCompiler
                                                                                                           COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferencesMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferencesMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_preferencesMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_preferencesMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_preferencesMap::reader_mArrayMapForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) attributes ;
  GALGAS_preferenceArrayMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_preferencesMap) ;
    result = p->mAttribute_mArrayMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                               GALGAS_string inKey,
                                                                               C_Compiler * inCompiler
                                                                               COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                                 GALGAS_string inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap::modifier_setMArrayMapForKey (GALGAS_preferenceArrayMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * p = (cMapElement_preferencesMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_preferencesMap) ;
    p->mAttribute_mArrayMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                              const GALGAS_string & inKey
                                                                                              COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_preferencesMap * GALGAS_preferencesMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                 const GALGAS_lstring & inKey
                                                                                                 COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_preferencesMap_searchKey COMMA_THERE) ;
  cMapElement_preferencesMap * result = (cMapElement_preferencesMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_preferencesMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_preferencesMap::cEnumerator_preferencesMap (const GALGAS_preferencesMap & inEnumeratedObject,
                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element cEnumerator_preferencesMap::current (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return GALGAS_preferencesMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mObservablePropertyMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mControllerMap, p->mAttribute_mArrayMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_preferencesMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_preferencesMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_preferencesMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_preferencesMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_preferencesMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_preferencesMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_preferencesMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_preferencesMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap cEnumerator_preferencesMap::current_mArrayMap (LOCATION_ARGS) const {
  const cMapElement_preferencesMap * p = (const cMapElement_preferencesMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_preferencesMap) ;
  return p->mAttribute_mArrayMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @preferencesMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap ("preferencesMap",
                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap GALGAS_preferencesMap::extractObject (const GALGAS_object & inObject,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap result ;
  const GALGAS_preferencesMap * p = (const GALGAS_preferencesMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferencesMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nibClassMap::cMapElement_nibClassMap (const GALGAS_lstring & inKey,
                                                  const GALGAS_attributeListForImplementation & in_mAttributeListForImplementation,
                                                  const GALGAS_transientListForImplementation & in_mTransientListForImplementation,
                                                  const GALGAS_outletGenerationList & in_mOutletDeclarationList,
                                                  const GALGAS_lstringlist & in_mActionList,
                                                  const GALGAS_observablePropertyMap & in_mObservablePropertyMap,
                                                  const GALGAS_fileInclusionSet & in_mFileInclusionSet,
                                                  const GALGAS_controllerMap & in_mControllerMap,
                                                  const GALGAS_preferenceArrayMap & in_mArrayMap
                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mAttributeListForImplementation (in_mAttributeListForImplementation),
mAttribute_mTransientListForImplementation (in_mTransientListForImplementation),
mAttribute_mOutletDeclarationList (in_mOutletDeclarationList),
mAttribute_mActionList (in_mActionList),
mAttribute_mObservablePropertyMap (in_mObservablePropertyMap),
mAttribute_mFileInclusionSet (in_mFileInclusionSet),
mAttribute_mControllerMap (in_mControllerMap),
mAttribute_mArrayMap (in_mArrayMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_nibClassMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mArrayMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_nibClassMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_nibClassMap (mAttribute_lkey, mAttribute_mAttributeListForImplementation, mAttribute_mTransientListForImplementation, mAttribute_mOutletDeclarationList, mAttribute_mActionList, mAttribute_mObservablePropertyMap, mAttribute_mFileInclusionSet, mAttribute_mControllerMap, mAttribute_mArrayMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_nibClassMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mAttributeListForImplementation" ":" ;
  mAttribute_mAttributeListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientListForImplementation" ":" ;
  mAttribute_mTransientListForImplementation.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mOutletDeclarationList" ":" ;
  mAttribute_mOutletDeclarationList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionList" ":" ;
  mAttribute_mActionList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservablePropertyMap" ":" ;
  mAttribute_mObservablePropertyMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mFileInclusionSet" ":" ;
  mAttribute_mFileInclusionSet.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerMap" ":" ;
  mAttribute_mControllerMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mArrayMap" ":" ;
  mAttribute_mArrayMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_nibClassMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_nibClassMap * operand = (cMapElement_nibClassMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (operand->mAttribute_mAttributeListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTransientListForImplementation.objectCompare (operand->mAttribute_mTransientListForImplementation) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletDeclarationList.objectCompare (operand->mAttribute_mOutletDeclarationList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionList.objectCompare (operand->mAttribute_mActionList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservablePropertyMap.objectCompare (operand->mAttribute_mObservablePropertyMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mFileInclusionSet.objectCompare (operand->mAttribute_mFileInclusionSet) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerMap.objectCompare (operand->mAttribute_mControllerMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mArrayMap.objectCompare (operand->mAttribute_mArrayMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap::GALGAS_nibClassMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap::GALGAS_nibClassMap (const GALGAS_nibClassMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap & GALGAS_nibClassMap::operator = (const GALGAS_nibClassMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_nibClassMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::constructor_mapWithMapToOverride (const GALGAS_nibClassMap & inMapToOverride
                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_nibClassMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::reader_overriddenMap (C_Compiler * inCompiler
                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_nibClassMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_insertKey (GALGAS_lstring inKey,
                                             GALGAS_attributeListForImplementation inArgument0,
                                             GALGAS_transientListForImplementation inArgument1,
                                             GALGAS_outletGenerationList inArgument2,
                                             GALGAS_lstringlist inArgument3,
                                             GALGAS_observablePropertyMap inArgument4,
                                             GALGAS_fileInclusionSet inArgument5,
                                             GALGAS_controllerMap inArgument6,
                                             GALGAS_preferenceArrayMap inArgument7,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) {
  cMapElement_nibClassMap * p = NULL ;
  macroMyNew (p, cMapElement_nibClassMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5, inArgument6, inArgument7 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' nib class is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_nibClassMap_searchKey = "the '%K' nib class is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::method_searchKey (GALGAS_lstring inKey,
                                           GALGAS_attributeListForImplementation & outArgument0,
                                           GALGAS_transientListForImplementation & outArgument1,
                                           GALGAS_outletGenerationList & outArgument2,
                                           GALGAS_lstringlist & outArgument3,
                                           GALGAS_observablePropertyMap & outArgument4,
                                           GALGAS_fileInclusionSet & outArgument5,
                                           GALGAS_controllerMap & outArgument6,
                                           GALGAS_preferenceArrayMap & outArgument7,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) performSearch (inKey,
                                                                                         inCompiler,
                                                                                         kSearchErrorMessage_nibClassMap_searchKey
                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
    outArgument6.drop () ;
    outArgument7.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    outArgument0 = p->mAttribute_mAttributeListForImplementation ;
    outArgument1 = p->mAttribute_mTransientListForImplementation ;
    outArgument2 = p->mAttribute_mOutletDeclarationList ;
    outArgument3 = p->mAttribute_mActionList ;
    outArgument4 = p->mAttribute_mObservablePropertyMap ;
    outArgument5 = p->mAttribute_mFileInclusionSet ;
    outArgument6 = p->mAttribute_mControllerMap ;
    outArgument7 = p->mAttribute_mArrayMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_nibClassMap::reader_mAttributeListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_attributeListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mAttributeListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_nibClassMap::reader_mTransientListForImplementationForKey (const GALGAS_string & inKey,
                                                                                                        C_Compiler * inCompiler
                                                                                                        COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_transientListForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mTransientListForImplementation ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_nibClassMap::reader_mOutletDeclarationListForKey (const GALGAS_string & inKey,
                                                                                     C_Compiler * inCompiler
                                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_outletGenerationList result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mOutletDeclarationList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_nibClassMap::reader_mActionListForKey (const GALGAS_string & inKey,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_lstringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mActionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_nibClassMap::reader_mObservablePropertyMapForKey (const GALGAS_string & inKey,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mObservablePropertyMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_nibClassMap::reader_mFileInclusionSetForKey (const GALGAS_string & inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_fileInclusionSet result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mFileInclusionSet ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_nibClassMap::reader_mControllerMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_controllerMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mControllerMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_nibClassMap::reader_mArrayMapForKey (const GALGAS_string & inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) attributes ;
  GALGAS_preferenceArrayMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_nibClassMap) ;
    result = p->mAttribute_mArrayMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMAttributeListForImplementationForKey (GALGAS_attributeListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mAttributeListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMTransientListForImplementationForKey (GALGAS_transientListForImplementation inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mTransientListForImplementation = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMOutletDeclarationListForKey (GALGAS_outletGenerationList inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mOutletDeclarationList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMActionListForKey (GALGAS_lstringlist inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mActionList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMObservablePropertyMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mObservablePropertyMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMFileInclusionSetForKey (GALGAS_fileInclusionSet inAttributeValue,
                                                              GALGAS_string inKey,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mFileInclusionSet = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMControllerMapForKey (GALGAS_controllerMap inAttributeValue,
                                                           GALGAS_string inKey,
                                                           C_Compiler * inCompiler
                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mControllerMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap::modifier_setMArrayMapForKey (GALGAS_preferenceArrayMap inAttributeValue,
                                                      GALGAS_string inKey,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * p = (cMapElement_nibClassMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_nibClassMap) ;
    p->mAttribute_mArrayMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_nibClassMap * GALGAS_nibClassMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                        const GALGAS_string & inKey
                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_nibClassMap * result = (cMapElement_nibClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nibClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_nibClassMap * GALGAS_nibClassMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                           const GALGAS_lstring & inKey
                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_nibClassMap_searchKey COMMA_THERE) ;
  cMapElement_nibClassMap * result = (cMapElement_nibClassMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_nibClassMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_nibClassMap::cEnumerator_nibClassMap (const GALGAS_nibClassMap & inEnumeratedObject,
                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element cEnumerator_nibClassMap::current (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return GALGAS_nibClassMap_2E_element (p->mAttribute_lkey, p->mAttribute_mAttributeListForImplementation, p->mAttribute_mTransientListForImplementation, p->mAttribute_mOutletDeclarationList, p->mAttribute_mActionList, p->mAttribute_mObservablePropertyMap, p->mAttribute_mFileInclusionSet, p->mAttribute_mControllerMap, p->mAttribute_mArrayMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_nibClassMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation cEnumerator_nibClassMap::current_mAttributeListForImplementation (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation cEnumerator_nibClassMap::current_mTransientListForImplementation (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList cEnumerator_nibClassMap::current_mOutletDeclarationList (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist cEnumerator_nibClassMap::current_mActionList (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_nibClassMap::current_mObservablePropertyMap (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet cEnumerator_nibClassMap::current_mFileInclusionSet (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap cEnumerator_nibClassMap::current_mControllerMap (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap cEnumerator_nibClassMap::current_mArrayMap (LOCATION_ARGS) const {
  const cMapElement_nibClassMap * p = (const cMapElement_nibClassMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_nibClassMap) ;
  return p->mAttribute_mArrayMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                             @nibClassMap type                             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nibClassMap ("nibClassMap",
                                    NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nibClassMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nibClassMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nibClassMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nibClassMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap GALGAS_nibClassMap::extractObject (const GALGAS_object & inObject,
                                                      C_Compiler * inCompiler
                                                      COMMA_LOCATION_ARGS) {
  GALGAS_nibClassMap result ;
  const GALGAS_nibClassMap * p = (const GALGAS_nibClassMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nibClassMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nibClassMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_observablePropertyMap::cMapElement_observablePropertyMap (const GALGAS_lstring & inKey,
                                                                      const GALGAS_easyBindingType & in_mType,
                                                                      const GALGAS_bool & in_mIsTransient,
                                                                      const GALGAS_string & in_mPropertySignature
                                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mType (in_mType),
mAttribute_mIsTransient (in_mIsTransient),
mAttribute_mPropertySignature (in_mPropertySignature) {
}

//---------------------------------------------------------------------------*

bool cMapElement_observablePropertyMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mIsTransient.isValid () && mAttribute_mPropertySignature.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_observablePropertyMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_observablePropertyMap (mAttribute_lkey, mAttribute_mType, mAttribute_mIsTransient, mAttribute_mPropertySignature COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_observablePropertyMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mType" ":" ;
  mAttribute_mType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsTransient" ":" ;
  mAttribute_mIsTransient.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mPropertySignature" ":" ;
  mAttribute_mPropertySignature.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_observablePropertyMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_observablePropertyMap * operand = (cMapElement_observablePropertyMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mType.objectCompare (operand->mAttribute_mType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsTransient.objectCompare (operand->mAttribute_mIsTransient) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPropertySignature.objectCompare (operand->mAttribute_mPropertySignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap::GALGAS_observablePropertyMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap::GALGAS_observablePropertyMap (const GALGAS_observablePropertyMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap & GALGAS_observablePropertyMap::operator = (const GALGAS_observablePropertyMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_observablePropertyMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::constructor_mapWithMapToOverride (const GALGAS_observablePropertyMap & inMapToOverride
                                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_observablePropertyMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_insertKey (GALGAS_lstring inKey,
                                                       GALGAS_easyBindingType inArgument0,
                                                       GALGAS_bool inArgument1,
                                                       GALGAS_string inArgument2,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
  cMapElement_observablePropertyMap * p = NULL ;
  macroMyNew (p, cMapElement_observablePropertyMap (inKey, inArgument0, inArgument1, inArgument2 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' attribute is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_observablePropertyMap_searchKey = "the '%K' attribute is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::method_searchKey (GALGAS_lstring inKey,
                                                     GALGAS_easyBindingType & outArgument0,
                                                     GALGAS_bool & outArgument1,
                                                     GALGAS_string & outArgument2,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) performSearch (inKey,
                                                                                                             inCompiler,
                                                                                                             kSearchErrorMessage_observablePropertyMap_searchKey
                                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
    outArgument0 = p->mAttribute_mType ;
    outArgument1 = p->mAttribute_mIsTransient ;
    outArgument2 = p->mAttribute_mPropertySignature ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_observablePropertyMap::reader_mTypeForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_observablePropertyMap::reader_mIsTransientForKey (const GALGAS_string & inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mIsTransient ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observablePropertyMap::reader_mPropertySignatureForKey (const GALGAS_string & inKey,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
    result = p->mAttribute_mPropertySignature ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMTypeForKey (GALGAS_easyBindingType inAttributeValue,
                                                            GALGAS_string inKey,
                                                            C_Compiler * inCompiler
                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mType = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMIsTransientForKey (GALGAS_bool inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mIsTransient = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap::modifier_setMPropertySignatureForKey (GALGAS_string inAttributeValue,
                                                                         GALGAS_string inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * p = (cMapElement_observablePropertyMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observablePropertyMap) ;
    p->mAttribute_mPropertySignature = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_observablePropertyMap * GALGAS_observablePropertyMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                            const GALGAS_string & inKey
                                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observablePropertyMap * result = (cMapElement_observablePropertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_observablePropertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_observablePropertyMap * GALGAS_observablePropertyMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                               const GALGAS_lstring & inKey
                                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_observablePropertyMap_searchKey COMMA_THERE) ;
  cMapElement_observablePropertyMap * result = (cMapElement_observablePropertyMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_observablePropertyMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_observablePropertyMap::cEnumerator_observablePropertyMap (const GALGAS_observablePropertyMap & inEnumeratedObject,
                                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2E_element cEnumerator_observablePropertyMap::current (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
  return GALGAS_observablePropertyMap_2E_element (p->mAttribute_lkey, p->mAttribute_mType, p->mAttribute_mIsTransient, p->mAttribute_mPropertySignature) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_observablePropertyMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_observablePropertyMap::current_mType (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
  return p->mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_observablePropertyMap::current_mIsTransient (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
  return p->mAttribute_mIsTransient ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_observablePropertyMap::current_mPropertySignature (LOCATION_ARGS) const {
  const cMapElement_observablePropertyMap * p = (const cMapElement_observablePropertyMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observablePropertyMap) ;
  return p->mAttribute_mPropertySignature ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @observablePropertyMap type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyMap ("observablePropertyMap",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observablePropertyMap::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMap result ;
  const GALGAS_observablePropertyMap * p = (const GALGAS_observablePropertyMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_observableObjectMap::cMapElement_observableObjectMap (const GALGAS_lstring & inKey,
                                                                  const GALGAS_string & in_mObservableObjectOCName,
                                                                  const GALGAS_string & in_mObservableObjectTypeOCName,
                                                                  const GALGAS_string & in_mIncludeFileName,
                                                                  const GALGAS_observablePropertyMap & in_mObservableProperties
                                                                  COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mObservableObjectOCName (in_mObservableObjectOCName),
mAttribute_mObservableObjectTypeOCName (in_mObservableObjectTypeOCName),
mAttribute_mIncludeFileName (in_mIncludeFileName),
mAttribute_mObservableProperties (in_mObservableProperties) {
}

//---------------------------------------------------------------------------*

bool cMapElement_observableObjectMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mObservableObjectOCName.isValid () && mAttribute_mObservableObjectTypeOCName.isValid () && mAttribute_mIncludeFileName.isValid () && mAttribute_mObservableProperties.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_observableObjectMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_observableObjectMap (mAttribute_lkey, mAttribute_mObservableObjectOCName, mAttribute_mObservableObjectTypeOCName, mAttribute_mIncludeFileName, mAttribute_mObservableProperties COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_observableObjectMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableObjectOCName" ":" ;
  mAttribute_mObservableObjectOCName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableObjectTypeOCName" ":" ;
  mAttribute_mObservableObjectTypeOCName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIncludeFileName" ":" ;
  mAttribute_mIncludeFileName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableProperties" ":" ;
  mAttribute_mObservableProperties.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_observableObjectMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_observableObjectMap * operand = (cMapElement_observableObjectMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mObservableObjectOCName.objectCompare (operand->mAttribute_mObservableObjectOCName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableObjectTypeOCName.objectCompare (operand->mAttribute_mObservableObjectTypeOCName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIncludeFileName.objectCompare (operand->mAttribute_mIncludeFileName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableProperties.objectCompare (operand->mAttribute_mObservableProperties) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap::GALGAS_observableObjectMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap::GALGAS_observableObjectMap (const GALGAS_observableObjectMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap & GALGAS_observableObjectMap::operator = (const GALGAS_observableObjectMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_observableObjectMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::constructor_mapWithMapToOverride (const GALGAS_observableObjectMap & inMapToOverride
                                                                                         COMMA_LOCATION_ARGS) {
  GALGAS_observableObjectMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                             COMMA_LOCATION_ARGS) const {
  GALGAS_observableObjectMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_insertKey (GALGAS_lstring inKey,
                                                     GALGAS_string inArgument0,
                                                     GALGAS_string inArgument1,
                                                     GALGAS_string inArgument2,
                                                     GALGAS_observablePropertyMap inArgument3,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  cMapElement_observableObjectMap * p = NULL ;
  macroMyNew (p, cMapElement_observableObjectMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' observable object is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_observableObjectMap_searchKey = "the '%K' observable object is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap::method_searchKey (GALGAS_lstring inKey,
                                                   GALGAS_string & outArgument0,
                                                   GALGAS_string & outArgument1,
                                                   GALGAS_string & outArgument2,
                                                   GALGAS_observablePropertyMap & outArgument3,
                                                   C_Compiler * inCompiler
                                                   COMMA_LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) performSearch (inKey,
                                                                                                         inCompiler,
                                                                                                         kSearchErrorMessage_observableObjectMap_searchKey
                                                                                                         COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
    outArgument0 = p->mAttribute_mObservableObjectOCName ;
    outArgument1 = p->mAttribute_mObservableObjectTypeOCName ;
    outArgument2 = p->mAttribute_mIncludeFileName ;
    outArgument3 = p->mAttribute_mObservableProperties ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap::reader_mObservableObjectOCNameForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
    result = p->mAttribute_mObservableObjectOCName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap::reader_mObservableObjectTypeOCNameForKey (const GALGAS_string & inKey,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
    result = p->mAttribute_mObservableObjectTypeOCName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap::reader_mIncludeFileNameForKey (const GALGAS_string & inKey,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
    result = p->mAttribute_mIncludeFileName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observableObjectMap::reader_mObservablePropertiesForKey (const GALGAS_string & inKey,
                                                                                             C_Compiler * inCompiler
                                                                                             COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
    result = p->mAttribute_mObservableProperties ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMObservableObjectOCNameForKey (GALGAS_string inAttributeValue,
                                                                            GALGAS_string inKey,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mObservableObjectOCName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMObservableObjectTypeOCNameForKey (GALGAS_string inAttributeValue,
                                                                                GALGAS_string inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mObservableObjectTypeOCName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMIncludeFileNameForKey (GALGAS_string inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mIncludeFileName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap::modifier_setMObservablePropertiesForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                          GALGAS_string inKey,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * p = (cMapElement_observableObjectMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_observableObjectMap) ;
    p->mAttribute_mObservableProperties = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_observableObjectMap * GALGAS_observableObjectMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                                        const GALGAS_string & inKey
                                                                                                        COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_observableObjectMap * result = (cMapElement_observableObjectMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_observableObjectMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_observableObjectMap * GALGAS_observableObjectMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                                           const GALGAS_lstring & inKey
                                                                                                           COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_observableObjectMap_searchKey COMMA_THERE) ;
  cMapElement_observableObjectMap * result = (cMapElement_observableObjectMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_observableObjectMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_observableObjectMap::cEnumerator_observableObjectMap (const GALGAS_observableObjectMap & inEnumeratedObject,
                                                                  const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element cEnumerator_observableObjectMap::current (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
  return GALGAS_observableObjectMap_2E_element (p->mAttribute_lkey, p->mAttribute_mObservableObjectOCName, p->mAttribute_mObservableObjectTypeOCName, p->mAttribute_mIncludeFileName, p->mAttribute_mObservableProperties) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_observableObjectMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_observableObjectMap::current_mObservableObjectOCName (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
  return p->mAttribute_mObservableObjectOCName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_observableObjectMap::current_mObservableObjectTypeOCName (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
  return p->mAttribute_mObservableObjectTypeOCName ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_observableObjectMap::current_mIncludeFileName (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
  return p->mAttribute_mIncludeFileName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_observableObjectMap::current_mObservableProperties (LOCATION_ARGS) const {
  const cMapElement_observableObjectMap * p = (const cMapElement_observableObjectMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_observableObjectMap) ;
  return p->mAttribute_mObservableProperties ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @observableObjectMap type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observableObjectMap ("observableObjectMap",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observableObjectMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observableObjectMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observableObjectMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observableObjectMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap GALGAS_observableObjectMap::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_observableObjectMap result ;
  const GALGAS_observableObjectMap * p = (const GALGAS_observableObjectMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observableObjectMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observableObjectMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_actionMap::cMapElement_actionMap (const GALGAS_lstring & inKey
                                              COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE) {
}

//---------------------------------------------------------------------------*

bool cMapElement_actionMap::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_actionMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_actionMap (mAttribute_lkey COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_actionMap::description (C_String & /* ioString */, const PMSInt32 /* inIndentation */) const {
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_actionMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_actionMap * operand = (cMapElement_actionMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap::GALGAS_actionMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap::GALGAS_actionMap (const GALGAS_actionMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap & GALGAS_actionMap::operator = (const GALGAS_actionMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_actionMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::constructor_mapWithMapToOverride (const GALGAS_actionMap & inMapToOverride
                                                                     COMMA_LOCATION_ARGS) {
  GALGAS_actionMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::reader_overriddenMap (C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  GALGAS_actionMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_actionMap::modifier_insertKey (GALGAS_lstring inKey,
                                           C_Compiler * inCompiler
                                           COMMA_LOCATION_ARGS) {
  cMapElement_actionMap * p = NULL ;
  macroMyNew (p, cMapElement_actionMap (inKey COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "there is already a '%K' action" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_actionMap_searchKey = "the '%K' action is not defined" ;

//---------------------------------------------------------------------------*

void GALGAS_actionMap::method_searchKey (GALGAS_lstring inKey,
                                         C_Compiler * inCompiler
                                         COMMA_LOCATION_ARGS) const {
  const cMapElement_actionMap * p = (const cMapElement_actionMap *) performSearch (inKey,
                                                                                     inCompiler,
                                                                                     kSearchErrorMessage_actionMap_searchKey
                                                                                     COMMA_THERE) ;
  if (NULL == p) {
  }else{
    macroValidSharedObject (p, const cMapElement_actionMap) ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_actionMap * GALGAS_actionMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                    const GALGAS_string & inKey
                                                                                    COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_actionMap * result = (cMapElement_actionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_actionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_actionMap * GALGAS_actionMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                       const GALGAS_lstring & inKey
                                                                                       COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_actionMap_searchKey COMMA_THERE) ;
  cMapElement_actionMap * result = (cMapElement_actionMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_actionMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_actionMap::cEnumerator_actionMap (const GALGAS_actionMap & inEnumeratedObject,
                                              const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element cEnumerator_actionMap::current (LOCATION_ARGS) const {
  const cMapElement_actionMap * p = (const cMapElement_actionMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_actionMap) ;
  return GALGAS_actionMap_2E_element (p->mAttribute_lkey) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_actionMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                              @actionMap type                              *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionMap ("actionMap",
                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_actionMap::extractObject (const GALGAS_object & inObject,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_actionMap result ;
  const GALGAS_actionMap * p = (const GALGAS_actionMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("actionMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerMap::cMapElement_controllerMap (const GALGAS_lstring & inKey,
                                                      const GALGAS_string & in_mControllerClassName,
                                                      const GALGAS_lstring & in_mControlledClassOrEntityName,
                                                      const GALGAS_bool & in_mIsEntity,
                                                      const GALGAS_outletBindingListForGeneration & in_mControllerBindingList,
                                                      const GALGAS_actionMap & in_mActionMap,
                                                      const GALGAS_observablePropertyMap & in_mObservableAttributeMap
                                                      COMMA_LOCATION_ARGS) :
cMapElement (inKey COMMA_THERE),
mAttribute_mControllerClassName (in_mControllerClassName),
mAttribute_mControlledClassOrEntityName (in_mControlledClassOrEntityName),
mAttribute_mIsEntity (in_mIsEntity),
mAttribute_mControllerBindingList (in_mControllerBindingList),
mAttribute_mActionMap (in_mActionMap),
mAttribute_mObservableAttributeMap (in_mObservableAttributeMap) {
}

//---------------------------------------------------------------------------*

bool cMapElement_controllerMap::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerClassName.isValid () && mAttribute_mControlledClassOrEntityName.isValid () && mAttribute_mIsEntity.isValid () && mAttribute_mControllerBindingList.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservableAttributeMap.isValid () ;
}

//---------------------------------------------------------------------------*

cMapElement * cMapElement_controllerMap::copy (void) {
  cMapElement * result = NULL ;
  macroMyNew (result, cMapElement_controllerMap (mAttribute_lkey, mAttribute_mControllerClassName, mAttribute_mControlledClassOrEntityName, mAttribute_mIsEntity, mAttribute_mControllerBindingList, mAttribute_mActionMap, mAttribute_mObservableAttributeMap COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cMapElement_controllerMap::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerClassName" ":" ;
  mAttribute_mControllerClassName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControlledClassOrEntityName" ":" ;
  mAttribute_mControlledClassOrEntityName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mIsEntity" ":" ;
  mAttribute_mIsEntity.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mControllerBindingList" ":" ;
  mAttribute_mControllerBindingList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mActionMap" ":" ;
  mAttribute_mActionMap.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mObservableAttributeMap" ":" ;
  mAttribute_mObservableAttributeMap.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cMapElement_controllerMap::compare (const cCollectionElement * inOperand) const {
  cMapElement_controllerMap * operand = (cMapElement_controllerMap *) inOperand ;
  typeComparisonResult result = mAttribute_lkey.objectCompare (operand->mAttribute_lkey) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerClassName.objectCompare (operand->mAttribute_mControllerClassName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControlledClassOrEntityName.objectCompare (operand->mAttribute_mControlledClassOrEntityName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mIsEntity.objectCompare (operand->mAttribute_mIsEntity) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerBindingList.objectCompare (operand->mAttribute_mControllerBindingList) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionMap.objectCompare (operand->mAttribute_mActionMap) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeMap.objectCompare (operand->mAttribute_mObservableAttributeMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap::GALGAS_controllerMap (void) :
AC_GALGAS_map () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap::GALGAS_controllerMap (const GALGAS_controllerMap & inSource) :
AC_GALGAS_map (inSource) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap & GALGAS_controllerMap::operator = (const GALGAS_controllerMap & inSource) {
  * ((AC_GALGAS_map *) this) = inSource ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::constructor_emptyMap (LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  result.makeNewEmptyMap (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::constructor_mapWithMapToOverride (const GALGAS_controllerMap & inMapToOverride
                                                                             COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  result.makeNewEmptyMapWithMapToOverride (inMapToOverride COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::reader_overriddenMap (C_Compiler * inCompiler
                                                                 COMMA_LOCATION_ARGS) const {
  GALGAS_controllerMap result ;
  getOverridenMap (result, inCompiler COMMA_THERE) ;
  return result ;
}
//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_insertKey (GALGAS_lstring inKey,
                                               GALGAS_string inArgument0,
                                               GALGAS_lstring inArgument1,
                                               GALGAS_bool inArgument2,
                                               GALGAS_outletBindingListForGeneration inArgument3,
                                               GALGAS_actionMap inArgument4,
                                               GALGAS_observablePropertyMap inArgument5,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) {
  cMapElement_controllerMap * p = NULL ;
  macroMyNew (p, cMapElement_controllerMap (inKey, inArgument0, inArgument1, inArgument2, inArgument3, inArgument4, inArgument5 COMMA_HERE)) ;
  capCollectionElement attributes ;
  attributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
  const char * kInsertErrorMessage = "the '%K' controller is already declared" ;
  const char * kShadowErrorMessage = "" ;
  performInsert (attributes, inCompiler, kInsertErrorMessage, kShadowErrorMessage COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

const char * kSearchErrorMessage_controllerMap_searchKey = "the '%K' controller is not declared" ;

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::method_searchKey (GALGAS_lstring inKey,
                                             GALGAS_string & outArgument0,
                                             GALGAS_lstring & outArgument1,
                                             GALGAS_bool & outArgument2,
                                             GALGAS_outletBindingListForGeneration & outArgument3,
                                             GALGAS_actionMap & outArgument4,
                                             GALGAS_observablePropertyMap & outArgument5,
                                             C_Compiler * inCompiler
                                             COMMA_LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) performSearch (inKey,
                                                                                             inCompiler,
                                                                                             kSearchErrorMessage_controllerMap_searchKey
                                                                                             COMMA_THERE) ;
  if (NULL == p) {
    outArgument0.drop () ;
    outArgument1.drop () ;
    outArgument2.drop () ;
    outArgument3.drop () ;
    outArgument4.drop () ;
    outArgument5.drop () ;
  }else{
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    outArgument0 = p->mAttribute_mControllerClassName ;
    outArgument1 = p->mAttribute_mControlledClassOrEntityName ;
    outArgument2 = p->mAttribute_mIsEntity ;
    outArgument3 = p->mAttribute_mControllerBindingList ;
    outArgument4 = p->mAttribute_mActionMap ;
    outArgument5 = p->mAttribute_mObservableAttributeMap ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap::reader_mControllerClassNameForKey (const GALGAS_string & inKey,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mControllerClassName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap::reader_mControlledClassOrEntityNameForKey (const GALGAS_string & inKey,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_lstring result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mControlledClassOrEntityName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerMap::reader_mIsEntityForKey (const GALGAS_string & inKey,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_bool result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mIsEntity ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_controllerMap::reader_mControllerBindingListForKey (const GALGAS_string & inKey,
                                                                                                 C_Compiler * inCompiler
                                                                                                 COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_outletBindingListForGeneration result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mControllerBindingList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerMap::reader_mActionMapForKey (const GALGAS_string & inKey,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_actionMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mActionMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerMap::reader_mObservableAttributeMapForKey (const GALGAS_string & inKey,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_LOCATION_ARGS) const {
  const cCollectionElement * attributes = searchForReadingAttribute (inKey, inCompiler COMMA_THERE) ;
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) attributes ;
  GALGAS_observablePropertyMap result ;
  if (NULL != p) {
    macroValidSharedObject (p, const cMapElement_controllerMap) ;
    result = p->mAttribute_mObservableAttributeMap ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControllerClassNameForKey (GALGAS_string inAttributeValue,
                                                                   GALGAS_string inKey,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControllerClassName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControlledClassOrEntityNameForKey (GALGAS_lstring inAttributeValue,
                                                                           GALGAS_string inKey,
                                                                           C_Compiler * inCompiler
                                                                           COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControlledClassOrEntityName = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMIsEntityForKey (GALGAS_bool inAttributeValue,
                                                        GALGAS_string inKey,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mIsEntity = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMControllerBindingListForKey (GALGAS_outletBindingListForGeneration inAttributeValue,
                                                                     GALGAS_string inKey,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mControllerBindingList = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMActionMapForKey (GALGAS_actionMap inAttributeValue,
                                                         GALGAS_string inKey,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mActionMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap::modifier_setMObservableAttributeMapForKey (GALGAS_observablePropertyMap inAttributeValue,
                                                                      GALGAS_string inKey,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  cCollectionElement * attributes = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * p = (cMapElement_controllerMap *) attributes ;
  if (NULL != p) {
    macroValidSharedObject (p, cMapElement_controllerMap) ;
    p->mAttribute_mObservableAttributeMap = inAttributeValue ;
  }
}

//---------------------------------------------------------------------------*

cMapElement_controllerMap * GALGAS_controllerMap::readWriteAccessForWithInstruction_hasKey (C_Compiler * inCompiler,
                                                                                            const GALGAS_string & inKey
                                                                                            COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler COMMA_THERE) ;
  cMapElement_controllerMap * result = (cMapElement_controllerMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cMapElement_controllerMap * GALGAS_controllerMap::readWriteAccessForWithInstruction_searchKey (C_Compiler * inCompiler,
                                                                                               const GALGAS_lstring & inKey
                                                                                               COMMA_LOCATION_ARGS) {
  cMapElement * p = searchForReadWriteAttribute (inKey, inCompiler, kSearchErrorMessage_controllerMap_searchKey COMMA_THERE) ;
  cMapElement_controllerMap * result = (cMapElement_controllerMap *) p ;
  macroNullOrValidSharedObject (result, cMapElement_controllerMap) ;
  return result ;
}

//---------------------------------------------------------------------------*

cEnumerator_controllerMap::cEnumerator_controllerMap (const GALGAS_controllerMap & inEnumeratedObject,
                                                      const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element cEnumerator_controllerMap::current (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return GALGAS_controllerMap_2E_element (p->mAttribute_lkey, p->mAttribute_mControllerClassName, p->mAttribute_mControlledClassOrEntityName, p->mAttribute_mIsEntity, p->mAttribute_mControllerBindingList, p->mAttribute_mActionMap, p->mAttribute_mObservableAttributeMap) ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerMap::current_lkey (LOCATION_ARGS) const {
  const cMapElement * p = (const cMapElement *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement) ;
  return p->mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_controllerMap::current_mControllerClassName (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mControllerClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring cEnumerator_controllerMap::current_mControlledClassOrEntityName (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mControlledClassOrEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cEnumerator_controllerMap::current_mIsEntity (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mIsEntity ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration cEnumerator_controllerMap::current_mControllerBindingList (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mControllerBindingList ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap cEnumerator_controllerMap::current_mActionMap (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap cEnumerator_controllerMap::current_mObservableAttributeMap (LOCATION_ARGS) const {
  const cMapElement_controllerMap * p = (const cMapElement_controllerMap *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cMapElement_controllerMap) ;
  return p->mAttribute_mObservableAttributeMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                            @controllerMap type                            *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerMap ("controllerMap",
                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerMap::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerMap ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerMap::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerMap (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_controllerMap::extractObject (const GALGAS_object & inObject,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap result ;
  const GALGAS_controllerMap * p = (const GALGAS_controllerMap *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerMap *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerMap", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Class for element of '@directDependancyList' list             *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_directDependancyList : public cCollectionElement {
  public : GALGAS_directDependancyList_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_directDependancyList (const GALGAS_abstractTransientDependencyForImplementation & in_mDependency
                                                    COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_directDependancyList::cCollectionElement_directDependancyList (const GALGAS_abstractTransientDependencyForImplementation & in_mDependency
                                                                                  COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mDependency) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_directDependancyList::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_directDependancyList::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_directDependancyList (mObject.mAttribute_mDependency COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_directDependancyList::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDependency" ":" ;
  mObject.mAttribute_mDependency.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_directDependancyList::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_directDependancyList * operand = (cCollectionElement_directDependancyList *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_directDependancyList) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList::GALGAS_directDependancyList (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList::GALGAS_directDependancyList (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::constructor_listWithValue (const GALGAS_abstractTransientDependencyForImplementation & inOperand0
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  if (inOperand0.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_directDependancyList::makeAttributesFromObjects (attributes, inOperand0 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                             const GALGAS_abstractTransientDependencyForImplementation & in_mDependency
                                                             COMMA_LOCATION_ARGS) {
  cCollectionElement_directDependancyList * p = NULL ;
  macroMyNew (p, cCollectionElement_directDependancyList (in_mDependency COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::addAssign_operation (const GALGAS_abstractTransientDependencyForImplementation & inOperand0
                                                       COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_directDependancyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_prependValue (GALGAS_abstractTransientDependencyForImplementation inOperand0
                                                         COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_directDependancyList (inOperand0 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_popFirst (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                     C_Compiler * inCompiler
                                                     COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::modifier_popLast (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                    C_Compiler * inCompiler
                                                    COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::method_first (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                                C_Compiler * inCompiler
                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::method_last (GALGAS_abstractTransientDependencyForImplementation & outOperand0,
                                               C_Compiler * inCompiler
                                               COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    outOperand0 = p->mObject.mAttribute_mDependency ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::operator_concat (const GALGAS_directDependancyList & inOperand
                                                                          COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_directDependancyList result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_directDependancyList result = GALGAS_directDependancyList::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) const {
  GALGAS_directDependancyList result = GALGAS_directDependancyList::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList::dotAssign_operation (const GALGAS_directDependancyList inOperand
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation GALGAS_directDependancyList::reader_mDependencyAtIndex (const GALGAS_uint & inIndex,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_directDependancyList * p = (cCollectionElement_directDependancyList *) attributes.ptr () ;
  GALGAS_abstractTransientDependencyForImplementation result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_directDependancyList) ;
    result = p->mObject.mAttribute_mDependency ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_directDependancyList::cEnumerator_directDependancyList (const GALGAS_directDependancyList & inEnumeratedObject,
                                                                    const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList_2E_element cEnumerator_directDependancyList::current (LOCATION_ARGS) const {
  const cCollectionElement_directDependancyList * p = (const cCollectionElement_directDependancyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_directDependancyList) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation cEnumerator_directDependancyList::current_mDependency (LOCATION_ARGS) const {
  const cCollectionElement_directDependancyList * p = (const cCollectionElement_directDependancyList *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_directDependancyList) ;
  return p->mObject.mAttribute_mDependency ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                        @directDependancyList type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_directDependancyList ("directDependancyList",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_directDependancyList::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_directDependancyList ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_directDependancyList::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_directDependancyList (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_directDependancyList::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList result ;
  const GALGAS_directDependancyList * p = (const GALGAS_directDependancyList *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_directDependancyList *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("directDependancyList", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Class for element of '@transientListForImplementation' list        *
//                                                                           *
//---------------------------------------------------------------------------*

class cCollectionElement_transientListForImplementation : public cCollectionElement {
  public : GALGAS_transientListForImplementation_2E_element mObject ;

//--- Constructor
  public : cCollectionElement_transientListForImplementation (const GALGAS_easyBindingType & in_mTransientType,
                                                              const GALGAS_string & in_mTransientName,
                                                              const GALGAS_directDependancyList & in_mDependencyList,
                                                              const GALGAS_stringlist & in_mRootSignDependencyList
                                                              COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
  public : virtual typeComparisonResult compare (const cCollectionElement * inOperand) const ;

//--- Virtual method that checks that all attributes are valid
  public : virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public : virtual cCollectionElement * copy (void) ;

//--- Description
 public : virtual void description (C_String & ioString, const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

cCollectionElement_transientListForImplementation::cCollectionElement_transientListForImplementation (const GALGAS_easyBindingType & in_mTransientType,
                                                                                                      const GALGAS_string & in_mTransientName,
                                                                                                      const GALGAS_directDependancyList & in_mDependencyList,
                                                                                                      const GALGAS_stringlist & in_mRootSignDependencyList
                                                                                                      COMMA_LOCATION_ARGS) :
cCollectionElement (THERE),
mObject (in_mTransientType, in_mTransientName, in_mDependencyList, in_mRootSignDependencyList) {
}

//---------------------------------------------------------------------------*

bool cCollectionElement_transientListForImplementation::isValid (void) const {
  return mObject.isValid () ;
}

//---------------------------------------------------------------------------*

cCollectionElement * cCollectionElement_transientListForImplementation::copy (void) {
  cCollectionElement * result = NULL ;
  macroMyNew (result, cCollectionElement_transientListForImplementation (mObject.mAttribute_mTransientType, mObject.mAttribute_mTransientName, mObject.mAttribute_mDependencyList, mObject.mAttribute_mRootSignDependencyList COMMA_HERE)) ;
  return result ;
}

//---------------------------------------------------------------------------*

void cCollectionElement_transientListForImplementation::description (C_String & ioString, const PMSInt32 inIndentation) const {
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientType" ":" ;
  mObject.mAttribute_mTransientType.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mTransientName" ":" ;
  mObject.mAttribute_mTransientName.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mDependencyList" ":" ;
  mObject.mAttribute_mDependencyList.description (ioString, inIndentation) ;
  ioString << "\n" ;
  ioString.writeStringMultiple ("| ", inIndentation) ;
  ioString << "mRootSignDependencyList" ":" ;
  mObject.mAttribute_mRootSignDependencyList.description (ioString, inIndentation) ;
}

//---------------------------------------------------------------------------*

typeComparisonResult cCollectionElement_transientListForImplementation::compare (const cCollectionElement * inOperand) const {
  cCollectionElement_transientListForImplementation * operand = (cCollectionElement_transientListForImplementation *) inOperand ;
  macroValidSharedObject (operand, cCollectionElement_transientListForImplementation) ;
  return mObject.objectCompare (operand->mObject) ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation::GALGAS_transientListForImplementation (void) :
AC_GALGAS_list () {
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation::GALGAS_transientListForImplementation (cSharedList * inSharedListPtr) :
AC_GALGAS_list (inSharedListPtr) {
  if (NULL == inSharedListPtr) {
    createNewEmptyList (HERE) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::constructor_emptyList (LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  result.createNewEmptyList (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::constructor_listWithValue (const GALGAS_easyBindingType & inOperand0,
                                                                                                        const GALGAS_string & inOperand1,
                                                                                                        const GALGAS_directDependancyList & inOperand2,
                                                                                                        const GALGAS_stringlist & inOperand3
                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result.createNewEmptyList (THERE) ;
    capCollectionElement attributes ;
    GALGAS_transientListForImplementation::makeAttributesFromObjects (attributes, inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE) ;
    result.addObject (attributes) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::makeAttributesFromObjects (capCollectionElement & outAttributes,
                                                                       const GALGAS_easyBindingType & in_mTransientType,
                                                                       const GALGAS_string & in_mTransientName,
                                                                       const GALGAS_directDependancyList & in_mDependencyList,
                                                                       const GALGAS_stringlist & in_mRootSignDependencyList
                                                                       COMMA_LOCATION_ARGS) {
  cCollectionElement_transientListForImplementation * p = NULL ;
  macroMyNew (p, cCollectionElement_transientListForImplementation (in_mTransientType,
                                                                    in_mTransientName,
                                                                    in_mDependencyList,
                                                                    in_mRootSignDependencyList COMMA_THERE)) ;
  outAttributes.setPointer (p) ;
  macroDetachSharedObject (p) ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::addAssign_operation (const GALGAS_easyBindingType & inOperand0,
                                                                 const GALGAS_string & inOperand1,
                                                                 const GALGAS_directDependancyList & inOperand2,
                                                                 const GALGAS_stringlist & inOperand3
                                                                 COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_transientListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    addObject (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_prependValue (GALGAS_easyBindingType inOperand0,
                                                                   GALGAS_string inOperand1,
                                                                   GALGAS_directDependancyList inOperand2,
                                                                   GALGAS_stringlist inOperand3
                                                                   COMMA_LOCATION_ARGS) {
  if (isValid () && inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    cCollectionElement * p = NULL ;
    macroMyNew (p, cCollectionElement_transientListForImplementation (inOperand0, inOperand1, inOperand2, inOperand3 COMMA_THERE)) ;
    capCollectionElement attributes ;
    attributes.setPointer (p) ;
    macroDetachSharedObject (p) ;
    prependAttributeArray (attributes) ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_popFirst (GALGAS_easyBindingType & outOperand0,
                                                               GALGAS_string & outOperand1,
                                                               GALGAS_directDependancyList & outOperand2,
                                                               GALGAS_stringlist & outOperand3,
                                                               C_Compiler * inCompiler
                                                               COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeFirstObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::modifier_popLast (GALGAS_easyBindingType & outOperand0,
                                                              GALGAS_string & outOperand1,
                                                              GALGAS_directDependancyList & outOperand2,
                                                              GALGAS_stringlist & outOperand3,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  removeLastObject (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    macroUniqueSharedObject (p) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::method_first (GALGAS_easyBindingType & outOperand0,
                                                          GALGAS_string & outOperand1,
                                                          GALGAS_directDependancyList & outOperand2,
                                                          GALGAS_stringlist & outOperand3,
                                                          C_Compiler * inCompiler
                                                          COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readFirst (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::method_last (GALGAS_easyBindingType & outOperand0,
                                                         GALGAS_string & outOperand1,
                                                         GALGAS_directDependancyList & outOperand2,
                                                         GALGAS_stringlist & outOperand3,
                                                         C_Compiler * inCompiler
                                                         COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes ;
  readLast (attributes, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  if (NULL == p) {
    outOperand0.drop () ;
    outOperand1.drop () ;
    outOperand2.drop () ;
    outOperand3.drop () ;
  }else{
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    outOperand0 = p->mObject.mAttribute_mTransientType ;
    outOperand1 = p->mObject.mAttribute_mTransientName ;
    outOperand2 = p->mObject.mAttribute_mDependencyList ;
    outOperand3 = p->mObject.mAttribute_mRootSignDependencyList ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::operator_concat (const GALGAS_transientListForImplementation & inOperand
                                                                                              COMMA_UNUSED_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result ;
  if (isValid () && inOperand.isValid ()) {
    result = *this ;
    result.appendList (inOperand) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::reader_subListWithRange (const GALGAS_range & inRange,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result = GALGAS_transientListForImplementation::constructor_emptyList (THERE) ;
  subListWithRange (result, inRange, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::reader_subListFromIndex (const GALGAS_uint & inIndex,
                                                                                                      C_Compiler * inCompiler
                                                                                                      COMMA_LOCATION_ARGS) const {
  GALGAS_transientListForImplementation result = GALGAS_transientListForImplementation::constructor_emptyList (THERE) ;
  subListFromIndex (result, inIndex, inCompiler COMMA_THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation::dotAssign_operation (const GALGAS_transientListForImplementation inOperand
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  appendList (inOperand) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_transientListForImplementation::reader_mTransientTypeAtIndex (const GALGAS_uint & inIndex,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_easyBindingType result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mTransientType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientListForImplementation::reader_mTransientNameAtIndex (const GALGAS_uint & inIndex,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_string result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mTransientName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_transientListForImplementation::reader_mDependencyListAtIndex (const GALGAS_uint & inIndex,
                                                                                                  C_Compiler * inCompiler
                                                                                                  COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_directDependancyList result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mDependencyList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_transientListForImplementation::reader_mRootSignDependencyListAtIndex (const GALGAS_uint & inIndex,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) const {
  capCollectionElement attributes = readObjectAtIndex (inIndex, inCompiler COMMA_THERE) ;
  cCollectionElement_transientListForImplementation * p = (cCollectionElement_transientListForImplementation *) attributes.ptr () ;
  GALGAS_stringlist result ;
  if (NULL != p) {
    macroValidSharedObject (p, cCollectionElement_transientListForImplementation) ;
    result = p->mObject.mAttribute_mRootSignDependencyList ;
  }
  return result ;
}



//---------------------------------------------------------------------------*

cEnumerator_transientListForImplementation::cEnumerator_transientListForImplementation (const GALGAS_transientListForImplementation & inEnumeratedObject,
                                                                                        const typeEnumerationOrder inOrder) :
cGenericAbstractEnumerator () {
  inEnumeratedObject.populateEnumerationArray (mEnumerationArray, inOrder) ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2E_element cEnumerator_transientListForImplementation::current (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mObject ;
}


//---------------------------------------------------------------------------*

GALGAS_easyBindingType cEnumerator_transientListForImplementation::current_mTransientType (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mTransientType ;
}

//---------------------------------------------------------------------------*

GALGAS_string cEnumerator_transientListForImplementation::current_mTransientName (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mTransientName ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList cEnumerator_transientListForImplementation::current_mDependencyList (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mDependencyList ;
}

//---------------------------------------------------------------------------*

GALGAS_stringlist cEnumerator_transientListForImplementation::current_mRootSignDependencyList (LOCATION_ARGS) const {
  const cCollectionElement_transientListForImplementation * p = (const cCollectionElement_transientListForImplementation *) currentObjectPtr (THERE) ;
  macroValidSharedObject (p, const cCollectionElement_transientListForImplementation) ;
  return p->mObject.mAttribute_mRootSignDependencyList ;
}




//---------------------------------------------------------------------------*
//                                                                           *
//                   @transientListForImplementation type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientListForImplementation ("transientListForImplementation",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientListForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientListForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientListForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientListForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_transientListForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation result ;
  const GALGAS_transientListForImplementation * p = (const GALGAS_transientListForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientListForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientListForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     '@transientDependencyGraph' graph                     *
//                                                                           *
//---------------------------------------------------------------------------*

GALGAS_transientDependencyGraph::GALGAS_transientDependencyGraph (void) :
AC_GALGAS_graph () {
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_transientDependencyGraph::constructor_emptyGraph (LOCATION_ARGS) {
  GALGAS_transientDependencyGraph result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::modifier_addNode (GALGAS_lstring inKey,
                                                        GALGAS_string inArgument_0,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_stringlist::makeAttributesFromObjects (attributes, inArgument_0 COMMA_THERE) ;
  const char * kErrorMessage = "the '%K' transient is already declared at %L" ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}


//---------------------------------------------------------------------------*

void GALGAS_transientDependencyGraph::method_topologicalSort (GALGAS_stringlist & outSortedList,
                                                              GALGAS_lstringlist & outSortedKeyList,
                                                              GALGAS_stringlist & outUnsortedList,
                                                              GALGAS_lstringlist & outUnsortedKeyList,
                                                              C_Compiler * inCompiler
                                                              COMMA_LOCATION_ARGS) const {
  cSharedList * sortedList = NULL ;
  cSharedList * unsortedList = NULL ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_stringlist (sortedList) ;
  outUnsortedList = GALGAS_stringlist (unsortedList) ;
  GALGAS_stringlist::detachSharedList (sortedList) ;
  GALGAS_stringlist::detachSharedList (unsortedList) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                      @transientDependencyGraph type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyGraph ("transientDependencyGraph",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyGraph::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyGraph ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyGraph::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyGraph (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyGraph GALGAS_transientDependencyGraph::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyGraph result ;
  const GALGAS_transientDependencyGraph * p = (const GALGAS_transientDependencyGraph *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyGraph *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyGraph", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                     Once function 'predefinedColors'                      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_predefinedColors (C_Compiler * /* inCompiler */
                                                       COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (636)) ;
  result_outResult.addAssign_operation (GALGAS_string ("blackColor") COMMA_SOURCE_FILE_AT_LINE (637)) ;
  result_outResult.addAssign_operation (GALGAS_string ("blueColor") COMMA_SOURCE_FILE_AT_LINE (638)) ;
  result_outResult.addAssign_operation (GALGAS_string ("brownColor") COMMA_SOURCE_FILE_AT_LINE (639)) ;
  result_outResult.addAssign_operation (GALGAS_string ("clearColor") COMMA_SOURCE_FILE_AT_LINE (640)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlColor") COMMA_SOURCE_FILE_AT_LINE (641)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlDarkShadowColor") COMMA_SOURCE_FILE_AT_LINE (642)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlHighlightColor") COMMA_SOURCE_FILE_AT_LINE (643)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlLightHighlightColor") COMMA_SOURCE_FILE_AT_LINE (644)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlShadowColor") COMMA_SOURCE_FILE_AT_LINE (645)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlTextColor") COMMA_SOURCE_FILE_AT_LINE (646)) ;
  result_outResult.addAssign_operation (GALGAS_string ("cyanColor") COMMA_SOURCE_FILE_AT_LINE (647)) ;
  result_outResult.addAssign_operation (GALGAS_string ("darkGrayColor") COMMA_SOURCE_FILE_AT_LINE (648)) ;
  result_outResult.addAssign_operation (GALGAS_string ("disabledControlTextColor") COMMA_SOURCE_FILE_AT_LINE (649)) ;
  result_outResult.addAssign_operation (GALGAS_string ("grayColor") COMMA_SOURCE_FILE_AT_LINE (650)) ;
  result_outResult.addAssign_operation (GALGAS_string ("greenColor") COMMA_SOURCE_FILE_AT_LINE (651)) ;
  result_outResult.addAssign_operation (GALGAS_string ("gridColor") COMMA_SOURCE_FILE_AT_LINE (652)) ;
  result_outResult.addAssign_operation (GALGAS_string ("headerColor") COMMA_SOURCE_FILE_AT_LINE (653)) ;
  result_outResult.addAssign_operation (GALGAS_string ("headerTextColor") COMMA_SOURCE_FILE_AT_LINE (654)) ;
  result_outResult.addAssign_operation (GALGAS_string ("highlightColor") COMMA_SOURCE_FILE_AT_LINE (655)) ;
  result_outResult.addAssign_operation (GALGAS_string ("keyboardFocusIndicatorColor") COMMA_SOURCE_FILE_AT_LINE (656)) ;
  result_outResult.addAssign_operation (GALGAS_string ("knobColor") COMMA_SOURCE_FILE_AT_LINE (657)) ;
  result_outResult.addAssign_operation (GALGAS_string ("lightGrayColor") COMMA_SOURCE_FILE_AT_LINE (658)) ;
  result_outResult.addAssign_operation (GALGAS_string ("magentaColor") COMMA_SOURCE_FILE_AT_LINE (659)) ;
  result_outResult.addAssign_operation (GALGAS_string ("orangeColor") COMMA_SOURCE_FILE_AT_LINE (660)) ;
  result_outResult.addAssign_operation (GALGAS_string ("purpleColor") COMMA_SOURCE_FILE_AT_LINE (661)) ;
  result_outResult.addAssign_operation (GALGAS_string ("redColor") COMMA_SOURCE_FILE_AT_LINE (662)) ;
  result_outResult.addAssign_operation (GALGAS_string ("scrollBarColor") COMMA_SOURCE_FILE_AT_LINE (663)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedControlColor") COMMA_SOURCE_FILE_AT_LINE (664)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedControlTextColor") COMMA_SOURCE_FILE_AT_LINE (665)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedKnobColor") COMMA_SOURCE_FILE_AT_LINE (666)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedMenuItemColor") COMMA_SOURCE_FILE_AT_LINE (667)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedMenuItemTextColor") COMMA_SOURCE_FILE_AT_LINE (668)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedTextBackgroundColor") COMMA_SOURCE_FILE_AT_LINE (669)) ;
  result_outResult.addAssign_operation (GALGAS_string ("selectedTextColor") COMMA_SOURCE_FILE_AT_LINE (670)) ;
  result_outResult.addAssign_operation (GALGAS_string ("shadowColor") COMMA_SOURCE_FILE_AT_LINE (671)) ;
  result_outResult.addAssign_operation (GALGAS_string ("textBackgroundColor") COMMA_SOURCE_FILE_AT_LINE (672)) ;
  result_outResult.addAssign_operation (GALGAS_string ("textColor") COMMA_SOURCE_FILE_AT_LINE (673)) ;
  result_outResult.addAssign_operation (GALGAS_string ("whiteColor") COMMA_SOURCE_FILE_AT_LINE (674)) ;
  result_outResult.addAssign_operation (GALGAS_string ("windowBackgroundColor") COMMA_SOURCE_FILE_AT_LINE (675)) ;
  result_outResult.addAssign_operation (GALGAS_string ("windowFrameColor") COMMA_SOURCE_FILE_AT_LINE (676)) ;
  result_outResult.addAssign_operation (GALGAS_string ("windowFrameTextColor") COMMA_SOURCE_FILE_AT_LINE (677)) ;
  result_outResult.addAssign_operation (GALGAS_string ("yellowColor") COMMA_SOURCE_FILE_AT_LINE (678)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_predefinedColors = false ;
static GALGAS_stringset gOnceFunctionResult_predefinedColors ;

//---------------------------------------------------------------------------*

GALGAS_stringset function_predefinedColors (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_predefinedColors) {
    gOnceFunctionResult_predefinedColors = onceFunction_predefinedColors (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_predefinedColors = true ;
  }
  return gOnceFunctionResult_predefinedColors ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_predefinedColors (void) {
  gOnceFunctionResult_predefinedColors.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_predefinedColors (NULL,
                                                              releaseOnceFunctionResult_predefinedColors) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_predefinedColors [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_predefinedColors (C_Compiler * inCompiler,
                                                                 const cObjectArray & /* inEffectiveParameterArray */,
                                                                 const GALGAS_location & /* inErrorLocation */
                                                                 COMMA_LOCATION_ARGS) {
  return function_predefinedColors (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_predefinedColors ("predefinedColors",
                                                                  functionWithGenericHeader_predefinedColors,
                                                                  & kTypeDescriptor_GALGAS_stringset,
                                                                  0,
                                                                  functionArgs_predefinedColors) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Once function 'predefinedDates'                      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_predefinedDates (C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (684)) ;
  result_outResult.addAssign_operation (GALGAS_string ("date") COMMA_SOURCE_FILE_AT_LINE (685)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_predefinedDates = false ;
static GALGAS_stringset gOnceFunctionResult_predefinedDates ;

//---------------------------------------------------------------------------*

GALGAS_stringset function_predefinedDates (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_predefinedDates) {
    gOnceFunctionResult_predefinedDates = onceFunction_predefinedDates (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_predefinedDates = true ;
  }
  return gOnceFunctionResult_predefinedDates ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_predefinedDates (void) {
  gOnceFunctionResult_predefinedDates.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_predefinedDates (NULL,
                                                             releaseOnceFunctionResult_predefinedDates) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_predefinedDates [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_predefinedDates (C_Compiler * inCompiler,
                                                                const cObjectArray & /* inEffectiveParameterArray */,
                                                                const GALGAS_location & /* inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  return function_predefinedDates (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_predefinedDates ("predefinedDates",
                                                                 functionWithGenericHeader_predefinedDates,
                                                                 & kTypeDescriptor_GALGAS_stringset,
                                                                 0,
                                                                 functionArgs_predefinedDates) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Once function 'predefinedFonts'                      *
//                                                                           *
//---------------------------------------------------------------------------*

static GALGAS_stringset onceFunction_predefinedFonts (C_Compiler * /* inCompiler */
                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_stringset result_outResult ; // Returned variable
  result_outResult = GALGAS_stringset::constructor_emptySet (SOURCE_FILE_AT_LINE (756)) ;
  result_outResult.addAssign_operation (GALGAS_string ("boldSystemFontOfSize") COMMA_SOURCE_FILE_AT_LINE (757)) ;
  result_outResult.addAssign_operation (GALGAS_string ("controlContentFontOfSize") COMMA_SOURCE_FILE_AT_LINE (758)) ;
  result_outResult.addAssign_operation (GALGAS_string ("labelFontOfSize") COMMA_SOURCE_FILE_AT_LINE (759)) ;
  result_outResult.addAssign_operation (GALGAS_string ("menuFontOfSize") COMMA_SOURCE_FILE_AT_LINE (760)) ;
  result_outResult.addAssign_operation (GALGAS_string ("menuBarFontOfSize") COMMA_SOURCE_FILE_AT_LINE (761)) ;
  result_outResult.addAssign_operation (GALGAS_string ("messageFontOfSize") COMMA_SOURCE_FILE_AT_LINE (762)) ;
  result_outResult.addAssign_operation (GALGAS_string ("paletteFontOfSize") COMMA_SOURCE_FILE_AT_LINE (763)) ;
  result_outResult.addAssign_operation (GALGAS_string ("systemFontOfSize") COMMA_SOURCE_FILE_AT_LINE (764)) ;
  result_outResult.addAssign_operation (GALGAS_string ("titleBarFontOfSize") COMMA_SOURCE_FILE_AT_LINE (765)) ;
  result_outResult.addAssign_operation (GALGAS_string ("toolTipsFontOfSize") COMMA_SOURCE_FILE_AT_LINE (766)) ;
//---
  return result_outResult ;
}



//---------------------------------------------------------------------------*
//  Function implementation                                                  *
//---------------------------------------------------------------------------*

static bool gOnceFunctionResultAvailable_predefinedFonts = false ;
static GALGAS_stringset gOnceFunctionResult_predefinedFonts ;

//---------------------------------------------------------------------------*

GALGAS_stringset function_predefinedFonts (C_Compiler * inCompiler
              COMMA_LOCATION_ARGS) {
  if (! gOnceFunctionResultAvailable_predefinedFonts) {
    gOnceFunctionResult_predefinedFonts = onceFunction_predefinedFonts (inCompiler COMMA_THERE) ;
    gOnceFunctionResultAvailable_predefinedFonts = true ;
  }
  return gOnceFunctionResult_predefinedFonts ;
}

//---------------------------------------------------------------------------*

static void releaseOnceFunctionResult_predefinedFonts (void) {
  gOnceFunctionResult_predefinedFonts.drop () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gEpilogueForOnceFunction_predefinedFonts (NULL,
                                                             releaseOnceFunctionResult_predefinedFonts) ;

//---------------------------------------------------------------------------*
//  Function introspection                                                   *
//---------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_predefinedFonts [1] = {
  NULL
} ;

//---------------------------------------------------------------------------*

static GALGAS_object functionWithGenericHeader_predefinedFonts (C_Compiler * inCompiler,
                                                                const cObjectArray & /* inEffectiveParameterArray */,
                                                                const GALGAS_location & /* inErrorLocation */
                                                                COMMA_LOCATION_ARGS) {
  return function_predefinedFonts (inCompiler COMMA_THERE).reader_object (THERE) ;
}

//---------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_predefinedFonts ("predefinedFonts",
                                                                 functionWithGenericHeader_predefinedFonts,
                                                                 & kTypeDescriptor_GALGAS_stringset,
                                                                 0,
                                                                 functionArgs_predefinedFonts) ;

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractBindingForGeneration::objectCompare (const GALGAS_abstractBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration::GALGAS_abstractBindingForGeneration (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration::GALGAS_abstractBindingForGeneration (const cPtr_abstractBindingForGeneration * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_abstractBindingForGeneration) ;
}

//---------------------------------------------------------------------------*
//           Pointer class for @abstractBindingForGeneration class           *
//---------------------------------------------------------------------------*

cPtr_abstractBindingForGeneration::cPtr_abstractBindingForGeneration (LOCATION_ARGS) :
acPtr_class (THERE) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @abstractBindingForGeneration type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractBindingForGeneration ("abstractBindingForGeneration",
                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_abstractBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_abstractBindingForGeneration result ;
  const GALGAS_abstractBindingForGeneration * p = (const GALGAS_abstractBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_regularBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mBindingName.objectCompare (p->mAttribute_mBindingName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mRequiredFormatter.objectCompare (p->mAttribute_mRequiredFormatter) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservedObjectName.objectCompare (p->mAttribute_mObservedObjectName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mObservableAttributeName.objectCompare (p->mAttribute_mObservableAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (p->mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_regularBindingForGeneration::objectCompare (const GALGAS_regularBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_regularBindingForGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                              GALGAS_formatterEnum::constructor_noFormatter (HERE),
                                                              GALGAS_string::constructor_default (HERE),
                                                              GALGAS_string::constructor_default (HERE),
                                                              GALGAS__32_stringlist::constructor_emptyList (HERE)
                                                              COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration::GALGAS_regularBindingForGeneration (const cPtr_regularBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_regularBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mBindingName,
                                                                                        const GALGAS_formatterEnum & inAttribute_mRequiredFormatter,
                                                                                        const GALGAS_string & inAttribute_mObservedObjectName,
                                                                                        const GALGAS_string & inAttribute_mObservableAttributeName,
                                                                                        const GALGAS__32_stringlist & inAttribute_mOutletBindingOptionList
                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  if (inAttribute_mBindingName.isValid () && inAttribute_mRequiredFormatter.isValid () && inAttribute_mObservedObjectName.isValid () && inAttribute_mObservableAttributeName.isValid () && inAttribute_mOutletBindingOptionList.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_regularBindingForGeneration (inAttribute_mBindingName, inAttribute_mRequiredFormatter, inAttribute_mObservedObjectName, inAttribute_mObservableAttributeName, inAttribute_mOutletBindingOptionList COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_regularBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_regularBindingForGeneration * p = (cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_regularBindingForGeneration) ;
    cPtr_regularBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_regularBindingForGeneration (p->mAttribute_mBindingName, p->mAttribute_mRequiredFormatter, p->mAttribute_mObservedObjectName, p->mAttribute_mObservableAttributeName, p->mAttribute_mOutletBindingOptionList COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mBindingName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mBindingName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingName ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  GALGAS_formatterEnum result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mRequiredFormatter ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum cPtr_regularBindingForGeneration::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredFormatter ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservedObjectName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservedObjectName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservedObjectName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mObservableAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_regularBindingForGeneration::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  GALGAS__32_stringlist result ;
  if (NULL != mObjectPtr) {
    const cPtr_regularBindingForGeneration * p = (const cPtr_regularBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_regularBindingForGeneration) ;
    result = p->mAttribute_mOutletBindingOptionList ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist cPtr_regularBindingForGeneration::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}

//---------------------------------------------------------------------------*
//           Pointer class for @regularBindingForGeneration class            *
//---------------------------------------------------------------------------*

cPtr_regularBindingForGeneration::cPtr_regularBindingForGeneration (const GALGAS_string & in_mBindingName,
                                                                    const GALGAS_formatterEnum & in_mRequiredFormatter,
                                                                    const GALGAS_string & in_mObservedObjectName,
                                                                    const GALGAS_string & in_mObservableAttributeName,
                                                                    const GALGAS__32_stringlist & in_mOutletBindingOptionList
                                                                    COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mBindingName (in_mBindingName),
mAttribute_mRequiredFormatter (in_mRequiredFormatter),
mAttribute_mObservedObjectName (in_mObservedObjectName),
mAttribute_mObservableAttributeName (in_mObservableAttributeName),
mAttribute_mOutletBindingOptionList (in_mOutletBindingOptionList) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_regularBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

void cPtr_regularBindingForGeneration::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "[@regularBindingForGeneration:" ;
  mAttribute_mBindingName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mRequiredFormatter.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservedObjectName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @regularBindingForGeneration type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_regularBindingForGeneration ("regularBindingForGeneration",
                                                    & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_regularBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_regularBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_regularBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_regularBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_regularBindingForGeneration GALGAS_regularBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_regularBindingForGeneration result ;
  const GALGAS_regularBindingForGeneration * p = (const GALGAS_regularBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_regularBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("regularBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_runBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mTargetName.objectCompare (p->mAttribute_mTargetName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mActionName.objectCompare (p->mAttribute_mActionName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_runBindingForGeneration::objectCompare (const GALGAS_runBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_runBindingForGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                          GALGAS_string::constructor_default (HERE)
                                                          COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration::GALGAS_runBindingForGeneration (const cPtr_runBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_runBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mTargetName,
                                                                                const GALGAS_string & inAttribute_mActionName
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  if (inAttribute_mTargetName.isValid () && inAttribute_mActionName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_runBindingForGeneration (inAttribute_mTargetName, inAttribute_mActionName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_runBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_runBindingForGeneration * p = (cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_runBindingForGeneration) ;
    cPtr_runBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_runBindingForGeneration (p->mAttribute_mTargetName, p->mAttribute_mActionName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mTargetName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mTargetName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTargetName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_runBindingForGeneration * p = (const cPtr_runBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_runBindingForGeneration) ;
    result = p->mAttribute_mActionName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_runBindingForGeneration::reader_mActionName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionName ;
}

//---------------------------------------------------------------------------*
//             Pointer class for @runBindingForGeneration class              *
//---------------------------------------------------------------------------*

cPtr_runBindingForGeneration::cPtr_runBindingForGeneration (const GALGAS_string & in_mTargetName,
                                                            const GALGAS_string & in_mActionName
                                                            COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mTargetName (in_mTargetName),
mAttribute_mActionName (in_mActionName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_runBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

void cPtr_runBindingForGeneration::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "[@runBindingForGeneration:" ;
  mAttribute_mTargetName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mActionName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @runBindingForGeneration type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_runBindingForGeneration ("runBindingForGeneration",
                                                & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_runBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_runBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_runBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_runBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_runBindingForGeneration GALGAS_runBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_runBindingForGeneration result ;
  const GALGAS_runBindingForGeneration * p = (const GALGAS_runBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_runBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("runBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_tableValueBindingForGeneration::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mColumnBindingForTableValueBindingForGeneration.objectCompare (p->mAttribute_mColumnBindingForTableValueBindingForGeneration) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_tableValueBindingForGeneration::objectCompare (const GALGAS_tableValueBindingForGeneration & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (void) :
GALGAS_abstractBindingForGeneration () {
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::constructor_default (LOCATION_ARGS) {
  return GALGAS_tableValueBindingForGeneration::constructor_new (GALGAS_string::constructor_default (HERE),
                                                                 GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (HERE)
                                                                 COMMA_THERE) ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration::GALGAS_tableValueBindingForGeneration (const cPtr_tableValueBindingForGeneration * inSourcePtr) :
GALGAS_abstractBindingForGeneration (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_tableValueBindingForGeneration) ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::constructor_new (const GALGAS_string & inAttribute_mControllerName,
                                                                                              const GALGAS_columnBindingForTableValueBindingForGeneration & inAttribute_mColumnBindingForTableValueBindingForGeneration
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  if (inAttribute_mControllerName.isValid () && inAttribute_mColumnBindingForTableValueBindingForGeneration.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_tableValueBindingForGeneration (inAttribute_mControllerName, inAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_tableValueBindingForGeneration::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_tableValueBindingForGeneration * p = (cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_tableValueBindingForGeneration) ;
    cPtr_tableValueBindingForGeneration * r = NULL ;
    macroMyNew (r, cPtr_tableValueBindingForGeneration (p->mAttribute_mControllerName, p->mAttribute_mColumnBindingForTableValueBindingForGeneration COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_tableValueBindingForGeneration::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  GALGAS_columnBindingForTableValueBindingForGeneration result ;
  if (NULL != mObjectPtr) {
    const cPtr_tableValueBindingForGeneration * p = (const cPtr_tableValueBindingForGeneration *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_tableValueBindingForGeneration) ;
    result = p->mAttribute_mColumnBindingForTableValueBindingForGeneration ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration cPtr_tableValueBindingForGeneration::reader_mColumnBindingForTableValueBindingForGeneration (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnBindingForTableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*
//          Pointer class for @tableValueBindingForGeneration class          *
//---------------------------------------------------------------------------*

cPtr_tableValueBindingForGeneration::cPtr_tableValueBindingForGeneration (const GALGAS_string & in_mControllerName,
                                                                          const GALGAS_columnBindingForTableValueBindingForGeneration & in_mColumnBindingForTableValueBindingForGeneration
                                                                          COMMA_LOCATION_ARGS) :
cPtr_abstractBindingForGeneration (THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mColumnBindingForTableValueBindingForGeneration (in_mColumnBindingForTableValueBindingForGeneration) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_tableValueBindingForGeneration::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

void cPtr_tableValueBindingForGeneration::description (C_String & ioString,
                                                       const PMSInt32 inIndentation) const {
  ioString << "[@tableValueBindingForGeneration:" ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mColumnBindingForTableValueBindingForGeneration.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @tableValueBindingForGeneration type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_tableValueBindingForGeneration ("tableValueBindingForGeneration",
                                                       & kTypeDescriptor_GALGAS_abstractBindingForGeneration) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_tableValueBindingForGeneration::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_tableValueBindingForGeneration ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_tableValueBindingForGeneration::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_tableValueBindingForGeneration (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_tableValueBindingForGeneration GALGAS_tableValueBindingForGeneration::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_tableValueBindingForGeneration result ;
  const GALGAS_tableValueBindingForGeneration * p = (const GALGAS_tableValueBindingForGeneration *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_tableValueBindingForGeneration *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("tableValueBindingForGeneration", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*



typeComparisonResult GALGAS_abstractTransientDependencyForImplementation::objectCompare (const GALGAS_abstractTransientDependencyForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation::GALGAS_abstractTransientDependencyForImplementation (void) :
AC_GALGAS_class () {
}

//---------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation::GALGAS_abstractTransientDependencyForImplementation (const cPtr_abstractTransientDependencyForImplementation * inSourcePtr) :
AC_GALGAS_class (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_abstractTransientDependencyForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_abstractTransientDependencyForImplementation::reader_mMasterAttributeType (UNUSED_LOCATION_ARGS) const {
  GALGAS_easyBindingType result ;
  if (NULL != mObjectPtr) {
    const cPtr_abstractTransientDependencyForImplementation * p = (const cPtr_abstractTransientDependencyForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_abstractTransientDependencyForImplementation) ;
    result = p->mAttribute_mMasterAttributeType ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType cPtr_abstractTransientDependencyForImplementation::reader_mMasterAttributeType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeType ;
}

//---------------------------------------------------------------------------*
//   Pointer class for @abstractTransientDependencyForImplementation class   *
//---------------------------------------------------------------------------*

cPtr_abstractTransientDependencyForImplementation::cPtr_abstractTransientDependencyForImplementation (const GALGAS_easyBindingType & in_mMasterAttributeType
                                                                                                      COMMA_LOCATION_ARGS) :
acPtr_class (THERE),
mAttribute_mMasterAttributeType (in_mMasterAttributeType) {
}



//---------------------------------------------------------------------------*
//                                                                           *
//            @abstractTransientDependencyForImplementation type             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation ("abstractTransientDependencyForImplementation",
                                                                     NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_abstractTransientDependencyForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_abstractTransientDependencyForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_abstractTransientDependencyForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation GALGAS_abstractTransientDependencyForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_abstractTransientDependencyForImplementation result ;
  const GALGAS_abstractTransientDependencyForImplementation * p = (const GALGAS_abstractTransientDependencyForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_abstractTransientDependencyForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("abstractTransientDependencyForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromControllerForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromControllerForImplementation * p = (const cPtr_transientDependencyFromControllerForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_transientDependencyFromControllerForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mControllerName.objectCompare (p->mAttribute_mControllerName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromControllerForImplementation::objectCompare (const GALGAS_transientDependencyFromControllerForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation::GALGAS_transientDependencyFromControllerForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation::GALGAS_transientDependencyFromControllerForImplementation (const cPtr_transientDependencyFromControllerForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_transientDependencyFromControllerForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation GALGAS_transientDependencyFromControllerForImplementation::constructor_new (const GALGAS_easyBindingType & inAttribute_mMasterAttributeType,
                                                                                                                                      const GALGAS_string & inAttribute_mControllerName,
                                                                                                                                      const GALGAS_string & inAttribute_mMasterAttributeName
                                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromControllerForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mControllerName.isValid () && inAttribute_mMasterAttributeName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromControllerForImplementation (inAttribute_mMasterAttributeType, inAttribute_mControllerName, inAttribute_mMasterAttributeName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientDependencyFromControllerForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromControllerForImplementation * p = (cPtr_transientDependencyFromControllerForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromControllerForImplementation) ;
    cPtr_transientDependencyFromControllerForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromControllerForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mControllerName, p->mAttribute_mMasterAttributeName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromControllerForImplementation::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromControllerForImplementation * p = (const cPtr_transientDependencyFromControllerForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromControllerForImplementation) ;
    result = p->mAttribute_mControllerName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromControllerForImplementation::reader_mControllerName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromControllerForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromControllerForImplementation * p = (const cPtr_transientDependencyFromControllerForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromControllerForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromControllerForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//---------------------------------------------------------------------------*
//Pointer class for @transientDependencyFromControllerForImplementation class*
//---------------------------------------------------------------------------*

cPtr_transientDependencyFromControllerForImplementation::cPtr_transientDependencyFromControllerForImplementation (const GALGAS_easyBindingType & in_mMasterAttributeType,
                                                                                                                  const GALGAS_string & in_mControllerName,
                                                                                                                  const GALGAS_string & in_mMasterAttributeName
                                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mControllerName (in_mControllerName),
mAttribute_mMasterAttributeName (in_mMasterAttributeName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromControllerForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromControllerForImplementation ;
}

void cPtr_transientDependencyFromControllerForImplementation::description (C_String & ioString,
                                                                           const PMSInt32 inIndentation) const {
  ioString << "[@transientDependencyFromControllerForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mControllerName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//         @transientDependencyFromControllerForImplementation type          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromControllerForImplementation ("transientDependencyFromControllerForImplementation",
                                                                           & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromControllerForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromControllerForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromControllerForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromControllerForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromControllerForImplementation GALGAS_transientDependencyFromControllerForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                                    C_Compiler * inCompiler
                                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromControllerForImplementation result ;
  const GALGAS_transientDependencyFromControllerForImplementation * p = (const GALGAS_transientDependencyFromControllerForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromControllerForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromControllerForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromPreferenceForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_transientDependencyFromPreferenceForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mPreferenceName.objectCompare (p->mAttribute_mPreferenceName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterIsTransient.objectCompare (p->mAttribute_mMasterIsTransient) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromPreferenceForImplementation::objectCompare (const GALGAS_transientDependencyFromPreferenceForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation::GALGAS_transientDependencyFromPreferenceForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation::GALGAS_transientDependencyFromPreferenceForImplementation (const cPtr_transientDependencyFromPreferenceForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_transientDependencyFromPreferenceForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation GALGAS_transientDependencyFromPreferenceForImplementation::constructor_new (const GALGAS_easyBindingType & inAttribute_mMasterAttributeType,
                                                                                                                                      const GALGAS_string & inAttribute_mPreferenceName,
                                                                                                                                      const GALGAS_string & inAttribute_mMasterAttributeName,
                                                                                                                                      const GALGAS_bool & inAttribute_mMasterIsTransient
                                                                                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromPreferenceForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mPreferenceName.isValid () && inAttribute_mMasterAttributeName.isValid () && inAttribute_mMasterIsTransient.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromPreferenceForImplementation (inAttribute_mMasterAttributeType, inAttribute_mPreferenceName, inAttribute_mMasterAttributeName, inAttribute_mMasterIsTransient COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientDependencyFromPreferenceForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromPreferenceForImplementation * p = (cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromPreferenceForImplementation) ;
    cPtr_transientDependencyFromPreferenceForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromPreferenceForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mPreferenceName, p->mAttribute_mMasterAttributeName, p->mAttribute_mMasterIsTransient COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromPreferenceForImplementation::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromPreferenceForImplementation) ;
    result = p->mAttribute_mPreferenceName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromPreferenceForImplementation::reader_mPreferenceName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPreferenceName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromPreferenceForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromPreferenceForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromPreferenceForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientDependencyFromPreferenceForImplementation::reader_mMasterIsTransient (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromPreferenceForImplementation * p = (const cPtr_transientDependencyFromPreferenceForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromPreferenceForImplementation) ;
    result = p->mAttribute_mMasterIsTransient ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cPtr_transientDependencyFromPreferenceForImplementation::reader_mMasterIsTransient (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterIsTransient ;
}

//---------------------------------------------------------------------------*
//Pointer class for @transientDependencyFromPreferenceForImplementation class*
//---------------------------------------------------------------------------*

cPtr_transientDependencyFromPreferenceForImplementation::cPtr_transientDependencyFromPreferenceForImplementation (const GALGAS_easyBindingType & in_mMasterAttributeType,
                                                                                                                  const GALGAS_string & in_mPreferenceName,
                                                                                                                  const GALGAS_string & in_mMasterAttributeName,
                                                                                                                  const GALGAS_bool & in_mMasterIsTransient
                                                                                                                  COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mPreferenceName (in_mPreferenceName),
mAttribute_mMasterAttributeName (in_mMasterAttributeName),
mAttribute_mMasterIsTransient (in_mMasterIsTransient) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromPreferenceForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromPreferenceForImplementation ;
}

void cPtr_transientDependencyFromPreferenceForImplementation::description (C_String & ioString,
                                                                           const PMSInt32 inIndentation) const {
  ioString << "[@transientDependencyFromPreferenceForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mPreferenceName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterIsTransient.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//         @transientDependencyFromPreferenceForImplementation type          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromPreferenceForImplementation ("transientDependencyFromPreferenceForImplementation",
                                                                           & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromPreferenceForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromPreferenceForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromPreferenceForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromPreferenceForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromPreferenceForImplementation GALGAS_transientDependencyFromPreferenceForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                                    C_Compiler * inCompiler
                                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromPreferenceForImplementation result ;
  const GALGAS_transientDependencyFromPreferenceForImplementation * p = (const GALGAS_transientDependencyFromPreferenceForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromPreferenceForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromPreferenceForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromRootForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_transientDependencyFromRootForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mNamesCountOption.objectCompare (p->mAttribute_mNamesCountOption) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mTriggerRoutineName.objectCompare (p->mAttribute_mTriggerRoutineName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromRootForImplementation::objectCompare (const GALGAS_transientDependencyFromRootForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation::GALGAS_transientDependencyFromRootForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation::GALGAS_transientDependencyFromRootForImplementation (const cPtr_transientDependencyFromRootForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_transientDependencyFromRootForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation GALGAS_transientDependencyFromRootForImplementation::constructor_new (const GALGAS_easyBindingType & inAttribute_mMasterAttributeType,
                                                                                                                          const GALGAS_string & inAttribute_mMasterAttributeName,
                                                                                                                          const GALGAS_bool & inAttribute_mNamesCountOption,
                                                                                                                          const GALGAS_string & inAttribute_mTriggerRoutineName
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromRootForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mMasterAttributeName.isValid () && inAttribute_mNamesCountOption.isValid () && inAttribute_mTriggerRoutineName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromRootForImplementation (inAttribute_mMasterAttributeType, inAttribute_mMasterAttributeName, inAttribute_mNamesCountOption, inAttribute_mTriggerRoutineName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientDependencyFromRootForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromRootForImplementation * p = (cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromRootForImplementation) ;
    cPtr_transientDependencyFromRootForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromRootForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mMasterAttributeName, p->mAttribute_mNamesCountOption, p->mAttribute_mTriggerRoutineName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromRootForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromRootForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromRootForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_transientDependencyFromRootForImplementation::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  GALGAS_bool result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromRootForImplementation) ;
    result = p->mAttribute_mNamesCountOption ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_bool cPtr_transientDependencyFromRootForImplementation::reader_mNamesCountOption (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mNamesCountOption ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromRootForImplementation::reader_mTriggerRoutineName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromRootForImplementation * p = (const cPtr_transientDependencyFromRootForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromRootForImplementation) ;
    result = p->mAttribute_mTriggerRoutineName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromRootForImplementation::reader_mTriggerRoutineName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTriggerRoutineName ;
}

//---------------------------------------------------------------------------*
//   Pointer class for @transientDependencyFromRootForImplementation class   *
//---------------------------------------------------------------------------*

cPtr_transientDependencyFromRootForImplementation::cPtr_transientDependencyFromRootForImplementation (const GALGAS_easyBindingType & in_mMasterAttributeType,
                                                                                                      const GALGAS_string & in_mMasterAttributeName,
                                                                                                      const GALGAS_bool & in_mNamesCountOption,
                                                                                                      const GALGAS_string & in_mTriggerRoutineName
                                                                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mMasterAttributeName (in_mMasterAttributeName),
mAttribute_mNamesCountOption (in_mNamesCountOption),
mAttribute_mTriggerRoutineName (in_mTriggerRoutineName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromRootForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromRootForImplementation ;
}

void cPtr_transientDependencyFromRootForImplementation::description (C_String & ioString,
                                                                     const PMSInt32 inIndentation) const {
  ioString << "[@transientDependencyFromRootForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mNamesCountOption.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mTriggerRoutineName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//            @transientDependencyFromRootForImplementation type             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromRootForImplementation ("transientDependencyFromRootForImplementation",
                                                                     & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromRootForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromRootForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromRootForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromRootForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromRootForImplementation GALGAS_transientDependencyFromRootForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromRootForImplementation result ;
  const GALGAS_transientDependencyFromRootForImplementation * p = (const GALGAS_transientDependencyFromRootForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromRootForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromRootForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//   Object comparison                                                       *
//---------------------------------------------------------------------------*

typeComparisonResult cPtr_transientDependencyFromSelfForImplementation::dynamicObjectCompare (const acPtr_class * inOperandPtr) const {
  typeComparisonResult result = kOperandEqual ;
  const cPtr_transientDependencyFromSelfForImplementation * p = (const cPtr_transientDependencyFromSelfForImplementation *) inOperandPtr ;
  macroValidSharedObject (p, const cPtr_transientDependencyFromSelfForImplementation) ;
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeType.objectCompare (p->mAttribute_mMasterAttributeType) ;
  }
  if (kOperandEqual == result) {
    result = mAttribute_mMasterAttributeName.objectCompare (p->mAttribute_mMasterAttributeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*


typeComparisonResult GALGAS_transientDependencyFromSelfForImplementation::objectCompare (const GALGAS_transientDependencyFromSelfForImplementation & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    const PMSInt32 mySlot = mObjectPtr->classDescriptor ()->mSlotID ;
    const PMSInt32 operandSlot = inOperand.mObjectPtr->classDescriptor ()->mSlotID ;
    if (mySlot < operandSlot) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mySlot > operandSlot) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = mObjectPtr->dynamicObjectCompare (inOperand.mObjectPtr) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation::GALGAS_transientDependencyFromSelfForImplementation (void) :
GALGAS_abstractTransientDependencyForImplementation () {
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation::GALGAS_transientDependencyFromSelfForImplementation (const cPtr_transientDependencyFromSelfForImplementation * inSourcePtr) :
GALGAS_abstractTransientDependencyForImplementation (inSourcePtr) {
  macroNullOrValidSharedObject (inSourcePtr, const cPtr_transientDependencyFromSelfForImplementation) ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation GALGAS_transientDependencyFromSelfForImplementation::constructor_new (const GALGAS_easyBindingType & inAttribute_mMasterAttributeType,
                                                                                                                          const GALGAS_string & inAttribute_mMasterAttributeName
                                                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromSelfForImplementation result ;
  if (inAttribute_mMasterAttributeType.isValid () && inAttribute_mMasterAttributeName.isValid ()) {
    macroMyNew (result.mObjectPtr, cPtr_transientDependencyFromSelfForImplementation (inAttribute_mMasterAttributeType, inAttribute_mMasterAttributeName COMMA_THERE)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientDependencyFromSelfForImplementation::insulate (LOCATION_ARGS) {
  macroMutexLock (gInsulationMutex) ;
  if (isValid () && (mObjectPtr->retainCount () > 1)) {
    cPtr_transientDependencyFromSelfForImplementation * p = (cPtr_transientDependencyFromSelfForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, cPtr_transientDependencyFromSelfForImplementation) ;
    cPtr_transientDependencyFromSelfForImplementation * r = NULL ;
    macroMyNew (r, cPtr_transientDependencyFromSelfForImplementation (p->mAttribute_mMasterAttributeType, p->mAttribute_mMasterAttributeName COMMA_THERE)) ;
    macroAssignSharedObject (mObjectPtr, r) ;
    macroDetachSharedObject (r) ;
  }
  macroMutexUnlock (gInsulationMutex) ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientDependencyFromSelfForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (NULL != mObjectPtr) {
    const cPtr_transientDependencyFromSelfForImplementation * p = (const cPtr_transientDependencyFromSelfForImplementation *) mObjectPtr ;
    macroValidSharedObject (p, const cPtr_transientDependencyFromSelfForImplementation) ;
    result = p->mAttribute_mMasterAttributeName ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_string cPtr_transientDependencyFromSelfForImplementation::reader_mMasterAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mMasterAttributeName ;
}

//---------------------------------------------------------------------------*
//   Pointer class for @transientDependencyFromSelfForImplementation class   *
//---------------------------------------------------------------------------*

cPtr_transientDependencyFromSelfForImplementation::cPtr_transientDependencyFromSelfForImplementation (const GALGAS_easyBindingType & in_mMasterAttributeType,
                                                                                                      const GALGAS_string & in_mMasterAttributeName
                                                                                                      COMMA_LOCATION_ARGS) :
cPtr_abstractTransientDependencyForImplementation (in_mMasterAttributeType COMMA_THERE),
mAttribute_mMasterAttributeName (in_mMasterAttributeName) {
}

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * cPtr_transientDependencyFromSelfForImplementation::classDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromSelfForImplementation ;
}

void cPtr_transientDependencyFromSelfForImplementation::description (C_String & ioString,
                                                                     const PMSInt32 inIndentation) const {
  ioString << "[@transientDependencyFromSelfForImplementation:" ;
  mAttribute_mMasterAttributeType.description (ioString, inIndentation+1) ;
  ioString << ", " ;
  mAttribute_mMasterAttributeName.description (ioString, inIndentation+1) ;
  ioString << "]" ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//            @transientDependencyFromSelfForImplementation type             *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientDependencyFromSelfForImplementation ("transientDependencyFromSelfForImplementation",
                                                                     & kTypeDescriptor_GALGAS_abstractTransientDependencyForImplementation) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientDependencyFromSelfForImplementation::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientDependencyFromSelfForImplementation ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientDependencyFromSelfForImplementation::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientDependencyFromSelfForImplementation (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientDependencyFromSelfForImplementation GALGAS_transientDependencyFromSelfForImplementation::extractObject (const GALGAS_object & inObject,
                                                                                                                        C_Compiler * inCompiler
                                                                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_transientDependencyFromSelfForImplementation result ;
  const GALGAS_transientDependencyFromSelfForImplementation * p = (const GALGAS_transientDependencyFromSelfForImplementation *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientDependencyFromSelfForImplementation *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientDependencyFromSelfForImplementation", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet::GALGAS_fileInclusionSet (void) :
mAttribute_mHeaderPredeclarationSet (),
mAttribute_mHeaderFileInclusionSet (),
mAttribute_mImplementationFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet::~ GALGAS_fileInclusionSet (void) {
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet::GALGAS_fileInclusionSet (const GALGAS_stringset & inOperand0,
                                                  const GALGAS_stringset & inOperand1,
                                                  const GALGAS_stringset & inOperand2) :
mAttribute_mHeaderPredeclarationSet (inOperand0),
mAttribute_mHeaderFileInclusionSet (inOperand1),
mAttribute_mImplementationFileInclusionSet (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_fileInclusionSet::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_fileInclusionSet (GALGAS_stringset::constructor_emptySet (HERE),
                                  GALGAS_stringset::constructor_emptySet (HERE),
                                  GALGAS_stringset::constructor_emptySet (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_fileInclusionSet::constructor_new (const GALGAS_stringset & inOperand0,
                                                                  const GALGAS_stringset & inOperand1,
                                                                  const GALGAS_stringset & inOperand2 
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_fileInclusionSet result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_fileInclusionSet (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_fileInclusionSet::objectCompare (const GALGAS_fileInclusionSet & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderPredeclarationSet.objectCompare (inOperand.mAttribute_mHeaderPredeclarationSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderFileInclusionSet.objectCompare (inOperand.mAttribute_mHeaderFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementationFileInclusionSet.objectCompare (inOperand.mAttribute_mImplementationFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_fileInclusionSet::isValid (void) const {
  return mAttribute_mHeaderPredeclarationSet.isValid () && mAttribute_mHeaderFileInclusionSet.isValid () && mAttribute_mImplementationFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_fileInclusionSet::drop (void) {
  mAttribute_mHeaderPredeclarationSet.drop () ;
  mAttribute_mHeaderFileInclusionSet.drop () ;
  mAttribute_mImplementationFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_fileInclusionSet::description (C_String & ioString,
                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @fileInclusionSet:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mHeaderPredeclarationSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHeaderFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementationFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_fileInclusionSet::reader_mHeaderPredeclarationSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderPredeclarationSet ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_fileInclusionSet::reader_mHeaderFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_fileInclusionSet::reader_mImplementationFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementationFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @fileInclusionSet type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_fileInclusionSet ("fileInclusionSet",
                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_fileInclusionSet::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_fileInclusionSet ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_fileInclusionSet::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_fileInclusionSet (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_fileInclusionSet::extractObject (const GALGAS_object & inObject,
                                                                C_Compiler * inCompiler
                                                                COMMA_LOCATION_ARGS) {
  GALGAS_fileInclusionSet result ;
  const GALGAS_fileInclusionSet * p = (const GALGAS_fileInclusionSet *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_fileInclusionSet *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("fileInclusionSet", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct::GALGAS_contextAnalysisStruct (void) :
mAttribute_mStructTypeMap (),
mAttribute_mEnumMap (),
mAttribute_mGlobalEnumConstantMap (),
mAttribute_mUserCursorMap () {
}

//---------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct::~ GALGAS_contextAnalysisStruct (void) {
}

//---------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct::GALGAS_contextAnalysisStruct (const GALGAS_structTypeMap & inOperand0,
                                                            const GALGAS_enumMap & inOperand1,
                                                            const GALGAS_globalEnumConstantMap & inOperand2,
                                                            const GALGAS_userCursorMap & inOperand3) :
mAttribute_mStructTypeMap (inOperand0),
mAttribute_mEnumMap (inOperand1),
mAttribute_mGlobalEnumConstantMap (inOperand2),
mAttribute_mUserCursorMap (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct GALGAS_contextAnalysisStruct::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_contextAnalysisStruct (GALGAS_structTypeMap::constructor_emptyMap (HERE),
                                       GALGAS_enumMap::constructor_emptyMap (HERE),
                                       GALGAS_globalEnumConstantMap::constructor_emptyMap (HERE),
                                       GALGAS_userCursorMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct GALGAS_contextAnalysisStruct::constructor_new (const GALGAS_structTypeMap & inOperand0,
                                                                            const GALGAS_enumMap & inOperand1,
                                                                            const GALGAS_globalEnumConstantMap & inOperand2,
                                                                            const GALGAS_userCursorMap & inOperand3 
                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_contextAnalysisStruct result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_contextAnalysisStruct (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_contextAnalysisStruct::objectCompare (const GALGAS_contextAnalysisStruct & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mStructTypeMap.objectCompare (inOperand.mAttribute_mStructTypeMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumMap.objectCompare (inOperand.mAttribute_mEnumMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGlobalEnumConstantMap.objectCompare (inOperand.mAttribute_mGlobalEnumConstantMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mUserCursorMap.objectCompare (inOperand.mAttribute_mUserCursorMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_contextAnalysisStruct::isValid (void) const {
  return mAttribute_mStructTypeMap.isValid () && mAttribute_mEnumMap.isValid () && mAttribute_mGlobalEnumConstantMap.isValid () && mAttribute_mUserCursorMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_contextAnalysisStruct::drop (void) {
  mAttribute_mStructTypeMap.drop () ;
  mAttribute_mEnumMap.drop () ;
  mAttribute_mGlobalEnumConstantMap.drop () ;
  mAttribute_mUserCursorMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_contextAnalysisStruct::description (C_String & ioString,
                                                const PMSInt32 inIndentation) const {
  ioString << "<struct @contextAnalysisStruct:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mStructTypeMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGlobalEnumConstantMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mUserCursorMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap GALGAS_contextAnalysisStruct::reader_mStructTypeMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mStructTypeMap ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap GALGAS_contextAnalysisStruct::reader_mEnumMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumMap ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap GALGAS_contextAnalysisStruct::reader_mGlobalEnumConstantMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGlobalEnumConstantMap ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap GALGAS_contextAnalysisStruct::reader_mUserCursorMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mUserCursorMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @contextAnalysisStruct type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_contextAnalysisStruct ("contextAnalysisStruct",
                                              NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_contextAnalysisStruct::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_contextAnalysisStruct ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_contextAnalysisStruct::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_contextAnalysisStruct (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_contextAnalysisStruct GALGAS_contextAnalysisStruct::extractObject (const GALGAS_object & inObject,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_contextAnalysisStruct result ;
  const GALGAS_contextAnalysisStruct * p = (const GALGAS_contextAnalysisStruct *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_contextAnalysisStruct *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("contextAnalysisStruct", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category reader '@abstractBindingForGeneration generateBinding'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateBinding> gCategoryReaderTable_abstractBindingForGeneration_generateBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateBinding (const PMSInt32 inClassIndex,
                                          categoryReaderSignature_abstractBindingForGeneration_generateBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateBinding (NULL,
                                                                         freeCategoryReader_abstractBindingForGeneration_generateBinding) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                  const GALGAS_string & in_inOutletName,
                                                  C_Compiler * inCompiler
                                                  COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Abstract category method '@abstractBinding analyzeOutletBinding'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractBinding_analyzeOutletBinding> gCategoryMethodTable_abstractBinding_analyzeOutletBinding ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeOutletBinding (const PMSInt32 inClassIndex,
                                               categoryMethodSignature_abstractBinding_analyzeOutletBinding inMethod) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractBinding_analyzeOutletBinding (void) {
  gCategoryMethodTable_abstractBinding_analyzeOutletBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractBinding_analyzeOutletBinding (NULL,
                                                                 freeCategoryMethod_abstractBinding_analyzeOutletBinding) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                              const GALGAS_observablePropertyMap constin_inRootEntityObservableAttributeMap,
                                              const GALGAS_observablePropertyMap constin_inSelfObservableAttributeMap,
                                              const GALGAS_preferencesMap constin_inPreferencesMap,
                                              const GALGAS_entityMap constin_inEntityMap,
                                              const GALGAS_classMap constin_inClassMap,
                                              const GALGAS_EXoutletClassBindingMap constin_inBindingMap,
                                              const GALGAS_controllerMap constin_inControllerMap,
                                              const GALGAS_actionMap constin_inActionMap,
                                              const GALGAS_bool constin_inHasTableValueBinding,
                                              const GALGAS_contextAnalysisStruct constin_inContextAnalysisStruct,
                                              GALGAS_outletBindingListForGeneration & io_ioOutletBindingListForGeneration,
                                              GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                              C_Compiler * inCompiler
                                              COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBinding) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractBinding_analyzeOutletBinding f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
      f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractBinding_analyzeOutletBinding.count ()) {
           f = gCategoryMethodTable_abstractBinding_analyzeOutletBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractBinding_analyzeOutletBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inRootEntityObservableAttributeMap, constin_inSelfObservableAttributeMap, constin_inPreferencesMap, constin_inEntityMap, constin_inClassMap, constin_inBindingMap, constin_inControllerMap, constin_inActionMap, constin_inHasTableValueBinding, constin_inContextAnalysisStruct, io_ioOutletBindingListForGeneration, io_ioFileInclusionSet, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//Abstract category reader '@abstractBindingForGeneration generateRemoveBinding'*
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding> gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding ;

//---------------------------------------------------------------------------*

void enterCategoryReader_generateRemoveBinding (const PMSInt32 inClassIndex,
                                                categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding inReader) {
  gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.forceObjectAtIndex (inClassIndex, inReader, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryReader_abstractBindingForGeneration_generateRemoveBinding (void) {
  gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gReader_abstractBindingForGeneration_generateRemoveBinding (NULL,
                                                                               freeCategoryReader_abstractBindingForGeneration_generateRemoveBinding) ;

//---------------------------------------------------------------------------*

GALGAS_string callCategoryReader_generateRemoveBinding (const cPtr_abstractBindingForGeneration * inObject,
                                                        const GALGAS_string & in_inOutletName,
                                                        C_Compiler * inCompiler
                                                        COMMA_LOCATION_ARGS) {
  GALGAS_string result ;
//--- Find Reader
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractBindingForGeneration) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryReaderSignature_abstractBindingForGeneration_generateRemoveBinding f = NULL ;
    if (classIndex < gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.count ()) {
      f = gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.count ()) {
           f = gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryReaderTable_abstractBindingForGeneration_generateRemoveBinding.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY READER CALL ERROR", __FILE__, __LINE__) ;
    }else{
      result = f (inObject, in_inOutletName, inCompiler COMMA_THERE) ;
    }
  }
  return result ;
}

//---------------------------------------------------------------------------*
//                                                                           *
// Abstract category method '@abstractDefaultValue analyzeDefaultValueType'  *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType> gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyzeDefaultValueType (const PMSInt32 inClassIndex,
                                                  categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType inMethod) {
  gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractDefaultValue_analyzeDefaultValueType (void) {
  gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractDefaultValue_analyzeDefaultValueType (NULL,
                                                                         freeCategoryMethod_abstractDefaultValue_analyzeDefaultValueType) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                 const GALGAS_easyBindingTypeList constin_inAttributeActualTypeList,
                                                 const GALGAS_contextAnalysisStruct constin_inContextAnalysisStruct,
                                                 GALGAS_string & out_outDirectDefaultValueAsString,
                                                 GALGAS_string & out_outObjectiveCDefaultValueAsString,
                                                 GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                                 C_Compiler * inCompiler
                                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outDirectDefaultValueAsString.drop () ;
  out_outObjectiveCDefaultValueAsString.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractDefaultValue) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractDefaultValue_analyzeDefaultValueType f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.count ()) {
      f = gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.count ()) {
           f = gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractDefaultValue_analyzeDefaultValueType.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inAttributeActualTypeList, constin_inContextAnalysisStruct, out_outDirectDefaultValueAsString, out_outObjectiveCDefaultValueAsString, io_ioFileInclusionSet, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@boolAsDefaultValue analyzeDefaultValueType'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_boolAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                       const GALGAS_easyBindingTypeList constinArgument_inAttributeActualTypeList,
                                                                       const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                       GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                       GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                       GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_boolAsDefaultValue * object = (const cPtr_boolAsDefaultValue *) inObject ;
  macroValidSharedObject (object, const cPtr_boolAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_easyBindingTypeList enumerator_19091 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (541)).isValidAndTrue () ;
  if (enumerator_19091.hasCurrentObject () && bool_0) {
    while (enumerator_19091.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = callCategoryReader_isBoolType ((const cPtr_easyBindingType *) enumerator_19091.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (542)).boolEnum () ;
      if (kBoolTrue == test_1) {
        //--- @ifExpressionForGeneration
        GALGAS_string temp_2 ;
        const enumGalgasBool test_3 = object->mAttribute_mValue.mAttribute_bool.boolEnum () ;
        if (kBoolTrue == test_3) {
          temp_2 = GALGAS_string ("YES") ;
        }else if (kBoolFalse == test_3) {
          temp_2 = GALGAS_string ("NO") ;
        }
        outArgument_outDirectDefaultValueAsString = temp_2 ;
        outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithBool:").operator_concat (outArgument_outDirectDefaultValueAsString COMMA_SOURCE_FILE_AT_LINE (544)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (544)) ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_19091.gotoNextObject () ;
      if (enumerator_19091.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (541)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE_AT_LINE (548)).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_location location_5 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, GALGAS_string ("only a boolean attribute can be initialized by YES or NO") COMMA_SOURCE_FILE_AT_LINE (549)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_boolAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_boolAsDefaultValue.mSlotID,
                                               categoryMethod_boolAsDefaultValue_analyzeDefaultValueType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_boolAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_boolAsDefaultValue_analyzeDefaultValueType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@integerAsDefaultValue analyzeDefaultValueType'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_integerAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                          const GALGAS_easyBindingTypeList constinArgument_inAttributeActualTypeList,
                                                                          const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                          GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                          GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                          GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_integerAsDefaultValue * object = (const cPtr_integerAsDefaultValue *) inObject ;
  macroValidSharedObject (object, const cPtr_integerAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_easyBindingTypeList enumerator_20056 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (567)).isValidAndTrue () ;
  if (enumerator_20056.hasCurrentObject () && bool_0) {
    while (enumerator_20056.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = callCategoryReader_isIntegerType ((const cPtr_easyBindingType *) enumerator_20056.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (568)).boolEnum () ;
      if (kBoolTrue == test_1) {
        outArgument_outDirectDefaultValueAsString = object->mAttribute_mValue.mAttribute_uint.reader_string (SOURCE_FILE_AT_LINE (569)) ;
        outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithInteger:").operator_concat (outArgument_outDirectDefaultValueAsString COMMA_SOURCE_FILE_AT_LINE (570)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (570)) ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_20056.gotoNextObject () ;
      if (enumerator_20056.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (567)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (574)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("only an integer attribute can be initialized by an integer constant") COMMA_SOURCE_FILE_AT_LINE (575)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_integerAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_integerAsDefaultValue.mSlotID,
                                               categoryMethod_integerAsDefaultValue_analyzeDefaultValueType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_integerAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_integerAsDefaultValue_analyzeDefaultValueType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@doubleAsDefaultValue analyzeDefaultValueType' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_doubleAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                         const GALGAS_easyBindingTypeList constinArgument_inAttributeActualTypeList,
                                                                         const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                         GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                         GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                         GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_doubleAsDefaultValue * object = (const cPtr_doubleAsDefaultValue *) inObject ;
  macroValidSharedObject (object, const cPtr_doubleAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_easyBindingTypeList enumerator_21018 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (593)).isValidAndTrue () ;
  if (enumerator_21018.hasCurrentObject () && bool_0) {
    while (enumerator_21018.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = callCategoryReader_isDoubleType ((const cPtr_easyBindingType *) enumerator_21018.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (594)).boolEnum () ;
      if (kBoolTrue == test_1) {
        outArgument_outDirectDefaultValueAsString = object->mAttribute_mValue.mAttribute_double.reader_string (SOURCE_FILE_AT_LINE (595)) ;
        outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithDouble:").operator_concat (outArgument_outDirectDefaultValueAsString COMMA_SOURCE_FILE_AT_LINE (596)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (596)) ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_21018.gotoNextObject () ;
      if (enumerator_21018.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (593)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (600)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("only a double attribute can be initialized by a floating point constant") COMMA_SOURCE_FILE_AT_LINE (601)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_doubleAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_doubleAsDefaultValue.mSlotID,
                                               categoryMethod_doubleAsDefaultValue_analyzeDefaultValueType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_doubleAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_doubleAsDefaultValue_analyzeDefaultValueType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@stringAsDefaultValue analyzeDefaultValueType' *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_stringAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                         const GALGAS_easyBindingTypeList constinArgument_inAttributeActualTypeList,
                                                                         const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                         GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                         GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                         GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                         C_Compiler * inCompiler
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_stringAsDefaultValue * object = (const cPtr_stringAsDefaultValue *) inObject ;
  macroValidSharedObject (object, const cPtr_stringAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_easyBindingTypeList enumerator_21984 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (619)).isValidAndTrue () ;
  if (enumerator_21984.hasCurrentObject () && bool_0) {
    while (enumerator_21984.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = callCategoryReader_isStringType ((const cPtr_easyBindingType *) enumerator_21984.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (620)).boolEnum () ;
      if (kBoolTrue == test_1) {
        outArgument_outDirectDefaultValueAsString = GALGAS_string ("@").operator_concat (object->mAttribute_mValue.mAttribute_string.reader_utf_38_Representation (SOURCE_FILE_AT_LINE (621)) COMMA_SOURCE_FILE_AT_LINE (621)) ;
        outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
        var_found = GALGAS_bool (true) ;
      }
      enumerator_21984.gotoNextObject () ;
      if (enumerator_21984.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (619)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_2 = var_found.operator_not (SOURCE_FILE_AT_LINE (626)).boolEnum () ;
  if (kBoolTrue == test_2) {
    GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_3, GALGAS_string ("only a string attribute can be initialized by a string constant") COMMA_SOURCE_FILE_AT_LINE (627)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_stringAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_stringAsDefaultValue.mSlotID,
                                               categoryMethod_stringAsDefaultValue_analyzeDefaultValueType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_stringAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_stringAsDefaultValue_analyzeDefaultValueType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@identifierAsDefaultValue analyzeDefaultValueType'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_identifierAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                             const GALGAS_easyBindingTypeList constinArgument_inAttributeActualTypeList,
                                                                             const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                             GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                             GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                             GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_identifierAsDefaultValue * object = (const cPtr_identifierAsDefaultValue *) inObject ;
  macroValidSharedObject (object, const cPtr_identifierAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_easyBindingTypeList enumerator_24830 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (700)).isValidAndTrue () ;
  if (enumerator_24830.hasCurrentObject () && bool_0) {
    while (enumerator_24830.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = callCategoryReader_isColorType ((const cPtr_easyBindingType *) enumerator_24830.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (701)).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_found = GALGAS_bool (true) ;
        const enumGalgasBool test_2 = function_predefinedColors (inCompiler COMMA_SOURCE_FILE_AT_LINE (703)).reader_hasKey (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (703)).boolEnum () ;
        if (kBoolTrue == test_2) {
          outArgument_outDirectDefaultValueAsString = GALGAS_string ("[NSColor ").operator_concat (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (704)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (704)) ;
          outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
        }else if (kBoolFalse == test_2) {
          GALGAS_location location_3 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_3, GALGAS_string ("unknown predefined color") COMMA_SOURCE_FILE_AT_LINE (707)) ;
          outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
          outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
        }
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_4 = callCategoryReader_isDateType ((const cPtr_easyBindingType *) enumerator_24830.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (712)).boolEnum () ;
        if (kBoolTrue == test_4) {
          var_found = GALGAS_bool (true) ;
          const enumGalgasBool test_5 = function_predefinedDates (inCompiler COMMA_SOURCE_FILE_AT_LINE (714)).reader_hasKey (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (714)).boolEnum () ;
          if (kBoolTrue == test_5) {
            outArgument_outDirectDefaultValueAsString = GALGAS_string ("[NSDate ").operator_concat (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (715)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (715)) ;
            outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
          }else if (kBoolFalse == test_5) {
            GALGAS_location location_6 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
            inCompiler->emitSemanticError (location_6, GALGAS_string ("unknown predefined date") COMMA_SOURCE_FILE_AT_LINE (718)) ;
            outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
            outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
          }
        }else if (kBoolFalse == test_4) {
          const enumGalgasBool test_7 = callCategoryReader_isEnumType ((const cPtr_easyBindingType *) enumerator_24830.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (723)).boolEnum () ;
          if (kBoolTrue == test_7) {
            var_found = GALGAS_bool (true) ;
            const enumGalgasBool test_8 = constinArgument_inContextAnalysisStruct.mAttribute_mGlobalEnumConstantMap.reader_hasKey (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (725)).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_lstring var_inEnumTypeName ;
              constinArgument_inContextAnalysisStruct.mAttribute_mGlobalEnumConstantMap.method_searchKey (object->mAttribute_mValue, var_inEnumTypeName, inCompiler COMMA_SOURCE_FILE_AT_LINE (726)) ;
              ioArgument_ioFileInclusionSet.mAttribute_mHeaderFileInclusionSet.addAssign_operation (var_inEnumTypeName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (727)) ;
              const enumGalgasBool test_9 = GALGAS_bool (kIsEqual, callCategoryReader_ebTypeIdentifier ((const cPtr_easyBindingType *) enumerator_24830.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (728)).objectCompare (callCategoryReader_ebTypeIdentifier ((const cPtr_enumType *) GALGAS_enumType::constructor_new (var_inEnumTypeName COMMA_SOURCE_FILE_AT_LINE (728)).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (728)))).boolEnum () ;
              if (kBoolTrue == test_9) {
                outArgument_outDirectDefaultValueAsString = object->mAttribute_mValue.mAttribute_string ;
                outArgument_outObjectiveCDefaultValueAsString = GALGAS_string ("[NSNumber numberWithInteger:").operator_concat (object->mAttribute_mValue.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (730)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (730)) ;
              }else if (kBoolFalse == test_9) {
                GALGAS_location location_10 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
                inCompiler->emitSemanticError (location_10, GALGAS_string ("bad enum constant, belongs to the '").operator_concat (var_inEnumTypeName.reader_string (SOURCE_FILE_AT_LINE (733)) COMMA_SOURCE_FILE_AT_LINE (733)).operator_concat (GALGAS_string ("' enum type") COMMA_SOURCE_FILE_AT_LINE (733)) COMMA_SOURCE_FILE_AT_LINE (732)) ;
                outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
                outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
              }
            }else if (kBoolFalse == test_8) {
              GALGAS_location location_11 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_11, GALGAS_string ("unknown predefined date") COMMA_SOURCE_FILE_AT_LINE (738)) ;
              outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
              outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
            }
          }
        }
      }
      enumerator_24830.gotoNextObject () ;
      if (enumerator_24830.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (700)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_12 = var_found.operator_not (SOURCE_FILE_AT_LINE (745)).boolEnum () ;
  if (kBoolTrue == test_12) {
    GALGAS_location location_13 (object->mAttribute_mValue.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_13, GALGAS_string ("unknow type for this identifier") COMMA_SOURCE_FILE_AT_LINE (746)) ;
    outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
    outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_identifierAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_identifierAsDefaultValue.mSlotID,
                                               categoryMethod_identifierAsDefaultValue_analyzeDefaultValueType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_identifierAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_identifierAsDefaultValue_analyzeDefaultValueType, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
// Overriding category method '@listAsDefaultValue analyzeDefaultValueType'  *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_listAsDefaultValue_analyzeDefaultValueType (const cPtr_abstractDefaultValue * inObject,
                                                                       const GALGAS_easyBindingTypeList constinArgument_inAttributeActualTypeList,
                                                                       const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                       GALGAS_string & outArgument_outDirectDefaultValueAsString,
                                                                       GALGAS_string & outArgument_outObjectiveCDefaultValueAsString,
                                                                       GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_listAsDefaultValue * object = (const cPtr_listAsDefaultValue *) inObject ;
  macroValidSharedObject (object, const cPtr_listAsDefaultValue) ;
  outArgument_outObjectiveCDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  outArgument_outDirectDefaultValueAsString = GALGAS_string::makeEmptyString () ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  cEnumerator_easyBindingTypeList enumerator_28008 (constinArgument_inAttributeActualTypeList, kEnumeration_up) ;
  bool bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (781)).isValidAndTrue () ;
  if (enumerator_28008.hasCurrentObject () && bool_0) {
    while (enumerator_28008.hasCurrentObject () && bool_0) {
      const enumGalgasBool test_1 = GALGAS_bool (NULL != dynamic_cast <const cPtr_structType *> (enumerator_28008.current_mType (HERE).ptr ())).boolEnum () ;
      if (kBoolTrue == test_1) {
        var_found = GALGAS_bool (true) ;
        GALGAS_structType temp_2 ;
        if (enumerator_28008.current_mType (HERE).isValid ()) {
          if (NULL != dynamic_cast <const cPtr_structType *> (enumerator_28008.current_mType (HERE).ptr ())) {
            temp_2 = (cPtr_structType *) enumerator_28008.current_mType (HERE).ptr () ;
          }else{
            inCompiler->castError ("structType", enumerator_28008.current_mType (HERE).ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (784)) ;
          }
        }
        GALGAS_structType var_t = temp_2 ;
        ioArgument_ioFileInclusionSet.mAttribute_mHeaderFileInclusionSet.addAssign_operation (callCategoryReader_ebTypeName ((const cPtr_structType *) var_t.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (785)) COMMA_SOURCE_FILE_AT_LINE (785)) ;
        const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, object->mAttribute_mDefaultValueList.reader_length (SOURCE_FILE_AT_LINE (786)).objectCompare (var_t.reader_mFieldList (SOURCE_FILE_AT_LINE (786)).reader_length (SOURCE_FILE_AT_LINE (786)))).boolEnum () ;
        if (kBoolTrue == test_3) {
          inCompiler->emitSemanticError (object->mAttribute_mStartLocation, GALGAS_string ("the '").operator_concat (callCategoryReader_ebTypeName ((const cPtr_structType *) var_t.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (787)) COMMA_SOURCE_FILE_AT_LINE (787)).operator_concat (GALGAS_string ("' struct needs ") COMMA_SOURCE_FILE_AT_LINE (787)).operator_concat (var_t.reader_mFieldList (SOURCE_FILE_AT_LINE (787)).reader_length (SOURCE_FILE_AT_LINE (787)).reader_string (SOURCE_FILE_AT_LINE (787)) COMMA_SOURCE_FILE_AT_LINE (787)).operator_concat (GALGAS_string (" values for initialization") COMMA_SOURCE_FILE_AT_LINE (787)) COMMA_SOURCE_FILE_AT_LINE (787)) ;
        }else if (kBoolFalse == test_3) {
          outArgument_outDirectDefaultValueAsString = GALGAS_string ("make").operator_concat (callCategoryReader_ebTypeName ((const cPtr_structType *) var_t.ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (789)) COMMA_SOURCE_FILE_AT_LINE (789)).operator_concat (GALGAS_string (" (") COMMA_SOURCE_FILE_AT_LINE (789)) ;
          cEnumerator_defaultValueList enumerator_28530 (object->mAttribute_mDefaultValueList, kEnumeration_up) ;
          cEnumerator_structFieldList enumerator_28556 (var_t.reader_mFieldList (SOURCE_FILE_AT_LINE (790)), kEnumeration_up) ;
          while (enumerator_28530.hasCurrentObject () && enumerator_28556.hasCurrentObject ()) {
            GALGAS_string var_directDefaultValueAsString ;
            GALGAS_string joker_28767_0 ; // Joker input parameter
            callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_28530.current_mDefaultValue (HERE).ptr (), GALGAS_easyBindingTypeList::constructor_listWithValue (enumerator_28556.current_mFieldType (HERE) COMMA_SOURCE_FILE_AT_LINE (793)), constinArgument_inContextAnalysisStruct, var_directDefaultValueAsString, joker_28767_0, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE_AT_LINE (792)) ;
            outArgument_outDirectDefaultValueAsString.dotAssign_operation (var_directDefaultValueAsString COMMA_SOURCE_FILE_AT_LINE (799)) ;
            if (enumerator_28530.hasNextObject () && enumerator_28556.hasNextObject ()) {
              outArgument_outDirectDefaultValueAsString.dotAssign_operation (GALGAS_string (", ") COMMA_SOURCE_FILE_AT_LINE (801)) ;
            }
            enumerator_28530.gotoNextObject () ;
            enumerator_28556.gotoNextObject () ;
          }
          outArgument_outDirectDefaultValueAsString.dotAssign_operation (GALGAS_string (")") COMMA_SOURCE_FILE_AT_LINE (803)) ;
        }
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_4 = callCategoryReader_isFontType ((const cPtr_easyBindingType *) enumerator_28008.current_mType (HERE).ptr (), inCompiler COMMA_SOURCE_FILE_AT_LINE (805)).boolEnum () ;
        if (kBoolTrue == test_4) {
          var_found = GALGAS_bool (true) ;
          GALGAS_string var_errorMessage = GALGAS_string ("an NSFont should be initialized by a (fontName, fontSize) value") ;
          const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, object->mAttribute_mDefaultValueList.reader_length (SOURCE_FILE_AT_LINE (808)).objectCompare (GALGAS_uint ((PMUInt32) 2U))).boolEnum () ;
          if (kBoolTrue == test_5) {
            inCompiler->emitSemanticError (object->mAttribute_mStartLocation, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (809)) ;
          }else if (kBoolFalse == test_5) {
            GALGAS_abstractDefaultValue var_v_30_ = object->mAttribute_mDefaultValueList.reader_mDefaultValueAtIndex (GALGAS_uint ((PMUInt32) 0U), inCompiler COMMA_SOURCE_FILE_AT_LINE (811)) ;
            GALGAS_abstractDefaultValue var_v_31_ = object->mAttribute_mDefaultValueList.reader_mDefaultValueAtIndex (GALGAS_uint ((PMUInt32) 1U), inCompiler COMMA_SOURCE_FILE_AT_LINE (812)) ;
            GALGAS_identifierAsDefaultValue var_fontName ;
            const enumGalgasBool test_6 = GALGAS_bool (NULL != dynamic_cast <const cPtr_identifierAsDefaultValue *> (var_v_30_.ptr ())).boolEnum () ;
            if (kBoolTrue == test_6) {
              GALGAS_identifierAsDefaultValue temp_7 ;
              if (var_v_30_.isValid ()) {
                if (NULL != dynamic_cast <const cPtr_identifierAsDefaultValue *> (var_v_30_.ptr ())) {
                  temp_7 = (cPtr_identifierAsDefaultValue *) var_v_30_.ptr () ;
                }else{
                  inCompiler->castError ("identifierAsDefaultValue", var_v_30_.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (815)) ;
                }
              }
              var_fontName = temp_7 ;
            }else if (kBoolFalse == test_6) {
              inCompiler->emitSemanticError (object->mAttribute_mStartLocation, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (817)) ;
              var_fontName.drop () ; // Release error dropped variable
            }
            GALGAS_integerAsDefaultValue var_fontSize ;
            const enumGalgasBool test_8 = GALGAS_bool (NULL != dynamic_cast <const cPtr_integerAsDefaultValue *> (var_v_31_.ptr ())).boolEnum () ;
            if (kBoolTrue == test_8) {
              GALGAS_integerAsDefaultValue temp_9 ;
              if (var_v_31_.isValid ()) {
                if (NULL != dynamic_cast <const cPtr_integerAsDefaultValue *> (var_v_31_.ptr ())) {
                  temp_9 = (cPtr_integerAsDefaultValue *) var_v_31_.ptr () ;
                }else{
                  inCompiler->castError ("integerAsDefaultValue", var_v_31_.ptr ()->classDescriptor () COMMA_SOURCE_FILE_AT_LINE (821)) ;
                }
              }
              var_fontSize = temp_9 ;
            }else if (kBoolFalse == test_8) {
              inCompiler->emitSemanticError (object->mAttribute_mStartLocation, var_errorMessage COMMA_SOURCE_FILE_AT_LINE (823)) ;
              var_fontSize.drop () ; // Release error dropped variable
            }
            const enumGalgasBool test_10 = function_predefinedFonts (inCompiler COMMA_SOURCE_FILE_AT_LINE (825)).reader_hasKey (var_fontName.reader_mValue (SOURCE_FILE_AT_LINE (825)).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (825)).boolEnum () ;
            if (kBoolTrue == test_10) {
              outArgument_outDirectDefaultValueAsString = GALGAS_string ("[NSFont ").operator_concat (var_fontName.reader_mValue (SOURCE_FILE_AT_LINE (826)).mAttribute_string COMMA_SOURCE_FILE_AT_LINE (826)).operator_concat (GALGAS_string (":") COMMA_SOURCE_FILE_AT_LINE (826)).operator_concat (var_fontSize.reader_mValue (SOURCE_FILE_AT_LINE (826)).mAttribute_uint.reader_string (SOURCE_FILE_AT_LINE (826)) COMMA_SOURCE_FILE_AT_LINE (826)).operator_concat (GALGAS_string ("]") COMMA_SOURCE_FILE_AT_LINE (826)) ;
              outArgument_outObjectiveCDefaultValueAsString = outArgument_outDirectDefaultValueAsString ;
            }else if (kBoolFalse == test_10) {
              GALGAS_location location_11 (var_fontName.reader_mValue (SOURCE_FILE_AT_LINE (829)).reader_location (HERE)) ; // Implicit use of 'location' reader
              inCompiler->emitSemanticError (location_11, GALGAS_string ("unknown predefined font name") COMMA_SOURCE_FILE_AT_LINE (829)) ;
              outArgument_outDirectDefaultValueAsString.drop () ; // Release error dropped variable
              outArgument_outObjectiveCDefaultValueAsString.drop () ; // Release error dropped variable
            }
          }
        }
      }
      enumerator_28008.gotoNextObject () ;
      if (enumerator_28008.hasCurrentObject ()) {
        bool_0 = var_found.operator_not (SOURCE_FILE_AT_LINE (781)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_12 = var_found.operator_not (SOURCE_FILE_AT_LINE (837)).boolEnum () ;
  if (kBoolTrue == test_12) {
    inCompiler->emitSemanticError (object->mAttribute_mStartLocation, GALGAS_string ("invalid initialization value") COMMA_SOURCE_FILE_AT_LINE (838)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_listAsDefaultValue_analyzeDefaultValueType (void) {
  enterCategoryMethod_analyzeDefaultValueType (kTypeDescriptor_GALGAS_listAsDefaultValue.mSlotID,
                                               categoryMethod_listAsDefaultValue_analyzeDefaultValueType) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_listAsDefaultValue_analyzeDefaultValueType (defineCategoryMethod_listAsDefaultValue_analyzeDefaultValueType, NULL) ;

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element::GALGAS_unifiedTypeProxyList_2E_element (void) :
mAttribute_mTypeProxy () {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element::~ GALGAS_unifiedTypeProxyList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element::GALGAS_unifiedTypeProxyList_2E_element (const GALGAS_unifiedTypeProxy & inOperand0) :
mAttribute_mTypeProxy (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element GALGAS_unifiedTypeProxyList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_unifiedTypeProxyList_2E_element (GALGAS_unifiedTypeProxy::constructor_null (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element GALGAS_unifiedTypeProxyList_2E_element::constructor_new (const GALGAS_unifiedTypeProxy & inOperand0 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_unifiedTypeProxyList_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_unifiedTypeProxyList_2E_element::objectCompare (const GALGAS_unifiedTypeProxyList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTypeProxy.objectCompare (inOperand.mAttribute_mTypeProxy) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_unifiedTypeProxyList_2E_element::isValid (void) const {
  return mAttribute_mTypeProxy.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList_2E_element::drop (void) {
  mAttribute_mTypeProxy.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_unifiedTypeProxyList_2E_element::description (C_String & ioString,
                                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @unifiedTypeProxyList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTypeProxy.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_unifiedTypeProxyList_2E_element::reader_mTypeProxy (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTypeProxy ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @unifiedTypeProxyList.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_unifiedTypeProxyList_2E_element ("unifiedTypeProxyList.element",
                                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_unifiedTypeProxyList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_unifiedTypeProxyList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_unifiedTypeProxyList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_unifiedTypeProxyList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList_2E_element GALGAS_unifiedTypeProxyList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_unifiedTypeProxyList_2E_element result ;
  const GALGAS_unifiedTypeProxyList_2E_element * p = (const GALGAS_unifiedTypeProxyList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_unifiedTypeProxyList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("unifiedTypeProxyList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element::GALGAS_globalEnumConstantMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mEnumTypeName () {
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element::~ GALGAS_globalEnumConstantMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element::GALGAS_globalEnumConstantMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_lstring & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mEnumTypeName (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element GALGAS_globalEnumConstantMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_globalEnumConstantMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element GALGAS_globalEnumConstantMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_lstring & inOperand1 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_globalEnumConstantMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_globalEnumConstantMap_2E_element::objectCompare (const GALGAS_globalEnumConstantMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumTypeName.objectCompare (inOperand.mAttribute_mEnumTypeName) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_globalEnumConstantMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mEnumTypeName.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mEnumTypeName.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_globalEnumConstantMap_2E_element::description (C_String & ioString,
                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @globalEnumConstantMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumTypeName.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_globalEnumConstantMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_globalEnumConstantMap_2E_element::reader_mEnumTypeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumTypeName ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @globalEnumConstantMap.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_globalEnumConstantMap_2E_element ("globalEnumConstantMap.element",
                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_globalEnumConstantMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_globalEnumConstantMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_globalEnumConstantMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_globalEnumConstantMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_globalEnumConstantMap_2E_element GALGAS_globalEnumConstantMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_globalEnumConstantMap_2E_element result ;
  const GALGAS_globalEnumConstantMap_2E_element * p = (const GALGAS_globalEnumConstantMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_globalEnumConstantMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("globalEnumConstantMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element::GALGAS_enumConstantMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element::~ GALGAS_enumConstantMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element::GALGAS_enumConstantMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element GALGAS_enumConstantMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_enumConstantMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element GALGAS_enumConstantMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_enumConstantMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_enumConstantMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_enumConstantMap_2E_element::objectCompare (const GALGAS_enumConstantMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_enumConstantMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_enumConstantMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_enumConstantMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @enumConstantMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_enumConstantMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @enumConstantMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumConstantMap_2E_element ("enumConstantMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumConstantMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumConstantMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumConstantMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumConstantMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap_2E_element GALGAS_enumConstantMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_enumConstantMap_2E_element result ;
  const GALGAS_enumConstantMap_2E_element * p = (const GALGAS_enumConstantMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumConstantMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumConstantMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element::GALGAS_structTypeMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mFieldList (),
mAttribute_mHeaderFileInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element::~ GALGAS_structTypeMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element::GALGAS_structTypeMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_structFieldList & inOperand1,
                                                                  const GALGAS_stringset & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mFieldList (inOperand1),
mAttribute_mHeaderFileInclusionSet (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element GALGAS_structTypeMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_structTypeMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_structFieldList::constructor_emptyList (HERE),
                                          GALGAS_stringset::constructor_emptySet (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element GALGAS_structTypeMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_structFieldList & inOperand1,
                                                                                  const GALGAS_stringset & inOperand2 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_structTypeMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_structTypeMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_structTypeMap_2E_element::objectCompare (const GALGAS_structTypeMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFieldList.objectCompare (inOperand.mAttribute_mFieldList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHeaderFileInclusionSet.objectCompare (inOperand.mAttribute_mHeaderFileInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_structTypeMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mFieldList.isValid () && mAttribute_mHeaderFileInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_structTypeMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mFieldList.drop () ;
  mAttribute_mHeaderFileInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_structTypeMap_2E_element::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "<struct @structTypeMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFieldList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHeaderFileInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_structTypeMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_structFieldList GALGAS_structTypeMap_2E_element::reader_mFieldList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFieldList ;
}

//---------------------------------------------------------------------------*

GALGAS_stringset GALGAS_structTypeMap_2E_element::reader_mHeaderFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHeaderFileInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @structTypeMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_structTypeMap_2E_element ("structTypeMap.element",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_structTypeMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_structTypeMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_structTypeMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_structTypeMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_structTypeMap_2E_element GALGAS_structTypeMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_structTypeMap_2E_element result ;
  const GALGAS_structTypeMap_2E_element * p = (const GALGAS_structTypeMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_structTypeMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("structTypeMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element::GALGAS_enumMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mConstantOrderedList (),
mAttribute_mEnumConstantMap () {
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element::~ GALGAS_enumMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element::GALGAS_enumMap_2E_element (const GALGAS_lstring & inOperand0,
                                                      const GALGAS_lstringlist & inOperand1,
                                                      const GALGAS_enumConstantMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mConstantOrderedList (inOperand1),
mAttribute_mEnumConstantMap (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element GALGAS_enumMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_enumMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                    GALGAS_lstringlist::constructor_emptyList (HERE),
                                    GALGAS_enumConstantMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element GALGAS_enumMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_lstringlist & inOperand1,
                                                                      const GALGAS_enumConstantMap & inOperand2 
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_enumMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_enumMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_enumMap_2E_element::objectCompare (const GALGAS_enumMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mConstantOrderedList.objectCompare (inOperand.mAttribute_mConstantOrderedList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mEnumConstantMap.objectCompare (inOperand.mAttribute_mEnumConstantMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_enumMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mConstantOrderedList.isValid () && mAttribute_mEnumConstantMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_enumMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mConstantOrderedList.drop () ;
  mAttribute_mEnumConstantMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_enumMap_2E_element::description (C_String & ioString,
                                             const PMSInt32 inIndentation) const {
  ioString << "<struct @enumMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mConstantOrderedList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mEnumConstantMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_enumMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_enumMap_2E_element::reader_mConstantOrderedList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mConstantOrderedList ;
}

//---------------------------------------------------------------------------*

GALGAS_enumConstantMap GALGAS_enumMap_2E_element::reader_mEnumConstantMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEnumConstantMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                           @enumMap.element type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_enumMap_2E_element ("enumMap.element",
                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_enumMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_enumMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_enumMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_enumMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_enumMap_2E_element GALGAS_enumMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_enumMap_2E_element result ;
  const GALGAS_enumMap_2E_element * p = (const GALGAS_enumMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_enumMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("enumMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element::GALGAS_userCursorMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mHotSpotX (),
mAttribute_mHotSpotY () {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element::~ GALGAS_userCursorMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element::GALGAS_userCursorMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_double & inOperand1,
                                                                  const GALGAS_double & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mHotSpotX (inOperand1),
mAttribute_mHotSpotY (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element GALGAS_userCursorMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_userCursorMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_double::constructor_default (HERE),
                                          GALGAS_double::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element GALGAS_userCursorMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_double & inOperand1,
                                                                                  const GALGAS_double & inOperand2 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_userCursorMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_userCursorMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_userCursorMap_2E_element::objectCompare (const GALGAS_userCursorMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotX.objectCompare (inOperand.mAttribute_mHotSpotX) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHotSpotY.objectCompare (inOperand.mAttribute_mHotSpotY) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_userCursorMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mHotSpotX.isValid () && mAttribute_mHotSpotY.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mHotSpotX.drop () ;
  mAttribute_mHotSpotY.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_userCursorMap_2E_element::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "<struct @userCursorMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotX.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHotSpotY.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_userCursorMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap_2E_element::reader_mHotSpotX (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotX ;
}

//---------------------------------------------------------------------------*

GALGAS_double GALGAS_userCursorMap_2E_element::reader_mHotSpotY (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHotSpotY ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @userCursorMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_userCursorMap_2E_element ("userCursorMap.element",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_userCursorMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_userCursorMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_userCursorMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_userCursorMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_userCursorMap_2E_element GALGAS_userCursorMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_userCursorMap_2E_element result ;
  const GALGAS_userCursorMap_2E_element * p = (const GALGAS_userCursorMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_userCursorMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("userCursorMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::GALGAS_classMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSuperClassName (),
mAttribute_mPropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mAllArrayPropertyForImplementation (),
mAttribute_mCurrentArrayPropertyForImplementation (),
mAttribute_mInclusionSet () {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::~ GALGAS_classMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element::GALGAS_classMap_2E_element (const GALGAS_lstring & inOperand0,
                                                        const GALGAS_string & inOperand1,
                                                        const GALGAS_observablePropertyMap & inOperand2,
                                                        const GALGAS_attributeListForImplementation & inOperand3,
                                                        const GALGAS_attributeListForImplementation & inOperand4,
                                                        const GALGAS_attributeListForImplementation & inOperand5,
                                                        const GALGAS_transientListForImplementation & inOperand6,
                                                        const GALGAS_preferenceArrayMap & inOperand7,
                                                        const GALGAS_preferenceArrayMap & inOperand8,
                                                        const GALGAS_fileInclusionSet & inOperand9) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperClassName (inOperand1),
mAttribute_mPropertyMap (inOperand2),
mAttribute_mAttributeListForInitMethodHeader (inOperand3),
mAttribute_mInheritedAttributeListForImplementation (inOperand4),
mAttribute_mAttributeListForImplementation (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mAllArrayPropertyForImplementation (inOperand7),
mAttribute_mCurrentArrayPropertyForImplementation (inOperand8),
mAttribute_mInclusionSet (inOperand9) {
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_classMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                     GALGAS_string::constructor_default (HERE),
                                     GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                     GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                     GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                     GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                     GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                     GALGAS_preferenceArrayMap::constructor_emptyMap (HERE),
                                     GALGAS_preferenceArrayMap::constructor_emptyMap (HERE),
                                     GALGAS_fileInclusionSet::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                        const GALGAS_string & inOperand1,
                                                                        const GALGAS_observablePropertyMap & inOperand2,
                                                                        const GALGAS_attributeListForImplementation & inOperand3,
                                                                        const GALGAS_attributeListForImplementation & inOperand4,
                                                                        const GALGAS_attributeListForImplementation & inOperand5,
                                                                        const GALGAS_transientListForImplementation & inOperand6,
                                                                        const GALGAS_preferenceArrayMap & inOperand7,
                                                                        const GALGAS_preferenceArrayMap & inOperand8,
                                                                        const GALGAS_fileInclusionSet & inOperand9 
                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_classMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid ()) {
    result = GALGAS_classMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_classMap_2E_element::objectCompare (const GALGAS_classMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyMap.objectCompare (inOperand.mAttribute_mPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllArrayPropertyForImplementation.objectCompare (inOperand.mAttribute_mAllArrayPropertyForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentArrayPropertyForImplementation.objectCompare (inOperand.mAttribute_mCurrentArrayPropertyForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInclusionSet.objectCompare (inOperand.mAttribute_mInclusionSet) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_classMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mPropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mAllArrayPropertyForImplementation.isValid () && mAttribute_mCurrentArrayPropertyForImplementation.isValid () && mAttribute_mInclusionSet.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mPropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mAllArrayPropertyForImplementation.drop () ;
  mAttribute_mCurrentArrayPropertyForImplementation.drop () ;
  mAttribute_mInclusionSet.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_classMap_2E_element::description (C_String & ioString,
                                              const PMSInt32 inIndentation) const {
  ioString << "<struct @classMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllArrayPropertyForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentArrayPropertyForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInclusionSet.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_classMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_classMap_2E_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_classMap_2E_element::reader_mPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_classMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_classMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_classMap_2E_element::reader_mAllArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllArrayPropertyForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_classMap_2E_element::reader_mCurrentArrayPropertyForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentArrayPropertyForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_classMap_2E_element::reader_mInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInclusionSet ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @classMap.element type                           *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_classMap_2E_element ("classMap.element",
                                            NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_classMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_classMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_classMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_classMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_classMap_2E_element GALGAS_classMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_LOCATION_ARGS) {
  GALGAS_classMap_2E_element result ;
  const GALGAS_classMap_2E_element * p = (const GALGAS_classMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_classMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("classMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::GALGAS_entityMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mSuperEntityName (),
mAttribute_mObservablePropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mCurrentRelationshipList (),
mAttribute_mAllRelationshipList (),
mAttribute_mAllPropertyMap (),
mAttribute_mCurrentRelationshipMap (),
mAttribute_mAllRelationshipMap (),
mAttribute_mFileInclusionSet (),
mAttribute_mSignList () {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::~ GALGAS_entityMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element::GALGAS_entityMap_2E_element (const GALGAS_lstring & inOperand0,
                                                          const GALGAS_string & inOperand1,
                                                          const GALGAS_observablePropertyMap & inOperand2,
                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                          const GALGAS_transientListForImplementation & inOperand6,
                                                          const GALGAS_relationshipList & inOperand7,
                                                          const GALGAS_relationshipList & inOperand8,
                                                          const GALGAS_propertyMap & inOperand9,
                                                          const GALGAS_relationshipMap & inOperand10,
                                                          const GALGAS_relationshipMap & inOperand11,
                                                          const GALGAS_fileInclusionSet & inOperand12,
                                                          const GALGAS_signListForGeneration & inOperand13) :
mAttribute_lkey (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mObservablePropertyMap (inOperand2),
mAttribute_mAttributeListForInitMethodHeader (inOperand3),
mAttribute_mInheritedAttributeListForImplementation (inOperand4),
mAttribute_mAttributeListForImplementation (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mCurrentRelationshipList (inOperand7),
mAttribute_mAllRelationshipList (inOperand8),
mAttribute_mAllPropertyMap (inOperand9),
mAttribute_mCurrentRelationshipMap (inOperand10),
mAttribute_mAllRelationshipMap (inOperand11),
mAttribute_mFileInclusionSet (inOperand12),
mAttribute_mSignList (inOperand13) {
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_entityMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                      GALGAS_string::constructor_default (HERE),
                                      GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                      GALGAS_relationshipList::constructor_emptyList (HERE),
                                      GALGAS_relationshipList::constructor_emptyList (HERE),
                                      GALGAS_propertyMap::constructor_emptyMap (HERE),
                                      GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                      GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                      GALGAS_fileInclusionSet::constructor_default (HERE),
                                      GALGAS_signListForGeneration::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                          const GALGAS_string & inOperand1,
                                                                          const GALGAS_observablePropertyMap & inOperand2,
                                                                          const GALGAS_attributeListForImplementation & inOperand3,
                                                                          const GALGAS_attributeListForImplementation & inOperand4,
                                                                          const GALGAS_attributeListForImplementation & inOperand5,
                                                                          const GALGAS_transientListForImplementation & inOperand6,
                                                                          const GALGAS_relationshipList & inOperand7,
                                                                          const GALGAS_relationshipList & inOperand8,
                                                                          const GALGAS_propertyMap & inOperand9,
                                                                          const GALGAS_relationshipMap & inOperand10,
                                                                          const GALGAS_relationshipMap & inOperand11,
                                                                          const GALGAS_fileInclusionSet & inOperand12,
                                                                          const GALGAS_signListForGeneration & inOperand13 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid ()) {
    result = GALGAS_entityMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityMap_2E_element::objectCompare (const GALGAS_entityMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (inOperand.mAttribute_mCurrentRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipList.objectCompare (inOperand.mAttribute_mAllRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllPropertyMap.objectCompare (inOperand.mAttribute_mAllPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (inOperand.mAttribute_mCurrentRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipMap.objectCompare (inOperand.mAttribute_mAllRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignList.objectCompare (inOperand.mAttribute_mSignList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_entityMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mSignList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mCurrentRelationshipList.drop () ;
  mAttribute_mAllRelationshipList.drop () ;
  mAttribute_mAllPropertyMap.drop () ;
  mAttribute_mCurrentRelationshipMap.drop () ;
  mAttribute_mAllRelationshipMap.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mSignList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityMap_2E_element::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "<struct @entityMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_entityMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityMap_2E_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2E_element::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityMap_2E_element::reader_mAllRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityMap_2E_element::reader_mAllPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2E_element::reader_mCurrentRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityMap_2E_element::reader_mAllRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityMap_2E_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityMap_2E_element::reader_mSignList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @entityMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityMap_2E_element ("entityMap.element",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityMap_2E_element GALGAS_entityMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_entityMap_2E_element result ;
  const GALGAS_entityMap_2E_element * p = (const GALGAS_entityMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration_2E_element::GALGAS_signListForGeneration_2E_element (void) :
mAttribute_mPropertyName (),
mAttribute_mPropertyType () {
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration_2E_element::~ GALGAS_signListForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration_2E_element::GALGAS_signListForGeneration_2E_element (const GALGAS_string & inOperand0,
                                                                                  const GALGAS_easyBindingType & inOperand1) :
mAttribute_mPropertyName (inOperand0),
mAttribute_mPropertyType (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration_2E_element GALGAS_signListForGeneration_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                  const GALGAS_easyBindingType & inOperand1 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_signListForGeneration_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_signListForGeneration_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_signListForGeneration_2E_element::objectCompare (const GALGAS_signListForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyName.objectCompare (inOperand.mAttribute_mPropertyName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertyType.objectCompare (inOperand.mAttribute_mPropertyType) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_signListForGeneration_2E_element::isValid (void) const {
  return mAttribute_mPropertyName.isValid () && mAttribute_mPropertyType.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration_2E_element::drop (void) {
  mAttribute_mPropertyName.drop () ;
  mAttribute_mPropertyType.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_signListForGeneration_2E_element::description (C_String & ioString,
                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @signListForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mPropertyName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertyType.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_signListForGeneration_2E_element::reader_mPropertyName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyName ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_signListForGeneration_2E_element::reader_mPropertyType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertyType ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @signListForGeneration.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_signListForGeneration_2E_element ("signListForGeneration.element",
                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_signListForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_signListForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_signListForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_signListForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration_2E_element GALGAS_signListForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_signListForGeneration_2E_element result ;
  const GALGAS_signListForGeneration_2E_element * p = (const GALGAS_signListForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_signListForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("signListForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element::GALGAS_entityListForGeneration_2E_element (void) :
mAttribute_mEntityName (),
mAttribute_mSuperEntityName (),
mAttribute_mObservablePropertyMap (),
mAttribute_mAttributeListForInitMethodHeader (),
mAttribute_mInheritedAttributeListForImplementation (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mCurrentRelationshipList (),
mAttribute_mAllRelationshipList (),
mAttribute_mAllPropertyMap (),
mAttribute_mCurrentRelationshipMap (),
mAttribute_mAllRelationshipMap (),
mAttribute_mToManyRelationshipList (),
mAttribute_mFileInclusionSet (),
mAttribute_mToOneRelationshipList (),
mAttribute_mSignList () {
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element::~ GALGAS_entityListForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element::GALGAS_entityListForGeneration_2E_element (const GALGAS_string & inOperand0,
                                                                                      const GALGAS_string & inOperand1,
                                                                                      const GALGAS_observablePropertyMap & inOperand2,
                                                                                      const GALGAS_attributeListForImplementation & inOperand3,
                                                                                      const GALGAS_attributeListForImplementation & inOperand4,
                                                                                      const GALGAS_attributeListForImplementation & inOperand5,
                                                                                      const GALGAS_transientListForImplementation & inOperand6,
                                                                                      const GALGAS_relationshipList & inOperand7,
                                                                                      const GALGAS_relationshipList & inOperand8,
                                                                                      const GALGAS_propertyMap & inOperand9,
                                                                                      const GALGAS_relationshipMap & inOperand10,
                                                                                      const GALGAS_relationshipMap & inOperand11,
                                                                                      const GALGAS__32_stringlist & inOperand12,
                                                                                      const GALGAS_fileInclusionSet & inOperand13,
                                                                                      const GALGAS__32_stringlist & inOperand14,
                                                                                      const GALGAS_signListForGeneration & inOperand15) :
mAttribute_mEntityName (inOperand0),
mAttribute_mSuperEntityName (inOperand1),
mAttribute_mObservablePropertyMap (inOperand2),
mAttribute_mAttributeListForInitMethodHeader (inOperand3),
mAttribute_mInheritedAttributeListForImplementation (inOperand4),
mAttribute_mAttributeListForImplementation (inOperand5),
mAttribute_mTransientListForImplementation (inOperand6),
mAttribute_mCurrentRelationshipList (inOperand7),
mAttribute_mAllRelationshipList (inOperand8),
mAttribute_mAllPropertyMap (inOperand9),
mAttribute_mCurrentRelationshipMap (inOperand10),
mAttribute_mAllRelationshipMap (inOperand11),
mAttribute_mToManyRelationshipList (inOperand12),
mAttribute_mFileInclusionSet (inOperand13),
mAttribute_mToOneRelationshipList (inOperand14),
mAttribute_mSignList (inOperand15) {
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element GALGAS_entityListForGeneration_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_entityListForGeneration_2E_element (GALGAS_string::constructor_default (HERE),
                                                    GALGAS_string::constructor_default (HERE),
                                                    GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                                    GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                                    GALGAS_relationshipList::constructor_emptyList (HERE),
                                                    GALGAS_relationshipList::constructor_emptyList (HERE),
                                                    GALGAS_propertyMap::constructor_emptyMap (HERE),
                                                    GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                                    GALGAS_relationshipMap::constructor_emptyMap (HERE),
                                                    GALGAS__32_stringlist::constructor_emptyList (HERE),
                                                    GALGAS_fileInclusionSet::constructor_default (HERE),
                                                    GALGAS__32_stringlist::constructor_emptyList (HERE),
                                                    GALGAS_signListForGeneration::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element GALGAS_entityListForGeneration_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                      const GALGAS_string & inOperand1,
                                                                                                      const GALGAS_observablePropertyMap & inOperand2,
                                                                                                      const GALGAS_attributeListForImplementation & inOperand3,
                                                                                                      const GALGAS_attributeListForImplementation & inOperand4,
                                                                                                      const GALGAS_attributeListForImplementation & inOperand5,
                                                                                                      const GALGAS_transientListForImplementation & inOperand6,
                                                                                                      const GALGAS_relationshipList & inOperand7,
                                                                                                      const GALGAS_relationshipList & inOperand8,
                                                                                                      const GALGAS_propertyMap & inOperand9,
                                                                                                      const GALGAS_relationshipMap & inOperand10,
                                                                                                      const GALGAS_relationshipMap & inOperand11,
                                                                                                      const GALGAS__32_stringlist & inOperand12,
                                                                                                      const GALGAS_fileInclusionSet & inOperand13,
                                                                                                      const GALGAS__32_stringlist & inOperand14,
                                                                                                      const GALGAS_signListForGeneration & inOperand15 
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_entityListForGeneration_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid () && inOperand9.isValid () && inOperand10.isValid () && inOperand11.isValid () && inOperand12.isValid () && inOperand13.isValid () && inOperand14.isValid () && inOperand15.isValid ()) {
    result = GALGAS_entityListForGeneration_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8, inOperand9, inOperand10, inOperand11, inOperand12, inOperand13, inOperand14, inOperand15) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_entityListForGeneration_2E_element::objectCompare (const GALGAS_entityListForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mEntityName.objectCompare (inOperand.mAttribute_mEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperEntityName.objectCompare (inOperand.mAttribute_mSuperEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForInitMethodHeader.objectCompare (inOperand.mAttribute_mAttributeListForInitMethodHeader) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInheritedAttributeListForImplementation.objectCompare (inOperand.mAttribute_mInheritedAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipList.objectCompare (inOperand.mAttribute_mCurrentRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipList.objectCompare (inOperand.mAttribute_mAllRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllPropertyMap.objectCompare (inOperand.mAttribute_mAllPropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentRelationshipMap.objectCompare (inOperand.mAttribute_mCurrentRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllRelationshipMap.objectCompare (inOperand.mAttribute_mAllRelationshipMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mToManyRelationshipList.objectCompare (inOperand.mAttribute_mToManyRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mToOneRelationshipList.objectCompare (inOperand.mAttribute_mToOneRelationshipList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSignList.objectCompare (inOperand.mAttribute_mSignList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_entityListForGeneration_2E_element::isValid (void) const {
  return mAttribute_mEntityName.isValid () && mAttribute_mSuperEntityName.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mAttributeListForInitMethodHeader.isValid () && mAttribute_mInheritedAttributeListForImplementation.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mCurrentRelationshipList.isValid () && mAttribute_mAllRelationshipList.isValid () && mAttribute_mAllPropertyMap.isValid () && mAttribute_mCurrentRelationshipMap.isValid () && mAttribute_mAllRelationshipMap.isValid () && mAttribute_mToManyRelationshipList.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mToOneRelationshipList.isValid () && mAttribute_mSignList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration_2E_element::drop (void) {
  mAttribute_mEntityName.drop () ;
  mAttribute_mSuperEntityName.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mAttributeListForInitMethodHeader.drop () ;
  mAttribute_mInheritedAttributeListForImplementation.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mCurrentRelationshipList.drop () ;
  mAttribute_mAllRelationshipList.drop () ;
  mAttribute_mAllPropertyMap.drop () ;
  mAttribute_mCurrentRelationshipMap.drop () ;
  mAttribute_mAllRelationshipMap.drop () ;
  mAttribute_mToManyRelationshipList.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mToOneRelationshipList.drop () ;
  mAttribute_mSignList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_entityListForGeneration_2E_element::description (C_String & ioString,
                                                             const PMSInt32 inIndentation) const {
  ioString << "<struct @entityListForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForInitMethodHeader.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInheritedAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllPropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllRelationshipMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mToManyRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mToOneRelationshipList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSignList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration_2E_element::reader_mEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_entityListForGeneration_2E_element::reader_mSuperEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_entityListForGeneration_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration_2E_element::reader_mAttributeListForInitMethodHeader (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForInitMethodHeader ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration_2E_element::reader_mInheritedAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInheritedAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_entityListForGeneration_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_entityListForGeneration_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration_2E_element::reader_mCurrentRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipList GALGAS_entityListForGeneration_2E_element::reader_mAllRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap GALGAS_entityListForGeneration_2E_element::reader_mAllPropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllPropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration_2E_element::reader_mCurrentRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap GALGAS_entityListForGeneration_2E_element::reader_mAllRelationshipMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllRelationshipMap ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration_2E_element::reader_mToManyRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToManyRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_entityListForGeneration_2E_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_entityListForGeneration_2E_element::reader_mToOneRelationshipList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mToOneRelationshipList ;
}

//---------------------------------------------------------------------------*

GALGAS_signListForGeneration GALGAS_entityListForGeneration_2E_element::reader_mSignList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSignList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @entityListForGeneration.element type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_entityListForGeneration_2E_element ("entityListForGeneration.element",
                                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_entityListForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_entityListForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_entityListForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_entityListForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_entityListForGeneration_2E_element GALGAS_entityListForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_entityListForGeneration_2E_element result ;
  const GALGAS_entityListForGeneration_2E_element * p = (const GALGAS_entityListForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_entityListForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("entityListForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (void) :
mAttribute_mColumnIdentifier (),
mAttribute_mRequiredCellClass (),
mAttribute_mObservableAttributeName (),
mAttribute_mOutletBindingOptionList () {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::~ GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (const GALGAS_string & inOperand0,
                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                    const GALGAS__32_stringlist & inOperand3) :
mAttribute_mColumnIdentifier (inOperand0),
mAttribute_mRequiredCellClass (inOperand1),
mAttribute_mObservableAttributeName (inOperand2),
mAttribute_mOutletBindingOptionList (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (GALGAS_string::constructor_default (HERE),
                                                                           GALGAS_string::constructor_default (HERE),
                                                                           GALGAS_string::constructor_default (HERE),
                                                                           GALGAS__32_stringlist::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                                                    const GALGAS__32_stringlist & inOperand3 
                                                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::objectCompare (const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mColumnIdentifier.objectCompare (inOperand.mAttribute_mColumnIdentifier) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredCellClass.objectCompare (inOperand.mAttribute_mRequiredCellClass) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableAttributeName.objectCompare (inOperand.mAttribute_mObservableAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingOptionList.objectCompare (inOperand.mAttribute_mOutletBindingOptionList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::isValid (void) const {
  return mAttribute_mColumnIdentifier.isValid () && mAttribute_mRequiredCellClass.isValid () && mAttribute_mObservableAttributeName.isValid () && mAttribute_mOutletBindingOptionList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::drop (void) {
  mAttribute_mColumnIdentifier.drop () ;
  mAttribute_mRequiredCellClass.drop () ;
  mAttribute_mObservableAttributeName.drop () ;
  mAttribute_mOutletBindingOptionList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::description (C_String & ioString,
                                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @columnBindingForTableValueBindingForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mColumnIdentifier.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredCellClass.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingOptionList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mColumnIdentifier (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mColumnIdentifier ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mRequiredCellClass (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredCellClass ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mObservableAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS__32_stringlist GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::reader_mOutletBindingOptionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingOptionList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//       @columnBindingForTableValueBindingForGeneration.element type        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2E_element ("columnBindingForTableValueBindingForGeneration.element",
                                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_columnBindingForTableValueBindingForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_columnBindingForTableValueBindingForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_columnBindingForTableValueBindingForGeneration_2E_element GALGAS_columnBindingForTableValueBindingForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                                                  C_Compiler * inCompiler
                                                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_columnBindingForTableValueBindingForGeneration_2E_element result ;
  const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element * p = (const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_columnBindingForTableValueBindingForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("columnBindingForTableValueBindingForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element::GALGAS_protocolMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mIsPredefined () {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element::~ GALGAS_protocolMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element::GALGAS_protocolMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_bool & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mIsPredefined (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element GALGAS_protocolMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_protocolMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element GALGAS_protocolMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_bool & inOperand1 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_protocolMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_protocolMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_protocolMap_2E_element::objectCompare (const GALGAS_protocolMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsPredefined.objectCompare (inOperand.mAttribute_mIsPredefined) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_protocolMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsPredefined.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_protocolMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIsPredefined.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_protocolMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @protocolMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsPredefined.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_protocolMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_protocolMap_2E_element::reader_mIsPredefined (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsPredefined ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @protocolMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_protocolMap_2E_element ("protocolMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_protocolMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_protocolMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_protocolMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_protocolMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolMap_2E_element GALGAS_protocolMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_protocolMap_2E_element result ;
  const GALGAS_protocolMap_2E_element * p = (const GALGAS_protocolMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_protocolMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("protocolMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::GALGAS_documentMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mRootEntityName (),
mAttribute_mOutletDeclarationList (),
mAttribute_mControllerMap (),
mAttribute_mActionList (),
mAttribute_mTransientListForImplementation (),
mAttribute_mFileInclusionSet (),
mAttribute_mAttributeListForImplementation () {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::~ GALGAS_documentMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element::GALGAS_documentMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_string & inOperand1,
                                                              const GALGAS_outletGenerationList & inOperand2,
                                                              const GALGAS_controllerMap & inOperand3,
                                                              const GALGAS_lstringlist & inOperand4,
                                                              const GALGAS_transientListForImplementation & inOperand5,
                                                              const GALGAS_fileInclusionSet & inOperand6,
                                                              const GALGAS_attributeListForImplementation & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mRootEntityName (inOperand1),
mAttribute_mOutletDeclarationList (inOperand2),
mAttribute_mControllerMap (inOperand3),
mAttribute_mActionList (inOperand4),
mAttribute_mTransientListForImplementation (inOperand5),
mAttribute_mFileInclusionSet (inOperand6),
mAttribute_mAttributeListForImplementation (inOperand7) {
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_documentMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_string::constructor_default (HERE),
                                        GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                        GALGAS_controllerMap::constructor_emptyMap (HERE),
                                        GALGAS_lstringlist::constructor_emptyList (HERE),
                                        GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                        GALGAS_fileInclusionSet::constructor_default (HERE),
                                        GALGAS_attributeListForImplementation::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_string & inOperand1,
                                                                              const GALGAS_outletGenerationList & inOperand2,
                                                                              const GALGAS_controllerMap & inOperand3,
                                                                              const GALGAS_lstringlist & inOperand4,
                                                                              const GALGAS_transientListForImplementation & inOperand5,
                                                                              const GALGAS_fileInclusionSet & inOperand6,
                                                                              const GALGAS_attributeListForImplementation & inOperand7 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_documentMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_documentMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_documentMap_2E_element::objectCompare (const GALGAS_documentMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootEntityName.objectCompare (inOperand.mAttribute_mRootEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_documentMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mRootEntityName.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mActionList.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mAttributeListForImplementation.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mRootEntityName.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mControllerMap.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_documentMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @documentMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_documentMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_documentMap_2E_element::reader_mRootEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_documentMap_2E_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_documentMap_2E_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_documentMap_2E_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_documentMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_documentMap_2E_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_documentMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @documentMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_documentMap_2E_element ("documentMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_documentMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_documentMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_documentMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_documentMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_documentMap_2E_element GALGAS_documentMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_documentMap_2E_element result ;
  const GALGAS_documentMap_2E_element * p = (const GALGAS_documentMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_documentMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("documentMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element::GALGAS_EXoutletClassBindingOptionMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList () {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element::~ GALGAS_EXoutletClassBindingOptionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element::GALGAS_EXoutletClassBindingOptionMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_easyBindingTypeList & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element GALGAS_EXoutletClassBindingOptionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_EXoutletClassBindingOptionMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                          GALGAS_easyBindingTypeList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element GALGAS_EXoutletClassBindingOptionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                                  const GALGAS_easyBindingTypeList & inOperand1 
                                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingOptionMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_EXoutletClassBindingOptionMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_EXoutletClassBindingOptionMap_2E_element::objectCompare (const GALGAS_EXoutletClassBindingOptionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_EXoutletClassBindingOptionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingOptionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingOptionMap_2E_element::description (C_String & ioString,
                                                                   const PMSInt32 inIndentation) const {
  ioString << "<struct @EXoutletClassBindingOptionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_EXoutletClassBindingOptionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeList GALGAS_EXoutletClassBindingOptionMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                @EXoutletClassBindingOptionMap.element type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_EXoutletClassBindingOptionMap_2E_element ("EXoutletClassBindingOptionMap.element",
                                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_EXoutletClassBindingOptionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_EXoutletClassBindingOptionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_EXoutletClassBindingOptionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_EXoutletClassBindingOptionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap_2E_element GALGAS_EXoutletClassBindingOptionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                C_Compiler * inCompiler
                                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingOptionMap_2E_element result ;
  const GALGAS_EXoutletClassBindingOptionMap_2E_element * p = (const GALGAS_EXoutletClassBindingOptionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_EXoutletClassBindingOptionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("EXoutletClassBindingOptionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element::GALGAS_EXoutletClassBindingMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList (),
mAttribute_mOutletClassBindingOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element::~ GALGAS_EXoutletClassBindingMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element::GALGAS_EXoutletClassBindingMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_EXeasyBindingTypeAndFormatterList & inOperand1,
                                                                                      const GALGAS_EXoutletClassBindingOptionMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1),
mAttribute_mOutletClassBindingOptionMap (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element GALGAS_EXoutletClassBindingMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_EXoutletClassBindingMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                    GALGAS_EXeasyBindingTypeAndFormatterList::constructor_emptyList (HERE),
                                                    GALGAS_EXoutletClassBindingOptionMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element GALGAS_EXoutletClassBindingMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                      const GALGAS_EXeasyBindingTypeAndFormatterList & inOperand1,
                                                                                                      const GALGAS_EXoutletClassBindingOptionMap & inOperand2 
                                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_EXoutletClassBindingMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_EXoutletClassBindingMap_2E_element::objectCompare (const GALGAS_EXoutletClassBindingMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (inOperand.mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_EXoutletClassBindingMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
  mAttribute_mOutletClassBindingOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_EXoutletClassBindingMap_2E_element::description (C_String & ioString,
                                                             const PMSInt32 inIndentation) const {
  ioString << "<struct @EXoutletClassBindingMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_EXoutletClassBindingMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_EXeasyBindingTypeAndFormatterList GALGAS_EXoutletClassBindingMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_EXoutletClassBindingMap_2E_element::reader_mOutletClassBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                   @EXoutletClassBindingMap.element type                   *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_EXoutletClassBindingMap_2E_element ("EXoutletClassBindingMap.element",
                                                           NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_EXoutletClassBindingMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_EXoutletClassBindingMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_EXoutletClassBindingMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_EXoutletClassBindingMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap_2E_element GALGAS_EXoutletClassBindingMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                    C_Compiler * inCompiler
                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_EXoutletClassBindingMap_2E_element result ;
  const GALGAS_EXoutletClassBindingMap_2E_element * p = (const GALGAS_EXoutletClassBindingMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_EXoutletClassBindingMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("EXoutletClassBindingMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element::GALGAS_easyBindingTypeAndFormatterList_2E_element (void) :
mAttribute_mType (),
mAttribute_mRequiredFormatter () {
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element::~ GALGAS_easyBindingTypeAndFormatterList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element::GALGAS_easyBindingTypeAndFormatterList_2E_element (const GALGAS_unifiedTypeProxy & inOperand0,
                                                                                                      const GALGAS_formatterEnum & inOperand1) :
mAttribute_mType (inOperand0),
mAttribute_mRequiredFormatter (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element GALGAS_easyBindingTypeAndFormatterList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_easyBindingTypeAndFormatterList_2E_element (GALGAS_unifiedTypeProxy::constructor_null (HERE),
                                                            GALGAS_formatterEnum::constructor_noFormatter (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element GALGAS_easyBindingTypeAndFormatterList_2E_element::constructor_new (const GALGAS_unifiedTypeProxy & inOperand0,
                                                                                                                      const GALGAS_formatterEnum & inOperand1 
                                                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_easyBindingTypeAndFormatterList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_easyBindingTypeAndFormatterList_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_easyBindingTypeAndFormatterList_2E_element::objectCompare (const GALGAS_easyBindingTypeAndFormatterList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRequiredFormatter.objectCompare (inOperand.mAttribute_mRequiredFormatter) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_easyBindingTypeAndFormatterList_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mRequiredFormatter.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mRequiredFormatter.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_easyBindingTypeAndFormatterList_2E_element::description (C_String & ioString,
                                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @easyBindingTypeAndFormatterList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRequiredFormatter.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxy GALGAS_easyBindingTypeAndFormatterList_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_formatterEnum GALGAS_easyBindingTypeAndFormatterList_2E_element::reader_mRequiredFormatter (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRequiredFormatter ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @easyBindingTypeAndFormatterList.element type               *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_easyBindingTypeAndFormatterList_2E_element ("easyBindingTypeAndFormatterList.element",
                                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_easyBindingTypeAndFormatterList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_easyBindingTypeAndFormatterList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_easyBindingTypeAndFormatterList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_easyBindingTypeAndFormatterList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList_2E_element GALGAS_easyBindingTypeAndFormatterList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                    C_Compiler * inCompiler
                                                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_easyBindingTypeAndFormatterList_2E_element result ;
  const GALGAS_easyBindingTypeAndFormatterList_2E_element * p = (const GALGAS_easyBindingTypeAndFormatterList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_easyBindingTypeAndFormatterList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("easyBindingTypeAndFormatterList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::GALGAS_outletClassBindingOptionMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::~ GALGAS_outletClassBindingOptionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element::GALGAS_outletClassBindingOptionMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_unifiedTypeProxyList & inOperand1) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassBindingOptionMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                        GALGAS_unifiedTypeProxyList::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                              const GALGAS_unifiedTypeProxyList & inOperand1 
                                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid ()) {
    result = GALGAS_outletClassBindingOptionMap_2E_element (inOperand0, inOperand1) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingOptionMap_2E_element::objectCompare (const GALGAS_outletClassBindingOptionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassBindingOptionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingOptionMap_2E_element::description (C_String & ioString,
                                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassBindingOptionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingOptionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_unifiedTypeProxyList GALGAS_outletClassBindingOptionMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                 @outletClassBindingOptionMap.element type                 *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2E_element ("outletClassBindingOptionMap.element",
                                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingOptionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingOptionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingOptionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingOptionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap_2E_element GALGAS_outletClassBindingOptionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                            C_Compiler * inCompiler
                                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingOptionMap_2E_element result ;
  const GALGAS_outletClassBindingOptionMap_2E_element * p = (const GALGAS_outletClassBindingOptionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingOptionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingOptionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::GALGAS_outletClassBindingMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAcceptableTypeList (),
mAttribute_mOutletClassBindingOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::~ GALGAS_outletClassBindingMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element::GALGAS_outletClassBindingMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_easyBindingTypeAndFormatterList & inOperand1,
                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2) :
mAttribute_lkey (inOperand0),
mAttribute_mAcceptableTypeList (inOperand1),
mAttribute_mOutletClassBindingOptionMap (inOperand2) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassBindingMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                  GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (HERE),
                                                  GALGAS_outletClassBindingOptionMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_easyBindingTypeAndFormatterList & inOperand1,
                                                                                                  const GALGAS_outletClassBindingOptionMap & inOperand2 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid ()) {
    result = GALGAS_outletClassBindingMap_2E_element (inOperand0, inOperand1, inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassBindingMap_2E_element::objectCompare (const GALGAS_outletClassBindingMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAcceptableTypeList.objectCompare (inOperand.mAttribute_mAcceptableTypeList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletClassBindingOptionMap.objectCompare (inOperand.mAttribute_mOutletClassBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassBindingMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAcceptableTypeList.isValid () && mAttribute_mOutletClassBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAcceptableTypeList.drop () ;
  mAttribute_mOutletClassBindingOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassBindingMap_2E_element::description (C_String & ioString,
                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassBindingMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAcceptableTypeList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletClassBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassBindingMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingTypeAndFormatterList GALGAS_outletClassBindingMap_2E_element::reader_mAcceptableTypeList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAcceptableTypeList ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingOptionMap GALGAS_outletClassBindingMap_2E_element::reader_mOutletClassBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletClassBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @outletClassBindingMap.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassBindingMap_2E_element ("outletClassBindingMap.element",
                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassBindingMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassBindingMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassBindingMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassBindingMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassBindingMap_2E_element GALGAS_outletClassBindingMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_outletClassBindingMap_2E_element result ;
  const GALGAS_outletClassBindingMap_2E_element * p = (const GALGAS_outletClassBindingMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassBindingMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassBindingMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::GALGAS_outletClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mGenerationKind (),
mAttribute_mSuperClassName (),
mAttribute_mAdoptedProtocolList (),
mAttribute_mImplementsDeallocProtocol (),
mAttribute_mAllBindingMap (),
mAttribute_mCurrentBindingMap (),
mAttribute_mHasTableValueBinding () {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::~ GALGAS_outletClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element::GALGAS_outletClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_generationKind & inOperand1,
                                                                    const GALGAS_string & inOperand2,
                                                                    const GALGAS_protocolList & inOperand3,
                                                                    const GALGAS_bool & inOperand4,
                                                                    const GALGAS_EXoutletClassBindingMap & inOperand5,
                                                                    const GALGAS_EXoutletClassBindingMap & inOperand6,
                                                                    const GALGAS_bool & inOperand7) :
mAttribute_lkey (inOperand0),
mAttribute_mGenerationKind (inOperand1),
mAttribute_mSuperClassName (inOperand2),
mAttribute_mAdoptedProtocolList (inOperand3),
mAttribute_mImplementsDeallocProtocol (inOperand4),
mAttribute_mAllBindingMap (inOperand5),
mAttribute_mCurrentBindingMap (inOperand6),
mAttribute_mHasTableValueBinding (inOperand7) {
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletClassMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_generationKind::constructor_fullGeneration (HERE),
                                           GALGAS_string::constructor_default (HERE),
                                           GALGAS_protocolList::constructor_emptyList (HERE),
                                           GALGAS_bool::constructor_default (HERE),
                                           GALGAS_EXoutletClassBindingMap::constructor_emptyMap (HERE),
                                           GALGAS_EXoutletClassBindingMap::constructor_emptyMap (HERE),
                                           GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_generationKind & inOperand1,
                                                                                    const GALGAS_string & inOperand2,
                                                                                    const GALGAS_protocolList & inOperand3,
                                                                                    const GALGAS_bool & inOperand4,
                                                                                    const GALGAS_EXoutletClassBindingMap & inOperand5,
                                                                                    const GALGAS_EXoutletClassBindingMap & inOperand6,
                                                                                    const GALGAS_bool & inOperand7 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid ()) {
    result = GALGAS_outletClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletClassMap_2E_element::objectCompare (const GALGAS_outletClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerationKind.objectCompare (inOperand.mAttribute_mGenerationKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mSuperClassName.objectCompare (inOperand.mAttribute_mSuperClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAdoptedProtocolList.objectCompare (inOperand.mAttribute_mAdoptedProtocolList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (inOperand.mAttribute_mImplementsDeallocProtocol) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAllBindingMap.objectCompare (inOperand.mAttribute_mAllBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mCurrentBindingMap.objectCompare (inOperand.mAttribute_mCurrentBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mHasTableValueBinding.objectCompare (inOperand.mAttribute_mHasTableValueBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mSuperClassName.isValid () && mAttribute_mAdoptedProtocolList.isValid () && mAttribute_mImplementsDeallocProtocol.isValid () && mAttribute_mAllBindingMap.isValid () && mAttribute_mCurrentBindingMap.isValid () && mAttribute_mHasTableValueBinding.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mGenerationKind.drop () ;
  mAttribute_mSuperClassName.drop () ;
  mAttribute_mAdoptedProtocolList.drop () ;
  mAttribute_mImplementsDeallocProtocol.drop () ;
  mAttribute_mAllBindingMap.drop () ;
  mAttribute_mCurrentBindingMap.drop () ;
  mAttribute_mHasTableValueBinding.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletClassMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @outletClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerationKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mSuperClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAdoptedProtocolList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAllBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mCurrentBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mHasTableValueBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_outletClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_outletClassMap_2E_element::reader_mGenerationKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationKind ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletClassMap_2E_element::reader_mSuperClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mSuperClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_protocolList GALGAS_outletClassMap_2E_element::reader_mAdoptedProtocolList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAdoptedProtocolList ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2E_element::reader_mImplementsDeallocProtocol (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementsDeallocProtocol ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_outletClassMap_2E_element::reader_mAllBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAllBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_outletClassMap_2E_element::reader_mCurrentBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mCurrentBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletClassMap_2E_element::reader_mHasTableValueBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mHasTableValueBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @outletClassMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletClassMap_2E_element ("outletClassMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletClassMap_2E_element GALGAS_outletClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletClassMap_2E_element result ;
  const GALGAS_outletClassMap_2E_element * p = (const GALGAS_outletClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::GALGAS_controllerClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mControllerKind (),
mAttribute_mGenerationKind (),
mAttribute_mBindingMap (),
mAttribute_mActionMap (),
mAttribute_mObservablePropertyMap (),
mAttribute_mControlledObjectAvailableBindingOptionMap () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::~ GALGAS_controllerClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element::GALGAS_controllerClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_controllerKind & inOperand1,
                                                                            const GALGAS_generationKind & inOperand2,
                                                                            const GALGAS_EXoutletClassBindingMap & inOperand3,
                                                                            const GALGAS_actionMap & inOperand4,
                                                                            const GALGAS_observablePropertyMap & inOperand5,
                                                                            const GALGAS_EXoutletClassBindingOptionMap & inOperand6) :
mAttribute_lkey (inOperand0),
mAttribute_mControllerKind (inOperand1),
mAttribute_mGenerationKind (inOperand2),
mAttribute_mBindingMap (inOperand3),
mAttribute_mActionMap (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mControlledObjectAvailableBindingOptionMap (inOperand6) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerClassMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                               GALGAS_controllerKind::constructor_simpleController (HERE),
                                               GALGAS_generationKind::constructor_fullGeneration (HERE),
                                               GALGAS_EXoutletClassBindingMap::constructor_emptyMap (HERE),
                                               GALGAS_actionMap::constructor_emptyMap (HERE),
                                               GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                               GALGAS_EXoutletClassBindingOptionMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_controllerKind & inOperand1,
                                                                                            const GALGAS_generationKind & inOperand2,
                                                                                            const GALGAS_EXoutletClassBindingMap & inOperand3,
                                                                                            const GALGAS_actionMap & inOperand4,
                                                                                            const GALGAS_observablePropertyMap & inOperand5,
                                                                                            const GALGAS_EXoutletClassBindingOptionMap & inOperand6 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result = GALGAS_controllerClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerClassMap_2E_element::objectCompare (const GALGAS_controllerClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerKind.objectCompare (inOperand.mAttribute_mControllerKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mGenerationKind.objectCompare (inOperand.mAttribute_mGenerationKind) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mBindingMap.objectCompare (inOperand.mAttribute_mBindingMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControlledObjectAvailableBindingOptionMap.objectCompare (inOperand.mAttribute_mControlledObjectAvailableBindingOptionMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_controllerClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerKind.isValid () && mAttribute_mGenerationKind.isValid () && mAttribute_mBindingMap.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mControlledObjectAvailableBindingOptionMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mControllerKind.drop () ;
  mAttribute_mGenerationKind.drop () ;
  mAttribute_mBindingMap.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mControlledObjectAvailableBindingOptionMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerClassMap_2E_element::description (C_String & ioString,
                                                        const PMSInt32 inIndentation) const {
  ioString << "<struct @controllerClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mGenerationKind.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mBindingMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControlledObjectAvailableBindingOptionMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerKind GALGAS_controllerClassMap_2E_element::reader_mControllerKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerKind ;
}

//---------------------------------------------------------------------------*

GALGAS_generationKind GALGAS_controllerClassMap_2E_element::reader_mGenerationKind (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mGenerationKind ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingMap GALGAS_controllerClassMap_2E_element::reader_mBindingMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBindingMap ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerClassMap_2E_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerClassMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_EXoutletClassBindingOptionMap GALGAS_controllerClassMap_2E_element::reader_mControlledObjectAvailableBindingOptionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControlledObjectAvailableBindingOptionMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @controllerClassMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerClassMap_2E_element ("controllerClassMap.element",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerClassMap_2E_element GALGAS_controllerClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_controllerClassMap_2E_element result ;
  const GALGAS_controllerClassMap_2E_element * p = (const GALGAS_controllerClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::GALGAS_relationshipMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mIsToMany (),
mAttribute_mDestinationEntityName (),
mAttribute_mInverseRelationshipName (),
mAttribute_mInverseIsToMany (),
mAttribute_mDeleteRule () {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::~ GALGAS_relationshipMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element::GALGAS_relationshipMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                      const GALGAS_bool & inOperand1,
                                                                      const GALGAS_lstring & inOperand2,
                                                                      const GALGAS_lstring & inOperand3,
                                                                      const GALGAS_bool & inOperand4,
                                                                      const GALGAS_deleteRuleEnum & inOperand5) :
mAttribute_lkey (inOperand0),
mAttribute_mIsToMany (inOperand1),
mAttribute_mDestinationEntityName (inOperand2),
mAttribute_mInverseRelationshipName (inOperand3),
mAttribute_mInverseIsToMany (inOperand4),
mAttribute_mDeleteRule (inOperand5) {
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_relationshipMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_bool::constructor_default (HERE),
                                            GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_lstring::constructor_default (HERE),
                                            GALGAS_bool::constructor_default (HERE),
                                            GALGAS_deleteRuleEnum::constructor_nullifyDeleteRule (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                      const GALGAS_bool & inOperand1,
                                                                                      const GALGAS_lstring & inOperand2,
                                                                                      const GALGAS_lstring & inOperand3,
                                                                                      const GALGAS_bool & inOperand4,
                                                                                      const GALGAS_deleteRuleEnum & inOperand5 
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_relationshipMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid ()) {
    result = GALGAS_relationshipMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_relationshipMap_2E_element::objectCompare (const GALGAS_relationshipMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsToMany.objectCompare (inOperand.mAttribute_mIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDestinationEntityName.objectCompare (inOperand.mAttribute_mDestinationEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseRelationshipName.objectCompare (inOperand.mAttribute_mInverseRelationshipName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mInverseIsToMany.objectCompare (inOperand.mAttribute_mInverseIsToMany) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDeleteRule.objectCompare (inOperand.mAttribute_mDeleteRule) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_relationshipMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mIsToMany.isValid () && mAttribute_mDestinationEntityName.isValid () && mAttribute_mInverseRelationshipName.isValid () && mAttribute_mInverseIsToMany.isValid () && mAttribute_mDeleteRule.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mIsToMany.drop () ;
  mAttribute_mDestinationEntityName.drop () ;
  mAttribute_mInverseRelationshipName.drop () ;
  mAttribute_mInverseIsToMany.drop () ;
  mAttribute_mDeleteRule.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_relationshipMap_2E_element::description (C_String & ioString,
                                                     const PMSInt32 inIndentation) const {
  ioString << "<struct @relationshipMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDestinationEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseRelationshipName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mInverseIsToMany.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDeleteRule.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap_2E_element::reader_mIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_mDestinationEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDestinationEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_relationshipMap_2E_element::reader_mInverseRelationshipName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseRelationshipName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_relationshipMap_2E_element::reader_mInverseIsToMany (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mInverseIsToMany ;
}

//---------------------------------------------------------------------------*

GALGAS_deleteRuleEnum GALGAS_relationshipMap_2E_element::reader_mDeleteRule (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDeleteRule ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @relationshipMap.element type                       *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_relationshipMap_2E_element ("relationshipMap.element",
                                                   NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_relationshipMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_relationshipMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_relationshipMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_relationshipMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_relationshipMap_2E_element GALGAS_relationshipMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                    C_Compiler * inCompiler
                                                                                    COMMA_LOCATION_ARGS) {
  GALGAS_relationshipMap_2E_element result ;
  const GALGAS_relationshipMap_2E_element * p = (const GALGAS_relationshipMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_relationshipMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("relationshipMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::GALGAS_propertyMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::~ GALGAS_propertyMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element::GALGAS_propertyMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_propertyMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_propertyMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_propertyMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_propertyMap_2E_element::objectCompare (const GALGAS_propertyMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_propertyMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_propertyMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @propertyMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_propertyMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @propertyMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_propertyMap_2E_element ("propertyMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_propertyMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_propertyMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_propertyMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_propertyMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_propertyMap_2E_element GALGAS_propertyMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_propertyMap_2E_element result ;
  const GALGAS_propertyMap_2E_element * p = (const GALGAS_propertyMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_propertyMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("propertyMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element::GALGAS_attributeListForImplementation_2E_element (void) :
mAttribute_mType (),
mAttribute_mAttributeName (),
mAttribute_mDefaultValueAsObjectiveCObject (),
mAttribute_mDirectDefaultValue () {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element::~ GALGAS_attributeListForImplementation_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element::GALGAS_attributeListForImplementation_2E_element (const GALGAS_easyBindingType & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_string & inOperand2,
                                                                                                    const GALGAS_string & inOperand3) :
mAttribute_mType (inOperand0),
mAttribute_mAttributeName (inOperand1),
mAttribute_mDefaultValueAsObjectiveCObject (inOperand2),
mAttribute_mDirectDefaultValue (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element GALGAS_attributeListForImplementation_2E_element::constructor_new (const GALGAS_easyBindingType & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_string & inOperand2,
                                                                                                                    const GALGAS_string & inOperand3 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_attributeListForImplementation_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_attributeListForImplementation_2E_element::objectCompare (const GALGAS_attributeListForImplementation_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeName.objectCompare (inOperand.mAttribute_mAttributeName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDefaultValueAsObjectiveCObject.objectCompare (inOperand.mAttribute_mDefaultValueAsObjectiveCObject) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDirectDefaultValue.objectCompare (inOperand.mAttribute_mDirectDefaultValue) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_attributeListForImplementation_2E_element::isValid (void) const {
  return mAttribute_mType.isValid () && mAttribute_mAttributeName.isValid () && mAttribute_mDefaultValueAsObjectiveCObject.isValid () && mAttribute_mDirectDefaultValue.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation_2E_element::drop (void) {
  mAttribute_mType.drop () ;
  mAttribute_mAttributeName.drop () ;
  mAttribute_mDefaultValueAsObjectiveCObject.drop () ;
  mAttribute_mDirectDefaultValue.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_attributeListForImplementation_2E_element::description (C_String & ioString,
                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @attributeListForImplementation.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDefaultValueAsObjectiveCObject.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDirectDefaultValue.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_attributeListForImplementation_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2E_element::reader_mAttributeName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2E_element::reader_mDefaultValueAsObjectiveCObject (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDefaultValueAsObjectiveCObject ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_attributeListForImplementation_2E_element::reader_mDirectDefaultValue (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDirectDefaultValue ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @attributeListForImplementation.element type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_attributeListForImplementation_2E_element ("attributeListForImplementation.element",
                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_attributeListForImplementation_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_attributeListForImplementation_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_attributeListForImplementation_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_attributeListForImplementation_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation_2E_element GALGAS_attributeListForImplementation_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_attributeListForImplementation_2E_element result ;
  const GALGAS_attributeListForImplementation_2E_element * p = (const GALGAS_attributeListForImplementation_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_attributeListForImplementation_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("attributeListForImplementation.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element::GALGAS_outletBindingListForGeneration_2E_element (void) :
mAttribute_mBinding () {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element::~ GALGAS_outletBindingListForGeneration_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element::GALGAS_outletBindingListForGeneration_2E_element (const GALGAS_abstractBindingForGeneration & inOperand0) :
mAttribute_mBinding (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element GALGAS_outletBindingListForGeneration_2E_element::constructor_new (const GALGAS_abstractBindingForGeneration & inOperand0 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_outletBindingListForGeneration_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletBindingListForGeneration_2E_element::objectCompare (const GALGAS_outletBindingListForGeneration_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mBinding.objectCompare (inOperand.mAttribute_mBinding) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletBindingListForGeneration_2E_element::isValid (void) const {
  return mAttribute_mBinding.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration_2E_element::drop (void) {
  mAttribute_mBinding.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletBindingListForGeneration_2E_element::description (C_String & ioString,
                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @outletBindingListForGeneration.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mBinding.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractBindingForGeneration GALGAS_outletBindingListForGeneration_2E_element::reader_mBinding (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mBinding ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @outletBindingListForGeneration.element type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletBindingListForGeneration_2E_element ("outletBindingListForGeneration.element",
                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletBindingListForGeneration_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletBindingListForGeneration_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletBindingListForGeneration_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletBindingListForGeneration_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration_2E_element GALGAS_outletBindingListForGeneration_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_outletBindingListForGeneration_2E_element result ;
  const GALGAS_outletBindingListForGeneration_2E_element * p = (const GALGAS_outletBindingListForGeneration_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletBindingListForGeneration_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletBindingListForGeneration.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element::GALGAS_outletGenerationList_2E_element (void) :
mAttribute_mOutletType (),
mAttribute_mOutletName (),
mAttribute_mOutletBindingList (),
mAttribute_mImplementsDeallocProtocol () {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element::~ GALGAS_outletGenerationList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element::GALGAS_outletGenerationList_2E_element (const GALGAS_string & inOperand0,
                                                                                const GALGAS_string & inOperand1,
                                                                                const GALGAS_outletBindingListForGeneration & inOperand2,
                                                                                const GALGAS_bool & inOperand3) :
mAttribute_mOutletType (inOperand0),
mAttribute_mOutletName (inOperand1),
mAttribute_mOutletBindingList (inOperand2),
mAttribute_mImplementsDeallocProtocol (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element GALGAS_outletGenerationList_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_outletGenerationList_2E_element (GALGAS_string::constructor_default (HERE),
                                                 GALGAS_string::constructor_default (HERE),
                                                 GALGAS_outletBindingListForGeneration::constructor_emptyList (HERE),
                                                 GALGAS_bool::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element GALGAS_outletGenerationList_2E_element::constructor_new (const GALGAS_string & inOperand0,
                                                                                                const GALGAS_string & inOperand1,
                                                                                                const GALGAS_outletBindingListForGeneration & inOperand2,
                                                                                                const GALGAS_bool & inOperand3 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_outletGenerationList_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_outletGenerationList_2E_element::objectCompare (const GALGAS_outletGenerationList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mOutletType.objectCompare (inOperand.mAttribute_mOutletType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletName.objectCompare (inOperand.mAttribute_mOutletName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletBindingList.objectCompare (inOperand.mAttribute_mOutletBindingList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mImplementsDeallocProtocol.objectCompare (inOperand.mAttribute_mImplementsDeallocProtocol) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_outletGenerationList_2E_element::isValid (void) const {
  return mAttribute_mOutletType.isValid () && mAttribute_mOutletName.isValid () && mAttribute_mOutletBindingList.isValid () && mAttribute_mImplementsDeallocProtocol.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2E_element::drop (void) {
  mAttribute_mOutletType.drop () ;
  mAttribute_mOutletName.drop () ;
  mAttribute_mOutletBindingList.drop () ;
  mAttribute_mImplementsDeallocProtocol.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_outletGenerationList_2E_element::description (C_String & ioString,
                                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @outletGenerationList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mOutletType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletBindingList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mImplementsDeallocProtocol.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2E_element::reader_mOutletType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletType ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_outletGenerationList_2E_element::reader_mOutletName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletName ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_outletGenerationList_2E_element::reader_mOutletBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletBindingList ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_outletGenerationList_2E_element::reader_mImplementsDeallocProtocol (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mImplementsDeallocProtocol ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @outletGenerationList.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_outletGenerationList_2E_element ("outletGenerationList.element",
                                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_outletGenerationList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_outletGenerationList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_outletGenerationList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_outletGenerationList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList_2E_element GALGAS_outletGenerationList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_outletGenerationList_2E_element result ;
  const GALGAS_outletGenerationList_2E_element * p = (const GALGAS_outletGenerationList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_outletGenerationList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("outletGenerationList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element::GALGAS_preferenceArrayMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mClassName (),
mAttribute_mClassObservablePropertyMap (),
mAttribute_mAttributeListForImplementation () {
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element::~ GALGAS_preferenceArrayMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element::GALGAS_preferenceArrayMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                            const GALGAS_string & inOperand1,
                                                                            const GALGAS_observablePropertyMap & inOperand2,
                                                                            const GALGAS_attributeListForImplementation & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mClassName (inOperand1),
mAttribute_mClassObservablePropertyMap (inOperand2),
mAttribute_mAttributeListForImplementation (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element GALGAS_preferenceArrayMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_preferenceArrayMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                               GALGAS_string::constructor_default (HERE),
                                               GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                               GALGAS_attributeListForImplementation::constructor_emptyList (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element GALGAS_preferenceArrayMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                            const GALGAS_string & inOperand1,
                                                                                            const GALGAS_observablePropertyMap & inOperand2,
                                                                                            const GALGAS_attributeListForImplementation & inOperand3 
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_preferenceArrayMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_preferenceArrayMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_preferenceArrayMap_2E_element::objectCompare (const GALGAS_preferenceArrayMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mClassName.objectCompare (inOperand.mAttribute_mClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mClassObservablePropertyMap.objectCompare (inOperand.mAttribute_mClassObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_preferenceArrayMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mClassName.isValid () && mAttribute_mClassObservablePropertyMap.isValid () && mAttribute_mAttributeListForImplementation.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mClassName.drop () ;
  mAttribute_mClassObservablePropertyMap.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferenceArrayMap_2E_element::description (C_String & ioString,
                                                        const PMSInt32 inIndentation) const {
  ioString << "<struct @preferenceArrayMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mClassObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferenceArrayMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_preferenceArrayMap_2E_element::reader_mClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferenceArrayMap_2E_element::reader_mClassObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mClassObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferenceArrayMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @preferenceArrayMap.element type                      *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferenceArrayMap_2E_element ("preferenceArrayMap.element",
                                                      NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferenceArrayMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferenceArrayMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferenceArrayMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferenceArrayMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap_2E_element GALGAS_preferenceArrayMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                          C_Compiler * inCompiler
                                                                                          COMMA_LOCATION_ARGS) {
  GALGAS_preferenceArrayMap_2E_element result ;
  const GALGAS_preferenceArrayMap_2E_element * p = (const GALGAS_preferenceArrayMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferenceArrayMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferenceArrayMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element::GALGAS_preferencesMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mOutletDeclarationList (),
mAttribute_mActionList (),
mAttribute_mObservablePropertyMap (),
mAttribute_mFileInclusionSet (),
mAttribute_mControllerMap (),
mAttribute_mArrayMap () {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element::~ GALGAS_preferencesMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element::GALGAS_preferencesMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                    const GALGAS_attributeListForImplementation & inOperand1,
                                                                    const GALGAS_transientListForImplementation & inOperand2,
                                                                    const GALGAS_outletGenerationList & inOperand3,
                                                                    const GALGAS_lstringlist & inOperand4,
                                                                    const GALGAS_observablePropertyMap & inOperand5,
                                                                    const GALGAS_fileInclusionSet & inOperand6,
                                                                    const GALGAS_controllerMap & inOperand7,
                                                                    const GALGAS_preferenceArrayMap & inOperand8) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeListForImplementation (inOperand1),
mAttribute_mTransientListForImplementation (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mActionList (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mFileInclusionSet (inOperand6),
mAttribute_mControllerMap (inOperand7),
mAttribute_mArrayMap (inOperand8) {
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element GALGAS_preferencesMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_preferencesMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                           GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                           GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                           GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                           GALGAS_lstringlist::constructor_emptyList (HERE),
                                           GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                           GALGAS_fileInclusionSet::constructor_default (HERE),
                                           GALGAS_controllerMap::constructor_emptyMap (HERE),
                                           GALGAS_preferenceArrayMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element GALGAS_preferencesMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                    const GALGAS_attributeListForImplementation & inOperand1,
                                                                                    const GALGAS_transientListForImplementation & inOperand2,
                                                                                    const GALGAS_outletGenerationList & inOperand3,
                                                                                    const GALGAS_lstringlist & inOperand4,
                                                                                    const GALGAS_observablePropertyMap & inOperand5,
                                                                                    const GALGAS_fileInclusionSet & inOperand6,
                                                                                    const GALGAS_controllerMap & inOperand7,
                                                                                    const GALGAS_preferenceArrayMap & inOperand8 
                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_preferencesMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid ()) {
    result = GALGAS_preferencesMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_preferencesMap_2E_element::objectCompare (const GALGAS_preferencesMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayMap.objectCompare (inOperand.mAttribute_mArrayMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_preferencesMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mArrayMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mControllerMap.drop () ;
  mAttribute_mArrayMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_preferencesMap_2E_element::description (C_String & ioString,
                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @preferencesMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_preferencesMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_preferencesMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_preferencesMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_preferencesMap_2E_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_preferencesMap_2E_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_preferencesMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_preferencesMap_2E_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_preferencesMap_2E_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_preferencesMap_2E_element::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                       @preferencesMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_preferencesMap_2E_element ("preferencesMap.element",
                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_preferencesMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_preferencesMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_preferencesMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_preferencesMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_preferencesMap_2E_element GALGAS_preferencesMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_preferencesMap_2E_element result ;
  const GALGAS_preferencesMap_2E_element * p = (const GALGAS_preferencesMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_preferencesMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("preferencesMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element::GALGAS_nibClassMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mAttributeListForImplementation (),
mAttribute_mTransientListForImplementation (),
mAttribute_mOutletDeclarationList (),
mAttribute_mActionList (),
mAttribute_mObservablePropertyMap (),
mAttribute_mFileInclusionSet (),
mAttribute_mControllerMap (),
mAttribute_mArrayMap () {
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element::~ GALGAS_nibClassMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element::GALGAS_nibClassMap_2E_element (const GALGAS_lstring & inOperand0,
                                                              const GALGAS_attributeListForImplementation & inOperand1,
                                                              const GALGAS_transientListForImplementation & inOperand2,
                                                              const GALGAS_outletGenerationList & inOperand3,
                                                              const GALGAS_lstringlist & inOperand4,
                                                              const GALGAS_observablePropertyMap & inOperand5,
                                                              const GALGAS_fileInclusionSet & inOperand6,
                                                              const GALGAS_controllerMap & inOperand7,
                                                              const GALGAS_preferenceArrayMap & inOperand8) :
mAttribute_lkey (inOperand0),
mAttribute_mAttributeListForImplementation (inOperand1),
mAttribute_mTransientListForImplementation (inOperand2),
mAttribute_mOutletDeclarationList (inOperand3),
mAttribute_mActionList (inOperand4),
mAttribute_mObservablePropertyMap (inOperand5),
mAttribute_mFileInclusionSet (inOperand6),
mAttribute_mControllerMap (inOperand7),
mAttribute_mArrayMap (inOperand8) {
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element GALGAS_nibClassMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_nibClassMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                        GALGAS_attributeListForImplementation::constructor_emptyList (HERE),
                                        GALGAS_transientListForImplementation::constructor_emptyList (HERE),
                                        GALGAS_outletGenerationList::constructor_emptyList (HERE),
                                        GALGAS_lstringlist::constructor_emptyList (HERE),
                                        GALGAS_observablePropertyMap::constructor_emptyMap (HERE),
                                        GALGAS_fileInclusionSet::constructor_default (HERE),
                                        GALGAS_controllerMap::constructor_emptyMap (HERE),
                                        GALGAS_preferenceArrayMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element GALGAS_nibClassMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_attributeListForImplementation & inOperand1,
                                                                              const GALGAS_transientListForImplementation & inOperand2,
                                                                              const GALGAS_outletGenerationList & inOperand3,
                                                                              const GALGAS_lstringlist & inOperand4,
                                                                              const GALGAS_observablePropertyMap & inOperand5,
                                                                              const GALGAS_fileInclusionSet & inOperand6,
                                                                              const GALGAS_controllerMap & inOperand7,
                                                                              const GALGAS_preferenceArrayMap & inOperand8 
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_nibClassMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid () && inOperand7.isValid () && inOperand8.isValid ()) {
    result = GALGAS_nibClassMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6, inOperand7, inOperand8) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_nibClassMap_2E_element::objectCompare (const GALGAS_nibClassMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mAttributeListForImplementation.objectCompare (inOperand.mAttribute_mAttributeListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientListForImplementation.objectCompare (inOperand.mAttribute_mTransientListForImplementation) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mOutletDeclarationList.objectCompare (inOperand.mAttribute_mOutletDeclarationList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionList.objectCompare (inOperand.mAttribute_mActionList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservablePropertyMap.objectCompare (inOperand.mAttribute_mObservablePropertyMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mFileInclusionSet.objectCompare (inOperand.mAttribute_mFileInclusionSet) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerMap.objectCompare (inOperand.mAttribute_mControllerMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mArrayMap.objectCompare (inOperand.mAttribute_mArrayMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_nibClassMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mAttributeListForImplementation.isValid () && mAttribute_mTransientListForImplementation.isValid () && mAttribute_mOutletDeclarationList.isValid () && mAttribute_mActionList.isValid () && mAttribute_mObservablePropertyMap.isValid () && mAttribute_mFileInclusionSet.isValid () && mAttribute_mControllerMap.isValid () && mAttribute_mArrayMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mAttributeListForImplementation.drop () ;
  mAttribute_mTransientListForImplementation.drop () ;
  mAttribute_mOutletDeclarationList.drop () ;
  mAttribute_mActionList.drop () ;
  mAttribute_mObservablePropertyMap.drop () ;
  mAttribute_mFileInclusionSet.drop () ;
  mAttribute_mControllerMap.drop () ;
  mAttribute_mArrayMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_nibClassMap_2E_element::description (C_String & ioString,
                                                 const PMSInt32 inIndentation) const {
  ioString << "<struct @nibClassMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mAttributeListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientListForImplementation.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mOutletDeclarationList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservablePropertyMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mFileInclusionSet.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mArrayMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_nibClassMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_attributeListForImplementation GALGAS_nibClassMap_2E_element::reader_mAttributeListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mAttributeListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation GALGAS_nibClassMap_2E_element::reader_mTransientListForImplementation (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientListForImplementation ;
}

//---------------------------------------------------------------------------*

GALGAS_outletGenerationList GALGAS_nibClassMap_2E_element::reader_mOutletDeclarationList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mOutletDeclarationList ;
}

//---------------------------------------------------------------------------*

GALGAS_lstringlist GALGAS_nibClassMap_2E_element::reader_mActionList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionList ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_nibClassMap_2E_element::reader_mObservablePropertyMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservablePropertyMap ;
}

//---------------------------------------------------------------------------*

GALGAS_fileInclusionSet GALGAS_nibClassMap_2E_element::reader_mFileInclusionSet (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mFileInclusionSet ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap GALGAS_nibClassMap_2E_element::reader_mControllerMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerMap ;
}

//---------------------------------------------------------------------------*

GALGAS_preferenceArrayMap GALGAS_nibClassMap_2E_element::reader_mArrayMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mArrayMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                         @nibClassMap.element type                         *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_nibClassMap_2E_element ("nibClassMap.element",
                                               NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_nibClassMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_nibClassMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_nibClassMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_nibClassMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_nibClassMap_2E_element GALGAS_nibClassMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                            C_Compiler * inCompiler
                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_nibClassMap_2E_element result ;
  const GALGAS_nibClassMap_2E_element * p = (const GALGAS_nibClassMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_nibClassMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("nibClassMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2E_element::GALGAS_observablePropertyMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mType (),
mAttribute_mIsTransient (),
mAttribute_mPropertySignature () {
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2E_element::~ GALGAS_observablePropertyMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2E_element::GALGAS_observablePropertyMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_easyBindingType & inOperand1,
                                                                                  const GALGAS_bool & inOperand2,
                                                                                  const GALGAS_string & inOperand3) :
mAttribute_lkey (inOperand0),
mAttribute_mType (inOperand1),
mAttribute_mIsTransient (inOperand2),
mAttribute_mPropertySignature (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2E_element GALGAS_observablePropertyMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                                  const GALGAS_easyBindingType & inOperand1,
                                                                                                  const GALGAS_bool & inOperand2,
                                                                                                  const GALGAS_string & inOperand3 
                                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_observablePropertyMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_observablePropertyMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_observablePropertyMap_2E_element::objectCompare (const GALGAS_observablePropertyMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mType.objectCompare (inOperand.mAttribute_mType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsTransient.objectCompare (inOperand.mAttribute_mIsTransient) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mPropertySignature.objectCompare (inOperand.mAttribute_mPropertySignature) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_observablePropertyMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mType.isValid () && mAttribute_mIsTransient.isValid () && mAttribute_mPropertySignature.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mType.drop () ;
  mAttribute_mIsTransient.drop () ;
  mAttribute_mPropertySignature.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_observablePropertyMap_2E_element::description (C_String & ioString,
                                                           const PMSInt32 inIndentation) const {
  ioString << "<struct @observablePropertyMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsTransient.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mPropertySignature.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observablePropertyMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_observablePropertyMap_2E_element::reader_mType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mType ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_observablePropertyMap_2E_element::reader_mIsTransient (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsTransient ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observablePropertyMap_2E_element::reader_mPropertySignature (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mPropertySignature ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @observablePropertyMap.element type                    *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observablePropertyMap_2E_element ("observablePropertyMap.element",
                                                         NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observablePropertyMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observablePropertyMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observablePropertyMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observablePropertyMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap_2E_element GALGAS_observablePropertyMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                C_Compiler * inCompiler
                                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_observablePropertyMap_2E_element result ;
  const GALGAS_observablePropertyMap_2E_element * p = (const GALGAS_observablePropertyMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observablePropertyMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observablePropertyMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element::GALGAS_observableObjectMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mObservableObjectOCName (),
mAttribute_mObservableObjectTypeOCName (),
mAttribute_mIncludeFileName (),
mAttribute_mObservableProperties () {
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element::~ GALGAS_observableObjectMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element::GALGAS_observableObjectMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                              const GALGAS_string & inOperand1,
                                                                              const GALGAS_string & inOperand2,
                                                                              const GALGAS_string & inOperand3,
                                                                              const GALGAS_observablePropertyMap & inOperand4) :
mAttribute_lkey (inOperand0),
mAttribute_mObservableObjectOCName (inOperand1),
mAttribute_mObservableObjectTypeOCName (inOperand2),
mAttribute_mIncludeFileName (inOperand3),
mAttribute_mObservableProperties (inOperand4) {
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element GALGAS_observableObjectMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_observableObjectMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                                GALGAS_string::constructor_default (HERE),
                                                GALGAS_string::constructor_default (HERE),
                                                GALGAS_string::constructor_default (HERE),
                                                GALGAS_observablePropertyMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element GALGAS_observableObjectMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                              const GALGAS_string & inOperand1,
                                                                                              const GALGAS_string & inOperand2,
                                                                                              const GALGAS_string & inOperand3,
                                                                                              const GALGAS_observablePropertyMap & inOperand4 
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_observableObjectMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid ()) {
    result = GALGAS_observableObjectMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_observableObjectMap_2E_element::objectCompare (const GALGAS_observableObjectMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableObjectOCName.objectCompare (inOperand.mAttribute_mObservableObjectOCName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableObjectTypeOCName.objectCompare (inOperand.mAttribute_mObservableObjectTypeOCName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIncludeFileName.objectCompare (inOperand.mAttribute_mIncludeFileName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableProperties.objectCompare (inOperand.mAttribute_mObservableProperties) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_observableObjectMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mObservableObjectOCName.isValid () && mAttribute_mObservableObjectTypeOCName.isValid () && mAttribute_mIncludeFileName.isValid () && mAttribute_mObservableProperties.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mObservableObjectOCName.drop () ;
  mAttribute_mObservableObjectTypeOCName.drop () ;
  mAttribute_mIncludeFileName.drop () ;
  mAttribute_mObservableProperties.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_observableObjectMap_2E_element::description (C_String & ioString,
                                                         const PMSInt32 inIndentation) const {
  ioString << "<struct @observableObjectMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableObjectOCName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableObjectTypeOCName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIncludeFileName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableProperties.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_observableObjectMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap_2E_element::reader_mObservableObjectOCName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableObjectOCName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap_2E_element::reader_mObservableObjectTypeOCName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableObjectTypeOCName ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_observableObjectMap_2E_element::reader_mIncludeFileName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIncludeFileName ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_observableObjectMap_2E_element::reader_mObservableProperties (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableProperties ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                     @observableObjectMap.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_observableObjectMap_2E_element ("observableObjectMap.element",
                                                       NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_observableObjectMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_observableObjectMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_observableObjectMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_observableObjectMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_observableObjectMap_2E_element GALGAS_observableObjectMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                            C_Compiler * inCompiler
                                                                                            COMMA_LOCATION_ARGS) {
  GALGAS_observableObjectMap_2E_element result ;
  const GALGAS_observableObjectMap_2E_element * p = (const GALGAS_observableObjectMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_observableObjectMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("observableObjectMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element::GALGAS_actionMap_2E_element (void) :
mAttribute_lkey () {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element::~ GALGAS_actionMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element::GALGAS_actionMap_2E_element (const GALGAS_lstring & inOperand0) :
mAttribute_lkey (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element GALGAS_actionMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_actionMap_2E_element (GALGAS_lstring::constructor_default (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element GALGAS_actionMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0 
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_actionMap_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_actionMap_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_actionMap_2E_element::objectCompare (const GALGAS_actionMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_actionMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_actionMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_actionMap_2E_element::description (C_String & ioString,
                                               const PMSInt32 inIndentation) const {
  ioString << "<struct @actionMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_actionMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                          @actionMap.element type                          *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_actionMap_2E_element ("actionMap.element",
                                             NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_actionMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_actionMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_actionMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_actionMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap_2E_element GALGAS_actionMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                        C_Compiler * inCompiler
                                                                        COMMA_LOCATION_ARGS) {
  GALGAS_actionMap_2E_element result ;
  const GALGAS_actionMap_2E_element * p = (const GALGAS_actionMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_actionMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("actionMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element::GALGAS_controllerMap_2E_element (void) :
mAttribute_lkey (),
mAttribute_mControllerClassName (),
mAttribute_mControlledClassOrEntityName (),
mAttribute_mIsEntity (),
mAttribute_mControllerBindingList (),
mAttribute_mActionMap (),
mAttribute_mObservableAttributeMap () {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element::~ GALGAS_controllerMap_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element::GALGAS_controllerMap_2E_element (const GALGAS_lstring & inOperand0,
                                                                  const GALGAS_string & inOperand1,
                                                                  const GALGAS_lstring & inOperand2,
                                                                  const GALGAS_bool & inOperand3,
                                                                  const GALGAS_outletBindingListForGeneration & inOperand4,
                                                                  const GALGAS_actionMap & inOperand5,
                                                                  const GALGAS_observablePropertyMap & inOperand6) :
mAttribute_lkey (inOperand0),
mAttribute_mControllerClassName (inOperand1),
mAttribute_mControlledClassOrEntityName (inOperand2),
mAttribute_mIsEntity (inOperand3),
mAttribute_mControllerBindingList (inOperand4),
mAttribute_mActionMap (inOperand5),
mAttribute_mObservableAttributeMap (inOperand6) {
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element GALGAS_controllerMap_2E_element::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_controllerMap_2E_element (GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_string::constructor_default (HERE),
                                          GALGAS_lstring::constructor_default (HERE),
                                          GALGAS_bool::constructor_default (HERE),
                                          GALGAS_outletBindingListForGeneration::constructor_emptyList (HERE),
                                          GALGAS_actionMap::constructor_emptyMap (HERE),
                                          GALGAS_observablePropertyMap::constructor_emptyMap (HERE)) ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element GALGAS_controllerMap_2E_element::constructor_new (const GALGAS_lstring & inOperand0,
                                                                                  const GALGAS_string & inOperand1,
                                                                                  const GALGAS_lstring & inOperand2,
                                                                                  const GALGAS_bool & inOperand3,
                                                                                  const GALGAS_outletBindingListForGeneration & inOperand4,
                                                                                  const GALGAS_actionMap & inOperand5,
                                                                                  const GALGAS_observablePropertyMap & inOperand6 
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_controllerMap_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid () && inOperand4.isValid () && inOperand5.isValid () && inOperand6.isValid ()) {
    result = GALGAS_controllerMap_2E_element (inOperand0, inOperand1, inOperand2, inOperand3, inOperand4, inOperand5, inOperand6) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_controllerMap_2E_element::objectCompare (const GALGAS_controllerMap_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_lkey.objectCompare (inOperand.mAttribute_lkey) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerClassName.objectCompare (inOperand.mAttribute_mControllerClassName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControlledClassOrEntityName.objectCompare (inOperand.mAttribute_mControlledClassOrEntityName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mIsEntity.objectCompare (inOperand.mAttribute_mIsEntity) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mControllerBindingList.objectCompare (inOperand.mAttribute_mControllerBindingList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mActionMap.objectCompare (inOperand.mAttribute_mActionMap) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mObservableAttributeMap.objectCompare (inOperand.mAttribute_mObservableAttributeMap) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_controllerMap_2E_element::isValid (void) const {
  return mAttribute_lkey.isValid () && mAttribute_mControllerClassName.isValid () && mAttribute_mControlledClassOrEntityName.isValid () && mAttribute_mIsEntity.isValid () && mAttribute_mControllerBindingList.isValid () && mAttribute_mActionMap.isValid () && mAttribute_mObservableAttributeMap.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap_2E_element::drop (void) {
  mAttribute_lkey.drop () ;
  mAttribute_mControllerClassName.drop () ;
  mAttribute_mControlledClassOrEntityName.drop () ;
  mAttribute_mIsEntity.drop () ;
  mAttribute_mControllerBindingList.drop () ;
  mAttribute_mActionMap.drop () ;
  mAttribute_mObservableAttributeMap.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_controllerMap_2E_element::description (C_String & ioString,
                                                   const PMSInt32 inIndentation) const {
  ioString << "<struct @controllerMap.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_lkey.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerClassName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControlledClassOrEntityName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mIsEntity.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mControllerBindingList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mActionMap.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mObservableAttributeMap.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap_2E_element::reader_lkey (UNUSED_LOCATION_ARGS) const {
  return mAttribute_lkey ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_controllerMap_2E_element::reader_mControllerClassName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerClassName ;
}

//---------------------------------------------------------------------------*

GALGAS_lstring GALGAS_controllerMap_2E_element::reader_mControlledClassOrEntityName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControlledClassOrEntityName ;
}

//---------------------------------------------------------------------------*

GALGAS_bool GALGAS_controllerMap_2E_element::reader_mIsEntity (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mIsEntity ;
}

//---------------------------------------------------------------------------*

GALGAS_outletBindingListForGeneration GALGAS_controllerMap_2E_element::reader_mControllerBindingList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mControllerBindingList ;
}

//---------------------------------------------------------------------------*

GALGAS_actionMap GALGAS_controllerMap_2E_element::reader_mActionMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mActionMap ;
}

//---------------------------------------------------------------------------*

GALGAS_observablePropertyMap GALGAS_controllerMap_2E_element::reader_mObservableAttributeMap (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mObservableAttributeMap ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                        @controllerMap.element type                        *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_controllerMap_2E_element ("controllerMap.element",
                                                 NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_controllerMap_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_controllerMap_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_controllerMap_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_controllerMap_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_controllerMap_2E_element GALGAS_controllerMap_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_LOCATION_ARGS) {
  GALGAS_controllerMap_2E_element result ;
  const GALGAS_controllerMap_2E_element * p = (const GALGAS_controllerMap_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_controllerMap_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("controllerMap.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList_2E_element::GALGAS_directDependancyList_2E_element (void) :
mAttribute_mDependency () {
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList_2E_element::~ GALGAS_directDependancyList_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList_2E_element::GALGAS_directDependancyList_2E_element (const GALGAS_abstractTransientDependencyForImplementation & inOperand0) :
mAttribute_mDependency (inOperand0) {
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList_2E_element GALGAS_directDependancyList_2E_element::constructor_new (const GALGAS_abstractTransientDependencyForImplementation & inOperand0 
                                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_directDependancyList_2E_element result ;
  if (inOperand0.isValid ()) {
    result = GALGAS_directDependancyList_2E_element (inOperand0) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_directDependancyList_2E_element::objectCompare (const GALGAS_directDependancyList_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mDependency.objectCompare (inOperand.mAttribute_mDependency) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_directDependancyList_2E_element::isValid (void) const {
  return mAttribute_mDependency.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList_2E_element::drop (void) {
  mAttribute_mDependency.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_directDependancyList_2E_element::description (C_String & ioString,
                                                          const PMSInt32 inIndentation) const {
  ioString << "<struct @directDependancyList.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mDependency.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_abstractTransientDependencyForImplementation GALGAS_directDependancyList_2E_element::reader_mDependency (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependency ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//                    @directDependancyList.element type                     *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_directDependancyList_2E_element ("directDependancyList.element",
                                                        NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_directDependancyList_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_directDependancyList_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_directDependancyList_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_directDependancyList_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList_2E_element GALGAS_directDependancyList_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_LOCATION_ARGS) {
  GALGAS_directDependancyList_2E_element result ;
  const GALGAS_directDependancyList_2E_element * p = (const GALGAS_directDependancyList_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_directDependancyList_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("directDependancyList.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2E_element::GALGAS_transientListForImplementation_2E_element (void) :
mAttribute_mTransientType (),
mAttribute_mTransientName (),
mAttribute_mDependencyList (),
mAttribute_mRootSignDependencyList () {
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2E_element::~ GALGAS_transientListForImplementation_2E_element (void) {
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2E_element::GALGAS_transientListForImplementation_2E_element (const GALGAS_easyBindingType & inOperand0,
                                                                                                    const GALGAS_string & inOperand1,
                                                                                                    const GALGAS_directDependancyList & inOperand2,
                                                                                                    const GALGAS_stringlist & inOperand3) :
mAttribute_mTransientType (inOperand0),
mAttribute_mTransientName (inOperand1),
mAttribute_mDependencyList (inOperand2),
mAttribute_mRootSignDependencyList (inOperand3) {
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2E_element GALGAS_transientListForImplementation_2E_element::constructor_new (const GALGAS_easyBindingType & inOperand0,
                                                                                                                    const GALGAS_string & inOperand1,
                                                                                                                    const GALGAS_directDependancyList & inOperand2,
                                                                                                                    const GALGAS_stringlist & inOperand3 
                                                                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_transientListForImplementation_2E_element result ;
  if (inOperand0.isValid () && inOperand1.isValid () && inOperand2.isValid () && inOperand3.isValid ()) {
    result = GALGAS_transientListForImplementation_2E_element (inOperand0, inOperand1, inOperand2, inOperand3) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

typeComparisonResult GALGAS_transientListForImplementation_2E_element::objectCompare (const GALGAS_transientListForImplementation_2E_element & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
  if (result == kOperandEqual) {
    result = mAttribute_mTransientType.objectCompare (inOperand.mAttribute_mTransientType) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mTransientName.objectCompare (inOperand.mAttribute_mTransientName) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mDependencyList.objectCompare (inOperand.mAttribute_mDependencyList) ;
  }
  if (result == kOperandEqual) {
    result = mAttribute_mRootSignDependencyList.objectCompare (inOperand.mAttribute_mRootSignDependencyList) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

bool GALGAS_transientListForImplementation_2E_element::isValid (void) const {
  return mAttribute_mTransientType.isValid () && mAttribute_mTransientName.isValid () && mAttribute_mDependencyList.isValid () && mAttribute_mRootSignDependencyList.isValid () ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation_2E_element::drop (void) {
  mAttribute_mTransientType.drop () ;
  mAttribute_mTransientName.drop () ;
  mAttribute_mDependencyList.drop () ;
  mAttribute_mRootSignDependencyList.drop () ;
}

//---------------------------------------------------------------------------*

void GALGAS_transientListForImplementation_2E_element::description (C_String & ioString,
                                                                    const PMSInt32 inIndentation) const {
  ioString << "<struct @transientListForImplementation.element:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
    mAttribute_mTransientType.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mTransientName.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mDependencyList.description (ioString, inIndentation+1) ;
    ioString << ", " ;
    mAttribute_mRootSignDependencyList.description (ioString, inIndentation+1) ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

GALGAS_easyBindingType GALGAS_transientListForImplementation_2E_element::reader_mTransientType (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientType ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_transientListForImplementation_2E_element::reader_mTransientName (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mTransientName ;
}

//---------------------------------------------------------------------------*

GALGAS_directDependancyList GALGAS_transientListForImplementation_2E_element::reader_mDependencyList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mDependencyList ;
}

//---------------------------------------------------------------------------*

GALGAS_stringlist GALGAS_transientListForImplementation_2E_element::reader_mRootSignDependencyList (UNUSED_LOCATION_ARGS) const {
  return mAttribute_mRootSignDependencyList ;
}



//---------------------------------------------------------------------------*
//                                                                           *
//               @transientListForImplementation.element type                *
//                                                                           *
//---------------------------------------------------------------------------*

const C_galgas_type_descriptor
kTypeDescriptor_GALGAS_transientListForImplementation_2E_element ("transientListForImplementation.element",
                                                                  NULL) ;

//---------------------------------------------------------------------------*

const C_galgas_type_descriptor * GALGAS_transientListForImplementation_2E_element::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_transientListForImplementation_2E_element ;
}

//---------------------------------------------------------------------------*

AC_GALGAS_root * GALGAS_transientListForImplementation_2E_element::clonedObject (void) const {
  AC_GALGAS_root * result = NULL ;
  if (isValid ()) {
    macroMyNew (result, GALGAS_transientListForImplementation_2E_element (*this)) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

GALGAS_transientListForImplementation_2E_element GALGAS_transientListForImplementation_2E_element::extractObject (const GALGAS_object & inObject,
                                                                                                                  C_Compiler * inCompiler
                                                                                                                  COMMA_LOCATION_ARGS) {
  GALGAS_transientListForImplementation_2E_element result ;
  const GALGAS_transientListForImplementation_2E_element * p = (const GALGAS_transientListForImplementation_2E_element *) inObject.embeddedObject () ;
  if (NULL != p) {
    if (NULL != dynamic_cast <const GALGAS_transientListForImplementation_2E_element *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("transientListForImplementation.element", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


