//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'outletClassAnalysis.cpp'                       *
//                        Generated by version 2.5.0                         *
//                      july 18th, 2013, at 19h21'38"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "outletClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "outletClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@outletClassDeclaration typeInventory'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                                 GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_outletClassDeclaration) ;
  GALGAS_unifiedTypeProxy var_superClassProxy ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeProxy::constructor_null (SOURCE_FILE_AT_LINE (12)) ;
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperClassName, var_superClassProxy COMMA_SOURCE_FILE_AT_LINE (14)) ;
    }
  }
  GALGAS_outletClassBindingMap var_currentBindingMap ;
  {
  routine_buildBindingCapabilitiesMap (object->mAttribute_mOutletClassBindingList, ioArgument_ioUnifiedTypeMap, var_currentBindingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (21)) ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_outletClassDeclaration temp_1 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mOutletClassName, temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (27)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                     categoryMethod_outletClassDeclaration_typeInventory) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_typeInventory (defineCategoryMethod_outletClassDeclaration_typeInventory, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


