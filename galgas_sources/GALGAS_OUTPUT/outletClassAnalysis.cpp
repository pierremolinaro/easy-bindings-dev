//-----------------------------------------------------------------------------*
//                                                                             *
//                       File 'outletClassAnalysis.cpp'                        *
//                         Generated by version 2.7.0                          *
//                       august 6th, 2014, at 23h9'55"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "outletClassAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@outletClassDeclaration typeInventory'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                                 GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_unifiedTypeProxy var_superClassProxy ;
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperClassName, var_superClassProxy COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 12)) ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mOutletClassName, object->mAttribute_mSuperClassName COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 17)) ;
    }
  }
  {
  const GALGAS_outletClassDeclaration temp_1 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mOutletClassName, GALGAS_ebType::constructor_new (object->mAttribute_mOutletClassName, GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 25))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 25)), temp_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 23)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                     categoryMethod_outletClassDeclaration_typeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_typeInventory (defineCategoryMethod_outletClassDeclaration_typeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@outletClassDeclaration buildObservablePropertyMap'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                                              const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                              GALGAS_observablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                              GALGAS_transientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("outletClassAnalysis.gSemantics", 39)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_typeKind var_kind ;
    GALGAS_bool joker_1283_0 ; // Joker input parameter
    ioArgument_ioObservablePropertyMapMap.method_searchKey (object->mAttribute_mSuperClassName, joker_1283_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 40)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 46)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (object->mAttribute_mSuperClassName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("outletClassAnalysis.gSemantics", 47))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 47)).operator_concat (GALGAS_string ("' is not an outlet class")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 47))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 47)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 50)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mOutletClassName, object->mAttribute_mUserDefined, GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 56)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 53)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                                  categoryMethod_outletClassDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_outletClassDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@outletClassDeclaration semanticAnalysis'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_semanticAnalysis (const cPtr_astDeclaration * inObject,
                                                                    const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                    GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                    GALGAS_generationList & ioArgument_ioGenerationList,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  GALGAS_outletClassBindingMap var_allBindingMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_allBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 71)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_generationKind joker_2323_4 ; // Joker input parameter
    GALGAS_string joker_2323_3 ; // Joker input parameter
    GALGAS_protocolList joker_2323_2 ; // Joker input parameter
    GALGAS_bool joker_2323_1 ; // Joker input parameter
    GALGAS_outletClassBindingMap joker_2354_2 ; // Joker input parameter
    GALGAS_bool joker_2354_1 ; // Joker input parameter
    ioArgument_ioContextAnalysisStruct.mAttribute_mOutletClassMap.method_searchKey (object->mAttribute_mSuperClassName, joker_2323_4, joker_2323_3, joker_2323_2, joker_2323_1, var_allBindingMap, joker_2354_2, joker_2354_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 73)) ;
  }
  GALGAS_protocolList var_adoptedProtocolList = GALGAS_protocolList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 81)) ;
  GALGAS_bool var_implementsDeallocProtocol = GALGAS_bool (false) ;
  cEnumerator_lstringlist enumerator_2513 (object->mAttribute_mOptionList, kEnumeration_up) ;
  while (enumerator_2513.hasCurrentObject ()) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_2513.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("PMWillDeallocProtocol"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (enumerator_2513.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("only 'PMWillDeallocProtocol' is allowed here")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 85)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_3 = var_implementsDeallocProtocol.boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_2513.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("'PMWillDeallocProtocol' option already set")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 87)) ;
      }else if (kBoolFalse == test_3) {
        var_implementsDeallocProtocol = GALGAS_bool (true) ;
        var_adoptedProtocolList.addAssign_operation (GALGAS_bool (false), enumerator_2513.current_mValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 90)) ;
      }
    }
    enumerator_2513.gotoNextObject () ;
  }
  GALGAS_outletClassBindingMap var_currentBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 94)) ;
  cEnumerator_outletClassBindingList enumerator_2993 (object->mAttribute_mOutletClassBindingList, kEnumeration_up) ;
  while (enumerator_2993.hasCurrentObject ()) {
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 96)) ;
    cEnumerator_bindingOptionList enumerator_3101 (enumerator_2993.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_3101.hasCurrentObject ()) {
      GALGAS_ebTypeList var_acceptableTypeList = GALGAS_ebTypeList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 98)) ;
      cEnumerator_lstringlist enumerator_3189 (enumerator_3101.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_3189.hasCurrentObject ()) {
        GALGAS_ebType var_type ;
        GALGAS_astDeclaration joker_3252_0 ; // Joker input parameter
        constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_3189.current_mValue (HERE), var_type, joker_3252_0, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 100)) ;
        var_acceptableTypeList.addAssign_operation (var_type  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 101)) ;
        enumerator_3189.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_3101.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 103)) ;
      }
      enumerator_3101.gotoNextObject () ;
    }
    GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_ebTypeAndFormatterList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 105)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_3533 (enumerator_2993.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_3533.hasCurrentObject ()) {
      GALGAS_ebType var_type ;
      GALGAS_astDeclaration joker_3597_0 ; // Joker input parameter
      constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_3533.current_mTypeName (HERE), var_type, joker_3597_0, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 107)) ;
      var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_3533.current_mRequiredFormatter (HERE)  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 108)) ;
      enumerator_3533.gotoNextObject () ;
    }
    {
    var_allBindingMap.modifier_insertKey (enumerator_2993.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 110)) ;
    }
    {
    var_currentBindingMap.modifier_insertKey (enumerator_2993.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 111)) ;
    }
    enumerator_2993.gotoNextObject () ;
  }
  cEnumerator_lstringlist enumerator_3970 (object->mAttribute_mAdoptedProtocolList, kEnumeration_up) ;
  while (enumerator_3970.hasCurrentObject ()) {
    GALGAS_bool var_isPredefined ;
    ioArgument_ioContextAnalysisStruct.mAttribute_mProtocolMap.method_searchKey (enumerator_3970.current_mValue (HERE), var_isPredefined, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 115)) ;
    var_adoptedProtocolList.addAssign_operation (var_isPredefined, enumerator_3970.current_mValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 116)) ;
    enumerator_3970.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mOutletClassMap.modifier_insertKey (object->mAttribute_mOutletClassName, object->mAttribute_mGenerationKind, object->mAttribute_mSuperClassName.mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_allBindingMap, var_currentBindingMap, object->mAttribute_mHasTableValueBinding, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 119)) ;
  }
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, object->mAttribute_mGenerationKind.objectCompare (GALGAS_generationKind::constructor_fullGeneration (SOURCE_FILE ("outletClassAnalysis.gSemantics", 130)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioGenerationList.addAssign_operation (GALGAS_outletClassGeneration::constructor_new (object->mAttribute_mOutletClassName.mAttribute_string, object->mAttribute_mSuperClassName.mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_currentBindingMap  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 131))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 131)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                        categoryMethod_outletClassDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_semanticAnalysis (defineCategoryMethod_outletClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


