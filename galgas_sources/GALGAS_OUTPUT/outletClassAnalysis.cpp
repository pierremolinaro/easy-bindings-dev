//-----------------------------------------------------------------------------*
//                                                                             *
//                       File 'outletClassAnalysis.cpp'                        *
//                         Generated by version 2.7.0                          *
//                       august 7th, 2014, at 22h44'31"                        *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "outletClassAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//     Overriding category method '@outletClassDeclaration typeInventory'      *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                                 GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  GALGAS_unifiedTypeProxy var_superClassProxy ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeProxy::constructor_null (SOURCE_FILE ("outletClassAnalysis.gSemantics", 13)) ;
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperClassName, var_superClassProxy COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 15)) ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mOutletClassName, object->mAttribute_mSuperClassName COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 20)) ;
    }
  }
  {
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mOutletClassName, GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 27)), var_superClassProxy, GALGAS_decoratedAttributeMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 29)), GALGAS_decoratedTransientMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 30)), GALGAS_decoratedOutletMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 31)), GALGAS_decoratedObservablePropertyMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 32)), GALGAS_decoratedEntityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 33)), inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 25)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                     categoryMethod_outletClassDeclaration_typeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_typeInventory (defineCategoryMethod_outletClassDeclaration_typeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@outletClassDeclaration EXTypeInventory'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_EXTypeInventory (const cPtr_astDeclaration * inObject,
                                                                   GALGAS_EXunifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_EXunifiedTypeProxy var_superClassProxy ;
    {
    GALGAS_EXunifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperClassName, var_superClassProxy COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 44)) ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mOutletClassName, object->mAttribute_mSuperClassName COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 49)) ;
    }
  }
  {
  const GALGAS_outletClassDeclaration temp_1 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mOutletClassName, GALGAS_EXebType::constructor_new (object->mAttribute_mOutletClassName, GALGAS_EXTypeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 57))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 57)), temp_1, GALGAS_EXentityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 59)), inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 55)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_EXTypeInventory (void) {
  enterCategoryMethod_EXTypeInventory (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                       categoryMethod_outletClassDeclaration_EXTypeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_EXTypeInventory (defineCategoryMethod_outletClassDeclaration_EXTypeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@outletClassDeclaration buildObservablePropertyMap'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                                              const GALGAS_EXunifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                              GALGAS_EXobservablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                              GALGAS_EXtransientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  GALGAS_EXobservablePropertyMap var_observablePropertyMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("outletClassAnalysis.gSemantics", 72)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_EXTypeKind var_kind ;
    GALGAS_bool joker_2177_0 ; // Joker input parameter
    ioArgument_ioObservablePropertyMapMap.method_searchKey (object->mAttribute_mSuperClassName, joker_2177_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 73)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_EXTypeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 79)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (object->mAttribute_mSuperClassName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("outletClassAnalysis.gSemantics", 80))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 80)).operator_concat (GALGAS_string ("' is not an outlet class")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 80))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 80)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_observablePropertyMap = GALGAS_EXobservablePropertyMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 83)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mOutletClassName, object->mAttribute_mUserDefined, GALGAS_EXTypeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 89)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 86)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                                  categoryMethod_outletClassDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_outletClassDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@outletClassDeclaration semanticAnalysis'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_semanticAnalysis (const cPtr_astDeclaration * inObject,
                                                                    const GALGAS_EXunifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                    GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                    GALGAS_generationList & ioArgument_ioGenerationList,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_outletClassDeclaration) ;
  GALGAS_outletClassBindingMap var_allBindingMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_allBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 104)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_generationKind joker_3229_4 ; // Joker input parameter
    GALGAS_string joker_3229_3 ; // Joker input parameter
    GALGAS_protocolList joker_3229_2 ; // Joker input parameter
    GALGAS_bool joker_3229_1 ; // Joker input parameter
    GALGAS_outletClassBindingMap joker_3260_2 ; // Joker input parameter
    GALGAS_bool joker_3260_1 ; // Joker input parameter
    ioArgument_ioContextAnalysisStruct.mAttribute_mOutletClassMap.method_searchKey (object->mAttribute_mSuperClassName, joker_3229_4, joker_3229_3, joker_3229_2, joker_3229_1, var_allBindingMap, joker_3260_2, joker_3260_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 106)) ;
  }
  GALGAS_protocolList var_adoptedProtocolList = GALGAS_protocolList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 114)) ;
  GALGAS_bool var_implementsDeallocProtocol = GALGAS_bool (false) ;
  cEnumerator_lstringlist enumerator_3419 (object->mAttribute_mOptionList, kEnumeration_up) ;
  while (enumerator_3419.hasCurrentObject ()) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_3419.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("PMWillDeallocProtocol"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (enumerator_3419.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("only 'PMWillDeallocProtocol' is allowed here")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 118)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_3 = var_implementsDeallocProtocol.boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_3419.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("'PMWillDeallocProtocol' option already set")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 120)) ;
      }else if (kBoolFalse == test_3) {
        var_implementsDeallocProtocol = GALGAS_bool (true) ;
        var_adoptedProtocolList.addAssign_operation (GALGAS_bool (false), enumerator_3419.current_mValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 123)) ;
      }
    }
    enumerator_3419.gotoNextObject () ;
  }
  GALGAS_outletClassBindingMap var_currentBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 127)) ;
  cEnumerator_outletClassBindingList enumerator_3899 (object->mAttribute_mOutletClassBindingList, kEnumeration_up) ;
  while (enumerator_3899.hasCurrentObject ()) {
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 129)) ;
    cEnumerator_bindingOptionList enumerator_4007 (enumerator_3899.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_4007.hasCurrentObject ()) {
      GALGAS_EXebTypeList var_acceptableTypeList = GALGAS_EXebTypeList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 131)) ;
      cEnumerator_lstringlist enumerator_4097 (enumerator_4007.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_4097.hasCurrentObject ()) {
        GALGAS_EXebType var_type ;
        GALGAS_astDeclaration joker_4162_2 ; // Joker input parameter
        GALGAS_EXentityRelationshipMap joker_4162_1 ; // Joker input parameter
        constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_4097.current_mValue (HERE), var_type, joker_4162_2, joker_4162_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 133)) ;
        var_acceptableTypeList.addAssign_operation (var_type  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 134)) ;
        enumerator_4097.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_4007.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 136)) ;
      }
      enumerator_4007.gotoNextObject () ;
    }
    GALGAS_EXebTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_EXebTypeAndFormatterList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 138)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_4446 (enumerator_3899.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_4446.hasCurrentObject ()) {
      GALGAS_EXebType var_type ;
      GALGAS_astDeclaration joker_4512_2 ; // Joker input parameter
      GALGAS_EXentityRelationshipMap joker_4512_1 ; // Joker input parameter
      constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_4446.current_mTypeName (HERE), var_type, joker_4512_2, joker_4512_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 140)) ;
      var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_4446.current_mRequiredFormatter (HERE)  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 141)) ;
      enumerator_4446.gotoNextObject () ;
    }
    {
    var_allBindingMap.modifier_insertKey (enumerator_3899.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 143)) ;
    }
    {
    var_currentBindingMap.modifier_insertKey (enumerator_3899.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 144)) ;
    }
    enumerator_3899.gotoNextObject () ;
  }
  cEnumerator_lstringlist enumerator_4886 (object->mAttribute_mAdoptedProtocolList, kEnumeration_up) ;
  while (enumerator_4886.hasCurrentObject ()) {
    GALGAS_bool var_isPredefined ;
    ioArgument_ioContextAnalysisStruct.mAttribute_mProtocolMap.method_searchKey (enumerator_4886.current_mValue (HERE), var_isPredefined, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 148)) ;
    var_adoptedProtocolList.addAssign_operation (var_isPredefined, enumerator_4886.current_mValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 149)) ;
    enumerator_4886.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mOutletClassMap.modifier_insertKey (object->mAttribute_mOutletClassName, object->mAttribute_mGenerationKind, object->mAttribute_mSuperClassName.mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_allBindingMap, var_currentBindingMap, object->mAttribute_mHasTableValueBinding, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 152)) ;
  }
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, object->mAttribute_mGenerationKind.objectCompare (GALGAS_generationKind::constructor_fullGeneration (SOURCE_FILE ("outletClassAnalysis.gSemantics", 163)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioGenerationList.addAssign_operation (GALGAS_outletClassGeneration::constructor_new (object->mAttribute_mOutletClassName.mAttribute_string, object->mAttribute_mSuperClassName.mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_currentBindingMap  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 164))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 164)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                        categoryMethod_outletClassDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_semanticAnalysis (defineCategoryMethod_outletClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


