//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'outletClassAnalysis.cpp'                       *
//                        Generated by version 2.5.0                         *
//                      july 16th, 2013, at 21h46'28"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "outletClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "outletClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'outletClassesEnterType'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_outletClassesEnterType (const GALGAS_outletClassList constinArgument_inOutletClassList,
                                     GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                     C_Compiler * inCompiler
                                     COMMA_UNUSED_LOCATION_ARGS) {
  cEnumerator_outletClassList enumerator_330 (constinArgument_inOutletClassList, kEnumeration_up) ;
  while (enumerator_330.hasCurrentObject ()) {
    GALGAS_unifiedTypeProxy var_superClassProxy ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_330.current_mSuperClassName (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_superClassProxy = GALGAS_unifiedTypeProxy::constructor_null (SOURCE_FILE_AT_LINE (15)) ;
    }else if (kBoolFalse == test_0) {
      {
      GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_330.current_mSuperClassName (HERE), var_superClassProxy COMMA_SOURCE_FILE_AT_LINE (17)) ;
      }
    }
    GALGAS_outletClassBindingMap var_currentBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (24)) ;
    cEnumerator_outletClassBindingList enumerator_758 (enumerator_330.current_mOutletClassBindingList (HERE), kEnumeration_up) ;
    while (enumerator_758.hasCurrentObject ()) {
      GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (26)) ;
      cEnumerator_bindingOptionList enumerator_870 (enumerator_758.current_mBindingOptionList (HERE), kEnumeration_up) ;
      while (enumerator_870.hasCurrentObject ()) {
        GALGAS_unifiedTypeProxyList var_acceptableTypeList = GALGAS_unifiedTypeProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (28)) ;
        cEnumerator_attributeASTTypeList enumerator_972 (enumerator_870.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
        while (enumerator_972.hasCurrentObject ()) {
          GALGAS_unifiedTypeProxy var_type ;
          {
          GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_972.current_mTypeName (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (30)) ;
          }
          var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (35)) ;
          enumerator_972.gotoNextObject () ;
        }
        {
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_870.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (37)) ;
        }
        enumerator_870.gotoNextObject () ;
      }
      GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (SOURCE_FILE_AT_LINE (39)) ;
      cEnumerator_attributeASTTypeAndFormatterList enumerator_1416 (enumerator_758.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
      while (enumerator_1416.hasCurrentObject ()) {
        GALGAS_unifiedTypeProxy var_type ;
        {
        GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1416.current_mTypeName (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (41)) ;
        }
        var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_1416.current_mRequiredFormatter (HERE) COMMA_SOURCE_FILE_AT_LINE (46)) ;
        enumerator_1416.gotoNextObject () ;
      }
      {
      var_currentBindingMap.modifier_insertKey (enumerator_758.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (48)) ;
      }
      enumerator_758.gotoNextObject () ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_insertKey (enumerator_330.current_mOutletClassName (HERE), GALGAS_unifiedTypeKind::constructor_outletClass (SOURCE_FILE_AT_LINE (53)), var_superClassProxy, GALGAS_enumConstantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (55)), GALGAS_unifiedTypeProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (56)), var_currentBindingMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (51)) ;
    }
    enumerator_330.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeOutletClasses'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeOutletClasses (const GALGAS_outletClassList constinArgument_inOutletClassList,
                                   const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                   const GALGAS_protocolMap constinArgument_inProtocolMap,
                                   GALGAS_outletClassMap & outArgument_outOutletClassMap,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  outArgument_outOutletClassMap = GALGAS_outletClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (70)) ;
  cEnumerator_outletClassList enumerator_2384 (constinArgument_inOutletClassList, kEnumeration_up) ;
  while (enumerator_2384.hasCurrentObject ()) {
    GALGAS_EXoutletClassBindingMap var_allBindingMap ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_2384.current_mSuperClassName (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_allBindingMap = GALGAS_EXoutletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (75)) ;
    }else if (kBoolFalse == test_0) {
      GALGAS_generationKind joker_2637_4 ; // Joker input parameter
      GALGAS_string joker_2637_3 ; // Joker input parameter
      GALGAS_protocolList joker_2637_2 ; // Joker input parameter
      GALGAS_bool joker_2637_1 ; // Joker input parameter
      GALGAS_EXoutletClassBindingMap joker_2672_2 ; // Joker input parameter
      GALGAS_bool joker_2672_1 ; // Joker input parameter
      outArgument_outOutletClassMap.method_searchKey (enumerator_2384.current_mSuperClassName (HERE), joker_2637_4, joker_2637_3, joker_2637_2, joker_2637_1, var_allBindingMap, joker_2672_2, joker_2672_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (77)) ;
    }
    GALGAS_protocolList var_adoptedProtocolList = GALGAS_protocolList::constructor_emptyList (SOURCE_FILE_AT_LINE (85)) ;
    GALGAS_bool var_implementsDeallocProtocol = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_2845 (enumerator_2384.current_mOptionList (HERE), kEnumeration_up) ;
    while (enumerator_2845.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_2845.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("PMWillDeallocProtocol"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_2845.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("only 'PMWillDeallocProtocol' is allowed here") COMMA_SOURCE_FILE_AT_LINE (89)) ;
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_3 = var_implementsDeallocProtocol.boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_location location_4 (enumerator_2845.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_4, GALGAS_string ("'PMWillDeallocProtocol' option already set") COMMA_SOURCE_FILE_AT_LINE (91)) ;
        }else if (kBoolFalse == test_3) {
          var_implementsDeallocProtocol = GALGAS_bool (true) ;
          var_adoptedProtocolList.addAssign_operation (GALGAS_bool (false), enumerator_2845.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (94)) ;
        }
      }
      enumerator_2845.gotoNextObject () ;
    }
    GALGAS_EXoutletClassBindingMap var_currentBindingMap = GALGAS_EXoutletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (98)) ;
    cEnumerator_outletClassBindingList enumerator_3343 (enumerator_2384.current_mOutletClassBindingList (HERE), kEnumeration_up) ;
    while (enumerator_3343.hasCurrentObject ()) {
      GALGAS_EXoutletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_EXoutletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (100)) ;
      cEnumerator_bindingOptionList enumerator_3457 (enumerator_3343.current_mBindingOptionList (HERE), kEnumeration_up) ;
      while (enumerator_3457.hasCurrentObject ()) {
        GALGAS_easyBindingTypeList var_acceptableTypeList = GALGAS_easyBindingTypeList::constructor_emptyList (SOURCE_FILE_AT_LINE (102)) ;
        cEnumerator_attributeASTTypeList enumerator_3558 (enumerator_3457.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
        while (enumerator_3558.hasCurrentObject ()) {
          GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_3558.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (104)) ;
          var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (105)) ;
          enumerator_3558.gotoNextObject () ;
        }
        {
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_3457.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (107)) ;
        }
        enumerator_3457.gotoNextObject () ;
      }
      GALGAS_EXeasyBindingTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_EXeasyBindingTypeAndFormatterList::constructor_emptyList (SOURCE_FILE_AT_LINE (109)) ;
      cEnumerator_attributeASTTypeAndFormatterList enumerator_3939 (enumerator_3343.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
      while (enumerator_3939.hasCurrentObject ()) {
        GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_3939.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (111)) ;
        var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_3939.current_mRequiredFormatter (HERE) COMMA_SOURCE_FILE_AT_LINE (112)) ;
        enumerator_3939.gotoNextObject () ;
      }
      {
      var_allBindingMap.modifier_insertKey (enumerator_3343.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (114)) ;
      }
      {
      var_currentBindingMap.modifier_insertKey (enumerator_3343.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (115)) ;
      }
      enumerator_3343.gotoNextObject () ;
    }
    cEnumerator_lstringlist enumerator_4401 (enumerator_2384.current_mAdoptedProtocolList (HERE), kEnumeration_up) ;
    while (enumerator_4401.hasCurrentObject ()) {
      GALGAS_bool var_isPredefined ;
      constinArgument_inProtocolMap.method_searchKey (enumerator_4401.current_mValue (HERE), var_isPredefined, inCompiler COMMA_SOURCE_FILE_AT_LINE (119)) ;
      var_adoptedProtocolList.addAssign_operation (var_isPredefined, enumerator_4401.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (120)) ;
      enumerator_4401.gotoNextObject () ;
    }
    {
    outArgument_outOutletClassMap.modifier_insertKey (enumerator_2384.current_mOutletClassName (HERE), enumerator_2384.current_mGeneration (HERE), enumerator_2384.current_mSuperClassName (HERE).mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_allBindingMap, var_currentBindingMap, enumerator_2384.current_mHasTableValueBinding (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (123)) ;
    }
    enumerator_2384.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


