//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'outletClassAnalysis.cpp'                       *
//                        Generated by version 2.5.0                         *
//                       july 19th, 2013, at 12h46'5"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "outletClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "outletClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@outletClassDeclaration typeInventory'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                                 GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_outletClassDeclaration) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_unifiedTypeProxy var_superClassProxy ;
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperClassName, var_superClassProxy COMMA_SOURCE_FILE_AT_LINE (12)) ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mOutletClassName, object->mAttribute_mSuperClassName COMMA_SOURCE_FILE_AT_LINE (17)) ;
    }
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_outletClassDeclaration temp_1 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mOutletClassName, GALGAS_ebType::constructor_new (object->mAttribute_mOutletClassName, GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE_AT_LINE (25)) COMMA_SOURCE_FILE_AT_LINE (25)), temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (23)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                     categoryMethod_outletClassDeclaration_typeInventory) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_typeInventory (defineCategoryMethod_outletClassDeclaration_typeInventory, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//Overriding category method '@outletClassDeclaration buildObservablePropertyMap'*
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * inObject,
                                                                              const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                              GALGAS_observablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                              GALGAS_transientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                              C_Compiler * inCompiler
                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_outletClassDeclaration * object = (const cPtr_outletClassDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_outletClassDeclaration) ;
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (39)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_typeKind var_kind ;
    ioArgument_ioObservablePropertyMapMap.method_searchKey (object->mAttribute_mSuperClassName, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (40)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE_AT_LINE (45)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (object->mAttribute_mSuperClassName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)).operator_concat (GALGAS_string ("' is not an outlet class") COMMA_SOURCE_FILE_AT_LINE (46)) COMMA_SOURCE_FILE_AT_LINE (46)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_observablePropertyMap = GALGAS_observablePropertyMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (49)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mOutletClassName, GALGAS_typeKind::constructor_outletClassType (SOURCE_FILE_AT_LINE (66)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (64)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                                  categoryMethod_outletClassDeclaration_buildObservablePropertyMap) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_outletClassDeclaration_buildObservablePropertyMap, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//   Overriding category method '@outletClassDeclaration semanticAnalysis'   *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_outletClassDeclaration_semanticAnalysis (const cPtr_astDeclaration * /* inObject */,
                                                                    const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                    GALGAS_contextAnalysisStruct & /* ioArgument_ioContextAnalysisStruct */,
                                                                    GALGAS_generationList & /* ioArgument_ioGenerationList */,
                                                                    C_Compiler * /* inCompiler */
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_outletClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_outletClassDeclaration.mSlotID,
                                        categoryMethod_outletClassDeclaration_semanticAnalysis) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_outletClassDeclaration_semanticAnalysis (defineCategoryMethod_outletClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


