//---------------------------------------------------------------------------*
//                                                                           *
//                      File 'outletClassAnalysis.cpp'                       *
//                        Generated by version 2.4.7                         *
//                       july 6th, 2013, at 9h58'29"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "outletClassAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "outletClassAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'analyzeOutletClasses'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeOutletClasses (const GALGAS_outletClassList constinArgument_inOutletClassList,
                                   const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                   const GALGAS_protocolMap constinArgument_inProtocolMap,
                                   GALGAS_outletClassMap & outArgument_outOutletClassMap,
                                   C_Compiler * inCompiler
                                   COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outOutletClassMap.drop () ; // Release 'out' argument
  outArgument_outOutletClassMap = GALGAS_outletClassMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (13)) ;
  cEnumerator_outletClassList enumerator_461 (constinArgument_inOutletClassList, kEnumeration_up) ;
  while (enumerator_461.hasCurrentObject ()) {
    GALGAS_outletClassBindingMap var_allBindingMap ;
    const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, enumerator_461.current_mSuperClassName (HERE).mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
    if (kBoolTrue == test_0) {
      var_allBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (18)) ;
    }else if (kBoolFalse == test_0) {
      GALGAS_generationKind joker_710_4 ; // Joker input parameter
      GALGAS_string joker_710_3 ; // Joker input parameter
      GALGAS_protocolList joker_710_2 ; // Joker input parameter
      GALGAS_bool joker_710_1 ; // Joker input parameter
      GALGAS_outletClassBindingMap joker_745_2 ; // Joker input parameter
      GALGAS_bool joker_745_1 ; // Joker input parameter
      outArgument_outOutletClassMap.method_searchKey (enumerator_461.current_mSuperClassName (HERE), joker_710_4, joker_710_3, joker_710_2, joker_710_1, var_allBindingMap, joker_745_2, joker_745_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (20)) ;
    }
    GALGAS_protocolList var_adoptedProtocolList = GALGAS_protocolList::constructor_emptyList (SOURCE_FILE_AT_LINE (28)) ;
    GALGAS_bool var_implementsDeallocProtocol = GALGAS_bool (false) ;
    cEnumerator_lstringlist enumerator_918 (enumerator_461.current_mOptionList (HERE), kEnumeration_up) ;
    while (enumerator_918.hasCurrentObject ()) {
      const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_918.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("PMWillDeallocProtocol"))).boolEnum () ;
      if (kBoolTrue == test_1) {
        GALGAS_location location_2 (enumerator_918.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_2, GALGAS_string ("only 'PMWillDeallocProtocol' is allowed here") COMMA_SOURCE_FILE_AT_LINE (32)) ;
      }else if (kBoolFalse == test_1) {
        const enumGalgasBool test_3 = var_implementsDeallocProtocol.boolEnum () ;
        if (kBoolTrue == test_3) {
          GALGAS_location location_4 (enumerator_918.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_4, GALGAS_string ("'PMWillDeallocProtocol' option already set") COMMA_SOURCE_FILE_AT_LINE (34)) ;
        }else if (kBoolFalse == test_3) {
          var_implementsDeallocProtocol = GALGAS_bool (true) ;
          var_adoptedProtocolList.addAssign_operation (GALGAS_bool (false), enumerator_918.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (37)) ;
        }
      }
      enumerator_918.gotoNextObject () ;
    }
    GALGAS_outletClassBindingMap var_currentBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (41)) ;
    cEnumerator_outletClassBindingList enumerator_1397 (enumerator_461.current_mOutletClassBindingList (HERE), kEnumeration_up) ;
    while (enumerator_1397.hasCurrentObject ()) {
      GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (43)) ;
      cEnumerator_bindingOptionList enumerator_1509 (enumerator_1397.current_mBindingOptionList (HERE), kEnumeration_up) ;
      while (enumerator_1509.hasCurrentObject ()) {
        GALGAS_easyBindingTypeList var_acceptableTypeList = GALGAS_easyBindingTypeList::constructor_emptyList (SOURCE_FILE_AT_LINE (45)) ;
        cEnumerator_attributeASTTypeList enumerator_1610 (enumerator_1509.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
        while (enumerator_1610.hasCurrentObject ()) {
          GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_1610.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (47)) ;
          var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (48)) ;
          enumerator_1610.gotoNextObject () ;
        }
        {
        var_outletClassBindingOptionMap.modifier_insertKey (enumerator_1509.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (50)) ;
        }
        enumerator_1509.gotoNextObject () ;
      }
      GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (SOURCE_FILE_AT_LINE (52)) ;
      cEnumerator_attributeASTTypeAndFormatterList enumerator_1989 (enumerator_1397.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
      while (enumerator_1989.hasCurrentObject ()) {
        GALGAS_easyBindingType var_type = callCategoryReader_analyze ((const cPtr_attributeASTType *) enumerator_1989.current_mType (HERE).ptr (), constinArgument_inContextAnalysisStruct, inCompiler COMMA_SOURCE_FILE_AT_LINE (54)) ;
        var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_1989.current_mRequiredFormatter (HERE) COMMA_SOURCE_FILE_AT_LINE (55)) ;
        enumerator_1989.gotoNextObject () ;
      }
      {
      var_allBindingMap.modifier_insertKey (enumerator_1397.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (57)) ;
      }
      {
      var_currentBindingMap.modifier_insertKey (enumerator_1397.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (58)) ;
      }
      enumerator_1397.gotoNextObject () ;
    }
    cEnumerator_lstringlist enumerator_2451 (enumerator_461.current_mAdoptedProtocolList (HERE), kEnumeration_up) ;
    while (enumerator_2451.hasCurrentObject ()) {
      GALGAS_bool var_isPredefined ;
      constinArgument_inProtocolMap.method_searchKey (enumerator_2451.current_mValue (HERE), var_isPredefined, inCompiler COMMA_SOURCE_FILE_AT_LINE (62)) ;
      var_adoptedProtocolList.addAssign_operation (var_isPredefined, enumerator_2451.current_mValue (HERE) COMMA_SOURCE_FILE_AT_LINE (63)) ;
      enumerator_2451.gotoNextObject () ;
    }
    {
    outArgument_outOutletClassMap.modifier_insertKey (enumerator_461.current_mOutletClassName (HERE), enumerator_461.current_mGeneration (HERE), enumerator_461.current_mSuperClassName (HERE).mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_allBindingMap, var_currentBindingMap, enumerator_461.current_mHasTableValueBinding (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (66)) ;
    }
    enumerator_461.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


