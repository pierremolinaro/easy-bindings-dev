//-----------------------------------------------------------------------------*
//                                                                             *
//                       File 'outletClassAnalysis.cpp'                        *
//                         Generated by version 2.7.0                          *
//                       august 8th, 2014, at 11h52'58"                        *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "outletClassAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@EXoutletClassDeclaration EXTypeInventory'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_EXoutletClassDeclaration_EXTypeInventory (const cPtr_EXastDeclaration * inObject,
                                                                     GALGAS_EXunifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                     C_Compiler * inCompiler
                                                                     COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXoutletClassDeclaration * object = (const cPtr_EXoutletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXoutletClassDeclaration) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_EXunifiedTypeProxy var_superClassProxy ;
    {
    GALGAS_EXunifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperClassName, var_superClassProxy COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 12)) ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mOutletClassName, object->mAttribute_mSuperClassName COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 17)) ;
    }
  }
  {
  const GALGAS_EXoutletClassDeclaration temp_1 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mOutletClassName, GALGAS_EXebType::constructor_new (object->mAttribute_mOutletClassName, GALGAS_EXTypeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 25))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 25)), temp_1, GALGAS_EXentityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 27)), inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 23)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_EXoutletClassDeclaration_EXTypeInventory (void) {
  enterCategoryMethod_EXTypeInventory (kTypeDescriptor_GALGAS_EXoutletClassDeclaration.mSlotID,
                                       categoryMethod_EXoutletClassDeclaration_EXTypeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXoutletClassDeclaration_EXTypeInventory (defineCategoryMethod_EXoutletClassDeclaration_EXTypeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@EXoutletClassDeclaration buildObservablePropertyMap'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_EXoutletClassDeclaration_buildObservablePropertyMap (const cPtr_EXastDeclaration * inObject,
                                                                                const GALGAS_EXunifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                GALGAS_EXobservablePropertyMapMap & ioArgument_ioObservablePropertyMapMap,
                                                                                GALGAS_EXtransientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                                C_Compiler * inCompiler
                                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXoutletClassDeclaration * object = (const cPtr_EXoutletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXoutletClassDeclaration) ;
  GALGAS_EXobservablePropertyMap var_observablePropertyMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("outletClassAnalysis.gSemantics", 40)).objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_EXTypeKind var_kind ;
    GALGAS_bool joker_1340_0 ; // Joker input parameter
    ioArgument_ioObservablePropertyMapMap.method_searchKey (object->mAttribute_mSuperClassName, joker_1340_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 41)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_EXTypeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 47)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (object->mAttribute_mSuperClassName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (object->mAttribute_mSuperClassName.reader_string (SOURCE_FILE ("outletClassAnalysis.gSemantics", 48))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 48)).operator_concat (GALGAS_string ("' is not an outlet class")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 48))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 48)) ;
    }
  }else if (kBoolFalse == test_0) {
    var_observablePropertyMap = GALGAS_EXobservablePropertyMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 51)) ;
  }
  {
  ioArgument_ioObservablePropertyMapMap.modifier_insertKey (object->mAttribute_mOutletClassName, object->mAttribute_mUserDefined, GALGAS_EXTypeKind::constructor_outletClassType (SOURCE_FILE ("outletClassAnalysis.gSemantics", 57)), var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 54)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_EXoutletClassDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_EXoutletClassDeclaration.mSlotID,
                                                  categoryMethod_EXoutletClassDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXoutletClassDeclaration_buildObservablePropertyMap (defineCategoryMethod_EXoutletClassDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//   Overriding category method '@EXoutletClassDeclaration semanticAnalysis'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_EXoutletClassDeclaration_semanticAnalysis (const cPtr_EXastDeclaration * inObject,
                                                                      const GALGAS_EXunifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                      GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                      GALGAS_generationList & ioArgument_ioGenerationList,
                                                                      C_Compiler * inCompiler
                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXoutletClassDeclaration * object = (const cPtr_EXoutletClassDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXoutletClassDeclaration) ;
  GALGAS_outletClassBindingMap var_allBindingMap ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperClassName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_allBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 72)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_generationKind joker_2394_4 ; // Joker input parameter
    GALGAS_string joker_2394_3 ; // Joker input parameter
    GALGAS_protocolList joker_2394_2 ; // Joker input parameter
    GALGAS_bool joker_2394_1 ; // Joker input parameter
    GALGAS_outletClassBindingMap joker_2425_2 ; // Joker input parameter
    GALGAS_bool joker_2425_1 ; // Joker input parameter
    ioArgument_ioContextAnalysisStruct.mAttribute_mOutletClassMap.method_searchKey (object->mAttribute_mSuperClassName, joker_2394_4, joker_2394_3, joker_2394_2, joker_2394_1, var_allBindingMap, joker_2425_2, joker_2425_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 74)) ;
  }
  GALGAS_protocolList var_adoptedProtocolList = GALGAS_protocolList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 82)) ;
  GALGAS_bool var_implementsDeallocProtocol = GALGAS_bool (false) ;
  cEnumerator_lstringlist enumerator_2584 (object->mAttribute_mOptionList, kEnumeration_up) ;
  while (enumerator_2584.hasCurrentObject ()) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, enumerator_2584.current_mValue (HERE).mAttribute_string.objectCompare (GALGAS_string ("PMWillDeallocProtocol"))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (enumerator_2584.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("only 'PMWillDeallocProtocol' is allowed here")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 86)) ;
    }else if (kBoolFalse == test_1) {
      const enumGalgasBool test_3 = var_implementsDeallocProtocol.boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (enumerator_2584.current_mValue (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("'PMWillDeallocProtocol' option already set")  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 88)) ;
      }else if (kBoolFalse == test_3) {
        var_implementsDeallocProtocol = GALGAS_bool (true) ;
        var_adoptedProtocolList.addAssign_operation (GALGAS_bool (false), enumerator_2584.current_mValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 91)) ;
      }
    }
    enumerator_2584.gotoNextObject () ;
  }
  GALGAS_outletClassBindingMap var_currentBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 95)) ;
  cEnumerator_outletClassBindingList enumerator_3064 (object->mAttribute_mOutletClassBindingList, kEnumeration_up) ;
  while (enumerator_3064.hasCurrentObject ()) {
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE ("outletClassAnalysis.gSemantics", 97)) ;
    cEnumerator_bindingOptionList enumerator_3172 (enumerator_3064.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_3172.hasCurrentObject ()) {
      GALGAS_EXebTypeList var_acceptableTypeList = GALGAS_EXebTypeList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 99)) ;
      cEnumerator_lstringlist enumerator_3262 (enumerator_3172.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_3262.hasCurrentObject ()) {
        GALGAS_EXebType var_type ;
        GALGAS_EXastDeclaration joker_3327_2 ; // Joker input parameter
        GALGAS_EXentityRelationshipMap joker_3327_1 ; // Joker input parameter
        constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_3262.current_mValue (HERE), var_type, joker_3327_2, joker_3327_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 101)) ;
        var_acceptableTypeList.addAssign_operation (var_type  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 102)) ;
        enumerator_3262.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_3172.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 104)) ;
      }
      enumerator_3172.gotoNextObject () ;
    }
    GALGAS_EXebTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_EXebTypeAndFormatterList::constructor_emptyList (SOURCE_FILE ("outletClassAnalysis.gSemantics", 106)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_3611 (enumerator_3064.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_3611.hasCurrentObject ()) {
      GALGAS_EXebType var_type ;
      GALGAS_EXastDeclaration joker_3677_2 ; // Joker input parameter
      GALGAS_EXentityRelationshipMap joker_3677_1 ; // Joker input parameter
      constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_3611.current_mTypeName (HERE), var_type, joker_3677_2, joker_3677_1, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 108)) ;
      var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_3611.current_mRequiredFormatter (HERE)  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 109)) ;
      enumerator_3611.gotoNextObject () ;
    }
    {
    var_allBindingMap.modifier_insertKey (enumerator_3064.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 111)) ;
    }
    {
    var_currentBindingMap.modifier_insertKey (enumerator_3064.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 112)) ;
    }
    enumerator_3064.gotoNextObject () ;
  }
  cEnumerator_lstringlist enumerator_4051 (object->mAttribute_mAdoptedProtocolList, kEnumeration_up) ;
  while (enumerator_4051.hasCurrentObject ()) {
    GALGAS_bool var_isPredefined ;
    ioArgument_ioContextAnalysisStruct.mAttribute_mProtocolMap.method_searchKey (enumerator_4051.current_mValue (HERE), var_isPredefined, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 116)) ;
    var_adoptedProtocolList.addAssign_operation (var_isPredefined, enumerator_4051.current_mValue (HERE).mAttribute_string  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 117)) ;
    enumerator_4051.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mOutletClassMap.modifier_insertKey (object->mAttribute_mOutletClassName, object->mAttribute_mGenerationKind, object->mAttribute_mSuperClassName.mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_allBindingMap, var_currentBindingMap, object->mAttribute_mHasTableValueBinding, inCompiler COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 120)) ;
  }
  const enumGalgasBool test_5 = GALGAS_bool (kIsEqual, object->mAttribute_mGenerationKind.objectCompare (GALGAS_generationKind::constructor_fullGeneration (SOURCE_FILE ("outletClassAnalysis.gSemantics", 131)))).boolEnum () ;
  if (kBoolTrue == test_5) {
    ioArgument_ioGenerationList.addAssign_operation (GALGAS_outletClassGeneration::constructor_new (object->mAttribute_mOutletClassName.mAttribute_string, object->mAttribute_mSuperClassName.mAttribute_string, var_adoptedProtocolList, var_implementsDeallocProtocol, var_currentBindingMap  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 132))  COMMA_SOURCE_FILE ("outletClassAnalysis.gSemantics", 132)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_EXoutletClassDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_EXoutletClassDeclaration.mSlotID,
                                        categoryMethod_EXoutletClassDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXoutletClassDeclaration_semanticAnalysis (defineCategoryMethod_EXoutletClassDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


