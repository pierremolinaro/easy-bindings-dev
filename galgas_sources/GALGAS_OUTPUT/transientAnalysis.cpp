//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'transientAnalysis.cpp'                        *
//                        Generated by version 2.5.0                         *
//                      july 19th, 2013, at 13h29'40"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "transientAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "transientAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'analyzeTransientProperties'                    *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_analyzeTransientProperties (const GALGAS_transientList constinArgument_inTransientList,
                                         const GALGAS_observablePropertyMap constinArgument_inRootObjectObservablePropertyMap,
                                         GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                         const GALGAS_string constinArgument_inRootEntityName,
                                         const GALGAS_observablePropertyMap constinArgument_inSelfObjectObservablePropertyMap,
                                         GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                         GALGAS_transientListForImplementation & outArgument_outTransientListForImplementation,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outTransientListForImplementation.drop () ; // Release 'out' argument
  outArgument_outTransientListForImplementation = GALGAS_transientListForImplementation::constructor_emptyList (SOURCE_FILE_AT_LINE (297)) ;
  cEnumerator_transientList enumerator_10589 (constinArgument_inTransientList, kEnumeration_up) ;
  while (enumerator_10589.hasCurrentObject ()) {
    GALGAS_ebType var_type ;
    GALGAS_lstring var_transientPropertySignature ;
    GALGAS_bool joker_10689_0 ; // Joker input parameter
    GALGAS_bool joker_10741_0 ; // Joker input parameter
    constinArgument_inSelfObjectObservablePropertyMap.method_searchKey (enumerator_10589.current_mTransientName (HERE), var_type, joker_10689_0, var_transientPropertySignature, joker_10741_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (299)) ;
    GALGAS_directDependancyList var_directDependancyList = GALGAS_directDependancyList::constructor_emptyList (SOURCE_FILE_AT_LINE (307)) ;
    GALGAS_stringlist var_rootSignDependencyList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE_AT_LINE (308)) ;
    cEnumerator_dependanceList enumerator_10922 (enumerator_10589.current_mDependencyList (HERE), kEnumeration_up) ;
    while (enumerator_10922.hasCurrentObject ()) {
      callCategoryMethod_analyze ((const cPtr_abstractTransientDependency *) enumerator_10922.current_mDependency (HERE).ptr (), enumerator_10589.current_mTransientName (HERE), constinArgument_inSelfObjectObservablePropertyMap, constinArgument_inRootObjectObservablePropertyMap, constinArgument_inRootEntityName, var_transientPropertySignature, ioArgument_ioFileInclusionSet, ioArgument_ioContextAnalysisStruct, var_directDependancyList, var_rootSignDependencyList, inCompiler COMMA_SOURCE_FILE_AT_LINE (310)) ;
      enumerator_10922.gotoNextObject () ;
    }
    outArgument_outTransientListForImplementation.addAssign_operation (var_type, enumerator_10589.current_mTransientName (HERE).reader_string (SOURCE_FILE_AT_LINE (323)), var_directDependancyList, var_rootSignDependencyList COMMA_SOURCE_FILE_AT_LINE (323)) ;
    enumerator_10589.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------*
//                                                                           *
//      Abstract category method '@abstractTransientDependency analyze'      *
//                                                                           *
//---------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractTransientDependency_analyze> gCategoryMethodTable_abstractTransientDependency_analyze ;

//---------------------------------------------------------------------------*

void enterCategoryMethod_analyze (const PMSInt32 inClassIndex,
                                  categoryMethodSignature_abstractTransientDependency_analyze inMethod) {
  gCategoryMethodTable_abstractTransientDependency_analyze.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

static void freeCategoryMethod_abstractTransientDependency_analyze (void) {
  gCategoryMethodTable_abstractTransientDependency_analyze.free () ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractTransientDependency_analyze (NULL,
                                                                freeCategoryMethod_abstractTransientDependency_analyze) ;

//---------------------------------------------------------------------------*

void callCategoryMethod_analyze (const cPtr_abstractTransientDependency * inObject,
                                 const GALGAS_lstring constin_inTransientName,
                                 const GALGAS_observablePropertyMap constin_inLocalObservablePropertyMap,
                                 const GALGAS_observablePropertyMap constin_inRootObjectObservablePropertyMap,
                                 const GALGAS_string constin_inRootEntityName,
                                 const GALGAS_lstring constin_inTransientPropertySignature,
                                 GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                 GALGAS_contextAnalysisStruct & io_ioContextAnalysisStruct,
                                 GALGAS_directDependancyList & io_ioDirectDependancyList,
                                 GALGAS_stringlist & io_ioRootSignDependencyList,
                                 C_Compiler * inCompiler
                                 COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, const cPtr_abstractTransientDependency) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const PMSInt32 classIndex = info->mSlotID ;
    categoryMethodSignature_abstractTransientDependency_analyze f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractTransientDependency_analyze.count ()) {
      f = gCategoryMethodTable_abstractTransientDependency_analyze (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractTransientDependency_analyze.count ()) {
           f = gCategoryMethodTable_abstractTransientDependency_analyze (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractTransientDependency_analyze.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inTransientName, constin_inLocalObservablePropertyMap, constin_inRootObjectObservablePropertyMap, constin_inRootEntityName, constin_inTransientPropertySignature, io_ioFileInclusionSet, io_ioContextAnalysisStruct, io_ioDirectDependancyList, io_ioRootSignDependencyList, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//     Overriding category method '@transientRootSignDependency analyze'     *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_transientRootSignDependency_analyze (const cPtr_abstractTransientDependency * inObject,
                                                                const GALGAS_lstring constinArgument_inTransientName,
                                                                const GALGAS_observablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                const GALGAS_observablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                                const GALGAS_string constinArgument_inRootEntityName,
                                                                const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                GALGAS_directDependancyList & /* ioArgument_ioDirectDependancyList */,
                                                                GALGAS_stringlist & ioArgument_ioRootSignDependencyList,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientRootSignDependency * object = (const cPtr_transientRootSignDependency *) inObject ;
  macroValidSharedObject (object, const cPtr_transientRootSignDependency) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inRootEntityName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mDeclarationLocation, GALGAS_string ("no root object in this context") COMMA_SOURCE_FILE_AT_LINE (58)) ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addArc (GALGAS_lstring::constructor_new (GALGAS_string ("entity.").operator_concat (constinArgument_inRootEntityName COMMA_SOURCE_FILE_AT_LINE (62)).operator_concat (GALGAS_string (".sign") COMMA_SOURCE_FILE_AT_LINE (62)), object->mAttribute_mDeclarationLocation COMMA_SOURCE_FILE_AT_LINE (62)), constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE_AT_LINE (61)) ;
  }
  ioArgument_ioRootSignDependencyList.addAssign_operation (constinArgument_inTransientPropertySignature.mAttribute_string.operator_concat (constinArgument_inTransientName.reader_string (SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)) COMMA_SOURCE_FILE_AT_LINE (66)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootSignDependency_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_transientRootSignDependency.mSlotID,
                               categoryMethod_transientRootSignDependency_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootSignDependency_analyze (defineCategoryMethod_transientRootSignDependency_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//      Overriding category method '@transientLocalDependency analyze'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_transientLocalDependency_analyze (const cPtr_abstractTransientDependency * inObject,
                                                             const GALGAS_lstring /* constinArgument_inTransientName */,
                                                             const GALGAS_observablePropertyMap constinArgument_inLocalObservablePropertyMap,
                                                             const GALGAS_observablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                             const GALGAS_string /* constinArgument_inRootEntityName */,
                                                             const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                             GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                             GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                             GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                             GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientLocalDependency * object = (const cPtr_transientLocalDependency *) inObject ;
  macroValidSharedObject (object, const cPtr_transientLocalDependency) ;
  GALGAS_ebType var_masterType ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool joker_3117_0 ; // Joker input parameter
  GALGAS_bool joker_3162_0 ; // Joker input parameter
  constinArgument_inLocalObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_3117_0, var_masterPropertySignature, joker_3162_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (86)) ;
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addArc (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE_AT_LINE (94)) ;
  }
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromSelfForImplementation::constructor_new (var_masterType, object->mAttribute_mMasterName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (99)) COMMA_SOURCE_FILE_AT_LINE (99)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_transientLocalDependency_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_transientLocalDependency.mSlotID,
                               categoryMethod_transientLocalDependency_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientLocalDependency_analyze (defineCategoryMethod_transientLocalDependency_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@transientControllerDependency analyze'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_transientControllerDependency_analyze (const cPtr_abstractTransientDependency * inObject,
                                                                  const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                  const GALGAS_observablePropertyMap constinArgument_inLocalObservablePropertyMap,
                                                                  const GALGAS_observablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                                  const GALGAS_string /* constinArgument_inRootEntityName */,
                                                                  const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                  GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                  GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                  GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                                  GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientControllerDependency * object = (const cPtr_transientControllerDependency *) inObject ;
  macroValidSharedObject (object, const cPtr_transientControllerDependency) ;
  GALGAS_ebType var_type ;
  GALGAS_bool joker_4159_3 ; // Joker input parameter
  GALGAS_lstring joker_4159_2 ; // Joker input parameter
  GALGAS_bool joker_4159_1 ; // Joker input parameter
  constinArgument_inLocalObservablePropertyMap.method_searchKey (object->mAttribute_mControllerName, var_type, joker_4159_3, joker_4159_2, joker_4159_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (116)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_type.mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_controllerClassType (SOURCE_FILE_AT_LINE (121)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mControllerName.reader_string (SOURCE_FILE_AT_LINE (122)) COMMA_SOURCE_FILE_AT_LINE (122)).operator_concat (GALGAS_string ("' is not a controller") COMMA_SOURCE_FILE_AT_LINE (122)) COMMA_SOURCE_FILE_AT_LINE (122)) ;
  }
  GALGAS_typeKind var_typeKind ;
  GALGAS_observablePropertyMap var_controllerObservablePropertyMap ;
  ioArgument_ioContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (var_type.mAttribute_mTypeName, var_typeKind, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (125)) ;
  GALGAS_ebType var_masterType ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool joker_4670_0 ; // Joker input parameter
  GALGAS_bool joker_4715_0 ; // Joker input parameter
  var_controllerObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_4670_0, var_masterPropertySignature, joker_4715_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (131)) ;
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addArc (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE_AT_LINE (139)) ;
  }
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromControllerForImplementation::constructor_new (var_masterType, object->mAttribute_mControllerName.mAttribute_string, object->mAttribute_mMasterName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (144)) COMMA_SOURCE_FILE_AT_LINE (144)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_transientControllerDependency_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_transientControllerDependency.mSlotID,
                               categoryMethod_transientControllerDependency_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientControllerDependency_analyze (defineCategoryMethod_transientControllerDependency_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@transientRootDependency analyze'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_transientRootDependency_analyze (const cPtr_abstractTransientDependency * inObject,
                                                            const GALGAS_lstring /* constinArgument_inTransientName */,
                                                            const GALGAS_observablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                            const GALGAS_observablePropertyMap constinArgument_inRootObjectObservablePropertyMap,
                                                            const GALGAS_string /* constinArgument_inRootEntityName */,
                                                            const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                            GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                            GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                            GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                            GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientRootDependency * object = (const cPtr_transientRootDependency *) inObject ;
  macroValidSharedObject (object, const cPtr_transientRootDependency) ;
  GALGAS_ebType var_masterType ;
  GALGAS_lstring var_masterDependencyKey ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_5703_0 ; // Joker input parameter
  constinArgument_inRootObjectObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_5703_0, var_masterDependencyKey, var_isCollection, inCompiler COMMA_SOURCE_FILE_AT_LINE (160)) ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.operator_and (var_isCollection.operator_not (SOURCE_FILE_AT_LINE (168)) COMMA_SOURCE_FILE_AT_LINE (168)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the 'count' option is only allowed for to-many relationships") COMMA_SOURCE_FILE_AT_LINE (169)) ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addArc (var_masterDependencyKey, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE_AT_LINE (172)) ;
  }
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromRootForImplementation::constructor_new (var_masterType, object->mAttribute_mMasterName.mAttribute_string, object->mAttribute_mNamesCountOption, var_masterDependencyKey.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE_AT_LINE (181)) COMMA_SOURCE_FILE_AT_LINE (177)) COMMA_SOURCE_FILE_AT_LINE (177)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootDependency_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_transientRootDependency.mSlotID,
                               categoryMethod_transientRootDependency_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootDependency_analyze (defineCategoryMethod_transientRootDependency_analyze, NULL) ;

//---------------------------------------------------------------------------*
//                                                                           *
//    Overriding category method '@transientPreferenceDependency analyze'    *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_transientPreferenceDependency_analyze (const cPtr_abstractTransientDependency * inObject,
                                                                  const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                  const GALGAS_observablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                  const GALGAS_observablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                                  const GALGAS_string /* constinArgument_inRootEntityName */,
                                                                  const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                  GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                  GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                  GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                                  GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientPreferenceDependency * object = (const cPtr_transientPreferenceDependency *) inObject ;
  macroValidSharedObject (object, const cPtr_transientPreferenceDependency) ;
  GALGAS_typeKind var_kind ;
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  ioArgument_ioContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (object->mAttribute_mPreferencesName, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (199)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_preferencesType (SOURCE_FILE_AT_LINE (205)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mPreferencesName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mPreferencesName.reader_string (SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (206)).operator_concat (GALGAS_string ("' is not a preference") COMMA_SOURCE_FILE_AT_LINE (206)) COMMA_SOURCE_FILE_AT_LINE (206)) ;
  }
  GALGAS_ebType var_masterType ;
  GALGAS_bool var_isTransient ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool joker_7385_0 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, var_isTransient, var_masterPropertySignature, joker_7385_0, inCompiler COMMA_SOURCE_FILE_AT_LINE (209)) ;
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addArc (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE_AT_LINE (217)) ;
  }
  ioArgument_ioFileInclusionSet.mAttribute_mImplementationFileInclusionSet.addAssign_operation (object->mAttribute_mPreferencesName.mAttribute_string COMMA_SOURCE_FILE_AT_LINE (222)) ;
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromPreferenceForImplementation::constructor_new (var_masterType, object->mAttribute_mPreferencesName.mAttribute_string, object->mAttribute_mMasterName.mAttribute_string, var_isTransient COMMA_SOURCE_FILE_AT_LINE (224)) COMMA_SOURCE_FILE_AT_LINE (224)) ;
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_transientPreferenceDependency_analyze (void) {
  enterCategoryMethod_analyze (kTypeDescriptor_GALGAS_transientPreferenceDependency.mSlotID,
                               categoryMethod_transientPreferenceDependency_analyze) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientPreferenceDependency_analyze (defineCategoryMethod_transientPreferenceDependency_analyze, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


