//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                            File 'transientAnalysis.cpp'                                             *
//                                             Generated by version 2.7.0                                              *
//                                           august 8th, 2014, at 20h3'39"                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "easyBindings_options.h"
#include "transientAnalysis.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                       Routine 'buildTransientDependencyGraph'                                       *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_buildTransientDependencyGraph (const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                            const GALGAS_string constinArgument_inSourceFile,
                                            GALGAS_transientDependencyGraphNodeInfoList & outArgument_outSortedTransientNodes,
                                            C_Compiler * inCompiler
                                            COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outSortedTransientNodes.drop () ; // Release 'out' argument
  GALGAS_transientDependencyGraph var_transientDependencyGraph = GALGAS_transientDependencyGraph::constructor_emptyGraph (SOURCE_FILE ("transientAnalysis.gSemantics", 166)) ;
  cEnumerator_unifiedTypeMap enumerator_5451 (constinArgument_inUnifiedTypeMap, kEnumeration_up) ;
  while (enumerator_5451.hasCurrentObject ()) {
    cEnumerator_decoratedObservablePropertyMap enumerator_5506 (enumerator_5451.current_mObservablePropertyMap (HERE), kEnumeration_up) ;
    while (enumerator_5506.hasCurrentObject ()) {
      {
      var_transientDependencyGraph.modifier_addNode (enumerator_5506.current_mPropertySignature (HERE), enumerator_5506.current_mPropertySignature (HERE).mAttribute_string, enumerator_5506.current_mIsTransient (HERE), inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 169)) ;
      }
      enumerator_5506.gotoNextObject () ;
    }
    cEnumerator_decoratedTransientMap enumerator_5741 (enumerator_5451.current_mDecoratedTransientMap (HERE), kEnumeration_up) ;
    while (enumerator_5741.hasCurrentObject ()) {
      GALGAS_decoratedObservablePropertyMap var_allObservableProperties = enumerator_5451.current_mObservablePropertyMap (HERE) ;
      GALGAS_unifiedTypeProxy var_t = enumerator_5451.current_mSuperType (HERE) ;
      if (constinArgument_inUnifiedTypeMap.reader_count (SOURCE_FILE ("transientAnalysis.gSemantics", 178)).isValid ()) {
        uint32_t variant_5897 = constinArgument_inUnifiedTypeMap.reader_count (SOURCE_FILE ("transientAnalysis.gSemantics", 178)).uintValue () ;
        bool loop_5897 = true ;
        while (loop_5897) {
          loop_5897 = var_t.reader_isNull (SOURCE_FILE ("transientAnalysis.gSemantics", 178)).operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 178)).isValid () ;
          if (loop_5897) {
            loop_5897 = var_t.reader_isNull (SOURCE_FILE ("transientAnalysis.gSemantics", 178)).operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 178)).boolValue () ;
          }
          if (loop_5897 && (0 == variant_5897)) {
            loop_5897 = false ;
            inCompiler->loopRunTimeVariantError (SOURCE_FILE ("transientAnalysis.gSemantics", 178)) ;
          }
          if (loop_5897) {
            variant_5897 -- ;
            cEnumerator_decoratedObservablePropertyMap enumerator_6000 (var_t.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 179)), kEnumeration_up) ;
            while (enumerator_6000.hasCurrentObject ()) {
              {
              var_allObservableProperties.modifier_insertKey (enumerator_6000.current_lkey (HERE), enumerator_6000.current_mPropertyType (HERE), enumerator_6000.current_mIsTransient (HERE), enumerator_6000.current_mPropertySignature (HERE), enumerator_6000.current_mIsCollection (HERE), inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 180)) ;
              }
              enumerator_6000.gotoNextObject () ;
            }
            var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 188)) ;
          }
        }
      }
      cEnumerator_dependanceList enumerator_6331 (enumerator_5741.current_mDependencyList (HERE), kEnumeration_up) ;
      while (enumerator_6331.hasCurrentObject ()) {
        callCategoryMethod_buildTransientDependencyGraph ((const cPtr_abstractTransientDependency *) enumerator_6331.current_mDependency (HERE).ptr (), constinArgument_inUnifiedTypeMap, var_transientDependencyGraph, enumerator_5741.current_lkey (HERE), var_allObservableProperties, enumerator_5451.current_mRootEntityType (HERE), enumerator_5741.current_mTransientSignature (HERE), inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 191)) ;
        enumerator_6331.gotoNextObject () ;
      }
      enumerator_5741.gotoNextObject () ;
    }
    enumerator_5451.gotoNextObject () ;
  }
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("transientAnalysis.gSemantics", 203)).objectCompare (GALGAS_uint ((uint32_t) 0U))).operator_and (GALGAS_bool (gOption_easyBindings_5F_options_outputTransientDependencyGraph.reader_value ()) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 203)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_string var_s = var_transientDependencyGraph.reader_graphviz (SOURCE_FILE ("transientAnalysis.gSemantics", 204)) ;
    GALGAS_string var_path = constinArgument_inSourceFile.operator_concat (GALGAS_string (".transientDependancyGraph.dot")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 205)) ;
    GALGAS_bool joker_6979_0 ; // Joker input parameter
    var_s.method_writeToFileWhenDifferentContents (var_path, joker_6979_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 206)) ;
  }
  const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, GALGAS_uint::constructor_errorCount (SOURCE_FILE ("transientAnalysis.gSemantics", 209)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
  if (kBoolTrue == test_1) {
    outArgument_outSortedTransientNodes = GALGAS_transientDependencyGraphNodeInfoList::constructor_emptyList (SOURCE_FILE ("transientAnalysis.gSemantics", 210)) ;
  }else if (kBoolFalse == test_1) {
    GALGAS_transientDependencyGraphNodeInfoList var_unsortedNodes ;
    GALGAS_lstringlist joker_7224_0 ; // Joker input parameter
    GALGAS_lstringlist joker_7292_0 ; // Joker input parameter
    var_transientDependencyGraph.method_topologicalSort (outArgument_outSortedTransientNodes, joker_7224_0, var_unsortedNodes, joker_7292_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 212)) ;
    const enumGalgasBool test_2 = GALGAS_bool (kIsStrictSup, var_unsortedNodes.reader_length (SOURCE_FILE ("transientAnalysis.gSemantics", 218)).objectCompare (GALGAS_uint ((uint32_t) 0U))).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_string var_s = GALGAS_string ("cannot sort properties and transient ; the following ones are involved in circular dependence:") ;
      cEnumerator_transientDependencyGraphNodeInfoList enumerator_7482 (var_unsortedNodes, kEnumeration_up) ;
      while (enumerator_7482.hasCurrentObject ()) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "-- ").operator_concat (enumerator_7482.current_mSignature (HERE)  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 221))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 221)) ;
        enumerator_7482.gotoNextObject () ;
      }
      inCompiler->emitSemanticError (inCompiler->here (), var_s  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 223)) ;
    }
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                        Routine 'analyzeTransientProperties'                                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

void routine_analyzeTransientProperties (const GALGAS_transientList constinArgument_inTransientList,
                                         const GALGAS_EXobservablePropertyMap constinArgument_inRootObjectObservablePropertyMap,
                                         GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                         const GALGAS_string constinArgument_inRootEntityName,
                                         const GALGAS_EXobservablePropertyMap constinArgument_inSelfObjectObservablePropertyMap,
                                         GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                         GALGAS_transientListForImplementation & outArgument_outTransientListForImplementation,
                                         C_Compiler * inCompiler
                                         COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outTransientListForImplementation.drop () ; // Release 'out' argument
  outArgument_outTransientListForImplementation = GALGAS_transientListForImplementation::constructor_emptyList (SOURCE_FILE ("transientAnalysis.gSemantics", 592)) ;
  cEnumerator_transientList enumerator_20886 (constinArgument_inTransientList, kEnumeration_up) ;
  while (enumerator_20886.hasCurrentObject ()) {
    GALGAS_EXebType var_type ;
    GALGAS_lstring var_transientPropertySignature ;
    GALGAS_bool joker_20990_0 ; // Joker input parameter
    GALGAS_bool joker_21042_0 ; // Joker input parameter
    constinArgument_inSelfObjectObservablePropertyMap.method_searchKey (enumerator_20886.current_mTransientName (HERE), var_type, joker_20990_0, var_transientPropertySignature, joker_21042_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 594)) ;
    GALGAS_directDependancyList var_directDependancyList = GALGAS_directDependancyList::constructor_emptyList (SOURCE_FILE ("transientAnalysis.gSemantics", 602)) ;
    GALGAS_stringlist var_rootSignDependencyList = GALGAS_stringlist::constructor_emptyList (SOURCE_FILE ("transientAnalysis.gSemantics", 603)) ;
    cEnumerator_dependanceList enumerator_21221 (enumerator_20886.current_mDependencyList (HERE), kEnumeration_up) ;
    while (enumerator_21221.hasCurrentObject ()) {
      callCategoryMethod_EXanalyze ((const cPtr_abstractTransientDependency *) enumerator_21221.current_mDependency (HERE).ptr (), enumerator_20886.current_mTransientName (HERE), constinArgument_inSelfObjectObservablePropertyMap, constinArgument_inRootObjectObservablePropertyMap, constinArgument_inRootEntityName, var_transientPropertySignature, ioArgument_ioFileInclusionSet, ioArgument_ioContextAnalysisStruct, var_directDependancyList, var_rootSignDependencyList, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 605)) ;
      enumerator_21221.gotoNextObject () ;
    }
    outArgument_outTransientListForImplementation.addAssign_operation (var_type, enumerator_20886.current_mTransientName (HERE).reader_string (SOURCE_FILE ("transientAnalysis.gSemantics", 618)), var_directDependancyList, var_rootSignDependencyList  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 618)) ;
    enumerator_20886.gotoNextObject () ;
  }
}


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                Abstract category method '@abstractTransientDependency buildTransientDependencyGraph'                *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractTransientDependency_buildTransientDependencyGraph> gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_buildTransientDependencyGraph (const int32_t inClassIndex,
                                                        categoryMethodSignature_abstractTransientDependency_buildTransientDependencyGraph inMethod) {
  gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractTransientDependency_buildTransientDependencyGraph (void) {
  gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractTransientDependency_buildTransientDependencyGraph (NULL,
                                                                                      freeCategoryMethod_abstractTransientDependency_buildTransientDependencyGraph) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_buildTransientDependencyGraph (const cPtr_abstractTransientDependency * inObject,
                                                       const GALGAS_unifiedTypeMap constin_inUnifiedTypeMap,
                                                       GALGAS_transientDependencyGraph & io_ioTransientDependencyGraph,
                                                       const GALGAS_lstring constin_inTransientName,
                                                       const GALGAS_decoratedObservablePropertyMap constin_inLocalObservablePropertyMap,
                                                       const GALGAS_unifiedTypeProxy constin_inRootEntityType,
                                                       const GALGAS_lstring constin_inTransientPropertySignature,
                                                       C_Compiler * inCompiler
                                                       COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependency) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractTransientDependency_buildTransientDependencyGraph f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph.count ()) {
      f = gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph.count ()) {
           f = gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractTransientDependency_buildTransientDependencyGraph.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inUnifiedTypeMap, io_ioTransientDependencyGraph, constin_inTransientName, constin_inLocalObservablePropertyMap, constin_inRootEntityType, constin_inTransientPropertySignature, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//               Overriding category method '@transientRootSignDependency buildTransientDependencyGraph'               *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientRootSignDependency_buildTransientDependencyGraph (const cPtr_abstractTransientDependency * /* inObject */,
                                                                                      const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                      GALGAS_transientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                                      const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                      const GALGAS_decoratedObservablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                                      const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                      const GALGAS_lstring /* constinArgument_inTransientPropertySignature */,
                                                                                      C_Compiler * /* inCompiler */
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootSignDependency_buildTransientDependencyGraph (void) {
  enterCategoryMethod_buildTransientDependencyGraph (kTypeDescriptor_GALGAS_transientRootSignDependency.mSlotID,
                                                     categoryMethod_transientRootSignDependency_buildTransientDependencyGraph) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootSignDependency_buildTransientDependencyGraph (defineCategoryMethod_transientRootSignDependency_buildTransientDependencyGraph, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                Overriding category method '@transientLocalDependency buildTransientDependencyGraph'                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientLocalDependency_buildTransientDependencyGraph (const cPtr_abstractTransientDependency * inObject,
                                                                                   const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                   GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                                   const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                   const GALGAS_decoratedObservablePropertyMap constinArgument_inLocalObservablePropertyMap,
                                                                                   const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                   const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientLocalDependency * object = (const cPtr_transientLocalDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientLocalDependency) ;
  GALGAS_unifiedTypeProxy var_masterType ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_1674_0 ; // Joker input parameter
  constinArgument_inLocalObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_1674_0, var_masterPropertySignature, var_isCollection, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 40)) ;
  {
  ioArgument_ioTransientDependencyGraph.modifier_addEdge (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 48)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientLocalDependency_buildTransientDependencyGraph (void) {
  enterCategoryMethod_buildTransientDependencyGraph (kTypeDescriptor_GALGAS_transientLocalDependency.mSlotID,
                                                     categoryMethod_transientLocalDependency_buildTransientDependencyGraph) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientLocalDependency_buildTransientDependencyGraph (defineCategoryMethod_transientLocalDependency_buildTransientDependencyGraph, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//              Overriding category method '@transientControllerDependency buildTransientDependencyGraph'              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientControllerDependency_buildTransientDependencyGraph (const cPtr_abstractTransientDependency * inObject,
                                                                                        const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                        GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                                        const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                        const GALGAS_decoratedObservablePropertyMap constinArgument_inLocalObservablePropertyMap,
                                                                                        const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                        const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientControllerDependency * object = (const cPtr_transientControllerDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientControllerDependency) ;
  GALGAS_unifiedTypeProxy var_controllerType ;
  GALGAS_bool joker_2447_0 ; // Joker input parameter
  GALGAS_lstring joker_2454_0 ; // Joker input parameter
  GALGAS_bool joker_2461_0 ; // Joker input parameter
  constinArgument_inLocalObservablePropertyMap.method_searchKey (object->mAttribute_mControllerName, var_controllerType, joker_2447_0, joker_2454_0, joker_2461_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 64)) ;
  GALGAS_decoratedObservablePropertyMap var_controllerObservablePropertyMap = var_controllerType.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 71)) ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_unifiedTypeProxy joker_2626_0 ; // Joker input parameter
  GALGAS_bool joker_2633_0 ; // Joker input parameter
  GALGAS_bool joker_2678_0 ; // Joker input parameter
  var_controllerObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, joker_2626_0, joker_2633_0, var_masterPropertySignature, joker_2678_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 73)) ;
  {
  ioArgument_ioTransientDependencyGraph.modifier_addEdge (constinArgument_inTransientPropertySignature, var_masterPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 81)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientControllerDependency_buildTransientDependencyGraph (void) {
  enterCategoryMethod_buildTransientDependencyGraph (kTypeDescriptor_GALGAS_transientControllerDependency.mSlotID,
                                                     categoryMethod_transientControllerDependency_buildTransientDependencyGraph) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientControllerDependency_buildTransientDependencyGraph (defineCategoryMethod_transientControllerDependency_buildTransientDependencyGraph, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                 Overriding category method '@transientRootDependency buildTransientDependencyGraph'                 *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientRootDependency_buildTransientDependencyGraph (const cPtr_abstractTransientDependency * inObject,
                                                                                  const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                                  GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                                  const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                  const GALGAS_decoratedObservablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                                  const GALGAS_unifiedTypeProxy constinArgument_inRootEntityType,
                                                                                  const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                                  C_Compiler * inCompiler
                                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientRootDependency * object = (const cPtr_transientRootDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientRootDependency) ;
  GALGAS_decoratedObservablePropertyMap var_allObservablePropertyMap = constinArgument_inRootEntityType.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 98)) ;
  GALGAS_unifiedTypeProxy var_t = constinArgument_inRootEntityType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 99)) ;
  if (constinArgument_inUnifiedTypeMap.reader_count (SOURCE_FILE ("transientAnalysis.gSemantics", 100)).isValid ()) {
    uint32_t variant_3468 = constinArgument_inUnifiedTypeMap.reader_count (SOURCE_FILE ("transientAnalysis.gSemantics", 100)).uintValue () ;
    bool loop_3468 = true ;
    while (loop_3468) {
      loop_3468 = var_t.reader_isNull (SOURCE_FILE ("transientAnalysis.gSemantics", 100)).operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 100)).isValid () ;
      if (loop_3468) {
        loop_3468 = var_t.reader_isNull (SOURCE_FILE ("transientAnalysis.gSemantics", 100)).operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 100)).boolValue () ;
      }
      if (loop_3468 && (0 == variant_3468)) {
        loop_3468 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("transientAnalysis.gSemantics", 100)) ;
      }
      if (loop_3468) {
        variant_3468 -- ;
        cEnumerator_decoratedObservablePropertyMap enumerator_3567 (var_t.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 101)), kEnumeration_up) ;
        while (enumerator_3567.hasCurrentObject ()) {
          {
          var_allObservablePropertyMap.modifier_insertKey (enumerator_3567.current_lkey (HERE), enumerator_3567.current_mPropertyType (HERE), enumerator_3567.current_mIsTransient (HERE), enumerator_3567.current_mPropertySignature (HERE), enumerator_3567.current_mIsCollection (HERE), inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 102)) ;
          }
          enumerator_3567.gotoNextObject () ;
        }
        var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 110)) ;
      }
    }
  }
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool var_isCollection ;
  GALGAS_unifiedTypeProxy joker_3878_0 ; // Joker input parameter
  GALGAS_bool joker_3885_0 ; // Joker input parameter
  var_allObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, joker_3878_0, joker_3885_0, var_masterPropertySignature, var_isCollection, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 112)) ;
  {
  ioArgument_ioTransientDependencyGraph.modifier_addEdge (constinArgument_inTransientPropertySignature, var_masterPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 120)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootDependency_buildTransientDependencyGraph (void) {
  enterCategoryMethod_buildTransientDependencyGraph (kTypeDescriptor_GALGAS_transientRootDependency.mSlotID,
                                                     categoryMethod_transientRootDependency_buildTransientDependencyGraph) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootDependency_buildTransientDependencyGraph (defineCategoryMethod_transientRootDependency_buildTransientDependencyGraph, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//              Overriding category method '@transientPreferenceDependency buildTransientDependencyGraph'              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientPreferenceDependency_buildTransientDependencyGraph (const cPtr_abstractTransientDependency * inObject,
                                                                                        const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                                        GALGAS_transientDependencyGraph & ioArgument_ioTransientDependencyGraph,
                                                                                        const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                        const GALGAS_decoratedObservablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                                        const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                        const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientPreferenceDependency * object = (const cPtr_transientPreferenceDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientPreferenceDependency) ;
  GALGAS_decoratedObservablePropertyMap var_observablePropertyMap ;
  GALGAS_typeKind joker_4652_0 ; // Joker input parameter
  GALGAS_unifiedTypeProxy joker_4676_5 ; // Joker input parameter
  GALGAS_unifiedTypeProxy joker_4676_4 ; // Joker input parameter
  GALGAS_decoratedAttributeMap joker_4676_3 ; // Joker input parameter
  GALGAS_decoratedTransientMap joker_4676_2 ; // Joker input parameter
  GALGAS_decoratedOutletMap joker_4676_1 ; // Joker input parameter
  GALGAS_decoratedEntityRelationshipMap joker_4744_2 ; // Joker input parameter
  GALGAS_actionMap joker_4744_1 ; // Joker input parameter
  constinArgument_inUnifiedTypeMap.method_searchKey (object->mAttribute_mPreferencesName, joker_4652_0, joker_4676_5, joker_4676_4, joker_4676_3, joker_4676_2, joker_4676_1, var_observablePropertyMap, joker_4744_2, joker_4744_1, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 137)) ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_unifiedTypeProxy joker_4815_2 ; // Joker input parameter
  GALGAS_bool joker_4815_1 ; // Joker input parameter
  GALGAS_bool joker_4862_0 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mMasterName, joker_4815_2, joker_4815_1, var_masterPropertySignature, joker_4862_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 145)) ;
  {
  ioArgument_ioTransientDependencyGraph.modifier_addEdge (constinArgument_inTransientPropertySignature, var_masterPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 152)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientPreferenceDependency_buildTransientDependencyGraph (void) {
  enterCategoryMethod_buildTransientDependencyGraph (kTypeDescriptor_GALGAS_transientPreferenceDependency.mSlotID,
                                                     categoryMethod_transientPreferenceDependency_buildTransientDependencyGraph) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientPreferenceDependency_buildTransientDependencyGraph (defineCategoryMethod_transientPreferenceDependency_buildTransientDependencyGraph, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//            Overriding category method '@transientRootSignDependency transientDependencySemanticAnalysis'            *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientRootSignDependency_transientDependencySemanticAnalysis (const cPtr_abstractTransientDependency * /* inObject */,
                                                                                            const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                            const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                            const GALGAS_decoratedObservablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                                            const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                            const GALGAS_lstring /* constinArgument_inTransientPropertySignature */,
                                                                                            GALGAS_transientDependencyListForGeneration & /* ioArgument_ioTransientDependencyListForGeneration */,
                                                                                            C_Compiler * /* inCompiler */
                                                                                            COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootSignDependency_transientDependencySemanticAnalysis (void) {
  enterCategoryMethod_transientDependencySemanticAnalysis (kTypeDescriptor_GALGAS_transientRootSignDependency.mSlotID,
                                                           categoryMethod_transientRootSignDependency_transientDependencySemanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootSignDependency_transientDependencySemanticAnalysis (defineCategoryMethod_transientRootSignDependency_transientDependencySemanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//             Overriding category method '@transientLocalDependency transientDependencySemanticAnalysis'              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientLocalDependency_transientDependencySemanticAnalysis (const cPtr_abstractTransientDependency * inObject,
                                                                                         const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                         const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                         const GALGAS_decoratedObservablePropertyMap constinArgument_inAllObservablePropertyMap,
                                                                                         const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                         const GALGAS_lstring /* constinArgument_inTransientPropertySignature */,
                                                                                         GALGAS_transientDependencyListForGeneration & ioArgument_ioTransientDependencyListForGeneration,
                                                                                         C_Compiler * inCompiler
                                                                                         COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientLocalDependency * object = (const cPtr_transientLocalDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientLocalDependency) ;
  GALGAS_unifiedTypeProxy var_masterType ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_8807_0 ; // Joker input parameter
  GALGAS_lstring joker_8814_0 ; // Joker input parameter
  constinArgument_inAllObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_8807_0, joker_8814_0, var_isCollection, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 252)) ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.operator_and (var_isCollection.operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 259)) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 259)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the 'count' option is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 260)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_isCollection.operator_and (object->mAttribute_mNamesCountOption.operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 261)) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 261)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("to-many relationships requires the 'count' option")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 262)) ;
    }
  }
  ioArgument_ioTransientDependencyListForGeneration.addAssign_operation (var_masterType, object->mAttribute_mMasterName.mAttribute_string  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 264)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientLocalDependency_transientDependencySemanticAnalysis (void) {
  enterCategoryMethod_transientDependencySemanticAnalysis (kTypeDescriptor_GALGAS_transientLocalDependency.mSlotID,
                                                           categoryMethod_transientLocalDependency_transientDependencySemanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientLocalDependency_transientDependencySemanticAnalysis (defineCategoryMethod_transientLocalDependency_transientDependencySemanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//           Overriding category method '@transientControllerDependency transientDependencySemanticAnalysis'           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientControllerDependency_transientDependencySemanticAnalysis (const cPtr_abstractTransientDependency * inObject,
                                                                                              const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                                              const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                              const GALGAS_decoratedObservablePropertyMap constinArgument_inAllObservablePropertyMap,
                                                                                              const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                              const GALGAS_lstring /* constinArgument_inTransientPropertySignature */,
                                                                                              GALGAS_transientDependencyListForGeneration & ioArgument_ioTransientDependencyListForGeneration,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientControllerDependency * object = (const cPtr_transientControllerDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientControllerDependency) ;
  GALGAS_unifiedTypeProxy var_controllerType ;
  GALGAS_bool joker_9891_0 ; // Joker input parameter
  GALGAS_lstring joker_9898_0 ; // Joker input parameter
  GALGAS_bool joker_9905_0 ; // Joker input parameter
  constinArgument_inAllObservablePropertyMap.method_searchKey (object->mAttribute_mControllerName, var_controllerType, joker_9891_0, joker_9898_0, joker_9905_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 279)) ;
  GALGAS_decoratedObservablePropertyMap var_controllerObservablePropertyMap = var_controllerType.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 286)) ;
  GALGAS_unifiedTypeProxy var_masterType ;
  GALGAS_bool joker_10100_0 ; // Joker input parameter
  GALGAS_lstring joker_10107_0 ; // Joker input parameter
  GALGAS_bool joker_10114_0 ; // Joker input parameter
  var_controllerObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_10100_0, joker_10107_0, joker_10114_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 287)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_controllerType.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 294)).objectCompare (GALGAS_typeKind::constructor_controllerClassType (SOURCE_FILE ("transientAnalysis.gSemantics", 294)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the '").operator_concat (object->mAttribute_mControllerName.reader_string (SOURCE_FILE ("transientAnalysis.gSemantics", 295))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 295)).operator_concat (GALGAS_string ("' attribute is not a controller")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 295))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 295)) ;
  }
  ioArgument_ioTransientDependencyListForGeneration.addAssign_operation (var_masterType, object->mAttribute_mMasterName.mAttribute_string  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 298)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientControllerDependency_transientDependencySemanticAnalysis (void) {
  enterCategoryMethod_transientDependencySemanticAnalysis (kTypeDescriptor_GALGAS_transientControllerDependency.mSlotID,
                                                           categoryMethod_transientControllerDependency_transientDependencySemanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientControllerDependency_transientDependencySemanticAnalysis (defineCategoryMethod_transientControllerDependency_transientDependencySemanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//              Overriding category method '@transientRootDependency transientDependencySemanticAnalysis'              *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientRootDependency_transientDependencySemanticAnalysis (const cPtr_abstractTransientDependency * inObject,
                                                                                        const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                                        const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                        const GALGAS_decoratedObservablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                                        const GALGAS_unifiedTypeProxy constinArgument_inRootEntityType,
                                                                                        const GALGAS_lstring /* constinArgument_inTransientPropertySignature */,
                                                                                        GALGAS_transientDependencyListForGeneration & ioArgument_ioTransientDependencyListForGeneration,
                                                                                        C_Compiler * inCompiler
                                                                                        COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientRootDependency * object = (const cPtr_transientRootDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientRootDependency) ;
  GALGAS_decoratedObservablePropertyMap var_allObservablePropertyMap = constinArgument_inRootEntityType.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 312)) ;
  GALGAS_unifiedTypeProxy var_t = constinArgument_inRootEntityType.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 313)) ;
  if (constinArgument_inUnifiedTypeMap.reader_count (SOURCE_FILE ("transientAnalysis.gSemantics", 314)).isValid ()) {
    uint32_t variant_11065 = constinArgument_inUnifiedTypeMap.reader_count (SOURCE_FILE ("transientAnalysis.gSemantics", 314)).uintValue () ;
    bool loop_11065 = true ;
    while (loop_11065) {
      loop_11065 = var_t.reader_isNull (SOURCE_FILE ("transientAnalysis.gSemantics", 314)).operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 314)).isValid () ;
      if (loop_11065) {
        loop_11065 = var_t.reader_isNull (SOURCE_FILE ("transientAnalysis.gSemantics", 314)).operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 314)).boolValue () ;
      }
      if (loop_11065 && (0 == variant_11065)) {
        loop_11065 = false ;
        inCompiler->loopRunTimeVariantError (SOURCE_FILE ("transientAnalysis.gSemantics", 314)) ;
      }
      if (loop_11065) {
        variant_11065 -- ;
        cEnumerator_decoratedObservablePropertyMap enumerator_11164 (var_t.reader_mObservablePropertyMap (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 315)), kEnumeration_up) ;
        while (enumerator_11164.hasCurrentObject ()) {
          {
          var_allObservablePropertyMap.modifier_insertKey (enumerator_11164.current_lkey (HERE), enumerator_11164.current_mPropertyType (HERE), enumerator_11164.current_mIsTransient (HERE), enumerator_11164.current_mPropertySignature (HERE), enumerator_11164.current_mIsCollection (HERE), inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 316)) ;
          }
          enumerator_11164.gotoNextObject () ;
        }
        var_t = var_t.reader_mSuperType (inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 324)) ;
      }
    }
  }
  GALGAS_unifiedTypeProxy var_masterType ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_11510_0 ; // Joker input parameter
  GALGAS_lstring joker_11517_0 ; // Joker input parameter
  var_allObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_11510_0, joker_11517_0, var_isCollection, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 326)) ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.operator_and (var_isCollection.operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 334)) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 334)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the 'count' option is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 335)) ;
  }
  ioArgument_ioTransientDependencyListForGeneration.addAssign_operation (var_masterType, object->mAttribute_mMasterName.mAttribute_string  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 338)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootDependency_transientDependencySemanticAnalysis (void) {
  enterCategoryMethod_transientDependencySemanticAnalysis (kTypeDescriptor_GALGAS_transientRootDependency.mSlotID,
                                                           categoryMethod_transientRootDependency_transientDependencySemanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootDependency_transientDependencySemanticAnalysis (defineCategoryMethod_transientRootDependency_transientDependencySemanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//           Overriding category method '@transientPreferenceDependency transientDependencySemanticAnalysis'           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientPreferenceDependency_transientDependencySemanticAnalysis (const cPtr_abstractTransientDependency * inObject,
                                                                                              const GALGAS_unifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                                              const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                                              const GALGAS_decoratedObservablePropertyMap /* constinArgument_inAllObservablePropertyMap */,
                                                                                              const GALGAS_unifiedTypeProxy /* constinArgument_inRootEntityType */,
                                                                                              const GALGAS_lstring /* constinArgument_inTransientPropertySignature */,
                                                                                              GALGAS_transientDependencyListForGeneration & ioArgument_ioTransientDependencyListForGeneration,
                                                                                              C_Compiler * inCompiler
                                                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientPreferenceDependency * object = (const cPtr_transientPreferenceDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientPreferenceDependency) ;
  GALGAS_typeKind var_kind ;
  GALGAS_decoratedObservablePropertyMap var_observablePropertyMap ;
  GALGAS_unifiedTypeProxy joker_12425_5 ; // Joker input parameter
  GALGAS_unifiedTypeProxy joker_12425_4 ; // Joker input parameter
  GALGAS_decoratedAttributeMap joker_12425_3 ; // Joker input parameter
  GALGAS_decoratedTransientMap joker_12425_2 ; // Joker input parameter
  GALGAS_decoratedOutletMap joker_12425_1 ; // Joker input parameter
  GALGAS_decoratedEntityRelationshipMap joker_12493_2 ; // Joker input parameter
  GALGAS_actionMap joker_12493_1 ; // Joker input parameter
  constinArgument_inUnifiedTypeMap.method_searchKey (object->mAttribute_mPreferencesName, var_kind, joker_12425_5, joker_12425_4, joker_12425_3, joker_12425_2, joker_12425_1, var_observablePropertyMap, joker_12493_2, joker_12493_1, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 352)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_preferencesType (SOURCE_FILE ("transientAnalysis.gSemantics", 360)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mPreferencesName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mPreferencesName.reader_string (SOURCE_FILE ("transientAnalysis.gSemantics", 361))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 361)).operator_concat (GALGAS_string ("' is not a preference")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 361))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 361)) ;
  }
  GALGAS_unifiedTypeProxy var_masterType ;
  GALGAS_bool joker_12747_0 ; // Joker input parameter
  GALGAS_lstring joker_12754_0 ; // Joker input parameter
  GALGAS_bool joker_12797_0 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_12747_0, joker_12754_0, joker_12797_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 364)) ;
  ioArgument_ioTransientDependencyListForGeneration.addAssign_operation (var_masterType, object->mAttribute_mMasterName.mAttribute_string  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 371)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientPreferenceDependency_transientDependencySemanticAnalysis (void) {
  enterCategoryMethod_transientDependencySemanticAnalysis (kTypeDescriptor_GALGAS_transientPreferenceDependency.mSlotID,
                                                           categoryMethod_transientPreferenceDependency_transientDependencySemanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientPreferenceDependency_transientDependencySemanticAnalysis (defineCategoryMethod_transientPreferenceDependency_transientDependencySemanticAnalysis, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Abstract category method '@abstractTransientDependency EXanalyze'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_abstractTransientDependency_EXanalyze> gCategoryMethodTable_abstractTransientDependency_EXanalyze ;

//---------------------------------------------------------------------------------------------------------------------*

void enterCategoryMethod_EXanalyze (const int32_t inClassIndex,
                                    categoryMethodSignature_abstractTransientDependency_EXanalyze inMethod) {
  gCategoryMethodTable_abstractTransientDependency_EXanalyze.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//---------------------------------------------------------------------------------------------------------------------*

static void freeCategoryMethod_abstractTransientDependency_EXanalyze (void) {
  gCategoryMethodTable_abstractTransientDependency_EXanalyze.free () ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_abstractTransientDependency_EXanalyze (NULL,
                                                                  freeCategoryMethod_abstractTransientDependency_EXanalyze) ;

//---------------------------------------------------------------------------------------------------------------------*

void callCategoryMethod_EXanalyze (const cPtr_abstractTransientDependency * inObject,
                                   const GALGAS_lstring constin_inTransientName,
                                   const GALGAS_EXobservablePropertyMap constin_inLocalObservablePropertyMap,
                                   const GALGAS_EXobservablePropertyMap constin_inRootObjectObservablePropertyMap,
                                   const GALGAS_string constin_inRootEntityName,
                                   const GALGAS_lstring constin_inTransientPropertySignature,
                                   GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                   GALGAS_EXcontextAnalysisStruct & io_ioContextAnalysisStruct,
                                   GALGAS_directDependancyList & io_ioDirectDependancyList,
                                   GALGAS_stringlist & io_ioRootSignDependencyList,
                                   C_Compiler * inCompiler
                                   COMMA_LOCATION_ARGS) {
//--- Drop output arguments
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_abstractTransientDependency) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_abstractTransientDependency_EXanalyze f = NULL ;
    if (classIndex < gCategoryMethodTable_abstractTransientDependency_EXanalyze.count ()) {
      f = gCategoryMethodTable_abstractTransientDependency_EXanalyze (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_abstractTransientDependency_EXanalyze.count ()) {
           f = gCategoryMethodTable_abstractTransientDependency_EXanalyze (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_abstractTransientDependency_EXanalyze.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inTransientName, constin_inLocalObservablePropertyMap, constin_inRootObjectObservablePropertyMap, constin_inRootEntityName, constin_inTransientPropertySignature, io_ioFileInclusionSet, io_ioContextAnalysisStruct, io_ioDirectDependancyList, io_ioRootSignDependencyList, inCompiler COMMA_THERE) ;
    }
  }
}

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@transientRootSignDependency EXanalyze'                         *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientRootSignDependency_EXanalyze (const cPtr_abstractTransientDependency * inObject,
                                                                  const GALGAS_lstring constinArgument_inTransientName,
                                                                  const GALGAS_EXobservablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                  const GALGAS_EXobservablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                                  const GALGAS_string constinArgument_inRootEntityName,
                                                                  const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                  GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                  GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                  GALGAS_directDependancyList & /* ioArgument_ioDirectDependancyList */,
                                                                  GALGAS_stringlist & ioArgument_ioRootSignDependencyList,
                                                                  C_Compiler * inCompiler
                                                                  COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientRootSignDependency * object = (const cPtr_transientRootSignDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientRootSignDependency) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, constinArgument_inRootEntityName.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    inCompiler->emitSemanticError (object->mAttribute_mDeclarationLocation, GALGAS_string ("no root object in this context")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 404)) ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addEdge (GALGAS_lstring::constructor_new (GALGAS_string ("entity.").operator_concat (constinArgument_inRootEntityName  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 408)).operator_concat (GALGAS_string (".sign")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 408)), object->mAttribute_mDeclarationLocation  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 408)), constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 407)) ;
  }
  ioArgument_ioRootSignDependencyList.addAssign_operation (constinArgument_inTransientPropertySignature.mAttribute_string.operator_concat (constinArgument_inTransientName.reader_string (SOURCE_FILE ("transientAnalysis.gSemantics", 412))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 412))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 412)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootSignDependency_EXanalyze (void) {
  enterCategoryMethod_EXanalyze (kTypeDescriptor_GALGAS_transientRootSignDependency.mSlotID,
                                 categoryMethod_transientRootSignDependency_EXanalyze) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootSignDependency_EXanalyze (defineCategoryMethod_transientRootSignDependency_EXanalyze, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@transientLocalDependency EXanalyze'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientLocalDependency_EXanalyze (const cPtr_abstractTransientDependency * inObject,
                                                               const GALGAS_lstring /* constinArgument_inTransientName */,
                                                               const GALGAS_EXobservablePropertyMap constinArgument_inLocalObservablePropertyMap,
                                                               const GALGAS_EXobservablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                               const GALGAS_string /* constinArgument_inRootEntityName */,
                                                               const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                               GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                               GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                               GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                               GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientLocalDependency * object = (const cPtr_transientLocalDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientLocalDependency) ;
  GALGAS_EXebType var_masterType ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_15188_0 ; // Joker input parameter
  constinArgument_inLocalObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_15188_0, var_masterPropertySignature, var_isCollection, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 428)) ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.operator_and (var_isCollection.operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 435)) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 435)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the 'count' option is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 436)) ;
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_2 = var_isCollection.operator_and (object->mAttribute_mNamesCountOption.operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 437)) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 437)).boolEnum () ;
    if (kBoolTrue == test_2) {
      GALGAS_location location_3 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, GALGAS_string ("to-many relationships requires the 'count' option")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 438)) ;
    }
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addEdge (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 441)) ;
  }
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromSelfForImplementation::constructor_new (var_masterType, object->mAttribute_mMasterName.mAttribute_string, object->mAttribute_mNamesCountOption  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 446))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 446)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientLocalDependency_EXanalyze (void) {
  enterCategoryMethod_EXanalyze (kTypeDescriptor_GALGAS_transientLocalDependency.mSlotID,
                                 categoryMethod_transientLocalDependency_EXanalyze) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientLocalDependency_EXanalyze (defineCategoryMethod_transientLocalDependency_EXanalyze, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@transientControllerDependency EXanalyze'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientControllerDependency_EXanalyze (const cPtr_abstractTransientDependency * inObject,
                                                                    const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                    const GALGAS_EXobservablePropertyMap constinArgument_inLocalObservablePropertyMap,
                                                                    const GALGAS_EXobservablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                                    const GALGAS_string /* constinArgument_inRootEntityName */,
                                                                    const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                    GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                    GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                    GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                                    GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientControllerDependency * object = (const cPtr_transientControllerDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientControllerDependency) ;
  GALGAS_EXebType var_type ;
  GALGAS_bool joker_16554_3 ; // Joker input parameter
  GALGAS_lstring joker_16554_2 ; // Joker input parameter
  GALGAS_bool joker_16554_1 ; // Joker input parameter
  constinArgument_inLocalObservablePropertyMap.method_searchKey (object->mAttribute_mControllerName, var_type, joker_16554_3, joker_16554_2, joker_16554_1, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 463)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_type.mAttribute_mKind.objectCompare (GALGAS_EXTypeKind::constructor_controllerClassType (SOURCE_FILE ("transientAnalysis.gSemantics", 468)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mControllerName.reader_string (SOURCE_FILE ("transientAnalysis.gSemantics", 469))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 469)).operator_concat (GALGAS_string ("' is not a controller")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 469))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 469)) ;
  }
  GALGAS_EXTypeKind var_typeKind ;
  GALGAS_EXobservablePropertyMap var_controllerObservablePropertyMap ;
  GALGAS_bool joker_16849_0 ; // Joker input parameter
  ioArgument_ioContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (var_type.mAttribute_mTypeName, joker_16849_0, var_typeKind, var_controllerObservablePropertyMap, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 472)) ;
  GALGAS_EXebType var_masterType ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool joker_17080_0 ; // Joker input parameter
  GALGAS_bool joker_17125_0 ; // Joker input parameter
  var_controllerObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_17080_0, var_masterPropertySignature, joker_17125_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 479)) ;
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addEdge (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 487)) ;
  }
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromControllerForImplementation::constructor_new (var_masterType, object->mAttribute_mControllerName.mAttribute_string, object->mAttribute_mMasterName.mAttribute_string  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 492))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 492)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientControllerDependency_EXanalyze (void) {
  enterCategoryMethod_EXanalyze (kTypeDescriptor_GALGAS_transientControllerDependency.mSlotID,
                                 categoryMethod_transientControllerDependency_EXanalyze) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientControllerDependency_EXanalyze (defineCategoryMethod_transientControllerDependency_EXanalyze, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                           Overriding category method '@transientRootDependency EXanalyze'                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientRootDependency_EXanalyze (const cPtr_abstractTransientDependency * inObject,
                                                              const GALGAS_lstring /* constinArgument_inTransientName */,
                                                              const GALGAS_EXobservablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                              const GALGAS_EXobservablePropertyMap constinArgument_inRootObjectObservablePropertyMap,
                                                              const GALGAS_string /* constinArgument_inRootEntityName */,
                                                              const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                              GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                              GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                              GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                              GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                              C_Compiler * inCompiler
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientRootDependency * object = (const cPtr_transientRootDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientRootDependency) ;
  GALGAS_EXebType var_masterType ;
  GALGAS_lstring var_masterDependencyKey ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_18124_0 ; // Joker input parameter
  constinArgument_inRootObjectObservablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, joker_18124_0, var_masterDependencyKey, var_isCollection, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 508)) ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.operator_and (var_isCollection.operator_not (SOURCE_FILE ("transientAnalysis.gSemantics", 516)) COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 516)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mMasterName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("the 'count' option is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 517)) ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addEdge (var_masterDependencyKey, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 520)) ;
  }
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromRootForImplementation::constructor_new (var_masterType, object->mAttribute_mMasterName.mAttribute_string, object->mAttribute_mNamesCountOption, var_masterDependencyKey.mAttribute_string.reader_identifierRepresentation (SOURCE_FILE ("transientAnalysis.gSemantics", 529))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 525))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 525)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientRootDependency_EXanalyze (void) {
  enterCategoryMethod_EXanalyze (kTypeDescriptor_GALGAS_transientRootDependency.mSlotID,
                                 categoryMethod_transientRootDependency_EXanalyze) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientRootDependency_EXanalyze (defineCategoryMethod_transientRootDependency_EXanalyze, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                        Overriding category method '@transientPreferenceDependency EXanalyze'                        *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_transientPreferenceDependency_EXanalyze (const cPtr_abstractTransientDependency * inObject,
                                                                    const GALGAS_lstring /* constinArgument_inTransientName */,
                                                                    const GALGAS_EXobservablePropertyMap /* constinArgument_inLocalObservablePropertyMap */,
                                                                    const GALGAS_EXobservablePropertyMap /* constinArgument_inRootObjectObservablePropertyMap */,
                                                                    const GALGAS_string /* constinArgument_inRootEntityName */,
                                                                    const GALGAS_lstring constinArgument_inTransientPropertySignature,
                                                                    GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                    GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                    GALGAS_directDependancyList & ioArgument_ioDirectDependancyList,
                                                                    GALGAS_stringlist & /* ioArgument_ioRootSignDependencyList */,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_transientPreferenceDependency * object = (const cPtr_transientPreferenceDependency *) inObject ;
  macroValidSharedObject (object, cPtr_transientPreferenceDependency) ;
  GALGAS_EXTypeKind var_kind ;
  GALGAS_EXobservablePropertyMap var_observablePropertyMap ;
  GALGAS_bool joker_19449_0 ; // Joker input parameter
  ioArgument_ioContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (object->mAttribute_mPreferencesName, joker_19449_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 547)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_EXTypeKind::constructor_preferencesType (SOURCE_FILE ("transientAnalysis.gSemantics", 554)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mPreferencesName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mPreferencesName.reader_string (SOURCE_FILE ("transientAnalysis.gSemantics", 555))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 555)).operator_concat (GALGAS_string ("' is not a preference")  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 555))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 555)) ;
  }
  GALGAS_EXebType var_masterType ;
  GALGAS_bool var_isTransient ;
  GALGAS_lstring var_masterPropertySignature ;
  GALGAS_bool joker_19830_0 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mMasterName, var_masterType, var_isTransient, var_masterPropertySignature, joker_19830_0, inCompiler COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 558)) ;
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mTransientDependencyGraph.modifier_addEdge (var_masterPropertySignature, constinArgument_inTransientPropertySignature COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 566)) ;
  }
  ioArgument_ioFileInclusionSet.mAttribute_mImplementationFileInclusionSet.addAssign_operation (object->mAttribute_mPreferencesName.mAttribute_string  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 571)) ;
  ioArgument_ioDirectDependancyList.addAssign_operation (GALGAS_transientDependencyFromPreferenceForImplementation::constructor_new (var_masterType, object->mAttribute_mPreferencesName.mAttribute_string, object->mAttribute_mMasterName.mAttribute_string, var_isTransient  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 573))  COMMA_SOURCE_FILE ("transientAnalysis.gSemantics", 573)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_transientPreferenceDependency_EXanalyze (void) {
  enterCategoryMethod_EXanalyze (kTypeDescriptor_GALGAS_transientPreferenceDependency.mSlotID,
                                 categoryMethod_transientPreferenceDependency_EXanalyze) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_transientPreferenceDependency_EXanalyze (defineCategoryMethod_transientPreferenceDependency_EXanalyze, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


