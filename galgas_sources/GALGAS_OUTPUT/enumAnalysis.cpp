//-----------------------------------------------------------------------------*
//                                                                             *
//                          File 'enumAnalysis.cpp'                            *
//                         Generated by version 2.7.0                          *
//                       august 8th, 2014, at 12h14'34"                        *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "easyBindings_options.h"
#include "enumAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//       Overriding category method '@EXenumDeclaration EXTypeInventory'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_EXenumDeclaration_EXTypeInventory (const cPtr_EXastDeclaration * inObject,
                                                              GALGAS_EXunifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                              C_Compiler * inCompiler
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXenumDeclaration * object = (const cPtr_EXenumDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXenumDeclaration) ;
  {
  const GALGAS_EXenumDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mEnumTypeName, GALGAS_EXebType::constructor_new (object->mAttribute_mEnumTypeName, GALGAS_EXTypeKind::constructor_enumType (SOURCE_FILE ("enumAnalysis.gSemantics", 12))  COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 12)), temp_0, GALGAS_EXentityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("enumAnalysis.gSemantics", 14)), inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 10)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_EXenumDeclaration_EXTypeInventory (void) {
  enterCategoryMethod_EXTypeInventory (kTypeDescriptor_GALGAS_EXenumDeclaration.mSlotID,
                                       categoryMethod_EXenumDeclaration_EXTypeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXenumDeclaration_EXTypeInventory (defineCategoryMethod_EXenumDeclaration_EXTypeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@EXenumDeclaration buildObservablePropertyMap'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_EXenumDeclaration_buildObservablePropertyMap (const cPtr_EXastDeclaration * /* inObject */,
                                                                         const GALGAS_EXunifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                         GALGAS_EXobservablePropertyMapMap & /* ioArgument_ioObservablePropertyMapMap */,
                                                                         GALGAS_EXtransientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_EXenumDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_EXenumDeclaration.mSlotID,
                                                  categoryMethod_EXenumDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXenumDeclaration_buildObservablePropertyMap (defineCategoryMethod_EXenumDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@EXenumDeclaration semanticAnalysis'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_EXenumDeclaration_semanticAnalysis (const cPtr_EXastDeclaration * inObject,
                                                               const GALGAS_EXunifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                               GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                               GALGAS_generationList & ioArgument_ioGenerationList,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXenumDeclaration * object = (const cPtr_EXenumDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXenumDeclaration) ;
  GALGAS_enumConstantMap var_enumConstantMap = GALGAS_enumConstantMap::constructor_emptyMap (SOURCE_FILE ("enumAnalysis.gSemantics", 34)) ;
  cEnumerator_lstringlist enumerator_1141 (object->mAttribute_mEnumConstantNameList, kEnumeration_up) ;
  while (enumerator_1141.hasCurrentObject ()) {
    {
    var_enumConstantMap.modifier_insertKey (enumerator_1141.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 36)) ;
    }
    {
    ioArgument_ioContextAnalysisStruct.mAttribute_mGlobalEnumConstantMap.modifier_insertKey (enumerator_1141.current_mValue (HERE), object->mAttribute_mEnumTypeName, inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 37)) ;
    }
    enumerator_1141.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mEnumMap.modifier_insertKey (object->mAttribute_mEnumTypeName, object->mAttribute_mEnumConstantNameList, var_enumConstantMap, inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 40)) ;
  }
  ioArgument_ioGenerationList.addAssign_operation (GALGAS_enumTypeGeneration::constructor_new (object->mAttribute_mEnumTypeName.mAttribute_string, object->mAttribute_mEnumConstantNameList  COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 46))  COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 46)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_EXenumDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_EXenumDeclaration.mSlotID,
                                        categoryMethod_EXenumDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXenumDeclaration_semanticAnalysis (defineCategoryMethod_EXenumDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


