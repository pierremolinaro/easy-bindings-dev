//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'enumAnalysis.cpp'                           *
//                        Generated by version 2.4.3                         *
//                    december 16th, 2012, at 10h58'47"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "enumAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*

#include "easyBindings_options.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "enumAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'enumAnalysis'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_enumAnalysis (const GALGAS_enumList constinArgument_inEnumList,
                           GALGAS_enumMap & outArgument_outEnumMap,
                           GALGAS_globalEnumConstantMap & outArgument_outGlobalEnumConstantMap,
                           C_Compiler * inCompiler
                           COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outEnumMap.drop () ; // Release 'out' argument
  outArgument_outGlobalEnumConstantMap.drop () ; // Release 'out' argument
  //-------- @assignmentInstructionForGeneration
  outArgument_outEnumMap = GALGAS_enumMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (12)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_enumList enumerator_369 (constinArgument_inEnumList, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_369.hasCurrentObject ()) {
    //-------- @localVariableOrConstantDeclarationWithConstructorCallForGeneration
    GALGAS_enumConstantMap var_enumConstantMap = GALGAS_enumConstantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (14)) ;
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_456 (enumerator_369.current_mEnumConstantNameList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_456.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      var_enumConstantMap.modifier_insertKey (enumerator_456.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (16)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_456.gotoNextObject () ;
    }
    { //-------- @modifierCallInstructionForGeneration
    outArgument_outEnumMap.modifier_insertKey (enumerator_369.current_mEnumTypeName (HERE), enumerator_369.current_mEnumConstantNameList (HERE), var_enumConstantMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (18)) ;
    } //-------- END @typeMethodInstructionForGeneration
    enumerator_369.gotoNextObject () ;
  }
  //-------- @assignmentInstructionForGeneration
  outArgument_outGlobalEnumConstantMap = GALGAS_globalEnumConstantMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (21)) ;
  //-------- @foreachInstructionForGeneration
  cEnumerator_enumMap enumerator_717 (outArgument_outEnumMap, kEnumeration_up) ;
  //--- simple foreach instruction
  while (enumerator_717.hasCurrentObject ()) {
    //-------- @foreachInstructionForGeneration
    cEnumerator_lstringlist enumerator_753 (enumerator_717.current_mConstantOrderedList (HERE), kEnumeration_up) ;
    //--- simple foreach instruction
    while (enumerator_753.hasCurrentObject ()) {
      { //-------- @modifierCallInstructionForGeneration
      outArgument_outGlobalEnumConstantMap.modifier_insertKey (enumerator_753.current_mValue (HERE), enumerator_717.current_lkey (HERE), inCompiler COMMA_SOURCE_FILE_AT_LINE (24)) ;
      } //-------- END @typeMethodInstructionForGeneration
      enumerator_753.gotoNextObject () ;
    }
    enumerator_717.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


