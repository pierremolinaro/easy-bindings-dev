//-----------------------------------------------------------------------------*
//                                                                             *
//                          File 'enumAnalysis.cpp'                            *
//                         Generated by version 2.7.0                          *
//                       july 28th, 2014, at 14h33'32"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "easyBindings_options.h"
#include "enumAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//         Overriding category method '@enumDeclaration typeInventory'         *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_enumDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                          GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                          C_Compiler * inCompiler
                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclaration * object = (const cPtr_enumDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclaration) ;
  {
  const GALGAS_enumDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mEnumTypeName, GALGAS_ebType::constructor_new (object->mAttribute_mEnumTypeName, GALGAS_typeKind::constructor_enumType (SOURCE_FILE ("enumAnalysis.gSemantics", 12))  COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 12)), temp_0, inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 10)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_enumDeclaration.mSlotID,
                                     categoryMethod_enumDeclaration_typeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclaration_typeInventory (defineCategoryMethod_enumDeclaration_typeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@enumDeclaration buildObservablePropertyMap'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_enumDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * /* inObject */,
                                                                       const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                       GALGAS_observablePropertyMapMap & /* ioArgument_ioObservablePropertyMapMap */,
                                                                       GALGAS_transientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                       C_Compiler * /* inCompiler */
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_enumDeclaration.mSlotID,
                                                  categoryMethod_enumDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclaration_buildObservablePropertyMap (defineCategoryMethod_enumDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//       Overriding category method '@enumDeclaration semanticAnalysis'        *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_enumDeclaration_semanticAnalysis (const cPtr_astDeclaration * inObject,
                                                             const GALGAS_unifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                             GALGAS_contextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                             GALGAS_generationList & ioArgument_ioGenerationList,
                                                             C_Compiler * inCompiler
                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_enumDeclaration * object = (const cPtr_enumDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_enumDeclaration) ;
  GALGAS_enumConstantMap var_enumConstantMap = GALGAS_enumConstantMap::constructor_emptyMap (SOURCE_FILE ("enumAnalysis.gSemantics", 33)) ;
  cEnumerator_lstringlist enumerator_1084 (object->mAttribute_mEnumConstantNameList, kEnumeration_up) ;
  while (enumerator_1084.hasCurrentObject ()) {
    {
    var_enumConstantMap.modifier_insertKey (enumerator_1084.current_mValue (HERE), inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 35)) ;
    }
    {
    ioArgument_ioContextAnalysisStruct.mAttribute_mGlobalEnumConstantMap.modifier_insertKey (enumerator_1084.current_mValue (HERE), object->mAttribute_mEnumTypeName, inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 36)) ;
    }
    enumerator_1084.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mEnumMap.modifier_insertKey (object->mAttribute_mEnumTypeName, object->mAttribute_mEnumConstantNameList, var_enumConstantMap, inCompiler COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 39)) ;
  }
  ioArgument_ioGenerationList.addAssign_operation (GALGAS_enumTypeGeneration::constructor_new (object->mAttribute_mEnumTypeName.mAttribute_string, object->mAttribute_mEnumConstantNameList  COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 45))  COMMA_SOURCE_FILE ("enumAnalysis.gSemantics", 45)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_enumDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_enumDeclaration.mSlotID,
                                        categoryMethod_enumDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_enumDeclaration_semanticAnalysis (defineCategoryMethod_enumDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


