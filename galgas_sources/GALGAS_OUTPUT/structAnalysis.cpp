//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             File 'structAnalysis.cpp'                                               *
//                                             Generated by version 2.7.0                                              *
//                                           august 8th, 2014, at 20h3'39"                                             *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------------------------------------------------*

#include "structAnalysis.h"


//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                          Overriding category method '@EXstructDeclaration EXTypeInventory'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_EXstructDeclaration_EXTypeInventory (const cPtr_EXastDeclaration * inObject,
                                                                GALGAS_EXunifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                                C_Compiler * inCompiler
                                                                COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXstructDeclaration * object = (const cPtr_EXstructDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXstructDeclaration) ;
  cEnumerator_structFieldASTList enumerator_260 (object->mAttribute_mFieldList, kEnumeration_up) ;
  while (enumerator_260.hasCurrentObject ()) {
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mStructTypeName, enumerator_260.current_mFieldTypeName (HERE) COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 10)) ;
    }
    enumerator_260.gotoNextObject () ;
  }
  {
  const GALGAS_EXstructDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mStructTypeName, GALGAS_EXebType::constructor_new (object->mAttribute_mStructTypeName, GALGAS_EXTypeKind::constructor_structType (SOURCE_FILE ("structAnalysis.gSemantics", 17))  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 17)), temp_0, GALGAS_EXentityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("structAnalysis.gSemantics", 19)), inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 15)) ;
  }
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_EXstructDeclaration_EXTypeInventory (void) {
  enterCategoryMethod_EXTypeInventory (kTypeDescriptor_GALGAS_EXstructDeclaration.mSlotID,
                                       categoryMethod_EXstructDeclaration_EXTypeInventory) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXstructDeclaration_EXTypeInventory (defineCategoryMethod_EXstructDeclaration_EXTypeInventory, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                    Overriding category method '@EXstructDeclaration buildObservablePropertyMap'                     *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_EXstructDeclaration_buildObservablePropertyMap (const cPtr_EXastDeclaration * /* inObject */,
                                                                           const GALGAS_EXunifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                           GALGAS_EXobservablePropertyMapMap & /* ioArgument_ioObservablePropertyMapMap */,
                                                                           GALGAS_EXtransientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                           C_Compiler * /* inCompiler */
                                                                           COMMA_UNUSED_LOCATION_ARGS) {
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_EXstructDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_EXstructDeclaration.mSlotID,
                                                  categoryMethod_EXstructDeclaration_buildObservablePropertyMap) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXstructDeclaration_buildObservablePropertyMap (defineCategoryMethod_EXstructDeclaration_buildObservablePropertyMap, NULL) ;

//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                         Overriding category method '@EXstructDeclaration semanticAnalysis'                          *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

static void categoryMethod_EXstructDeclaration_semanticAnalysis (const cPtr_EXastDeclaration * inObject,
                                                                 const GALGAS_EXunifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                                 GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                                 GALGAS_generationList & ioArgument_ioGenerationList,
                                                                 C_Compiler * inCompiler
                                                                 COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_EXstructDeclaration * object = (const cPtr_EXstructDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_EXstructDeclaration) ;
  GALGAS_structFieldList var_structFieldList = GALGAS_structFieldList::constructor_emptyList (SOURCE_FILE ("structAnalysis.gSemantics", 39)) ;
  GALGAS_stringset var_headerFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("structAnalysis.gSemantics", 40)) ;
  cEnumerator_structFieldASTList enumerator_1270 (object->mAttribute_mFieldList, kEnumeration_up) ;
  while (enumerator_1270.hasCurrentObject ()) {
    GALGAS_EXebType var_type ;
    GALGAS_EXastDeclaration joker_1339_2 ; // Joker input parameter
    GALGAS_EXentityRelationshipMap joker_1339_1 ; // Joker input parameter
    constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_1270.current_mFieldTypeName (HERE), var_type, joker_1339_2, joker_1339_1, inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 42)) ;
    const enumGalgasBool test_0 = categoryReader_isPODtype (var_type, inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 43)).operator_not (SOURCE_FILE ("structAnalysis.gSemantics", 43)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_1270.current_mFieldName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("only a POD type is allowed in a structure")  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 44)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_type.reader_mKind (SOURCE_FILE ("structAnalysis.gSemantics", 46)).objectCompare (GALGAS_EXTypeKind::constructor_enumType (SOURCE_FILE ("structAnalysis.gSemantics", 46)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      var_headerFileInclusionSet.addAssign_operation (var_type.reader_mTypeName (SOURCE_FILE ("structAnalysis.gSemantics", 47)).mAttribute_string  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 47)) ;
    }else if (kBoolFalse == test_2) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_type.reader_mKind (SOURCE_FILE ("structAnalysis.gSemantics", 48)).objectCompare (GALGAS_EXTypeKind::constructor_structType (SOURCE_FILE ("structAnalysis.gSemantics", 48)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_headerFileInclusionSet.addAssign_operation (var_type.reader_mTypeName (SOURCE_FILE ("structAnalysis.gSemantics", 49)).mAttribute_string  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 49)) ;
      }
    }
    var_structFieldList.addAssign_operation (var_type, enumerator_1270.current_mFieldName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 51)) ;
    enumerator_1270.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mStructTypeMap.modifier_insertKey (object->mAttribute_mStructTypeName, var_structFieldList, inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 54)) ;
  }
  ioArgument_ioGenerationList.addAssign_operation (GALGAS_structTypeGeneration::constructor_new (object->mAttribute_mStructTypeName.mAttribute_string, var_structFieldList, var_headerFileInclusionSet  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 59))  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 59)) ;
}
//---------------------------------------------------------------------------------------------------------------------*

static void defineCategoryMethod_EXstructDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_EXstructDeclaration.mSlotID,
                                        categoryMethod_EXstructDeclaration_semanticAnalysis) ;
}

//---------------------------------------------------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_EXstructDeclaration_semanticAnalysis (defineCategoryMethod_EXstructDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


