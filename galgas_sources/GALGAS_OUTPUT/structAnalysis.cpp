//-----------------------------------------------------------------------------*
//                                                                             *
//                         File 'structAnalysis.cpp'                           *
//                         Generated by version 2.7.0                          *
//                       august 7th, 2014, at 22h22'53"                        *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "structAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//        Overriding category method '@structDeclaration typeInventory'        *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclaration_typeInventory (const cPtr_astDeclaration * /* inObject */,
                                                            GALGAS_unifiedTypeMap & /* ioArgument_ioUnifiedTypeMap */,
                                                            C_Compiler * /* inCompiler */
                                                            COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_structDeclaration.mSlotID,
                                     categoryMethod_structDeclaration_typeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclaration_typeInventory (defineCategoryMethod_structDeclaration_typeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//       Overriding category method '@structDeclaration EXTypeInventory'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclaration_EXTypeInventory (const cPtr_astDeclaration * inObject,
                                                              GALGAS_EXunifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                              C_Compiler * inCompiler
                                                              COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclaration * object = (const cPtr_structDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclaration) ;
  cEnumerator_structFieldASTList enumerator_440 (object->mAttribute_mFieldList, kEnumeration_up) ;
  while (enumerator_440.hasCurrentObject ()) {
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mStructTypeName, enumerator_440.current_mFieldTypeName (HERE) COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 17)) ;
    }
    enumerator_440.gotoNextObject () ;
  }
  {
  const GALGAS_structDeclaration temp_0 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mStructTypeName, GALGAS_EXebType::constructor_new (object->mAttribute_mStructTypeName, GALGAS_EXTypeKind::constructor_structType (SOURCE_FILE ("structAnalysis.gSemantics", 24))  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 24)), temp_0, GALGAS_EXentityRelationshipMap::constructor_emptyMap (SOURCE_FILE ("structAnalysis.gSemantics", 26)), inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 22)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclaration_EXTypeInventory (void) {
  enterCategoryMethod_EXTypeInventory (kTypeDescriptor_GALGAS_structDeclaration.mSlotID,
                                       categoryMethod_structDeclaration_EXTypeInventory) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclaration_EXTypeInventory (defineCategoryMethod_structDeclaration_EXTypeInventory, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@structDeclaration buildObservablePropertyMap'  *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclaration_buildObservablePropertyMap (const cPtr_astDeclaration * /* inObject */,
                                                                         const GALGAS_EXunifiedTypeMap /* constinArgument_inUnifiedTypeMap */,
                                                                         GALGAS_EXobservablePropertyMapMap & /* ioArgument_ioObservablePropertyMapMap */,
                                                                         GALGAS_EXtransientDependencyGraph & /* ioArgument_ioTransientDependencyGraph */,
                                                                         C_Compiler * /* inCompiler */
                                                                         COMMA_UNUSED_LOCATION_ARGS) {
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclaration_buildObservablePropertyMap (void) {
  enterCategoryMethod_buildObservablePropertyMap (kTypeDescriptor_GALGAS_structDeclaration.mSlotID,
                                                  categoryMethod_structDeclaration_buildObservablePropertyMap) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclaration_buildObservablePropertyMap (defineCategoryMethod_structDeclaration_buildObservablePropertyMap, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//      Overriding category method '@structDeclaration semanticAnalysis'       *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_structDeclaration_semanticAnalysis (const cPtr_astDeclaration * inObject,
                                                               const GALGAS_EXunifiedTypeMap constinArgument_inUnifiedTypeMap,
                                                               GALGAS_EXcontextAnalysisStruct & ioArgument_ioContextAnalysisStruct,
                                                               GALGAS_generationList & ioArgument_ioGenerationList,
                                                               C_Compiler * inCompiler
                                                               COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_structDeclaration * object = (const cPtr_structDeclaration *) inObject ;
  macroValidSharedObject (object, cPtr_structDeclaration) ;
  GALGAS_structFieldList var_structFieldList = GALGAS_structFieldList::constructor_emptyList (SOURCE_FILE ("structAnalysis.gSemantics", 46)) ;
  GALGAS_stringset var_headerFileInclusionSet = GALGAS_stringset::constructor_emptySet (SOURCE_FILE ("structAnalysis.gSemantics", 47)) ;
  cEnumerator_structFieldASTList enumerator_1446 (object->mAttribute_mFieldList, kEnumeration_up) ;
  while (enumerator_1446.hasCurrentObject ()) {
    GALGAS_EXebType var_type ;
    GALGAS_astDeclaration joker_1515_2 ; // Joker input parameter
    GALGAS_EXentityRelationshipMap joker_1515_1 ; // Joker input parameter
    constinArgument_inUnifiedTypeMap.method_searchKey (enumerator_1446.current_mFieldTypeName (HERE), var_type, joker_1515_2, joker_1515_1, inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 49)) ;
    const enumGalgasBool test_0 = categoryReader_isPODtype (var_type, inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 50)).operator_not (SOURCE_FILE ("structAnalysis.gSemantics", 50)).boolEnum () ;
    if (kBoolTrue == test_0) {
      GALGAS_location location_1 (enumerator_1446.current_mFieldName (HERE).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_1, GALGAS_string ("only a POD type is allowed in a structure")  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 51)) ;
    }
    const enumGalgasBool test_2 = GALGAS_bool (kIsEqual, var_type.reader_mKind (SOURCE_FILE ("structAnalysis.gSemantics", 53)).objectCompare (GALGAS_EXTypeKind::constructor_enumType (SOURCE_FILE ("structAnalysis.gSemantics", 53)))).boolEnum () ;
    if (kBoolTrue == test_2) {
      var_headerFileInclusionSet.addAssign_operation (var_type.reader_mTypeName (SOURCE_FILE ("structAnalysis.gSemantics", 54)).mAttribute_string  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 54)) ;
    }else if (kBoolFalse == test_2) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsEqual, var_type.reader_mKind (SOURCE_FILE ("structAnalysis.gSemantics", 55)).objectCompare (GALGAS_EXTypeKind::constructor_structType (SOURCE_FILE ("structAnalysis.gSemantics", 55)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        var_headerFileInclusionSet.addAssign_operation (var_type.reader_mTypeName (SOURCE_FILE ("structAnalysis.gSemantics", 56)).mAttribute_string  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 56)) ;
      }
    }
    var_structFieldList.addAssign_operation (var_type, enumerator_1446.current_mFieldName (HERE).mAttribute_string  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 58)) ;
    enumerator_1446.gotoNextObject () ;
  }
  {
  ioArgument_ioContextAnalysisStruct.mAttribute_mStructTypeMap.modifier_insertKey (object->mAttribute_mStructTypeName, var_structFieldList, inCompiler COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 61)) ;
  }
  ioArgument_ioGenerationList.addAssign_operation (GALGAS_structTypeGeneration::constructor_new (object->mAttribute_mStructTypeName.mAttribute_string, var_structFieldList, var_headerFileInclusionSet  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 66))  COMMA_SOURCE_FILE ("structAnalysis.gSemantics", 66)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_structDeclaration_semanticAnalysis (void) {
  enterCategoryMethod_semanticAnalysis (kTypeDescriptor_GALGAS_structDeclaration.mSlotID,
                                        categoryMethod_structDeclaration_semanticAnalysis) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_structDeclaration_semanticAnalysis (defineCategoryMethod_structDeclaration_semanticAnalysis, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


