//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'entityAnalysis.cpp'                          *
//                        Generated by version 2.5.0                         *
//                       july 18th, 2013, at 20h20'9"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "entityAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "entityAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//       Overriding category method '@entityDeclaration typeInventory'       *
//                                                                           *
//---------------------------------------------------------------------------*

static void categoryMethod_entityDeclaration_typeInventory (const cPtr_astDeclaration * inObject,
                                                            GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_entityDeclaration * object = (const cPtr_entityDeclaration *) inObject ;
  macroValidSharedObject (object, const cPtr_entityDeclaration) ;
  GALGAS_unifiedTypeProxy var_superClassProxy ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mSuperEntityName.mAttribute_string.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
  if (kBoolTrue == test_0) {
    var_superClassProxy = GALGAS_unifiedTypeProxy::constructor_null (SOURCE_FILE_AT_LINE (16)) ;
  }else if (kBoolFalse == test_0) {
    {
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, object->mAttribute_mSuperEntityName, var_superClassProxy COMMA_SOURCE_FILE_AT_LINE (18)) ;
    }
    {
    ioArgument_ioUnifiedTypeMap.modifier_enterEdge (object->mAttribute_mEntityName, object->mAttribute_mSuperEntityName COMMA_SOURCE_FILE_AT_LINE (24)) ;
    }
  }
  cEnumerator_attributeList enumerator_1025 (object->mAttribute_mAttributeList, kEnumeration_up) ;
  while (enumerator_1025.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_1118_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1025.current_mAttributeTypeName (HERE), joker_1118_0 COMMA_SOURCE_FILE_AT_LINE (31)) ;
    }
    enumerator_1025.gotoNextObject () ;
  }
  cEnumerator_transientList enumerator_1235 (object->mAttribute_mTransientList, kEnumeration_up) ;
  while (enumerator_1235.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_1328_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1235.current_mTransientTypeName (HERE), joker_1328_0 COMMA_SOURCE_FILE_AT_LINE (39)) ;
    }
    enumerator_1235.gotoNextObject () ;
  }
  cEnumerator_relationshipList enumerator_1474 (object->mAttribute_mRelationshipList, kEnumeration_up) ;
  while (enumerator_1474.hasCurrentObject ()) {
    {
    GALGAS_unifiedTypeProxy joker_1571_0 ; // Joker input parameter
    GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1474.current_mDestinationEntityName (HERE), joker_1571_0 COMMA_SOURCE_FILE_AT_LINE (47)) ;
    }
    enumerator_1474.gotoNextObject () ;
  }
  {
  //--- @selfCopyInExpressionForGeneration
  const GALGAS_entityDeclaration temp_1 = object ;
  ioArgument_ioUnifiedTypeMap.modifier_insertKey (object->mAttribute_mEntityName, temp_1, inCompiler COMMA_SOURCE_FILE_AT_LINE (54)) ;
  }
}
//---------------------------------------------------------------------------*

static void defineCategoryMethod_entityDeclaration_typeInventory (void) {
  enterCategoryMethod_typeInventory (kTypeDescriptor_GALGAS_entityDeclaration.mSlotID,
                                     categoryMethod_entityDeclaration_typeInventory) ;
}

//---------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_entityDeclaration_typeInventory (defineCategoryMethod_entityDeclaration_typeInventory, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


