//-----------------------------------------------------------------------------*
//                                                                             *
//                     File 'bindingSemanticAnalysis.cpp'                      *
//                         Generated by version 2.7.0                          *
//                       august 6th, 2014, at 23h1'57"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//-----------------------------------------------------------------------------*

#include "bindingSemanticAnalysis.h"


//-----------------------------------------------------------------------------*
//                                                                             *
//                    Routine 'buildBindingCapabilitiesMap'                    *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_buildBindingCapabilitiesMap (const GALGAS_outletClassBindingList constinArgument_inBindingDeclarationList,
                                          GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                          GALGAS_outletClassBindingMap & outArgument_outBindingMap,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outBindingMap.drop () ; // Release 'out' argument
  outArgument_outBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 11)) ;
  cEnumerator_outletClassBindingList enumerator_413 (constinArgument_inBindingDeclarationList, kEnumeration_up) ;
  while (enumerator_413.hasCurrentObject ()) {
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 13)) ;
    cEnumerator_bindingOptionList enumerator_521 (enumerator_413.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_521.hasCurrentObject ()) {
      GALGAS_ebTypeList var_acceptableTypeList = GALGAS_ebTypeList::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 15)) ;
      cEnumerator_lstringlist enumerator_609 (enumerator_521.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_609.hasCurrentObject ()) {
        GALGAS_unifiedTypeProxy var_type ;
        {
        GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_609.current_mValue (HERE), var_type COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 17)) ;
        }
        var_acceptableTypeList.addAssign_operation (var_type.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 22))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 22)) ;
        enumerator_609.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_521.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 24)) ;
      }
      enumerator_521.gotoNextObject () ;
    }
    GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_ebTypeAndFormatterList::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 26)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_1031 (enumerator_413.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_1031.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxy var_type ;
      {
      GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1031.current_mTypeName (HERE), var_type COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 28)) ;
      }
      var_acceptableTypeFormatterList.addAssign_operation (var_type.reader_mTypeKind (inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 33)), enumerator_1031.current_mRequiredFormatter (HERE)  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 33)) ;
      enumerator_1031.gotoNextObject () ;
    }
    {
    outArgument_outBindingMap.modifier_insertKey (enumerator_413.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 35)) ;
    }
    enumerator_413.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//                        Routine 'checkBindingOptions'                        *
//                                                                             *
//-----------------------------------------------------------------------------*

void routine_checkBindingOptions (const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                  const GALGAS_outletBindingOptionList constinArgument_inBindingOptionListAST,
                                  const GALGAS_outletClassBindingOptionMap constinArgument_inAvailableBindingOptionMap,
                                  GALGAS_bindingOptionListForGeneration & outArgument_outBindingOptionListForGeneration,
                                  GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                  C_Compiler * inCompiler
                                  COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outBindingOptionListForGeneration.drop () ; // Release 'out' argument
  outArgument_outBindingOptionListForGeneration = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 828)) ;
  cEnumerator_outletBindingOptionList enumerator_31600 (constinArgument_inBindingOptionListAST, kEnumeration_up) ;
  while (enumerator_31600.hasCurrentObject ()) {
    GALGAS_ebTypeList var_acceptableTypeList ;
    constinArgument_inAvailableBindingOptionMap.method_searchKey (enumerator_31600.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 831)) ;
    GALGAS_string var_objectiveCDefaultValueAsString ;
    GALGAS_string var_swiftDefaultValueAsString ;
    GALGAS_string joker_31827_0 ; // Joker input parameter
    callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_31600.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_31827_0, var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 832)) ;
    outArgument_outBindingOptionListForGeneration.addAssign_operation (enumerator_31600.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 840)), var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 840)) ;
    enumerator_31600.gotoNextObject () ;
  }
}


//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@tableValueBinding analyzeOutletBinding'     *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_tableValueBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                   const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                   const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                   const GALGAS_outletClassBindingMap /* constinArgument_inBoundObjectBindingMap */,
                                                                   const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                   const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                   const GALGAS_bool constinArgument_inHasTableValueBinding,
                                                                   const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                   GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                   GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                   C_Compiler * inCompiler
                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_tableValueBinding * object = (const cPtr_tableValueBinding *) inObject ;
  macroValidSharedObject (object, cPtr_tableValueBinding) ;
  const enumGalgasBool test_0 = constinArgument_inHasTableValueBinding.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 52)).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("this outlet does not support $tableValue binding")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 53)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_lstring var_controlledClassOrEntityName ;
    GALGAS_bool var_isEntity ;
    GALGAS_outletBindingListForGeneration var_controllerBindingList ;
    GALGAS_string joker_2957_0 ; // Joker input parameter
    GALGAS_actionMap joker_3093_2 ; // Joker input parameter
    GALGAS_observablePropertyMap joker_3093_1 ; // Joker input parameter
    constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_2957_0, var_controlledClassOrEntityName, var_isEntity, var_controllerBindingList, joker_3093_2, joker_3093_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 80)) ;
    GALGAS_typeKind var_kind ;
    GALGAS_observablePropertyMap var_observablePropertyMap ;
    GALGAS_bool joker_3212_0 ; // Joker input parameter
    constinArgument_inContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (var_controlledClassOrEntityName, joker_3212_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 88)) ;
    const enumGalgasBool test_2 = var_isEntity.boolEnum () ;
    if (kBoolTrue == test_2) {
      const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_entityType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 95)))).boolEnum () ;
      if (kBoolTrue == test_3) {
        GALGAS_location location_4 (var_controlledClassOrEntityName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_4, GALGAS_string ("'").operator_concat (var_controlledClassOrEntityName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 96))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 96)).operator_concat (GALGAS_string ("' is not an entity")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 96))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 96)) ;
      }
    }else if (kBoolFalse == test_2) {
      const enumGalgasBool test_5 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_classType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 98)))).boolEnum () ;
      if (kBoolTrue == test_5) {
        GALGAS_location location_6 (var_controlledClassOrEntityName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_6, GALGAS_string ("'").operator_concat (var_controlledClassOrEntityName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 99))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 99)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 99))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 99)) ;
      }
    }
    GALGAS_columnBindingForTableValueBindingForGeneration var_columnBindingForTableValueBindingForGeneration = GALGAS_columnBindingForTableValueBindingForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 101)) ;
    cEnumerator_tableValueColumnBinding enumerator_3792 (object->mAttribute_mTableValueColumnBinding, kEnumeration_up) ;
    while (enumerator_3792.hasCurrentObject ()) {
      GALGAS_ebType var_type ;
      GALGAS_bool joker_3902_3 ; // Joker input parameter
      GALGAS_lstring joker_3902_2 ; // Joker input parameter
      GALGAS_bool joker_3902_1 ; // Joker input parameter
      var_observablePropertyMap.method_searchKey (enumerator_3792.current (HERE).mAttribute_mBoundPropertyName, var_type, joker_3902_3, joker_3902_2, joker_3902_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 103)) ;
      GALGAS_string var_requiredCellTypeInTableColumnBinding = categoryReader_requiredCellTypeInTableColumnBinding (var_type, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 108)) ;
      const enumGalgasBool test_7 = GALGAS_bool (kIsEqual, var_requiredCellTypeInTableColumnBinding.objectCompare (GALGAS_string::makeEmptyString ())).boolEnum () ;
      if (kBoolTrue == test_7) {
        GALGAS_location location_8 (enumerator_3792.current (HERE).mAttribute_mBoundPropertyName.reader_location (HERE)) ; // Implicit use of 'location' reader
        inCompiler->emitSemanticError (location_8, GALGAS_string ("this property cannot be named in a $tableValue binding")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 110)) ;
      }else if (kBoolFalse == test_7) {
        const enumGalgasBool test_9 = GALGAS_bool (kIsNotEqual, var_requiredCellTypeInTableColumnBinding.objectCompare (enumerator_3792.current (HERE).mAttribute_mCellTypeName.mAttribute_string)).boolEnum () ;
        if (kBoolTrue == test_9) {
          GALGAS_location location_10 (enumerator_3792.current (HERE).mAttribute_mCellTypeName.reader_location (HERE)) ; // Implicit use of 'location' reader
          inCompiler->emitSemanticError (location_10, GALGAS_string ("this property requires a ").operator_concat (var_requiredCellTypeInTableColumnBinding  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 112)).operator_concat (GALGAS_string (" cell class")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 112))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 112)) ;
        }
      }
      var_columnBindingForTableValueBindingForGeneration.addAssign_operation (enumerator_3792.current (HERE).mAttribute_mColumnName.mAttribute_string, var_requiredCellTypeInTableColumnBinding, enumerator_3792.current (HERE).mAttribute_mBoundPropertyName.mAttribute_string, GALGAS__32_stringlist::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 118))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 114)) ;
      enumerator_3792.gotoNextObject () ;
    }
    ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_tableValueBindingForGeneration::constructor_new (object->mAttribute_mControllerName.mAttribute_string, var_columnBindingForTableValueBindingForGeneration  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 121))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 121)) ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_tableValueBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_tableValueBinding.mSlotID,
                                            categoryMethod_tableValueBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_tableValueBinding_analyzeOutletBinding (defineCategoryMethod_tableValueBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//        Overriding category method '@runBinding analyzeOutletBinding'        *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_runBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                            const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                            const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                            const GALGAS_outletClassBindingMap /* constinArgument_inBoundObjectBindingMap */,
                                                            const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                            const GALGAS_actionMap constinArgument_inActionMap,
                                                            const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                            const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                            GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                            GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                            C_Compiler * inCompiler
                                                            COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_runBinding * object = (const cPtr_runBinding *) inObject ;
  macroValidSharedObject (object, cPtr_runBinding) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsEqual, object->mAttribute_mTargetName.mAttribute_string.objectCompare (GALGAS_string ("self"))).boolEnum () ;
  if (kBoolTrue == test_0) {
    constinArgument_inActionMap.method_searchKey (object->mAttribute_mActionName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 142)) ;
  }else if (kBoolFalse == test_0) {
    GALGAS_ebType var_type ;
    GALGAS_bool joker_5610_3 ; // Joker input parameter
    GALGAS_lstring joker_5610_2 ; // Joker input parameter
    GALGAS_bool joker_5610_1 ; // Joker input parameter
    constinArgument_inSelfObservableAttributeMap.method_searchKey (object->mAttribute_mTargetName, var_type, joker_5610_3, joker_5610_2, joker_5610_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 144)) ;
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_type.mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_controllerClassType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 149)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (object->mAttribute_mTargetName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (object->mAttribute_mTargetName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 150))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 150)).operator_concat (GALGAS_string ("' is not a controller")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 150))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 150)) ;
    }
    GALGAS_actionMap var_actionMap ;
    GALGAS_controllerKind joker_5854_3 ; // Joker input parameter
    GALGAS_generationKind joker_5854_2 ; // Joker input parameter
    GALGAS_outletClassBindingMap joker_5854_1 ; // Joker input parameter
    GALGAS_observablePropertyMap joker_5892_2 ; // Joker input parameter
    GALGAS_outletClassBindingOptionMap joker_5892_1 ; // Joker input parameter
    constinArgument_inContextAnalysisStruct.mAttribute_mControllerClassMap.method_searchKey (var_type.mAttribute_mTypeName, joker_5854_3, joker_5854_2, joker_5854_1, var_actionMap, joker_5892_2, joker_5892_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 152)) ;
    var_actionMap.method_searchKey (object->mAttribute_mActionName, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 159)) ;
  }
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_runBindingForGeneration::constructor_new (object->mAttribute_mTargetName.mAttribute_string, object->mAttribute_mActionName.mAttribute_string  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 161))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 161)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_runBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_runBinding.mSlotID,
                                            categoryMethod_runBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_runBinding_analyzeOutletBinding (defineCategoryMethod_runBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@regularControllerBinding analyzeOutletBinding' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_regularControllerBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                          const GALGAS_outletClassBindingMap constinArgument_inBoundObjectBindingMap,
                                                                          const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                          const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                          const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                          const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                          GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                          GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularControllerBinding * object = (const cPtr_regularControllerBinding *) inObject ;
  macroValidSharedObject (object, cPtr_regularControllerBinding) ;
  GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList ;
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  constinArgument_inBoundObjectBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 181)) ;
  GALGAS_observablePropertyMap var_observableAttributeMap ;
  GALGAS_string joker_7057_5 ; // Joker input parameter
  GALGAS_lstring joker_7057_4 ; // Joker input parameter
  GALGAS_bool joker_7057_3 ; // Joker input parameter
  GALGAS_outletBindingListForGeneration joker_7057_2 ; // Joker input parameter
  GALGAS_actionMap joker_7057_1 ; // Joker input parameter
  constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_7057_5, joker_7057_4, joker_7057_3, joker_7057_2, joker_7057_1, var_observableAttributeMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 187)) ;
  GALGAS_ebType var_observablePropertyType ;
  GALGAS_bool var_isTransient ;
  GALGAS_bool var_isCollection ;
  GALGAS_lstring joker_7299_0 ; // Joker input parameter
  var_observableAttributeMap.method_searchKey (object->mAttribute_mControllerAttributeName, var_observablePropertyType, var_isTransient, joker_7299_0, var_isCollection, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 193)) ;
  GALGAS_string var_observedKeyPath = object->mAttribute_mControllerAttributeName.mAttribute_string ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_0) {
    var_observedKeyPath.dotAssign_operation (GALGAS_string (".@count")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 203)) ;
    var_observablePropertyType = GALGAS_ebType::constructor_new (GALGAS_string ("UInteger").reader_nowhere (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 204)), GALGAS_typeKind::constructor_uintegerType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 204))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 204)) ;
    const enumGalgasBool test_1 = var_isCollection.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 205)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (object->mAttribute_mControllerAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the 'count' option is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 206)) ;
    }
  }
  GALGAS_bool var_found = GALGAS_bool (false) ;
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 212)) ;
  cEnumerator_ebTypeAndFormatterList enumerator_8014 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  bool bool_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 213)).isValidAndTrue () ;
  if (enumerator_8014.hasCurrentObject () && bool_3) {
    while (enumerator_8014.hasCurrentObject () && bool_3) {
      var_requiredFormatter = enumerator_8014.current_mRequiredFormatter (HERE) ;
      var_found = GALGAS_bool (kIsEqual, enumerator_8014.current_mType (HERE).mAttribute_mKind.objectCompare (var_observablePropertyType.mAttribute_mKind)) ;
      enumerator_8014.gotoNextObject () ;
      if (enumerator_8014.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 213)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 217)).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 218))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 218)).operator_concat (GALGAS_string ("' type, acceptable type(s):")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 218)) ;
    cEnumerator_ebTypeAndFormatterList enumerator_8332 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    bool bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 219)).isValidAndTrue () ;
    if (enumerator_8332.hasCurrentObject () && bool_5) {
      while (enumerator_8332.hasCurrentObject () && bool_5) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_8332.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 220))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 220)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 220))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 220)) ;
        enumerator_8332.gotoNextObject () ;
        if (enumerator_8332.hasCurrentObject ()) {
          bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 219)).isValidAndTrue () ;
        }
      }
    }
    GALGAS_location location_6 (object->mAttribute_mControllerAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, var_s  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 222)) ;
  }
  GALGAS_bindingOptionListForGeneration var_bindingOptionList = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 225)) ;
  cEnumerator_outletBindingOptionList enumerator_8589 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  while (enumerator_8589.hasCurrentObject ()) {
    GALGAS_ebTypeList var_acceptableTypeList ;
    var_outletClassBindingOptionMap.method_searchKey (enumerator_8589.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 228)) ;
    GALGAS_bool var_found = GALGAS_bool (false) ;
    GALGAS_string var_objectiveCDefaultValueAsString ;
    GALGAS_string var_swiftDefaultValueAsString ;
    GALGAS_string joker_8843_0 ; // Joker input parameter
    callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_8589.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_8843_0, var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 230)) ;
    var_bindingOptionList.addAssign_operation (enumerator_8589.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 238)), var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 238)) ;
    enumerator_8589.gotoNextObject () ;
  }
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_observablePropertyType, object->mAttribute_mBindingName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 242)), var_requiredFormatter, object->mAttribute_mControllerName.mAttribute_string, var_observedKeyPath, GALGAS_bool (false), var_bindingOptionList  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 240))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 240)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_regularControllerBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularControllerBinding.mSlotID,
                                            categoryMethod_regularControllerBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularControllerBinding_analyzeOutletBinding (defineCategoryMethod_regularControllerBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@regularControllerSelectionBinding analyzeOutletBinding'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_regularControllerSelectionBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                                   const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                                   const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                                   const GALGAS_outletClassBindingMap constinArgument_inBoundObjectBindingMap,
                                                                                   const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                                   const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                                   const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                                   const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                                   GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                                   GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                                   C_Compiler * inCompiler
                                                                                   COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularControllerSelectionBinding * object = (const cPtr_regularControllerSelectionBinding *) inObject ;
  macroValidSharedObject (object, cPtr_regularControllerSelectionBinding) ;
  GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList ;
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  constinArgument_inBoundObjectBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 265)) ;
  GALGAS_lstring var_controlledClassOrEntityName ;
  GALGAS_bool var_isEntity ;
  GALGAS_string joker_10343_0 ; // Joker input parameter
  GALGAS_outletBindingListForGeneration joker_10412_3 ; // Joker input parameter
  GALGAS_actionMap joker_10412_2 ; // Joker input parameter
  GALGAS_observablePropertyMap joker_10412_1 ; // Joker input parameter
  constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_10343_0, var_controlledClassOrEntityName, var_isEntity, joker_10412_3, joker_10412_2, joker_10412_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 271)) ;
  GALGAS_typeKind var_kind ;
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  GALGAS_bool joker_10597_0 ; // Joker input parameter
  constinArgument_inContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (var_controlledClassOrEntityName, joker_10597_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 279)) ;
  const enumGalgasBool test_0 = var_isEntity.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_entityType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 286)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (var_controlledClassOrEntityName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (var_controlledClassOrEntityName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 287))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 287)).operator_concat (GALGAS_string ("' is not an entity")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 287))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 287)) ;
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_classType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 289)))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (var_controlledClassOrEntityName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("'").operator_concat (var_controlledClassOrEntityName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 290))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 290)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 290))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 290)) ;
    }
  }
  GALGAS_ebType var_observablePropertyType ;
  GALGAS_bool var_isTransient ;
  GALGAS_lstring var_propertySignature ;
  GALGAS_bool var_isCollection ;
  var_observablePropertyMap.method_searchKey (object->mAttribute_mControllerAttributeName, var_observablePropertyType, var_isTransient, var_propertySignature, var_isCollection, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 293)) ;
  GALGAS_string var_observedKeyPath = GALGAS_string ("selection.").operator_concat (object->mAttribute_mControllerAttributeName.mAttribute_string  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 300)) ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 303)) ;
  cEnumerator_ebTypeAndFormatterList enumerator_11532 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  bool bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 304)).isValidAndTrue () ;
  if (enumerator_11532.hasCurrentObject () && bool_5) {
    while (enumerator_11532.hasCurrentObject () && bool_5) {
      var_requiredFormatter = enumerator_11532.current_mRequiredFormatter (HERE) ;
      var_found = GALGAS_bool (kIsEqual, enumerator_11532.current_mType (HERE).mAttribute_mKind.objectCompare (var_observablePropertyType.mAttribute_mKind)) ;
      enumerator_11532.gotoNextObject () ;
      if (enumerator_11532.hasCurrentObject ()) {
        bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 304)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_6 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 308)).boolEnum () ;
  if (kBoolTrue == test_6) {
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 309))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 309)).operator_concat (GALGAS_string ("' type, acceptable type(s):")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 309)) ;
    cEnumerator_ebTypeAndFormatterList enumerator_11850 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    bool bool_7 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 310)).isValidAndTrue () ;
    if (enumerator_11850.hasCurrentObject () && bool_7) {
      while (enumerator_11850.hasCurrentObject () && bool_7) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_11850.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 311))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 311)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 311))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 311)) ;
        enumerator_11850.gotoNextObject () ;
        if (enumerator_11850.hasCurrentObject ()) {
          bool_7 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 310)).isValidAndTrue () ;
        }
      }
    }
    GALGAS_location location_8 (object->mAttribute_mControllerAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_8, var_s  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 313)) ;
  }
  GALGAS_bindingOptionListForGeneration var_bindingOptionList = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 316)) ;
  cEnumerator_outletBindingOptionList enumerator_12107 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  while (enumerator_12107.hasCurrentObject ()) {
    GALGAS_ebTypeList var_acceptableTypeList ;
    var_outletClassBindingOptionMap.method_searchKey (enumerator_12107.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 319)) ;
    GALGAS_bool var_found = GALGAS_bool (false) ;
    GALGAS_string var_objectiveCDefaultValueAsString ;
    GALGAS_string var_swiftCDefaultValueAsString ;
    GALGAS_string joker_12361_0 ; // Joker input parameter
    callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_12107.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_12361_0, var_objectiveCDefaultValueAsString, var_swiftCDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 321)) ;
    var_bindingOptionList.addAssign_operation (enumerator_12107.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 329)), var_objectiveCDefaultValueAsString, var_swiftCDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 329)) ;
    enumerator_12107.gotoNextObject () ;
  }
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_observablePropertyType, object->mAttribute_mBindingName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 333)), var_requiredFormatter, object->mAttribute_mControllerName.mAttribute_string, var_observedKeyPath, GALGAS_bool (true), var_bindingOptionList  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 331))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 331)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_regularControllerSelectionBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularControllerSelectionBinding.mSlotID,
                                            categoryMethod_regularControllerSelectionBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularControllerSelectionBinding_analyzeOutletBinding (defineCategoryMethod_regularControllerSelectionBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@regularRootBinding analyzeOutletBinding'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_regularRootBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_observablePropertyMap constinArgument_inRootEntityObservableAttributeMap,
                                                                    const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBoundObjectBindingMap,
                                                                    const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularRootBinding * object = (const cPtr_regularRootBinding *) inObject ;
  macroValidSharedObject (object, cPtr_regularRootBinding) ;
  GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList ;
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  constinArgument_inBoundObjectBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 356)) ;
  GALGAS_ebType var_observablePropertyType ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_13980_0 ; // Joker input parameter
  GALGAS_lstring joker_13987_0 ; // Joker input parameter
  constinArgument_inRootEntityObservableAttributeMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_observablePropertyType, joker_13980_0, joker_13987_0, var_isCollection, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 362)) ;
  GALGAS_string var_observableKeyPath = object->mAttribute_mObservableAttributeName.mAttribute_string ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = var_isCollection.boolEnum () ;
    if (kBoolTrue == test_1) {
      var_observableKeyPath.dotAssign_operation (GALGAS_string (".@count")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 373)) ;
      var_observablePropertyType = GALGAS_ebType::constructor_new (GALGAS_string ("UInteger").reader_nowhere (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 374)), GALGAS_typeKind::constructor_uintegerType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 374))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 374)) ;
    }else if (kBoolFalse == test_1) {
      GALGAS_location location_2 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the 'count' path is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 376)) ;
    }
  }
  GALGAS_bool var_found = GALGAS_bool (false) ;
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 381)) ;
  cEnumerator_ebTypeAndFormatterList enumerator_14661 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  bool bool_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 382)).isValidAndTrue () ;
  if (enumerator_14661.hasCurrentObject () && bool_3) {
    while (enumerator_14661.hasCurrentObject () && bool_3) {
      var_requiredFormatter = enumerator_14661.current_mRequiredFormatter (HERE) ;
      var_found = GALGAS_bool (kIsEqual, enumerator_14661.current_mType (HERE).mAttribute_mKind.objectCompare (var_observablePropertyType.mAttribute_mKind)) ;
      enumerator_14661.gotoNextObject () ;
      if (enumerator_14661.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 382)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 386)).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 387))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 387)).operator_concat (GALGAS_string ("' type, acceptable type(s):")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 387)) ;
    cEnumerator_ebTypeAndFormatterList enumerator_14979 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    bool bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 388)).isValidAndTrue () ;
    if (enumerator_14979.hasCurrentObject () && bool_5) {
      while (enumerator_14979.hasCurrentObject () && bool_5) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_14979.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 389))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 389)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 389))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 389)) ;
        enumerator_14979.gotoNextObject () ;
        if (enumerator_14979.hasCurrentObject ()) {
          bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 388)).isValidAndTrue () ;
        }
      }
    }
    GALGAS_location location_6 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, var_s  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 391)) ;
  }
  GALGAS_bindingOptionListForGeneration var_bindingOptionList = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 394)) ;
  cEnumerator_outletBindingOptionList enumerator_15274 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  while (enumerator_15274.hasCurrentObject ()) {
    GALGAS_ebTypeList var_acceptableTypeList ;
    var_outletClassBindingOptionMap.method_searchKey (enumerator_15274.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 397)) ;
    GALGAS_string var_objectiveCDefaultValueAsString ;
    GALGAS_string var_swiftDefaultValueAsString ;
    GALGAS_string joker_15501_0 ; // Joker input parameter
    callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_15274.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_15501_0, var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 398)) ;
    var_bindingOptionList.addAssign_operation (enumerator_15274.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 406)), var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 406)) ;
    enumerator_15274.gotoNextObject () ;
  }
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_observablePropertyType, object->mAttribute_mBindingName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 411)), var_requiredFormatter, GALGAS_string ("mRootObject"), var_observableKeyPath, GALGAS_bool (true), var_bindingOptionList  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 409))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 409)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_regularRootBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularRootBinding.mSlotID,
                                            categoryMethod_regularRootBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularRootBinding_analyzeOutletBinding (defineCategoryMethod_regularRootBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@regularSelfBinding analyzeOutletBinding'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_regularSelfBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                    const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBoundObjectBindingMap,
                                                                    const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularSelfBinding * object = (const cPtr_regularSelfBinding *) inObject ;
  macroValidSharedObject (object, cPtr_regularSelfBinding) ;
  GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList ;
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  constinArgument_inBoundObjectBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 434)) ;
  GALGAS_ebType var_observablePropertyType ;
  GALGAS_bool var_isCollection ;
  GALGAS_bool joker_17158_0 ; // Joker input parameter
  GALGAS_lstring joker_17165_0 ; // Joker input parameter
  constinArgument_inSelfObservableAttributeMap.method_searchKey (object->mAttribute_mObservableAttributeName, var_observablePropertyType, joker_17158_0, joker_17165_0, var_isCollection, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 440)) ;
  GALGAS_string var_observableKeyPath = object->mAttribute_mObservableAttributeName.mAttribute_string ;
  const enumGalgasBool test_0 = object->mAttribute_mNamesCountOption.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = var_isCollection.boolEnum () ;
    if (kBoolTrue == test_1) {
      var_observableKeyPath.dotAssign_operation (GALGAS_string (".@count")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 451)) ;
      var_observablePropertyType = GALGAS_ebType::constructor_new (GALGAS_string ("UInteger").reader_nowhere (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 452)), GALGAS_typeKind::constructor_uintegerType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 452))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 452)) ;
    }else if (kBoolFalse == test_1) {
      GALGAS_location location_2 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("the 'count' path is only allowed for to-many relationships")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 454)) ;
    }
  }
  GALGAS_bool var_found = GALGAS_bool (false) ;
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 459)) ;
  cEnumerator_ebTypeAndFormatterList enumerator_17839 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  bool bool_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 460)).isValidAndTrue () ;
  if (enumerator_17839.hasCurrentObject () && bool_3) {
    while (enumerator_17839.hasCurrentObject () && bool_3) {
      var_requiredFormatter = enumerator_17839.current_mRequiredFormatter (HERE) ;
      var_found = GALGAS_bool (kIsEqual, enumerator_17839.current_mType (HERE).mAttribute_mKind.objectCompare (var_observablePropertyType.mAttribute_mKind)) ;
      enumerator_17839.gotoNextObject () ;
      if (enumerator_17839.hasCurrentObject ()) {
        bool_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 460)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_4 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 464)).boolEnum () ;
  if (kBoolTrue == test_4) {
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 465))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 465)).operator_concat (GALGAS_string ("' type, acceptable type(s):")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 465)) ;
    cEnumerator_ebTypeAndFormatterList enumerator_18157 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    bool bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 466)).isValidAndTrue () ;
    if (enumerator_18157.hasCurrentObject () && bool_5) {
      while (enumerator_18157.hasCurrentObject () && bool_5) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_18157.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 467))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 467)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 467))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 467)) ;
        enumerator_18157.gotoNextObject () ;
        if (enumerator_18157.hasCurrentObject ()) {
          bool_5 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 466)).isValidAndTrue () ;
        }
      }
    }
    GALGAS_location location_6 (object->mAttribute_mObservableAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_6, var_s  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 469)) ;
  }
  GALGAS_bindingOptionListForGeneration var_bindingOptionList = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 472)) ;
  cEnumerator_outletBindingOptionList enumerator_18452 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  while (enumerator_18452.hasCurrentObject ()) {
    GALGAS_ebTypeList var_acceptableTypeList ;
    var_outletClassBindingOptionMap.method_searchKey (enumerator_18452.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 475)) ;
    GALGAS_string var_objectiveCDefaultValueAsString ;
    GALGAS_string var_swiftDefaultValueAsString ;
    GALGAS_string joker_18679_0 ; // Joker input parameter
    callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_18452.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_18679_0, var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 476)) ;
    var_bindingOptionList.addAssign_operation (enumerator_18452.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 484)), var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 484)) ;
    enumerator_18452.gotoNextObject () ;
  }
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_observablePropertyType, object->mAttribute_mBindingName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 489)), var_requiredFormatter, GALGAS_string ("self"), var_observableKeyPath, GALGAS_bool (true), var_bindingOptionList  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 487))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 487)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_regularSelfBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularSelfBinding.mSlotID,
                                            categoryMethod_regularSelfBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularSelfBinding_analyzeOutletBinding (defineCategoryMethod_regularSelfBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
// Overriding category method '@regularPreferenceBinding analyzeOutletBinding' *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_regularPreferenceBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                          const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                          const GALGAS_outletClassBindingMap constinArgument_inBoundObjectBindingMap,
                                                                          const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                          const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                          const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                          const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                          GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                          GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                          C_Compiler * inCompiler
                                                                          COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_regularPreferenceBinding * object = (const cPtr_regularPreferenceBinding *) inObject ;
  macroValidSharedObject (object, cPtr_regularPreferenceBinding) ;
  ioArgument_ioFileInclusionSet.mAttribute_mImplementationFileInclusionSet.addAssign_operation (object->mAttribute_mPreferenceName.mAttribute_string  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 511)) ;
  GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList ;
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  constinArgument_inBoundObjectBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 513)) ;
  GALGAS_typeKind var_kind ;
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  GALGAS_bool joker_20382_0 ; // Joker input parameter
  constinArgument_inContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (object->mAttribute_mPreferenceName, joker_20382_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 519)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_preferencesType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 525)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mPreferenceName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mPreferenceName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 526))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 526)).operator_concat (GALGAS_string ("' is not a preference")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 526))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 526)) ;
  }
  GALGAS_ebType var_observablePropertyType ;
  GALGAS_bool joker_20801_3 ; // Joker input parameter
  GALGAS_lstring joker_20801_2 ; // Joker input parameter
  GALGAS_bool joker_20801_1 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mPreferenceAttributeName, var_observablePropertyType, joker_20801_3, joker_20801_2, joker_20801_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 529)) ;
  GALGAS_bool var_found = GALGAS_bool (false) ;
  GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 536)) ;
  cEnumerator_ebTypeAndFormatterList enumerator_21008 (var_acceptableTypeFormatterList, kEnumeration_up) ;
  bool bool_2 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 537)).isValidAndTrue () ;
  if (enumerator_21008.hasCurrentObject () && bool_2) {
    while (enumerator_21008.hasCurrentObject () && bool_2) {
      var_requiredFormatter = enumerator_21008.current_mRequiredFormatter (HERE) ;
      var_found = GALGAS_bool (kIsEqual, enumerator_21008.current_mType (HERE).mAttribute_mKind.objectCompare (var_observablePropertyType.mAttribute_mKind)) ;
      enumerator_21008.gotoNextObject () ;
      if (enumerator_21008.hasCurrentObject ()) {
        bool_2 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 537)).isValidAndTrue () ;
      }
    }
  }
  const enumGalgasBool test_3 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 541)).boolEnum () ;
  if (kBoolTrue == test_3) {
    GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 542))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 542)).operator_concat (GALGAS_string ("' type, acceptable type(s):")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 542)) ;
    cEnumerator_ebTypeAndFormatterList enumerator_21326 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    bool bool_4 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 543)).isValidAndTrue () ;
    if (enumerator_21326.hasCurrentObject () && bool_4) {
      while (enumerator_21326.hasCurrentObject () && bool_4) {
        var_s.dotAssign_operation (GALGAS_string ("\n"
          "  - '").operator_concat (categoryReader_ebTypeName (enumerator_21326.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 544))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 544)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 544))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 544)) ;
        enumerator_21326.gotoNextObject () ;
        if (enumerator_21326.hasCurrentObject ()) {
          bool_4 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 543)).isValidAndTrue () ;
        }
      }
    }
    GALGAS_location location_5 (object->mAttribute_mPreferenceAttributeName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_5, var_s  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 546)) ;
  }
  GALGAS_bindingOptionListForGeneration var_bindingOptionList = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 549)) ;
  cEnumerator_outletBindingOptionList enumerator_21621 (object->mAttribute_mOutletBindingOptionList, kEnumeration_up) ;
  while (enumerator_21621.hasCurrentObject ()) {
    GALGAS_ebTypeList var_acceptableTypeList ;
    var_outletClassBindingOptionMap.method_searchKey (enumerator_21621.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 552)) ;
    GALGAS_string var_objectiveCDefaultValueAsString ;
    GALGAS_string var_swiftDefaultValueAsString ;
    GALGAS_string joker_21848_0 ; // Joker input parameter
    callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_21621.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_21848_0, var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 553)) ;
    var_bindingOptionList.addAssign_operation (enumerator_21621.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 562)), var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 562)) ;
    enumerator_21621.gotoNextObject () ;
  }
  ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_observablePropertyType, object->mAttribute_mBindingName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 567)), var_requiredFormatter, GALGAS_string ("g_").operator_concat (object->mAttribute_mPreferenceName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 569))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 569)), object->mAttribute_mPreferenceAttributeName.mAttribute_string, GALGAS_bool (true), var_bindingOptionList  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 565))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 565)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_regularPreferenceBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_regularPreferenceBinding.mSlotID,
                                            categoryMethod_regularPreferenceBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_regularPreferenceBinding_analyzeOutletBinding (defineCategoryMethod_regularPreferenceBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Overriding category method '@multiValuedBinding analyzeOutletBinding'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_multiValuedBinding_analyzeOutletBinding (const cPtr_abstractBinding * inObject,
                                                                    const GALGAS_observablePropertyMap constinArgument_inRootEntityObservableAttributeMap,
                                                                    const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                    const GALGAS_outletClassBindingMap constinArgument_inBoundObjectBindingMap,
                                                                    const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                    const GALGAS_actionMap /* constinArgument_inActionMap */,
                                                                    const GALGAS_bool /* constinArgument_inHasTableValueBinding */,
                                                                    const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                    GALGAS_outletBindingListForGeneration & ioArgument_ioOutletBindingListForGeneration,
                                                                    GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                    C_Compiler * inCompiler
                                                                    COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBinding * object = (const cPtr_multiValuedBinding *) inObject ;
  macroValidSharedObject (object, cPtr_multiValuedBinding) ;
  GALGAS_ebTypeAndFormatterList var_acceptableTypeFormatterList ;
  GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap ;
  constinArgument_inBoundObjectBindingMap.method_searchKey (object->mAttribute_mBindingName, var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 589)) ;
  GALGAS_string var_generatedBindingName = object->mAttribute_mBindingName.mAttribute_string ;
  GALGAS_uint var_idx = GALGAS_uint ((uint32_t) 1U) ;
  cEnumerator_multiValuedBindingList enumerator_23358 (object->mAttribute_mMultiValuedBindingList, kEnumeration_up) ;
  while (enumerator_23358.hasCurrentObject ()) {
    GALGAS_string var_observedObjectName ;
    GALGAS_ebType var_observablePropertyType ;
    GALGAS_string var_keyPathPrefix ;
    callCategoryMethod_analyzeModel ((const cPtr_multiValuedBindingBoundModel *) enumerator_23358.current_mBoundModel (HERE).ptr (), constinArgument_inContextAnalysisStruct, constinArgument_inRootEntityObservableAttributeMap, constinArgument_inSelfObservableAttributeMap, constinArgument_inControllerMap, ioArgument_ioFileInclusionSet, var_observedObjectName, var_observablePropertyType, var_keyPathPrefix, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 598)) ;
    GALGAS_bool var_found = GALGAS_bool (false) ;
    GALGAS_formatterEnum var_requiredFormatter = GALGAS_formatterEnum::constructor_noFormatter (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 610)) ;
    cEnumerator_ebTypeAndFormatterList enumerator_23866 (var_acceptableTypeFormatterList, kEnumeration_up) ;
    bool bool_0 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 611)).isValidAndTrue () ;
    if (enumerator_23866.hasCurrentObject () && bool_0) {
      while (enumerator_23866.hasCurrentObject () && bool_0) {
        var_requiredFormatter = enumerator_23866.current_mRequiredFormatter (HERE) ;
        var_found = GALGAS_bool (kIsEqual, enumerator_23866.current_mType (HERE).mAttribute_mKind.objectCompare (var_observablePropertyType.mAttribute_mKind)) ;
        enumerator_23866.gotoNextObject () ;
        if (enumerator_23866.hasCurrentObject ()) {
          bool_0 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 611)).isValidAndTrue () ;
        }
      }
    }
    const enumGalgasBool test_1 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 615)).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_string var_s = GALGAS_string ("the bound property has '").operator_concat (categoryReader_ebTypeName (var_observablePropertyType, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 616))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 616)).operator_concat (GALGAS_string ("' type, acceptable type(s):")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 616)) ;
      cEnumerator_ebTypeAndFormatterList enumerator_24196 (var_acceptableTypeFormatterList, kEnumeration_up) ;
      bool bool_2 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 617)).isValidAndTrue () ;
      if (enumerator_24196.hasCurrentObject () && bool_2) {
        while (enumerator_24196.hasCurrentObject () && bool_2) {
          var_s.dotAssign_operation (GALGAS_string ("\n"
            "  - '").operator_concat (categoryReader_ebTypeName (enumerator_24196.current_mType (HERE), inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 618))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 618)).operator_concat (GALGAS_string ("'")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 618))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 618)) ;
          enumerator_24196.gotoNextObject () ;
          if (enumerator_24196.hasCurrentObject ()) {
            bool_2 = var_found.operator_not (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 617)).isValidAndTrue () ;
          }
        }
      }
      GALGAS_location location_3 (enumerator_23358.current_mBoundModel (HERE).reader_mPropertyName (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 620)).reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_3, var_s  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 620)) ;
    }
    GALGAS_bindingOptionListForGeneration var_bindingOptionList = GALGAS_bindingOptionListForGeneration::constructor_emptyList (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 623)) ;
    const enumGalgasBool test_4 = enumerator_23358.current_mNegate (HERE).boolEnum () ;
    if (kBoolTrue == test_4) {
      var_bindingOptionList.addAssign_operation (GALGAS_string ("NSValueTransformerName"), GALGAS_string ("NSNegateBooleanTransformerName"), GALGAS_string ("NSNegateBooleanTransformerName")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 625)) ;
    }
    cEnumerator_outletBindingOptionList enumerator_24627 (enumerator_23358.current_mOutletBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_24627.hasCurrentObject ()) {
      GALGAS_ebTypeList var_acceptableTypeList ;
      var_outletClassBindingOptionMap.method_searchKey (enumerator_24627.current_mOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 629)) ;
      GALGAS_string var_objectiveCDefaultValueAsString ;
      GALGAS_string var_swiftDefaultValueAsString ;
      GALGAS_string joker_24858_0 ; // Joker input parameter
      callCategoryMethod_analyzeDefaultValueType ((const cPtr_abstractDefaultValue *) enumerator_24627.current_mDefaultValue (HERE).ptr (), var_acceptableTypeList, constinArgument_inContextAnalysisStruct, joker_24858_0, var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString, ioArgument_ioFileInclusionSet, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 630)) ;
      var_bindingOptionList.addAssign_operation (enumerator_24627.current_mOptionName (HERE).reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 638)), var_objectiveCDefaultValueAsString, var_swiftDefaultValueAsString  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 638)) ;
      enumerator_24627.gotoNextObject () ;
    }
    ioArgument_ioOutletBindingListForGeneration.addAssign_operation (GALGAS_regularBindingForGeneration::constructor_new (var_observablePropertyType, var_generatedBindingName, var_requiredFormatter, var_observedObjectName, var_keyPathPrefix.operator_concat (enumerator_23358.current_mBoundModel (HERE).reader_mPropertyName (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 645)).mAttribute_string  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 645)), GALGAS_bool (true), var_bindingOptionList  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 640))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 640)) ;
    var_idx.increment_operation (inCompiler  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 650)) ;
    var_generatedBindingName = object->mAttribute_mBindingName.mAttribute_string.operator_concat (var_idx.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 651))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 651)) ;
    enumerator_23358.gotoNextObject () ;
  }
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBinding_analyzeOutletBinding (void) {
  enterCategoryMethod_analyzeOutletBinding (kTypeDescriptor_GALGAS_multiValuedBinding.mSlotID,
                                            categoryMethod_multiValuedBinding_analyzeOutletBinding) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBinding_analyzeOutletBinding (defineCategoryMethod_multiValuedBinding_analyzeOutletBinding, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//    Abstract category method '@multiValuedBindingBoundModel analyzeModel'    *
//                                                                             *
//-----------------------------------------------------------------------------*

static TC_UniqueArray <categoryMethodSignature_multiValuedBindingBoundModel_analyzeModel> gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_analyzeModel (const int32_t inClassIndex,
                                       categoryMethodSignature_multiValuedBindingBoundModel_analyzeModel inMethod) {
  gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.forceObjectAtIndex (inClassIndex, inMethod, NULL COMMA_HERE) ;
}

//-----------------------------------------------------------------------------*

static void freeCategoryMethod_multiValuedBindingBoundModel_analyzeModel (void) {
  gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.free () ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundModel_analyzeModel (NULL,
                                                                      freeCategoryMethod_multiValuedBindingBoundModel_analyzeModel) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                      const GALGAS_contextAnalysisStruct constin_inContextAnalysisStruct,
                                      const GALGAS_observablePropertyMap constin_inRootEntityObservableAttributeMap,
                                      const GALGAS_observablePropertyMap constin_inSelfObservableAttributeMap,
                                      const GALGAS_controllerMap constin_inControllerMap,
                                      GALGAS_fileInclusionSet & io_ioFileInclusionSet,
                                      GALGAS_string & out_outObservedObjectName,
                                      GALGAS_ebType & out_outObservablePropertyType,
                                      GALGAS_string & out_outKeyPathPrefix,
                                      C_Compiler * inCompiler
                                      COMMA_LOCATION_ARGS) {
//--- Drop output arguments
  out_outObservedObjectName.drop () ;
  out_outObservablePropertyType.drop () ;
  out_outKeyPathPrefix.drop () ;
//--- Find method
  if (NULL != inObject) {
    macroValidSharedObject (inObject, cPtr_multiValuedBindingBoundModel) ;
    const C_galgas_type_descriptor * info = inObject->classDescriptor () ;
    const int32_t classIndex = info->mSlotID ;
    categoryMethodSignature_multiValuedBindingBoundModel_analyzeModel f = NULL ;
    if (classIndex < gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.count ()) {
      f = gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel (classIndex COMMA_HERE) ;
    }
    if (NULL == f) {
       const C_galgas_type_descriptor * p = info->mSuperclassDescriptor ;
       while ((NULL == f) && (NULL != p)) {
         if (p->mSlotID < gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.count ()) {
           f = gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel (p->mSlotID COMMA_HERE) ;
         }
         p = p->mSuperclassDescriptor ;
       }
       gCategoryMethodTable_multiValuedBindingBoundModel_analyzeModel.forceObjectAtIndex (classIndex, f, NULL COMMA_HERE) ;
    }
    if (NULL == f) {
      fatalError ("FATAL CATEGORY METHOD CALL ERROR", __FILE__, __LINE__) ;
    }else{
      f (inObject, constin_inContextAnalysisStruct, constin_inRootEntityObservableAttributeMap, constin_inSelfObservableAttributeMap, constin_inControllerMap, io_ioFileInclusionSet, out_outObservedObjectName, out_outObservablePropertyType, out_outKeyPathPrefix, inCompiler COMMA_THERE) ;
    }
  }
}

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@multiValuedBindingBoundToRoot analyzeModel'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToRoot_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                       const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                       const GALGAS_observablePropertyMap constinArgument_inRootEntityObservableAttributeMap,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                       const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                       GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                       GALGAS_string & outArgument_outObservedObjectName,
                                                                       GALGAS_ebType & outArgument_outObservablePropertyType,
                                                                       GALGAS_string & outArgument_outKeyPathPrefix,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToRoot * object = (const cPtr_multiValuedBindingBoundToRoot *) inObject ;
  macroValidSharedObject (object, cPtr_multiValuedBindingBoundToRoot) ;
  GALGAS_bool joker_26640_3 ; // Joker input parameter
  GALGAS_lstring joker_26640_2 ; // Joker input parameter
  GALGAS_bool joker_26640_1 ; // Joker input parameter
  constinArgument_inRootEntityObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_26640_3, joker_26640_2, joker_26640_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 680)) ;
  outArgument_outObservedObjectName = GALGAS_string ("mRootObject") ;
  outArgument_outKeyPathPrefix = GALGAS_string::makeEmptyString () ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToRoot_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToRoot.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToRoot_analyzeModel) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToRoot_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToRoot_analyzeModel, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@multiValuedBindingBoundToSelf analyzeModel'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToSelf_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                       const GALGAS_contextAnalysisStruct /* constinArgument_inContextAnalysisStruct */,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                       const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                       const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                       GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                       GALGAS_string & outArgument_outObservedObjectName,
                                                                       GALGAS_ebType & outArgument_outObservablePropertyType,
                                                                       GALGAS_string & outArgument_outKeyPathPrefix,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToSelf * object = (const cPtr_multiValuedBindingBoundToSelf *) inObject ;
  macroValidSharedObject (object, cPtr_multiValuedBindingBoundToSelf) ;
  GALGAS_bool joker_27343_3 ; // Joker input parameter
  GALGAS_lstring joker_27343_2 ; // Joker input parameter
  GALGAS_bool joker_27343_1 ; // Joker input parameter
  constinArgument_inSelfObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_27343_3, joker_27343_2, joker_27343_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 701)) ;
  outArgument_outObservedObjectName = GALGAS_string ("self") ;
  outArgument_outKeyPathPrefix = GALGAS_string::makeEmptyString () ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToSelf_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToSelf.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToSelf_analyzeModel) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToSelf_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToSelf_analyzeModel, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//  Overriding category method '@multiValuedBindingBoundToPref analyzeModel'   *
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToPref_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                       const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                       const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                       const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                       GALGAS_fileInclusionSet & ioArgument_ioFileInclusionSet,
                                                                       GALGAS_string & outArgument_outObservedObjectName,
                                                                       GALGAS_ebType & outArgument_outObservablePropertyType,
                                                                       GALGAS_string & outArgument_outKeyPathPrefix,
                                                                       C_Compiler * inCompiler
                                                                       COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToPref * object = (const cPtr_multiValuedBindingBoundToPref *) inObject ;
  macroValidSharedObject (object, cPtr_multiValuedBindingBoundToPref) ;
  GALGAS_typeKind var_kind ;
  GALGAS_observablePropertyMap var_preferenceObservableAttributeMap ;
  GALGAS_bool joker_28025_0 ; // Joker input parameter
  constinArgument_inContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (object->mAttribute_mPreferenceName, joker_28025_0, var_kind, var_preferenceObservableAttributeMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 722)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_preferencesType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 728)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mPreferenceName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mPreferenceName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 729))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 729)).operator_concat (GALGAS_string ("' is not a preference")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 729))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 729)) ;
  }
  GALGAS_bool joker_28350_3 ; // Joker input parameter
  GALGAS_lstring joker_28350_2 ; // Joker input parameter
  GALGAS_bool joker_28350_1 ; // Joker input parameter
  var_preferenceObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_28350_3, joker_28350_2, joker_28350_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 731)) ;
  outArgument_outObservedObjectName = GALGAS_string ("g_").operator_concat (object->mAttribute_mPreferenceName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 736))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 736)) ;
  outArgument_outKeyPathPrefix = GALGAS_string::makeEmptyString () ;
  ioArgument_ioFileInclusionSet.mAttribute_mImplementationFileInclusionSet.addAssign_operation (object->mAttribute_mPreferenceName.mAttribute_string  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 738)) ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToPref_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToPref.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToPref_analyzeModel) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToPref_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToPref_analyzeModel, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@multiValuedBindingBoundToController analyzeModel'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToController_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                             const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                             const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                             const GALGAS_observablePropertyMap constinArgument_inSelfObservableAttributeMap,
                                                                             const GALGAS_controllerMap /* constinArgument_inControllerMap */,
                                                                             GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                             GALGAS_string & outArgument_outObservedObjectName,
                                                                             GALGAS_ebType & outArgument_outObservablePropertyType,
                                                                             GALGAS_string & outArgument_outKeyPathPrefix,
                                                                             C_Compiler * inCompiler
                                                                             COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToController * object = (const cPtr_multiValuedBindingBoundToController *) inObject ;
  macroValidSharedObject (object, cPtr_multiValuedBindingBoundToController) ;
  GALGAS_ebType var_type ;
  GALGAS_bool joker_29137_3 ; // Joker input parameter
  GALGAS_lstring joker_29137_2 ; // Joker input parameter
  GALGAS_bool joker_29137_1 ; // Joker input parameter
  constinArgument_inSelfObservableAttributeMap.method_searchKey (object->mAttribute_mControllerName, var_type, joker_29137_3, joker_29137_2, joker_29137_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 753)) ;
  const enumGalgasBool test_0 = GALGAS_bool (kIsNotEqual, var_type.mAttribute_mKind.objectCompare (GALGAS_typeKind::constructor_controllerClassType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 758)))).boolEnum () ;
  if (kBoolTrue == test_0) {
    GALGAS_location location_1 (object->mAttribute_mControllerName.reader_location (HERE)) ; // Implicit use of 'location' reader
    inCompiler->emitSemanticError (location_1, GALGAS_string ("'").operator_concat (object->mAttribute_mControllerName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 759))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 759)).operator_concat (GALGAS_string ("' is not a controller")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 759))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 759)) ;
  }
  GALGAS_observablePropertyMap var_controllerObservableAttributeMap ;
  GALGAS_controllerKind joker_29375_4 ; // Joker input parameter
  GALGAS_generationKind joker_29375_3 ; // Joker input parameter
  GALGAS_outletClassBindingMap joker_29375_2 ; // Joker input parameter
  GALGAS_actionMap joker_29375_1 ; // Joker input parameter
  GALGAS_outletClassBindingOptionMap joker_29444_0 ; // Joker input parameter
  constinArgument_inContextAnalysisStruct.mAttribute_mControllerClassMap.method_searchKey (var_type.mAttribute_mTypeName, joker_29375_4, joker_29375_3, joker_29375_2, joker_29375_1, var_controllerObservableAttributeMap, joker_29444_0, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 761)) ;
  GALGAS_bool joker_29553_3 ; // Joker input parameter
  GALGAS_lstring joker_29553_2 ; // Joker input parameter
  GALGAS_bool joker_29553_1 ; // Joker input parameter
  var_controllerObservableAttributeMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_29553_3, joker_29553_2, joker_29553_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 767)) ;
  outArgument_outObservedObjectName = object->mAttribute_mControllerName.mAttribute_string ;
  outArgument_outKeyPathPrefix = GALGAS_string::makeEmptyString () ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToController_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToController.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToController_analyzeModel) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToController_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToController_analyzeModel, NULL) ;

//-----------------------------------------------------------------------------*
//                                                                             *
//Overriding category method '@multiValuedBindingBoundToControllerSelection analyzeModel'*
//                                                                             *
//-----------------------------------------------------------------------------*

static void categoryMethod_multiValuedBindingBoundToControllerSelection_analyzeModel (const cPtr_multiValuedBindingBoundModel * inObject,
                                                                                      const GALGAS_contextAnalysisStruct constinArgument_inContextAnalysisStruct,
                                                                                      const GALGAS_observablePropertyMap /* constinArgument_inRootEntityObservableAttributeMap */,
                                                                                      const GALGAS_observablePropertyMap /* constinArgument_inSelfObservableAttributeMap */,
                                                                                      const GALGAS_controllerMap constinArgument_inControllerMap,
                                                                                      GALGAS_fileInclusionSet & /* ioArgument_ioFileInclusionSet */,
                                                                                      GALGAS_string & outArgument_outObservedObjectName,
                                                                                      GALGAS_ebType & outArgument_outObservablePropertyType,
                                                                                      GALGAS_string & outArgument_outKeyPathPrefix,
                                                                                      C_Compiler * inCompiler
                                                                                      COMMA_UNUSED_LOCATION_ARGS) {
  const cPtr_multiValuedBindingBoundToControllerSelection * object = (const cPtr_multiValuedBindingBoundToControllerSelection *) inObject ;
  macroValidSharedObject (object, cPtr_multiValuedBindingBoundToControllerSelection) ;
  GALGAS_lstring var_controlledClassOrEntityName ;
  GALGAS_bool var_isEntity ;
  GALGAS_string joker_30232_0 ; // Joker input parameter
  GALGAS_outletBindingListForGeneration joker_30301_3 ; // Joker input parameter
  GALGAS_actionMap joker_30301_2 ; // Joker input parameter
  GALGAS_observablePropertyMap joker_30301_1 ; // Joker input parameter
  constinArgument_inControllerMap.method_searchKey (object->mAttribute_mControllerName, joker_30232_0, var_controlledClassOrEntityName, var_isEntity, joker_30301_3, joker_30301_2, joker_30301_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 788)) ;
  GALGAS_typeKind var_kind ;
  GALGAS_observablePropertyMap var_observablePropertyMap ;
  GALGAS_bool joker_30486_0 ; // Joker input parameter
  constinArgument_inContextAnalysisStruct.mAttribute_mObservablePropertyMapMap.method_searchKey (var_controlledClassOrEntityName, joker_30486_0, var_kind, var_observablePropertyMap, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 796)) ;
  const enumGalgasBool test_0 = var_isEntity.boolEnum () ;
  if (kBoolTrue == test_0) {
    const enumGalgasBool test_1 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_entityType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 803)))).boolEnum () ;
    if (kBoolTrue == test_1) {
      GALGAS_location location_2 (var_controlledClassOrEntityName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_2, GALGAS_string ("'").operator_concat (var_controlledClassOrEntityName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 804))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 804)).operator_concat (GALGAS_string ("' is not an entity")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 804))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 804)) ;
    }
  }else if (kBoolFalse == test_0) {
    const enumGalgasBool test_3 = GALGAS_bool (kIsNotEqual, var_kind.objectCompare (GALGAS_typeKind::constructor_classType (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 806)))).boolEnum () ;
    if (kBoolTrue == test_3) {
      GALGAS_location location_4 (var_controlledClassOrEntityName.reader_location (HERE)) ; // Implicit use of 'location' reader
      inCompiler->emitSemanticError (location_4, GALGAS_string ("'").operator_concat (var_controlledClassOrEntityName.reader_string (SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 807))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 807)).operator_concat (GALGAS_string ("' is not a class")  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 807))  COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 807)) ;
    }
  }
  GALGAS_bool joker_30986_3 ; // Joker input parameter
  GALGAS_lstring joker_30986_2 ; // Joker input parameter
  GALGAS_bool joker_30986_1 ; // Joker input parameter
  var_observablePropertyMap.method_searchKey (object->mAttribute_mPropertyName, outArgument_outObservablePropertyType, joker_30986_3, joker_30986_2, joker_30986_1, inCompiler COMMA_SOURCE_FILE ("bindingSemanticAnalysis.gSemantics", 810)) ;
  outArgument_outObservedObjectName = object->mAttribute_mControllerName.mAttribute_string ;
  outArgument_outKeyPathPrefix = GALGAS_string ("selection.") ;
}
//-----------------------------------------------------------------------------*

static void defineCategoryMethod_multiValuedBindingBoundToControllerSelection_analyzeModel (void) {
  enterCategoryMethod_analyzeModel (kTypeDescriptor_GALGAS_multiValuedBindingBoundToControllerSelection.mSlotID,
                                    categoryMethod_multiValuedBindingBoundToControllerSelection_analyzeModel) ;
}

//-----------------------------------------------------------------------------*

C_PrologueEpilogue gMethod_multiValuedBindingBoundToControllerSelection_analyzeModel (defineCategoryMethod_multiValuedBindingBoundToControllerSelection_analyzeModel, NULL) ;

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


