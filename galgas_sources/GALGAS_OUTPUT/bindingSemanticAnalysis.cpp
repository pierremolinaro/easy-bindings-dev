//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'bindingSemanticAnalysis.cpp'                     *
//                        Generated by version 2.5.0                         *
//                      july 18th, 2013, at 12h43'53"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#include "bindingSemanticAnalysis.h"
#include "galgas2/C_Compiler.h"
#include "galgas2/C_galgas_io.h"
#include "galgas2/C_galgas_CLI_Options.h"
#include "utilities/C_PrologueEpilogue.h"

//---------------------------------------------------------------------------*


//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "bindingSemanticAnalysis.gSemantics", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//---------------------------------------------------------------------------*
//                                                                           *
//                   Routine 'buildBindingCapabilitiesMap'                   *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_buildBindingCapabilitiesMap (const GALGAS_outletClassBindingList constinArgument_inBindingDeclarationList,
                                          GALGAS_unifiedTypeMap & ioArgument_ioUnifiedTypeMap,
                                          GALGAS_outletClassBindingMap & outArgument_outBindingMap,
                                          C_Compiler * inCompiler
                                          COMMA_UNUSED_LOCATION_ARGS) {
  outArgument_outBindingMap.drop () ; // Release 'out' argument
  outArgument_outBindingMap = GALGAS_outletClassBindingMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (11)) ;
  cEnumerator_outletClassBindingList enumerator_416 (constinArgument_inBindingDeclarationList, kEnumeration_up) ;
  while (enumerator_416.hasCurrentObject ()) {
    GALGAS_outletClassBindingOptionMap var_outletClassBindingOptionMap = GALGAS_outletClassBindingOptionMap::constructor_emptyMap (SOURCE_FILE_AT_LINE (13)) ;
    cEnumerator_bindingOptionList enumerator_524 (enumerator_416.current_mBindingOptionList (HERE), kEnumeration_up) ;
    while (enumerator_524.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxyList var_acceptableTypeList = GALGAS_unifiedTypeProxyList::constructor_emptyList (SOURCE_FILE_AT_LINE (15)) ;
      cEnumerator_lstringlist enumerator_622 (enumerator_524.current_mAcceptableTypeList (HERE), kEnumeration_up) ;
      while (enumerator_622.hasCurrentObject ()) {
        GALGAS_unifiedTypeProxy var_type ;
        {
        GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_622.current_mValue (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (17)) ;
        }
        var_acceptableTypeList.addAssign_operation (var_type COMMA_SOURCE_FILE_AT_LINE (22)) ;
        enumerator_622.gotoNextObject () ;
      }
      {
      var_outletClassBindingOptionMap.modifier_insertKey (enumerator_524.current_mBindingOptionName (HERE), var_acceptableTypeList, inCompiler COMMA_SOURCE_FILE_AT_LINE (24)) ;
      }
      enumerator_524.gotoNextObject () ;
    }
    GALGAS_easyBindingTypeAndFormatterList var_acceptableTypeFormatterList = GALGAS_easyBindingTypeAndFormatterList::constructor_emptyList (SOURCE_FILE_AT_LINE (26)) ;
    cEnumerator_attributeASTTypeAndFormatterList enumerator_1041 (enumerator_416.current_mAcceptableTypeFormatterList (HERE), kEnumeration_up) ;
    while (enumerator_1041.hasCurrentObject ()) {
      GALGAS_unifiedTypeProxy var_type ;
      {
      GALGAS_unifiedTypeProxy::class_method_makeProxy (ioArgument_ioUnifiedTypeMap, enumerator_1041.current_mTypeName (HERE), var_type COMMA_SOURCE_FILE_AT_LINE (28)) ;
      }
      var_acceptableTypeFormatterList.addAssign_operation (var_type, enumerator_1041.current_mRequiredFormatter (HERE) COMMA_SOURCE_FILE_AT_LINE (33)) ;
      enumerator_1041.gotoNextObject () ;
    }
    {
    outArgument_outBindingMap.modifier_insertKey (enumerator_416.current_mBindingName (HERE), var_acceptableTypeFormatterList, var_outletClassBindingOptionMap, inCompiler COMMA_SOURCE_FILE_AT_LINE (35)) ;
    }
    enumerator_416.gotoNextObject () ;
  }
}


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


