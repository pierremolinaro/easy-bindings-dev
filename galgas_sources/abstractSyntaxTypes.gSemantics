semantics abstractSyntaxTypes :

#----------------------------------------------------------------------------*

import "easyBindingType.gSemantics" ;

#----------------------------------------------------------------------------*

list @attributeList {
  @easyBindingType mType ;
  @lstring mAttributeName ;
  @easyBindingTypeList mDefaultValueCorrespondingAcceptableTypes ;
  @string mDefaultValueObjectiveCObject ;
  @string mDirectDefaultValue ;
}

#----------------------------------------------------------------------------*

enum @deleteRuleEnum {
  nullifyDeleteRule, cascadeDeleteRule, denyDeleteRule
}{
}

#----------------------------------------------------------------------------*

list @relationshipList {
  @bool mIsToMany ;
  @lstring mDestinationEntityName ;
  @lstring mRelationshipName ;
  @lstring mInverseRelationshipName ;
  @deleteRuleEnum mDeleteRule ;
}

#----------------------------------------------------------------------------*

abstract class @abstractTransientDependency {
}

#----------------------------------------------------------------------------*

class @transientLocalDependency extends @abstractTransientDependency {
  @lstring mMasterName ;
}

#----------------------------------------------------------------------------*

class @transientRootDependency extends @abstractTransientDependency {
  @lstring mMasterName ;
  @bool mNamesCountOption ;
}

#----------------------------------------------------------------------------*

class @transientControllerDependency extends @abstractTransientDependency {
  @lstring mControllerName ;
  @lstring mMasterName ;
}

#----------------------------------------------------------------------------*

class @transientPreferenceDependency extends @abstractTransientDependency {
  @lstring mPreferencesName ;
  @lstring mMasterName ;
}

#----------------------------------------------------------------------------*

list @dependanceList {
  @abstractTransientDependency mDependency ;
}

#----------------------------------------------------------------------------*

list @transientList {
  @easyBindingType mType ;
  @lstring mTransientName ;
  @dependanceList mDependencyList ;
}

#----------------------------------------------------------------------------*

list @classArrayList {
  @lstring mClassName ;
  @lstring mArrayName ;
}

#----------------------------------------------------------------------------*

list @classList {
  @lstring mClassName ;
  @lstring mSuperClassName ;
  @attributeList mAttributeList ;
  @transientList mTransientList ;
}

#----------------------------------------------------------------------------*

list @entityList {
  @lstring mEntityName ;
  @lstring mSuperEntityName ;
  @lstring mImplementationClassName ;
  @attributeList mAttributeList ;
  @transientList mTransientList ;
  @relationshipList mRelationshipList ;
}

#----------------------------------------------------------------------------*

list @outletBindingOptionList {
  @lstring mOptionName ;
  @easyBindingTypeList mOptionValuePossibleTypes ;
  @string mOptionValueObjectiveCObject ;
}

#----------------------------------------------------------------------------*

abstract class @abstractBinding {
}

#----------------------------------------------------------------------------*

class @regularRootBinding, @regularSelfBinding extends @abstractBinding {
  @lstring mBindingName ;
  @lstring mObservableAttributeName ;
  @outletBindingOptionList mOutletBindingOptionList ;
  @bool mNamesCountOption ;
}

#----------------------------------------------------------------------------*

class @regularControllerBinding extends @abstractBinding {
  @lstring mBindingName ;
  @lstring mControllerName ;
  @lstring mControllerAttributeName ;
  @outletBindingOptionList mOutletBindingOptionList ;
  @bool mNamesCountOption ;
}

#----------------------------------------------------------------------------*

class @regularPreferenceBinding extends @abstractBinding {
  @lstring mBindingName ;
  @lstring mPreferenceName ;
  @lstring mPreferenceAttributeName ;
  @outletBindingOptionList mOutletBindingOptionList ;
}

#----------------------------------------------------------------------------*

abstract class @multiValuedBindingBoundModel {
  @lstring mPropertyName ;
}

#----------------------------------------------------------------------------*

class @multiValuedBindingBoundToRoot,
      @multiValuedBindingBoundToSelf extends @multiValuedBindingBoundModel {
}

#----------------------------------------------------------------------------*

class @multiValuedBindingBoundToPref extends @multiValuedBindingBoundModel {
  @lstring mPreferenceName ;
}

#----------------------------------------------------------------------------*

class @multiValuedBindingBoundToController extends @multiValuedBindingBoundModel {
  @lstring mControllerName ;
}

#----------------------------------------------------------------------------*

list @multiValuedBindingList {
  @bool mNegate ;
  @multiValuedBindingBoundModel mBoundModel ;
  @outletBindingOptionList mOutletBindingOptionList ;
}

#----------------------------------------------------------------------------*

class @multiValuedBinding extends @abstractBinding {
  @lstring mBindingName ;
  @multiValuedBindingList mMultiValuedBindingList ;
}

#----------------------------------------------------------------------------*

class @runBinding extends @abstractBinding {
  @lstring mTargetName ;
  @lstring mActionName ;
}

#----------------------------------------------------------------------------*

list @tableValueColumnBinding {
  @lstring mColumnName ;
  @lstring mCellTypeName ;
  @lstring mBoundPropertyName ;
}

#----------------------------------------------------------------------------*

class @tableValueBinding extends @abstractBinding {
  @lstring mControllerName ;
  @tableValueColumnBinding mTableValueColumnBinding ;
}

#----------------------------------------------------------------------------*

list @bindingList {
  @abstractBinding mBinding ;
}

#----------------------------------------------------------------------------*

list @outletDeclarationList {
  @lstring mOutletType ;
  @lstring mOutletName ;
  @bindingList mOutletBindingList ;
}

#----------------------------------------------------------------------------*

list @preferencesDeclarationList {
  @lstring mPreferencesName ;
  @outletDeclarationList mOutletDeclarationList ;
  @attributeList mAttributeList ;
  @transientList mTransientList ;
  @lstringlist mActionDeclarationList ;
  @controllerList mControllerList ;
  @classArrayList mClassArrayList ;
}

#----------------------------------------------------------------------------*

list @controllerList {
  @lstring mControllerClassName ;
  @lstring mControllerName ;
  @lstring mControlledClassOrEntityName ;
  @bindingList mControllerBindingList ;
}

#----------------------------------------------------------------------------*

list @documentDeclarationList {
  @lstring mDocumentName ;
  @lstring mRootEntityName ;
  @outletDeclarationList mOutletDeclarationList ;
  @controllerList mControllerList ;
  @lstringlist mActionDeclarationList ;
  @transientList mTransientList ;
}

#----------------------------------------------------------------------------*

enum @formatterEnum {
  noFormatter, numberFormatter, dateFormatter
}{
}

#----------------------------------------------------------------------------*

list @easyBindingTypeAndFormatterList {
  @easyBindingType mType ;
  @formatterEnum mRequiredFormatter ;
}

#----------------------------------------------------------------------------*

list @easyBindingTypeList {
  @easyBindingType mType ;
}

#----------------------------------------------------------------------------*

list @outletClassBindingList {
  @lstring mBindingName ;
  @easyBindingTypeAndFormatterList mAcceptableTypeFormatterList ;
  @bindingOptionList mBindingOptionList ;
}

#----------------------------------------------------------------------------*

list @bindingOptionList {
  @lstring mBindingOptionName ;
  @easyBindingTypeList mAcceptableTypeList ;
}

#----------------------------------------------------------------------------*

enum @generationKind {
  fullGeneration, generateImport, noGeneration
}{
}

#----------------------------------------------------------------------------*

list @cursorList {
  @lstring mCursorName ;
  @ldouble mHotSpotX ;
  @ldouble mHotSpotY ;
}

#----------------------------------------------------------------------------*

list @outletClassList {
  @lstring mOutletClassName ;
  @lstring mSuperClassName ;
  @lstringlist mAdoptedProtocolList ;
  @generationKind mGeneration ;
  @outletClassBindingList mOutletClassBindingList ;
  @bool mHasTableValueBinding ;
}

#----------------------------------------------------------------------------*

list @controllerObservablePropertyList {
  @easyBindingType mType ;
  @lstring mPropertyName ;
}

#----------------------------------------------------------------------------*

list @protocolList {
  @lstring mProtocolName ;
}

#----------------------------------------------------------------------------*

list @controllerClassList {
  @lstring mControllerClassName ;
  @generationKind mGenerationKind ;
  @outletClassBindingList mBindingList ;
  @lstringlist mActionDeclarationList ;
  @controllerObservablePropertyList mControllerObservablePropertyList ;
}

#----------------------------------------------------------------------------*

end semantics ;
