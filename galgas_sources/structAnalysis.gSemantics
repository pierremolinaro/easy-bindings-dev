semantics structAnalysis :
  import "decoratedTypes.gSemantics" ;

#----------------------------------------------------------------------------*

override method @structDeclaration typeInventory
  ?!@unifiedTypeMap ioUnifiedTypeMap
:
end method ;

#----------------------------------------------------------------------------*

override method @structDeclaration EXTypeInventory
  ?!@EXunifiedTypeMap ioUnifiedTypeMap
:
  foreach mFieldList do
    [!?ioUnifiedTypeMap enterEdge
      !mStructTypeName
      !mFieldTypeName
    ] ;
  end foreach ;
  [!?ioUnifiedTypeMap insertKey
    !mStructTypeName
    ![@EXebType new !mStructTypeName ![@EXTypeKind structType]]
    !selfcopy
    !@EXentityRelationshipMap {}
  ] ;
end method ;

#----------------------------------------------------------------------------*

override method @structDeclaration buildObservablePropertyMap
  ??@EXunifiedTypeMap unused inUnifiedTypeMap
  ?!@EXobservablePropertyMapMap unused ioObservablePropertyMapMap
  ?!@EXtransientDependencyGraph unused ioTransientDependencyGraph
:
end method ;

#----------------------------------------------------------------------------*

override method @structDeclaration semanticAnalysis
  ??@EXunifiedTypeMap inUnifiedTypeMap
  ?!@EXcontextAnalysisStruct ioContextAnalysisStruct
  ?!@generationList ioGenerationList
:
  @structFieldList structFieldList [default] ;
  @stringset headerFileInclusionSet [emptySet] ;
  foreach mFieldList do
    [inUnifiedTypeMap searchKey !mFieldTypeName ?@EXebType type ?2*] ;
    if not [type isPODtype] then
      error mFieldName : "only a POD type is allowed in a structure" ;
    end if ;
    if [type mKind] == [@EXTypeKind enumType] then
      headerFileInclusionSet += ![type mTypeName]->string ;
    elsif [type mKind] == [@EXTypeKind structType] then
      headerFileInclusionSet += ![type mTypeName]->string ;
    end if ;
    structFieldList += !type !mFieldName->string ;
  end foreach ;
#---
  [!?ioContextAnalysisStruct->mStructTypeMap insertKey
    !mStructTypeName
    !structFieldList
  ] ;
#---
  ioGenerationList += ![@structTypeGeneration new
    !mStructTypeName->string
    !structFieldList
    !headerFileInclusionSet
  ] ;
end method ;

#----------------------------------------------------------------------------*

end semantics ;
