semantics entityGeneration :
  import "easyBindings_options.gOption" ;
  import "transientGeneration.gSemantics" ;

#-----------------------------------------------------------------------------*
#   hasCustomExplorerFunction                                                 *
#-----------------------------------------------------------------------------*

reader @easyBindingType hasCustomExplorerFunction
  -> @bool outResult
:
  outResult := false ;
end reader ;

#-----------------------------------------------------------------------------*

override reader @boolType hasCustomExplorerFunction
  -> @bool outResult
:
  outResult := true ;
end reader ;

#-----------------------------------------------------------------------------*

override reader @enumType hasCustomExplorerFunction
  -> @bool outResult
:
  outResult := true ;
end reader ;

#-----------------------------------------------------------------------------*

override reader @structType hasCustomExplorerFunction
  -> @bool outResult
:
  outResult := true ;
end reader ;

#----------------------------------------------------------------------------*

local filewrapper entityGenerationTemplate in "../generation-templates/entity-generation" {
}{
}{
  template entityDeclaration1 "entity-1.h.gTemplate"
    ?@string CLASS_NAME
    ?@string SUPER_CLASS_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_IMPLEMENTATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@2stringlist TO_MANY_RELATIONSHIPS
    ?@stringset HEADER_INCLUSION_SET
    ?@stringset HEADER_PREDECLARATION_SET
  ;
  
  template entityDeclaration2 "entity-2.h.gTemplate"
    ?@string CLASS_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_IMPLEMENTATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@2stringlist TO_MANY_RELATIONSHIPS
    ?@2stringlist TO_ONE_RELATIONSHIPS
    ?@signListForGeneration SIGN_LIST
  ;
  
  template entityImplementation "entity.m.gTemplate"
    ?@string ENTITY_NAME
    ?@attributeListForImplementation ATTRIBUTE_LIST_FOR_IMPLEMENTATION
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
    ?@attributeListForImplementation ALL_PROPERTIES_FOR_INIT_METHOD_HEADER
    ?@attributeListForImplementation INHERITED_PROPERTIES_FOR_SUPER_INIT_CALL
    ?@stringset INCLUSION_SET
    ?@2stringlist TO_MANY_RELATIONSHIPS
    ?@2stringlist TRANSIENT_DEPENDENCY_ARCS
    ?@stringset PROPERTY_AND_RELATIONSHIP_SET
    ?@2stringlist TO_ONE_RELATIONSHIPS
    ?@relationshipList CURRENT_RELATIONSHIP_LIST
    ?@signListForGeneration SIGN_LIST
    ?@stringset SIGN_SET
  ;
  
  template entityTransientComputationsHeaderFile "entity-transient-computations.h.gTemplate"
    ?@string CLASS_NAME
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
  ;
  
  template entityTransientComputationImplementationFile "entity-transient-computation-function.m.gTemplate"
    ?@string CLASS_NAME
    ?@easyBindingType RESULT_TYPE
    ?@string TRANSIENT_NAME
    ?@directDependancyList DIRECT_DEPENDANCY_LIST
  ;
}

#----------------------------------------------------------------------------*

listmap @subEntitiesMap (@stringlist) ;

#----------------------------------------------------------------------------*

reader @deleteRuleEnum name -> @string outResult :
  switch selfcopy
  when nullifyDeleteRule : outResult := "NSNullifyDeleteRule" ;
  when cascadeDeleteRule : outResult := "NSCascadeDeleteRule" ;
  when denyDeleteRule : outResult := "NSDenyDeleteRule" ;
  end switch ;
end reader ;

#----------------------------------------------------------------------------*

routine generateEntityCode
  ??@2stringlist inTransientDependencyArcList
  ??@entityListForGeneration inEntityListForGeneration
  ??@string inOutputDirectory
:
  if [@uint errorCount] == 0 then
    @subEntitiesMap subEntitiesMap [emptyMap] ;
    foreach inEntityListForGeneration do
      if mSuperEntityName != "" then
        subEntitiesMap += !mSuperEntityName !mEntityName  ;
      end if ;
    #--- Header
      @string s := [filewrapper entityGenerationTemplate.entityDeclaration1
        !mEntityName
        !mSuperEntityName
        !mAttributeListForImplementation
        !mTransientListForImplementation
        !mToManyRelationshipList
        !mFileInclusionSet->mHeaderFileInclusionSet
        !mFileInclusionSet->mHeaderPredeclarationSet
      ] ;
      @string s2 := [filewrapper entityGenerationTemplate.entityDeclaration2
        !mEntityName
        !mAttributeListForImplementation
        !mTransientListForImplementation
        !mToManyRelationshipList
        !mToOneRelationshipList
        !mSignList
      ] ;
      [@string generateFileWithPattern
        !inOutputDirectory
        !mEntityName . ".h"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n}\n\n" # Defaut user zone2
        !s2
      ] ;
    #---
      @stringset propertyAndTomanyRelationshipSet [emptySet] ;
      foreach mAttributeListForImplementation do
        propertyAndTomanyRelationshipSet += !mAttributeName ;
      end foreach ;
      foreach mToManyRelationshipList do
        propertyAndTomanyRelationshipSet += !mValue0 ;
      end foreach ;
    #--- Implementation
      @stringset signSet [emptySet] ;
      foreach mSignList do
        signSet += !mPropertyName ;
      end foreach ;
      s := [filewrapper entityGenerationTemplate.entityImplementation
        !mEntityName
        !mAttributeListForImplementation
        !mTransientListForImplementation
        !mAttributeListForInitMethodHeader
        !mInheritedAttributeListForImplementation
        !mFileInclusionSet->mImplementationFileInclusionSet
        !mToManyRelationshipList
        !inTransientDependencyArcList
        !propertyAndTomanyRelationshipSet
        !mToOneRelationshipList
        !mCurrentRelationshipList
        !mSignList
        !signSet
      ] ;
      [@string generateFileWithPattern
        !inOutputDirectory
        !mEntityName . ".m"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n" # Defaut user zone2
        !"@end\n"
      ] ;
    #--- Transient computation function header file
      if [mTransientListForImplementation length] > 0 then
        s := [filewrapper entityGenerationTemplate.entityTransientComputationsHeaderFile
          !mEntityName
          !mTransientListForImplementation
        ] ;
        [@string generateFileWithPattern
          !inOutputDirectory
          !mEntityName . "-transient-computations.h"
          !"//"
          !"\n\n" # Defaut user zone1
          !s
          !"\n\n" # Defaut user zone2
          !"\n"
        ] ;
      end if ;
    #--- Transient computation function implementation files
      foreach mTransientListForImplementation do
          s := [filewrapper entityGenerationTemplate.entityTransientComputationImplementationFile
            !mEntityName
            !mTransientType
            !mTransientName
            !mDependencyList
          ] ;
          [@string generateFileWithPattern
            !inOutputDirectory
            !mEntityName . "_" . mTransientName . ".m"
            !"//"
            !"\n\n" # Defaut user zone1
            !s
            !"  return what ? ; // ADD YOUR CODE HERE\n" # Defaut user zone2
            !"}\n\n" . "//----------------------------------------------------------------------------*\n"
          ] ;
      end foreach ;
    end foreach ;
  end if ;
end routine ;

#----------------------------------------------------------------------------*


end semantics ;
