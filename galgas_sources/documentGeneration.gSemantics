semantics documentGeneration :
  import "easyBindings_options.gOption" ;
  import "semanticAnalysis.gSemantics" ;

#----------------------------------------------------------------------------*

local filewrapper documentGenerationTemplate in "../generation-templates/document-generation" {
}{
}{
  template documentDeclaration "document.h.gTemplate"
    ?@string DOCUMENT_NAME
    ?@string ROOT_ENTITY_NAME
    ?@string ROOT_ENTITY_CLASS_NAME
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@controllerMap CONTROLLER_MAP
    ?@lstringlist ACTION_LIST
  ;
  
  template documentImplementation "document.m.gTemplate"
    ?@string DOCUMENT_NAME
    ?@string ROOT_ENTITY_NAME
    ?@string ROOT_ENTITY_CLASS_NAME
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@controllerMap CONTROLLER_MAP
    ?@lstringlist ACTION_LIST
  ;
}

#----------------------------------------------------------------------------*

routine generateDocumentCode
  ??@documentMap inDocumentMap
  ??@string inOutputDirectory
:
  if [@uint errorCount] == 0 then
    foreach inDocumentMap do
    #--- Header
      @string s := [filewrapper documentGenerationTemplate.documentDeclaration
        ![lkey string]
        !mRootEntityName
        !mRootEntityImplementationClassName
        !mOutletDeclarationList
        !mControllerMap
        !mActionList
      ] ;
      [@string generateFile
        !inOutputDirectory
        ![lkey string] . ".h"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n" # Defaut user zone2
        !"\n"
      ] ;
    #--- Implementation
      s := [filewrapper documentGenerationTemplate.documentImplementation
        ![lkey string]
        !mRootEntityName
        !mRootEntityImplementationClassName
        !mOutletDeclarationList
        !mControllerMap
        !mActionList
      ] ;
      [@string generateFile
        !inOutputDirectory
        ![lkey string] . ".m"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n" # Defaut user zone2
        !"@end\n"
      ] ;
    end foreach ;
  end if ;
end routine ;

#----------------------------------------------------------------------------*


end semantics ;
