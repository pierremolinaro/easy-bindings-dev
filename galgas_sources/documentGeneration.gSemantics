semantics documentGeneration :
  import "easyBindings_options.gOption" ;
  import "semanticAnalysis.gSemantics" ;

#----------------------------------------------------------------------------*

local filewrapper documentGenerationTemplate in "../generation-templates/document-generation" {
}{
}{
  template documentDeclaration "document.h.gTemplate"
    ?@string DOCUMENT_NAME
    ?@string ROOT_ENTITY_NAME
    ?@string ROOT_ENTITY_CLASS_NAME
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@controllerMap CONTROLLER_MAP
    ?@lstringlist ACTION_LIST
  ;
  
  template documentImplementation "document.m.gTemplate"
    ?@string DOCUMENT_NAME
    ?@string ROOT_ENTITY_NAME
    ?@string ROOT_ENTITY_CLASS_NAME
    ?@outletGenerationList OUTLET_DECLARATION_LIST
    ?@controllerMap CONTROLLER_MAP
    ?@lstringlist ACTION_LIST
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
  ;

  template documentComputationsHeaderFile "document-computations.h.gTemplate"
    ?@string DOCUMENT_NAME
    ?@lstringlist ACTION_LIST
    ?@transientListForImplementation TRANSIENT_LIST_FOR_IMPLEMENTATION
  ;
  
  template documentActionImplementationFile "document-action.m.gTemplate"
    ?@string DOCUMENT_NAME
    ?@string ACTION_NAME
  ;

  template documentTransientComputationImplementationFile "document-transient-computation-function.m.gTemplate"
    ?@string DOCUMENT_NAME
    ?@easyBindingType RESULT_TYPE
    ?@string TRANSIENT_NAME
    ?@directDependancyList DIRECT_DEPENDANCY_LIST
  ;

}

#----------------------------------------------------------------------------*

routine generateDocumentCode
  ??@documentMap inDocumentMap
  ??@string inOutputDirectory
:
  if [@uint errorCount] == 0 then
    foreach inDocumentMap do
    #--- Header
      @string s := [filewrapper documentGenerationTemplate.documentDeclaration
        ![lkey string]
        !mRootEntityName
        !mRootEntityImplementationClassName
        !mOutletDeclarationList
        !mControllerMap
        !mActionList
      ] ;
      [@string generateFile
        !inOutputDirectory
        ![lkey string] . ".h"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n" # Defaut user zone2
        !"\n"
      ] ;
    #--- Implementation
      s := [filewrapper documentGenerationTemplate.documentImplementation
        ![lkey string]
        !mRootEntityName
        !mRootEntityImplementationClassName
        !mOutletDeclarationList
        !mControllerMap
        !mActionList
        !mTransientListForImplementation
      ] ;
      [@string generateFile
        !inOutputDirectory
        ![lkey string] . ".m"
        !"//"
        !"\n\n" # Defaut user zone1
        !s
        !"\n\n" # Defaut user zone2
        !"@end\n"
      ] ;
    #--- action header file
      if ([mActionList length] + [mTransientListForImplementation length]) > 0 then
        s := [filewrapper documentGenerationTemplate.documentComputationsHeaderFile
          ![lkey string]
          !mActionList
          !mTransientListForImplementation
        ] ;
        [@string generateFile
          !inOutputDirectory
          ![lkey string] . "-computations.h"
          !"//"
          !"\n\n" # Defaut user zone1
          !s
          !"\n\n" # Defaut user zone2
          !"\n"
        ] ;
      end if ;
    #--- Action computation function implementation files
      foreach mActionList do
          s := [filewrapper documentGenerationTemplate.documentActionImplementationFile
            ![lkey string]
            !mValue->string
          ] ;
          [@string generateFile
            !inOutputDirectory
            ![lkey string] . "_" . mValue->string . "_action.m"
            !"//"
            !"\n\n" # Defaut user zone1
            !s
            !"  what ? ; // ADD YOUR CODE HERE\n" # Defaut user zone2
            !"}\n\n" . "//----------------------------------------------------------------------------*\n"
          ] ;
      end foreach ;
    #--- Transient computation function implementation files
      foreach mTransientListForImplementation do
          s := [filewrapper documentGenerationTemplate.documentTransientComputationImplementationFile
            ![lkey string]
            !mType
            !mTransientName
            !mDependencyList
          ] ;
          [@string generateFile
            !inOutputDirectory
            !"compute_" . [lkey string] . "_" . mTransientName . ".m"
            !"//"
            !"\n\n" # Defaut user zone1
            !s
            !"  return what ? ; // ADD YOUR CODE HERE\n" # Defaut user zone2
            !"}\n\n" . "//----------------------------------------------------------------------------*\n"
          ] ;
      end foreach ;
    end foreach ;
  end if ;
end routine ;

#----------------------------------------------------------------------------*


end semantics ;
