
import Cocoa

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(%!DOCUMENT_NAME%) class %!DOCUMENT_NAME% : EBManagedDocument {

  //····················································································································
  //    Outlets
  //····················································································································

%
for () in OUTLET_GENERATION_MAP do
%  @IBOutlet var %!lkey.string% : %!mOutletTypeName%?\n%
end
%
  //····················································································································
  //    Properties
  //····················································································································

%
for () in SIMPLE_SIMPLE_PROPERTY_LIST_FOR_GENERATION do
%  private var %!mStoredPropertyName% = EBEntityProperty <%![mType swiftTypeName]%> (%!mDefaultValueInSwift%)\n%
end


%
  //····················································································································
  //    Transient properties
  //····················································································································

%

for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %  private var %!mTransientName% = EBTransientProperty_%![mTransientType swiftTypeName]% ()\n%
end

%
  //····················································································································
  //    Array Controllers
  //····················································································································

%
for () in ARRAY_CONTROLLER_LIST do
%  private var %!mControllerName% = ArrayController_%!mOwnerName%_%!mControllerName% ()\n%
end
%
  //····················································································································
  //    Selection Controllers
  //····················································································································

%
for () in SELECTION_CONTROLLER_LIST do
%  private var %!mSelectionControllerName% = SelectionController_%!mOwnerName%_%!mSelectionControllerName% ()\n%
end
%

  //····················································································································
  //    populateExplorerWindow
  //····················································································································

  override func populateExplorerWindow (inout y : CGFloat, view : NSView) {
%
for () in ARRAY_CONTROLLER_LIST do
%    %!mControllerName%.addExplorer ("%!mControllerName%", y:&y, view:view)\n%
end
for () in SELECTION_CONTROLLER_LIST do
%    %!mSelectionControllerName%.addExplorer ("%!mSelectionControllerName%", y:&y, view:view)\n%
end
%    super.populateExplorerWindow (&y, view:view)
  }

  //····················································································································
  //    windowNibName
  //····················································································································

  override var windowNibName: String {
    return "%!DOCUMENT_NAME%"
  }

  //····················································································································
  //    rootEntityClassName
  //····················································································································

  override func rootEntityClassName () -> String {
    return "%!ROOT_ENTITY_NAME%"
  }

  //····················································································································
  //    rootObject
  //····················································································································

  var rootObject : %!ROOT_ENTITY_NAME% { get { return mRootObject as! %!ROOT_ENTITY_NAME% } }

  //····················································································································
  //    windowControllerDidLoadNib
  //····················································································································

  override func windowControllerDidLoadNib (aController: NSWindowController) {
  //--------------------------- Outlet checking
%

for () in OUTLET_GENERATION_MAP do
   %    if nil == %!lkey.string% {\n%
   %      presentErrorWindow (__FILE__,
                              line:__LINE__,
                              errorMessage:"the '%!lkey.string%' outlet is nil") ;\n%
   %    }else if !%!lkey.string%!.isKindOfClass (%!mOutletTypeName%) {\n%
   %      presentErrorWindow (__FILE__,
                              line:__LINE__,
                              errorMessage:"the '%!lkey.string%' outlet is not an instance of '%!mOutletTypeName%'") ;\n%
   %    }\n%
end
%  //--------------------------- Array controller
%
for () in ARRAY_CONTROLLER_LIST do
%    %!mControllerName%.bind_modelAndView (
      %!mModelString%,
      tableViewArray:[%
      ![TABLE_VALUE_BINDING_GENERATION_LIST outletNameListForController !mControllerName]
      %],
      file:__FILE__,
      line:__LINE__
    )\n%
end
%  //--------------------------- Selection controller
%
for () in SELECTION_CONTROLLER_LIST do
%    %!mSelectionControllerName%.bind_selection (
      %!mBoundControllerName%.%!mBoundControllerPropertyName%,
      file:__FILE__,
      line:__LINE__
    )\n%
end
%  //--- Transient compute functions
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %    %!mTransientName%.computeFunction = { [weak self] in\n%
  %      if let unwSelf = self {\n%
  ![mDependencyList transientComputeFunctionCall !DOCUMENT_NAME !mTransientName]
  %      }else{\n%
  %        return .noSelection\n%
  %      }\n%
  %    }\n%
end
%  //--- Install property observers for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
for () in mDependencyList do
%    %![mDependency generateAddObserverCall]% (%!mTransientName%)\n%
end
end
%  //--- Install regular bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    %!mOutletName%?.bind_%!mBindingName% (%
  for () in mBoundObjectStringList do
    !mValue%, %
  end
  %file:__FILE__, line:__LINE__%!mBindingOptionsString%)\n%
end
%  //--- Install multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    %!mOutletName%?.bind_%!mBindingName% (\n%
  %      [%
  for () in [mBoundObjectExpression observedModelSet]
  do !key%%
  between %, %  
  end
  %],\n%
  %      computeFunction:{\n%
  %        return %![mBoundObjectExpression expressionString]%\n%
  %      },\n%
  %      file:__FILE__, line:__LINE__\n%
  %    )\n%
end
%  //--------------------------- Set targets / actions
%for () in TARGET_ACTION_LIST do
%    %!mOutletName%?.target = %!mTargetName%\n%
%    %!mOutletName%?.action = "%!mActionName%:"\n%
end
%  //--------------------------- Update display
    super.windowControllerDidLoadNib (aController)
    flushOutletEvents ()
  }

  //····················································································································
  //   removeWindowController
  //····················································································································

  override func removeUserInterface () {
  //--- Unbind regular bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    %!mOutletName%?.unbind_%!mBindingName% ()\n%
end
%  //--- Unbind multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    %!mOutletName%?.unbind_%!mBindingName% ()\n%
end
%  //--- Uninstall compute functions for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %    %!mTransientName%.computeFunction = nil\n%
end
%  //--------------------------- Unbind array controllers
%
for () in ARRAY_CONTROLLER_LIST do
%    %!mControllerName%.unbind_modelAndView ()\n%
end
%  //--------------------------- Unbind selection controllers
%
for () in SELECTION_CONTROLLER_LIST do
%    %!mSelectionControllerName%.unbind_selection ()\n%
end
%  //--- Uninstall property observers for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
for () in mDependencyList do
%    %![mDependency generateRemoveObserverCall]% (%!mTransientName%)\n%
end
end
%  //--------------------------- Remove targets / actions
%for () in TARGET_ACTION_LIST do
%    %!mOutletName%?.target = nil\n%
end
%  }

  //····················································································································

}

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

