
import Cocoa

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(%!DOCUMENT_NAME%) class %!DOCUMENT_NAME% : PMManagedDocument, PMUserClassName {

  //-------------------------------------------------------------------------------------------------------------------*
  //    Outlets                                                                                                        *
  //-------------------------------------------------------------------------------------------------------------------*

%
for () in OUTLET_GENERATION_MAP do
%  @IBOutlet var %!lkey.string% : %!mOutletTypeName%?\n%
end
%
  //-------------------------------------------------------------------------------------------------------------------*
  //    Properties                                                                                                     *
  //-------------------------------------------------------------------------------------------------------------------*

%
for () in SIMPLE_SIMPLE_PROPERTY_LIST_FOR_GENERATION do
%  private var %!mStoredPropertyName% = PMEntityProperty <%![mType swiftTypeName]%> (%!mDefaultValueInSwift%)\n%
end


%
  //-------------------------------------------------------------------------------------------------------------------*
  //    Transient properties                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

%

for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %  private var %!mTransientName% = PMTransientProperty_%![mTransientType swiftTypeName]% ()\n%
end

%
  //-------------------------------------------------------------------------------------------------------------------*
  //    Array Controllers                                                                                              *
  //-------------------------------------------------------------------------------------------------------------------*

%
for () in ARRAY_CONTROLLER_LIST do
%  private var %!mControllerName% = ArrayController_%!mObjectTypeName%_%!mTomanyRelationshipName% ()\n%
end
%
  //-------------------------------------------------------------------------------------------------------------------*
  //    windowNibName                                                                                                  *
  //-------------------------------------------------------------------------------------------------------------------*

  override var windowNibName: String {
    return "%!DOCUMENT_NAME%"
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    rootEntityClassName                                                                                            *
  //-------------------------------------------------------------------------------------------------------------------*

  override func rootEntityClassName () -> String {
    return "%!ROOT_ENTITY_NAME%"
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    rootObject                                                                                                     *
  //-------------------------------------------------------------------------------------------------------------------*

  var rootObject : MyRootEntity { get { return mRootObject as! %!ROOT_ENTITY_NAME% } }

  //-------------------------------------------------------------------------------------------------------------------*
  //    windowControllerDidLoadNib                                                                                     *
  //-------------------------------------------------------------------------------------------------------------------*

  override func windowControllerDidLoadNib (aController: NSWindowController) {
  //--------------------------- Outlet checking
%

for () in OUTLET_GENERATION_MAP do
   %    if nil == %!lkey.string% {\n%
   %      presentErrorWindow (__FILE__, __LINE__, "the '%!lkey.string%' outlet is nil") ;\n%
   %    }else if !%!lkey.string%!.isKindOfClass (%!mOutletTypeName%) {\n%
   %      presentErrorWindow (__FILE__, __LINE__, "the '%!lkey.string%' outlet is not an instance of '%!mOutletTypeName%'") ;\n%
   %    }\n%
end
%  //--------------------------- Array controller
%
for () in ARRAY_CONTROLLER_LIST do
%    %!mControllerName%.bind_modelAndView (
      rootObject,
      tableView:%!mTableViewOutletName%!,
      file:__FILE__,
      line:__LINE__
    )\n%
end
%  //--- Install compute functions for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %    %!mTransientName%.computeFunction = {return compute_%!DOCUMENT_NAME%_%!mTransientName% (%
  for () in mDependencyList
    do ![mDependency modelString]%.prop%
    between %, %
  end
  %)}\n%
end
%  //--- Install property observers for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
for () in mDependencyList do
%    %![mDependency generateAddObserverCall]% (%!mTransientName%.event, inTrigger:true)\n%
end
end
%  //--- Install regular bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    %!mOutletName%?.bind_%!mBindingName% (%
  for () in mBoundObjectStringList do
    !mValue%, %
  end
  %file:__FILE__, line:__LINE__%!mBindingOptionsString%)\n%
end
%  //--- Install multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    %!mOutletName%?.bind_%!mBindingName% (\n%
  %      [%
  for () in [mBoundObjectExpression observedModelSet]
  do !key
  between %, %  
  end
  %],\n%
  %      computeFunction:{ %![mBoundObjectExpression expressionString]% },\n%
  %      file:__FILE__, line:__LINE__\n%
  %    )\n%
end
%  //--------------------------- Array controller as observers
%
for () in ARRAY_CONTROLLER_LIST do
%    rootObject.%!mTomanyRelationshipName%.addObserver (%!mControllerName%.event, inTrigger:true)\n%
end
%  //--------------------------- Set targets / actions
%for () in TARGET_ACTION_LIST do
%    %!mOutletName%?.target = %!mTargetName%\n%
%    %!mOutletName%?.action = "%!mActionName%:"\n%
end
%  //--------------------------- Update display
    super.windowControllerDidLoadNib (aController)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //   removeWindowController                                                                                          *
  //-------------------------------------------------------------------------------------------------------------------*

  override func removeWindowController (inWindowController : NSWindowController) {
    undoManager?.removeAllActions ()
    undoManager = nil
  //--- Unbind regular bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    %!mOutletName%?.unbind_%!mBindingName% ()\n%
end
%  //--- Unbind multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    %!mOutletName%?.unbind_%!mBindingName% ()\n%
end
%  //--- Uninstall compute functions for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %    %!mTransientName%.computeFunction = nil\n%
end
%  //--------------------------- Unbind array controllers
%
for () in ARRAY_CONTROLLER_LIST do
%    %!mControllerName%.unbind_modelAndView ()\n%
end
%  //--- Uninstall property observers for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
for () in mDependencyList do
%    %![mDependency generateRemoveObserverCall]% (%!mTransientName%.event, inTrigger:false)\n%
end
end
%  //--------------------------- Remove targets / actions
%for () in TARGET_ACTION_LIST do
%    %!mOutletName%?.target = nil\n%
end
%  //---
    super.removeWindowController (inWindowController)
  }

//---------------------------------------------------------------------------------------------------------------------*

}

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

