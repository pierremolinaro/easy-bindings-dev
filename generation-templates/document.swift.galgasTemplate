//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(%!DOCUMENT_NAME%) class %!DOCUMENT_NAME% : EBManagedDocument {

%
for () in DOCUMENT_PROPERTY_LIST do
  ![mProperty declarationCode ![@stringset emptySet]]
end
%
  //····················································································································
  //    Outlets
  //····················································································································

%
for () in OUTLET_GENERATION_MAP do
%  @IBOutlet var %!lkey.string% : %!mOutletTypeName%?\n%
end
%
  //····················································································································
  //    Multiple bindings controllers
  //····················································································································

%for () in MULTIPLE_BINDING_GENERATION_LIST do
  %  var mController_%!mOutletName%_%!mBindingName% : MultipleBindingController_%!mBindingName%? = nil\n%
end
%
  //····················································································································
  //    Document file path
  //····················································································································
  // Cette méthode est appelée après tout enregistrement, qu'il y ait changement de nom ou pas.

  override var fileModificationDate : Date? {
    get {
      return super.fileModificationDate
    }
    set{
      super.fileModificationDate = newValue
      self.documentFilePath_property.postEvent ()
    }
  }

  //····················································································································

  func computeTransient_documentFilePath () -> String {
    var documentFilePath = ""
    if let url = self.fileURL {
      documentFilePath = url.path
    }
    return documentFilePath
  }

  //····················································································································
  //    populateExplorerWindow
  //····················································································································

  override func populateExplorerWindow (_ y : inout CGFloat, view : NSView) {
%
for () in DOCUMENT_PROPERTY_LIST do
  ![mProperty populateExplorerWindowCode]
end
%  //---
    super.populateExplorerWindow (&y, view:view)
  }

  //····················································································································
  //    windowNibName
  //····················································································································

  override var windowNibName : NSNib.Name {
    return NSNib.Name ("%!DOCUMENT_NAME%")
  }
  
  //····················································································································
  //    rootEntityClassName
  //····················································································································

  override func rootEntityClassName () -> String {
    return "%!ROOT_ENTITY_NAME%"
  }

  //····················································································································
  //    rootObject
  //····················································································································

  var rootObject : %!ROOT_ENTITY_NAME% { get { return mRootObject as! %!ROOT_ENTITY_NAME% } }

  //····················································································································
  //    windowControllerDidLoadNib
  //····················································································································

  override func windowControllerDidLoadNib (_ aController: NSWindowController) {
  //--------------------------- Outlet checking
%for () in OUTLET_GENERATION_MAP do
%    if let outlet : Any = self.%!lkey.string% {
      if !(outlet is %!mOutletTypeName%) {
        presentErrorWindow (
          file: #file,
          line: #line,
          errorMessage: "the '%!lkey.string%' outlet is not an instance of '%!mOutletTypeName%'"
        )
      }
    }else{
      presentErrorWindow (
        file: #file,
        line: #line,
        errorMessage: "the '%!lkey.string%' outlet is nil"
      )
    }
%
end
for () in DOCUMENT_PROPERTY_LIST do
  ![mProperty configurationCode]
end
for () in TABLE_VALUE_BINDING_GENERATION_LIST do
  %    self.%!mTableValueBindingControllerName%.bind_tableView (self.%!mTableValueBindingOutletName%, file: #file, line: #line)\n%
end
for () in EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST do
  %    self.%!mArrayControllerControllerName%.bind_ebView (self.%!mEBViewOutletName%)\n%
end
%  //--------------------------- Install regular bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    self.%!mOutletName%?.bind_%!mBindingName% (%
  for () in mBoundObjectList do
    !mBoundObjectString%, %
  end
  %file: #file, line: #line%!mBindingOptionsString%)\n%
end
%  //--------------------------- Install multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    do{\n%
  %      let controller = MultipleBindingController_%!mBindingName% (\n%
  %        computeFunction:{\n%
  %          return %![mBoundObjectExpression expressionString]%\n%
  %        },\n%
  %        outlet:self.%!mOutletName%\n%
  %      )\n%
  for () in [mBoundObjectExpression observedModelSet] do
  %      %!key%.addEBObserver (controller)\n%
  end
  %      mController_%!mOutletName%_%!mBindingName% = controller\n%
  %    }\n%
end
%  //--------------------------- Set targets / actions
%for () in TARGET_ACTION_LIST do
%    self.%!mOutletName%?.target = %!mTargetName%\n%
%    self.%!mOutletName%?.action = #selector (%!mTargetTypeName%.%!mActionName% (_:))\n%
end
%  //--------------------------- Update display
    super.windowControllerDidLoadNib (aController)
  //--------------------------- Flush outlet event for forcing display
    flushOutletEvents ()
  }

  //····················································································································
  //   removeWindowController
  //····················································································································

  override func removeUserInterface () {
  //--------------------------- Unbind regular bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    self.%!mOutletName%?.unbind_%!mBindingName% ()\n%
end
%  //--------------------------- Unbind multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  for () in [mBoundObjectExpression observedModelSet] do
  %    self.%!key%.removeEBObserver (self.mController_%!mOutletName%_%!mBindingName%!)\n%
  end
  %    self.mController_%!mOutletName%_%!mBindingName% = nil\n%
end
%  //--------------------------- Unbind array controllers
%
for () in TABLE_VALUE_BINDING_GENERATION_LIST do
  %    self.%!mTableValueBindingControllerName%.unbind_tableView (self.%!mTableValueBindingOutletName%)\n%
end
for () in EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST do
  %    self.%!mArrayControllerControllerName%.unbind_ebView (self.%!mEBViewOutletName%)\n%
end
for () in DOCUMENT_PROPERTY_LIST do
  ![mProperty terminationCode]
end
%  //--------------------------- Remove targets / actions
%for () in TARGET_ACTION_LIST do
%    self.%!mOutletName%?.target = nil\n%
end
%  //--------------------------- Clean up outlets
%for () in OUTLET_GENERATION_MAP do
   %    self.%!lkey.string%?.ebCleanUp ()\n%
end
%  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

