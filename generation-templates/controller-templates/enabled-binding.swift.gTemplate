@objc(EnableController_%!OUTLET_PROPRIETARY_CLASS_NAME%_%!OUTLET_NAME%)
class EnableController_%!OUTLET_PROPRIETARY_CLASS_NAME%_%!OUTLET_NAME% : NSObject, PMTransientEventProtocol, PMUserClassName {

  weak var mObject : %!OBJECT_CLASS%? = nil
  weak var mOutlet : PMEnableProtocol? = nil

  //-------------------------------------------------------------------------------------------------------------------*
 
  func userClassName () -> String { return "EnableController_%!OUTLET_PROPRIETARY_CLASS_NAME%_%!OUTLET_NAME%" }

  //-------------------------------------------------------------------------------------------------------------------*

  private let mPrivateUniqueIndex : Int ;
  var uniqueIndex : Int { get { return mPrivateUniqueIndex } }

  //-------------------------------------------------------------------------------------------------------------------*

  init (object : %!OBJECT_CLASS%?, outlet : PMEnableProtocol?, file : String, line : Int) {
    mPrivateUniqueIndex = getUniqueIndex ()
    mObject = object
    super.init ()
    noteObjectAllocation (self)
    if let unwrappedOutlet = outlet {
      mOutlet = unwrappedOutlet
    }
    mObject?.addObserverOf_%!MODEL% (self, inTrigger:true)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  
  func unregister () {
    mObject?.removeObserverOf_%!MODEL% (self, inTrigger:false)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  
  deinit {
    noteObjectDeallocation (self)
  }
  
  //-------------------------------------------------------------------------------------------------------------------*

  func noteTransientDidChange () {
  }

  //-------------------------------------------------------------------------------------------------------------------*

  func trigger () {
    if let outlet = mOutlet {
      if let object = mObject {
        outlet.setEnableFromBinding (object.%!MODEL%)
      }
    }
  }

  //-------------------------------------------------------------------------------------------------------------------*

  var transientEventIndex : PMTransientIndex { get { return PMTransientIndex.kTriggerOutletDisplay } }

  //-------------------------------------------------------------------------------------------------------------------*

  func noteTransientChanged () {
  }
  
  //-------------------------------------------------------------------------------------------------------------------*
}

