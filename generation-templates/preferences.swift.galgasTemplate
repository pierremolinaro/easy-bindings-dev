//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

var g_%!preferencesName ()% : %!preferencesName ()%? = nil

//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

%for () in SIMPLE_PROPERTY_LIST_FOR_GENERATION do
  %let Preferences_%![mStoredPropertyName identifierRepresentation]% = "Preferences:%!mStoredPropertyName%"\n%
end
%
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(%!preferencesName ()%) class %!preferencesName ()% : EBObject, NSWindowDelegate {

  //····················································································································
  //    Outlets
  //····················································································································

%
for () in OUTLET_MAP do
%  @IBOutlet var %!lkey.string% : %!mOutletTypeName%? = nil\n%
end
%
%
for () in SIMPLE_PROPERTY_LIST_FOR_GENERATION do
  %  //····················································································································\n%
  %  //   Accessing %!mStoredPropertyName% stored property\n%
  %  //····················································································································\n\n%
  %  var %!mStoredPropertyName% : %![mType swiftTypeName]% {\n%
  %    get {\n%
  %      return self.%!mStoredPropertyName%_property.propval\n%
  %    }\n%
  %    set {\n%
  %      self.%!mStoredPropertyName%_property.setProp (newValue)\n%
  %    }\n%
  %  }\n\n%
  %  var %!mStoredPropertyName%_property_selection : EBSelection <%![mType swiftTypeName]%> {\n%
  %    get {\n%
  %      return self.%!mStoredPropertyName%_property.prop\n%
  %    }\n%
  %  }\n%
  if mNeedsValidation then
    %  func %!mStoredPropertyName%_validateAndSetProp (_ inCandidateValue : %![mType swiftTypeName]%, windowForSheet inWindow:NSWindow?) -> Bool {\n%
    %    return self.%!mStoredPropertyName%_property.validateAndSetProp (inCandidateValue, windowForSheet:inWindow)\n%
    %  }\n%
  end
  %\n%
end

for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %  //····················································································································\n%
  %  //   Accessing %!mTransientName% transient property\n%
  %  //····················································································································\n\n%
  %  var %!mTransientName%_property_selection : EBSelection <%![mTransientType swiftTypeName]%> {\n%
  %    get {\n%
  %      return self.%!mTransientName%_property.prop\n%
  %    }\n%
  %  }\n\n%
end
for () in STORED_ARRAY_LIST do
  %  //····················································································································\n%
  %  //   Accessing %!mStoredPropertyName% stored array properties\n%
  %  //····················································································································\n\n%
  %  var %!mStoredPropertyName%_property_selection : EBSelection < [%!mElementClassName%] > {\n%
  %    get {\n%
  %      return self.%!mStoredPropertyName%_property.prop\n%
  %    }\n%
  %  }\n\n%
end
%  //····················································································································
  //    Simple Stored Properties
  //····················································································································

%
for () in SIMPLE_PROPERTY_LIST_FOR_GENERATION do
%  var %!mStoredPropertyName%_property = EBStoredProperty_%![mType swiftTypeName]% (%!mDefaultValueInSwift%, prefKey: Preferences_%![mStoredPropertyName identifierRepresentation]%)\n%
end
%
  //····················································································································
  //    Stored Array Properties
  //····················································································································

%
for () in STORED_ARRAY_LIST do
%  var %!mStoredPropertyName%_property = EBClassArray_%!mElementClassName% ()\n%
end
%
  //····················································································································
  //    Transient properties
  //····················································································································

%

for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
%  var %!mTransientName%_property = EBTransientProperty_%![mTransientType swiftTypeName]% ()\n%
end
%
  //····················································································································
  //    Array Controllers
  //····················································································································

%
for () in ARRAY_CONTROLLER_LIST do
%  private var %!mControllerName.string% = ArrayController_%!mOwnerName%_%!mControllerName.string% ()\n%
end
%
  //····················································································································
  //    Undo Manager
  //····················································································································

  private var mUndoManager = EBUndoManager ()

  //····················································································································
  // The preferences window should register this object as delegate (do it in Interface Builder)

  @objc func windowWillReturnUndoManager (_ window: NSWindow) -> UndoManager? {
    return self.mUndoManager
  }

  //····················································································································
  //    Init
  //····················································································································

  override init () {
    super.init ()
    g_%!preferencesName ()% = self ;
  //--- Read from preferences
%
for () in SIMPLE_PROPERTY_LIST_FOR_GENERATION do
  %    self.%!mStoredPropertyName%_property.undoManager = self.mUndoManager\n%
end
for () in STORED_ARRAY_LIST do
  %    self.%!mStoredPropertyName%_property.readInPreferencesWithKey (inKey: "Preferences:%!mStoredPropertyName%")\n%
end
%  //--- Property validation function
%
for () in SIMPLE_PROPERTY_LIST_FOR_GENERATION do
  if mNeedsValidation then
%    self.%!mStoredPropertyName%_property.validationFunction = self.validate_%!mStoredPropertyName%\n%
  end
end
%  //---
    NotificationCenter.default.addObserver (self,
     selector:#selector(Preferences.applicationWillTerminateAction(_:)),
     name:NSNotification.Name.NSApplicationWillTerminate,
     object:nil
    )
  //--- Extern functions
%
  for () in EXTERN_SWIFT_FUNCTION_LIST do
    if mCallerName.string == "init" then
      %    self.%!mExternSwiftFunctionName.string% ()\n%
    end
  end
%  }

%
if [MAIN_XIB_DESCRIPTOR_LIST length] > 0 then
%  //····················································································································

  @IBOutlet private var window : NSWindow?
  let OUTLET_WIDTH = 200.0
  let OUTLET_HEIGHT = 22.0

%
end
%  //····················································································································
  //    awakeFromNib
  //····················································································································

  override func awakeFromNib () {
%
![MAIN_XIB_DESCRIPTOR_LIST generateCode]
for () in OUTLET_MAP do
%    if let outlet : Any = self.%!lkey.string% {
      if !(outlet is %!mOutletTypeName%) {
        presentErrorWindow (file: #file,
                            line: #line,
                            errorMessage: "the '%!lkey.string%' outlet is not an instance of '%!mOutletTypeName%'") ;
      }
    }else{
      presentErrorWindow (file: #file,
                          line: #line,
                          errorMessage: "the '%!lkey.string%' outlet is nil") ;
    }
%end
%  //--------------------------- Install compute functions for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %    self.%!mTransientName%_property.readModelFunction = { [weak self] in\n%
  %      if let unwSelf = self {\n%
  ![mDependencyList transientComputeFunctionCall !preferencesName () !mTransientName !mExternFunctionName]
  %      }else{\n%
  %        return .empty\n%
  %      }\n%
  %    }\n%
end
%  //--------------------------- Install property observers for transients
%
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
  for () in mDependencyList do
    %    %![mDependency generateAddObserverCall]% (self.%!mTransientName%_property)\n%
  end
end
%  //--------------------------- Install bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    %!mOutletName%?.bind_%!mBindingName% (%
  for () in mBoundObjectList do
    !mBoundObjectString%, %
  end
  %file: #file, line: #line%!mBindingOptionsString%)\n%
end
%  //--------------------------- Install multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    do{\n%
  %      let controller = MultipleBindingController_%!mBindingName% (\n%
  %        computeFunction:{\n%
  %          return %![mBoundObjectExpression expressionString]%\n%
  %        },\n%
  %        outlet:self.%!mOutletName%\n%
  %      )\n%
  for () in [mBoundObjectExpression observedModelSet] do
  %      %!key%.addEBObserver (controller)\n%
  end
  %      mController_%!mOutletName%_%!mBindingName% = controller\n%
  %    }\n%
end
%  //--------------------------- Array controller
%
for () in ARRAY_CONTROLLER_LIST do
%    self.%!mControllerName.string%.bind_model (%!mModelString%)\n%
end
for () in TABLE_VALUE_BINDING_GENERATION_LIST do
  %    self.%!mTableValueBindingControllerName%.bind_tableView (self.%!mTableValueBindingOutletName%, file: #file, line: #line)\n%
end
for () in EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST do
  %    self.%!mArrayControllerControllerName%.bind_ebView (self.%!mEBViewOutletName%)\n%
end
%  //--------------------------- Set targets / actions
%for () in TARGET_ACTION_LIST do
%    self.%!mOutletName%?.target = %!mTargetName%\n%
%    self.%!mOutletName%?.action = #selector (%!mTargetTypeName%.%!mActionName% (_:))\n%
end
%  //--------------------------- Extern functions
%
  for () in EXTERN_SWIFT_FUNCTION_LIST do
    if mCallerName.string == "awakeFromNib" then
      %    self.%!mExternSwiftFunctionName.string% ()\n%
    end
  end
%  }

  //····················································································································
  //    Multiple bindings controller
  //····················································································································

%for () in MULTIPLE_BINDING_GENERATION_LIST do
  %  fileprivate var mController_%!mOutletName%_%!mBindingName% : MultipleBindingController_%!mBindingName%?\n%
end
%
  //····················································································································
  //    applicationWillTerminateAction
  //····················································································································

  func applicationWillTerminateAction (_ : NSNotification) {
%
for () in STORED_ARRAY_LIST do
  %    self.%!mStoredPropertyName%_property.storeInPreferencesWithKey (inKey: "Preferences:%!mStoredPropertyName%")\n%
end
%  //--------------------------- Array controller
%
for () in TABLE_VALUE_BINDING_GENERATION_LIST do
  %    self.%!mTableValueBindingControllerName%.unbind_tableView (self.%!mTableValueBindingOutletName%)\n%
end
for () in EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST do
  %    self.%!mArrayControllerControllerName%.unbind_ebView (self.%!mEBViewOutletName%)\n%
end
for () in ARRAY_CONTROLLER_LIST do
%    self.%!mControllerName.string%.unbind_model ()\n%
end
%  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

