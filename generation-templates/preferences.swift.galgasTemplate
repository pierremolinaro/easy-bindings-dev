//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

var g_%!preferencesName ()% : %!preferencesName ()%? = nil

//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

%for () in PROPERTY_LIST_FOR_GENERATION do
  ![mProperty prefKeyDefinitionCode]
end
%
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(%!preferencesName ()%) class %!preferencesName ()% : EBObject, NSWindowDelegate {

%for () in PROPERTY_LIST_FOR_GENERATION do
  ![mProperty declarationCode]
end
%  //····················································································································
  //    Outlets
  //····················································································································

%
for () in OUTLET_MAP do
%  @IBOutlet var %!lkey.string% : %!mOutletTypeName%? = nil\n%
end
%
  //····················································································································
  //    Multiple bindings controllers
  //····················································································································

%for () in MULTIPLE_BINDING_GENERATION_LIST do
  %  private var mController_%!mOutletName%_%!mBindingName% : MultipleBindingController_%!mBindingName%?\n%
end
%
  //····················································································································
  //    Undo Manager
  //····················································································································

  private var undoManager = EBUndoManager ()

  //····················································································································
  // The preferences window should register this object as delegate (do it in Interface Builder)

  @objc func windowWillReturnUndoManager (_ window: NSWindow) -> UndoManager? {
    return self.undoManager
  }

  //····················································································································
  //    Init
  //····················································································································

  override init () {
    super.init ()
    g_%!preferencesName ()% = self ;
  //--- Read from preferences
%
for () in PROPERTY_LIST_FOR_GENERATION do
  ![mProperty configurationCode]
end
%  //--- Notify application will terminate
    NotificationCenter.default.addObserver (self,
      selector:#selector(Preferences.applicationWillTerminateAction(_:)),
      name:NSApplication.willTerminateNotification,
      object:nil
    )
  //--- Extern functions
%
  for () in EXTERN_SWIFT_FUNCTION_LIST do
    if mCallerName.string == "init" then
      %    self.%!mExternSwiftFunctionName.string% ()\n%
    end
  end
%  }

  //····················································································································
  //    awakeFromNib
  //····················································································································

  override func awakeFromNib () {
%
# ![MAIN_XIB_DESCRIPTOR_LIST generateCode]
for () in OUTLET_MAP do
%    if let outlet : Any = self.%!lkey.string% {
      if !(outlet is %!mOutletTypeName%) {
        presentErrorWindow (file: #file,
                            line: #line,
                            errorMessage: "the '%!lkey.string%' outlet is not an instance of '%!mOutletTypeName%'") ;
      }
    }else{
      presentErrorWindow (file: #file,
                          line: #line,
                          errorMessage: "the '%!lkey.string%' outlet is nil") ;
    }
%end
%  //--------------------------- Install bindings
%
for () in REGULAR_BINDINGS_GENERATION_LIST do
  %    %!mOutletName%?.bind_%!mBindingName% (%
  for () in mBoundObjectList do
    !mBoundObjectString%, %
  end
  %file: #file, line: #line%!mBindingOptionsString%)\n%
end
%  //--------------------------- Install multiple bindings
%
for () in MULTIPLE_BINDING_GENERATION_LIST do
  %    do{\n%
  %      let controller = MultipleBindingController_%!mBindingName% (\n%
  %        computeFunction:{\n%
  %          return %![mBoundObjectExpression expressionString]%\n%
  %        },\n%
  %        outlet:self.%!mOutletName%\n%
  %      )\n%
  for () in [mBoundObjectExpression observedModelSet] do
  %      %!key%.addEBObserver (controller)\n%
  end
  %      mController_%!mOutletName%_%!mBindingName% = controller\n%
  %    }\n%
end
%  //--------------------------- Array controller
%
for () in TABLE_VALUE_BINDING_GENERATION_LIST do
  %    self.%!mTableValueBindingControllerName%.bind_tableView (self.%!mTableValueBindingOutletName%, file: #file, line: #line)\n%
end
for () in EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST do
  %    self.%!mArrayControllerControllerName%.bind_ebView (self.%!mEBViewOutletName%)\n%
end
%  //--------------------------- Set targets / actions
%for () in TARGET_ACTION_LIST do
%    self.%!mOutletName%?.target = %!mTargetName%\n%
%    self.%!mOutletName%?.action = #selector (%!mTargetTypeName%.%!mActionName% (_:))\n%
end
%  //--------------------------- Extern functions
%
  for () in EXTERN_SWIFT_FUNCTION_LIST do
    if mCallerName.string == "awakeFromNib" then
      %    self.%!mExternSwiftFunctionName.string% ()\n%
    end
  end
%  }

  //····················································································································
  //    applicationWillTerminateAction
  //····················································································································

  @objc func applicationWillTerminateAction (_ : NSNotification) {
  //--------------------------- Array controller
%
for () in TABLE_VALUE_BINDING_GENERATION_LIST do
  %    self.%!mTableValueBindingControllerName%.unbind_tableView (self.%!mTableValueBindingOutletName%)\n%
end
for () in EB_VIEW_GRAPHIC_CONTROLLER_BINDING_GENERATION_LIST do
  %    self.%!mArrayControllerControllerName%.unbind_ebView (self.%!mEBViewOutletName%)\n%
end
for () in PROPERTY_LIST_FOR_GENERATION do
  ![mProperty terminationCode]
end
%  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

