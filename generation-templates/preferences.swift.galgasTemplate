//---------------------------------------------------------------------------------------------------------------------*

import Cocoa

//---------------------------------------------------------------------------------------------------------------------*

var g_%!PREFERENCES_NAME% : %!PREFERENCES_NAME%? = nil

//---------------------------------------------------------------------------------------------------------------------*

@objc (%!PREFERENCES_NAME%) class %!PREFERENCES_NAME% : NSObject, PMUserClassName {

  //-------------------------------------------------------------------------------------------------------------------*

  func userClassName () -> String { return "%!PREFERENCES_NAME%" }
 
  //-------------------------------------------------------------------------------------------------------------------*
  //    Outlets                                                                                                        *
  //-------------------------------------------------------------------------------------------------------------------*

%
for () in OUTLET_MAP do
%  @IBOutlet var %!lkey.string% : %!mOutletTypeName.string%? = nil\n%
end
% 
  //-------------------------------------------------------------------------------------------------------------------*
  //    Properties                                                                                                     *
  //-------------------------------------------------------------------------------------------------------------------*

%
for () in ATTRIBUTE_LIST_FOR_GENERATION do
%  var %!mAttributeName% = PMPreferencesProperty <%![mAttributeType swiftTypeName]%> (%!mDefaultValueInSwift%)\n%
end
%

//  func validate_mAttributeName (proposedValue : [mAttributeType swiftTypeName]) -> PMValidationResult { return PMValidationResult.ok }

  //-------------------------------------------------------------------------------------------------------------------*
  //    Transient properties                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

%

for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
%  var %!mTransientName% = PMTransientProperty <%![mTransientType swiftTypeName]%> ()\n%
end

for () in CONTROLLER_MAP do
%
  //-------------------------------------------------------------------------------------------------------------------*
  //    %!["Controller: " + lkey stringByRightPadding !111 !' ']%*
  //-------------------------------------------------------------------------------------------------------------------*
  
  var %!lkey.string% = %!mControllerClassName% ()\n%
end

%  //-------------------------------------------------------------------------------------------------------------------*
  //    Arraies                                                                                                        *
  //-------------------------------------------------------------------------------------------------------------------*
%
for () in ARRAY_MAP do%  var %!lkey.string% = NSMutableArray ()\n%end


%

  //-------------------------------------------------------------------------------------------------------------------*
  //    Init                                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

  override init () {
    super.init ()
    noteObjectAllocation (self) ;
    g_%!PREFERENCES_NAME% = self ;
 %
if ([ATTRIBUTE_LIST_FOR_GENERATION length] + [ARRAY_MAP count]) > 0 then
  %    var ud = NSUserDefaults.standardUserDefaults ()\n%
  %  //---\n%
end
for () in ATTRIBUTE_LIST_FOR_GENERATION
  before
    %    var value : AnyObject?\n%
  do
    %    value = ud.objectForKey ("%!PREFERENCES_NAME%:%!mAttributeName%")\n%
    %    if value != nil {\n%
    %      %!mAttributeName%.value = %![mAttributeType preferencesSwiftGetter]%\n%
    %    }\n%
end
%  //--- Property validation function
%
for () in ATTRIBUTE_LIST_FOR_GENERATION do
  if mNeedsValidation then
%    %!mAttributeName%.setValidationFunction (self.validate_%!mAttributeName%)\n%
  end
end


for () in ARRAY_MAP do
%    { NSMutableArray * array = [NSMutableArray new] ;
      for (NSDictionary * dict in [ud objectForKey:@"%!PREFERENCES_NAME%:%!lkey.string%"]) {
        %#!mElementType.mTypeName.string
        % * object = [[%#!mElementType.mTypeName.string
        % alloc]
%
#for () in mAttributeListForImplementation
#before %          initWith%
#do     ![mAttributeName stringByCapitalizingFirstCharacter]%:%![mType preferencesSwiftGetter]%([dict objectForKey:@"%!mAttributeName%"])\n%
#between %          with%
#end
%        ] ;
        [array addObject:object] ;
      }
      self.%!lkey.string% = array ;
    }
%
end
%  //---
    NSNotificationCenter.defaultCenter ().addObserver (self,
     selector:"applicationWillTerminateAction:",
     name:NSApplicationWillTerminateNotification,
     object:nil
    )
  //--- Register trigger objects
%#!generateAddSwiftObserverForTransients [!"preference" !PREFERENCES_NAME !TRANSIENT_LIST_FOR_IMPLEMENTATION !"    "]
%  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    awakeFromNib                                                                                                   *
  //-------------------------------------------------------------------------------------------------------------------*

  var mControllerArray = NSMutableArray ()

  //-------------------------------------------------------------------------------------------------------------------*

  override func awakeFromNib () {
% for () in CONTROLLER_MAP do
  %//--- '%!lkey.string%' controller\n%
#  %  %!lkey.string%.setObjectClass (%!mControlledClassOrEntityName.string% class)\n%
end
#for () in CONTROLLER_MAP do
# for () in mControllerBindingList
#  before    %//--- '%!lkey.string%' controller bindings\n%
#  do
#   ![mBinding generateObjectiveCBinding !lkey.string]
#  end
#end

for () in OUTLET_MAP do
   %  //--- Check %!lkey.string%' outlet not nil\n%
   %    if nil == %!lkey.string% {\n%
   %      presentErrorWindow (__FILE__, __LINE__, "the '%!lkey.string%' outlet is nil")\n%
   %    }\n%
#  for () in mOutletBindingList do
 #   ![mBinding generateSwiftBinding !mOutletName]
#  end
end
for () in TRANSIENT_LIST_FOR_IMPLEMENTATION do
for () in mDependencyList do
%    %![mDependency generateAddObserverCall]% (event_%!["preference." + PREFERENCES_NAME + "." + mTransientName identifierRepresentation]%, inTrigger:true)\n%
end
end
for () in CONTROLLER_INSTANCIATION_STRINGLIST do
%    mControllerArray.addObject (%!mValue%)\n%
end
%  }
  
  //-------------------------------------------------------------------------------------------------------------------*
  //    deinit                                                                                                         *
  //-------------------------------------------------------------------------------------------------------------------*

  deinit {
    noteObjectDeallocation (self) ;
  }
  
  //-------------------------------------------------------------------------------------------------------------------*
  //    applicationWillTerminateAction                                                                                 *
  //-------------------------------------------------------------------------------------------------------------------*

  func applicationWillTerminateAction (NSNotification) {
%
if ([ATTRIBUTE_LIST_FOR_GENERATION length] + [ARRAY_MAP count]) > 0 then
  %    var ud = NSUserDefaults.standardUserDefaults ()\n%
end
for () in ATTRIBUTE_LIST_FOR_GENERATION do
  %    ud.setObject (%![mAttributeType preferencesSwiftSetter !mAttributeName]%, forKey:"%!PREFERENCES_NAME%:%!mAttributeName%")\n%
end
for () in ARRAY_MAP do
%  { NSMutableArray * array = [NSMutableArray new] ;
    for (%#!mElementType.mTypeName.string
    % * object in self.%!lkey.string%) {
      [array addObject:[NSDictionary
        dictionaryWithObjectsAndKeys:
%#for () in mAttributeListForImplementation do%          %![mType preferencesSetterTransformerFunctionName]%(object.%!mAttributeName%), @"%!mAttributeName%",\n%end
%          nil
        ]
      ] ;
    }
    [ud setObject:array forKey:@"%!PREFERENCES_NAME%:%!lkey.string%"] ;
  }
%
end
%  }

  //-------------------------------------------------------------------------------------------------------------------*

}

//---------------------------------------------------------------------------------------------------------------------*
