//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension EBView {

  //····················································································································

  func setIssue (_ inBezierPath : NSBezierPath?, _ issueKind : CanariIssueKind) {
    if self.mIssueBezierPath != inBezierPath {
      if let bp = self.mIssueBezierPath, bp.elementCount > 0 {
        self.setNeedsDisplay (self.issueBoundingBox)
      }
      self.mIssueBezierPath = inBezierPath
      self.mIssueKind = issueKind
      self.updateViewFrameAndBounds ()
      if let bp = self.mIssueBezierPath, bp.elementCount > 0 {
        self.scrollToVisible (bp.bounds)
        self.setNeedsDisplay (self.issueBoundingBox)
      }
    }
  }

  //····················································································································

  internal var issueBoundingBox : NSRect {
    if let bp = self.mIssueBezierPath, bp.elementCount > 0 {
      let e = -bp.lineWidth
      return bp.bounds.insetBy (dx: e, dy: e)
    }else{
      return NSRect.null
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

