//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

private let MARGIN : CGFloat = 5.0

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class EBFocusRingView : NSView, EBUserClassNameProtocol {

  //····················································································································
  // MARK: -
  //····················································································································

  required init? (coder : NSCoder) {
    super.init (coder: coder)
    noteObjectAllocation (self)
  }

  //····················································································································

  override init (frame : NSRect) {
    super.init (frame: frame)
    noteObjectAllocation (self)
  }

  //····················································································································

  deinit {
    noteObjectDeallocation (self)
  }

  //····················································································································

  override func awakeFromNib () {
    super.awakeFromNib ()
    if self.subviews.count == 1, let scrollView = self.subviews [0] as? EBScrollView {
      let r = self.bounds
      scrollView.frame = r.insetBy (dx: MARGIN, dy: MARGIN)
    }
  }

  //····················································································································

  final func viewIsLiveResing () {
    self.needsDisplay = true
  }

  //····················································································································
  //  FOCUS RING
  //····················································································································

  private var mHasFocusRing = false {
    didSet {
      self.needsDisplay = true
    }
  }

  //····················································································································

  func setFocusRing (_ inValue : Bool) {
    self.mHasFocusRing = inValue
  }

  //····················································································································

  override func draw (_ inDirtyRect : NSRect) {
    super.draw (inDirtyRect)
    if self.mHasFocusRing {
      let width = (MARGIN - 1.0) / 2.0
      let r = self.bounds.insetBy (dx: width, dy: width)
      let bp = NSBezierPath (roundedRect: r, xRadius: width / 2.0, yRadius: width / 2.0)
      bp.lineWidth = width * 2.0
      NSColor.keyboardFocusIndicatorColor.setStroke ()
      bp.stroke ()
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
