//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBGraphicView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension EBGraphicView {

  //····················································································································

  fileprivate func updateOutlet (_ controlKeyHiliteDiameter : EBReadOnlyProperty_Double) {
    switch controlKeyHiliteDiameter.prop {
    case .empty, .multiple :
      self.set (controlKeyHiliteDiameter: 0.0)
    case .single (let v) :
      self.set (controlKeyHiliteDiameter: milsToCocoaUnit (CGFloat (v)))
    }
  }

  //····················································································································

  func bind_controlKeyHiliteDiameter (_ controlKeyHiliteDiameter : EBReadOnlyProperty_Double, file : String, line : Int) {
    self.mControlKeyHiliteDiameterController = EBSimpleController (
      observedObjects: [controlKeyHiliteDiameter],
      callBack: { self.updateOutlet (controlKeyHiliteDiameter) }
    )
  }

  //····················································································································

  func unbind_controlKeyHiliteDiameter () {
    self.mControlKeyHiliteDiameterController?.unregister ()
    self.mControlKeyHiliteDiameterController = nil
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
