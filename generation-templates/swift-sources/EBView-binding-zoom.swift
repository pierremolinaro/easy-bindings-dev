//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension EBView {

  //····················································································································

  func bind_zoom (_ zoom : EBReadWriteProperty_Int, file : String, line : Int) {
    self.mZoomController = Controller_CanariViewWithZoomAndFlip_zoom (zoom:zoom, outlet:self)
  }

  //····················································································································

  func unbind_zoom () {
    self.mZoomController?.unregister ()
    self.mZoomController = nil
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Controller_CanariViewWithZoomAndFlip_zoom
//   MARK: -
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class Controller_CanariViewWithZoomAndFlip_zoom : EBSimpleController {

  private let mZoomProperty : EBReadWriteProperty_Int
  private let mOutlet : EBView

  //····················································································································

  init (zoom : EBReadWriteProperty_Int, outlet : EBView) {
    mZoomProperty = zoom
    mOutlet = outlet
    super.init (observedObjects:[zoom])
    self.mEventCallBack = { [weak self] in self?.updateOutlet () }
  }

  //····················································································································

  private func updateOutlet () {
    switch mZoomProperty.prop {
    case .empty, .multiple :
      mOutlet.applyZoom (100)
    case .single (let v) :
      mOutlet.applyZoom (v)
    }
  }

  //····················································································································

  func updateModel (_ sender : EBView, _ inNewZoom : Int) {
    _ = self.mZoomProperty.validateAndSetProp (inNewZoom, windowForSheet:sender.window)
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
