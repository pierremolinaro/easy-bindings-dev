//----------------------------------------------------------------------------------------------------------------------
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//----------------------------------------------------------------------------------------------------------------------

import Cocoa

//----------------------------------------------------------------------------------------------------------------------
//    ReadOnlyAbstractArrayProperty
//----------------------------------------------------------------------------------------------------------------------

class ReadOnlyAbstractArrayProperty <T : Hashable> : ReadOnlyAbstractGenericRelationshipProperty {

  //····················································································································
  // Abstract methods
  //····················································································································

  var prop : EBSelection < [T] > { get { return .empty } }  // Abstract method

  //····················································································································

  var propval : [T] { return [] } // Abstract method

  //····················································································································

  final var propset : Set <T> { return self.mInternalSetValue }

  //····················································································································
  //  Internal value
  //····················································································································

  var internalSetValue : Set <T> { return self.mInternalSetValue }

  private var mInternalSetValue = Set <T> () // Requires T to be hashable

  internal var mInternalArrayValue = [T] () {
    didSet {
      if self.mInternalArrayValue != oldValue {
        if self.mInternalArrayValue.count != oldValue.count {
          self.count_property.postEvent ()
        }
        self.postEvent ()
        self.notifyModelDidChangeFrom (oldValue: oldValue)
        self.notifyModelDidChange ()
        let newSet = Set (self.mInternalArrayValue)
        if self.mInternalSetValue != newSet {
          let oldSet = self.mInternalSetValue
          self.mInternalSetValue = newSet
          let removedSet = oldSet.subtracting (newSet)
          let addedSet = newSet.subtracting (oldSet)
          self.updateObservers (removedSet: removedSet, addedSet: addedSet)
        }
      }
    }
  }

  //····················································································································

  internal func notifyModelDidChangeFrom (oldValue inOldValue : [T]) {
  }

  //····················································································································

  internal func updateObservers (removedSet inRemovedSet : Set <T>, addedSet inAddedSet : Set <T>) {
  }

  //····················································································································
  //  count property
  //····················································································································

  final var count_property = EBTransientProperty_Int ()

  final var count_property_selection : EBSelection <Int> { return self.count_property.prop }

  //····················································································································
  //  init
  //····················································································································

  override init () {
    super.init ()
    self.count_property.mReadModelFunction = { [weak self] in
      if let me = self {
        switch me.prop {
        case .empty :
          return .empty
        case .multiple :
          return .multiple
        case .single (let v) :
          return .single (v.count)
        }
      }else{
        return .empty
      }
    }
  }

  //····················································································································

}

//----------------------------------------------------------------------------------------------------------------------
