//----------------------------------------------------------------------------------------------------------------------
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//----------------------------------------------------------------------------------------------------------------------

import Cocoa

//----------------------------------------------------------------------------------------------------------------------
//   EBGraphicView
//----------------------------------------------------------------------------------------------------------------------

extension EBGraphicView {

  //····················································································································

  final fileprivate func updateOutlet (_ zoom : EBReadOnlyProperty_Int) {
    switch zoom.selection {
    case .empty, .multiple :
      self.mZoomPropertyCache = 0
    case .single (let v) :
      self.mZoomPropertyCache = v
    }
    self.applyZoom ()
  }

  //····················································································································

  final func bind_zoom (_ zoom : EBReadWriteProperty_Int, file : String, line : Int) {
    self.mZoomController = Controller_CanariViewWithZoomAndFlip_zoom (zoom: zoom, outlet: self)
  }

  //····················································································································

  final func unbind_zoom () {
    self.mZoomController?.unregister ()
    self.mZoomController = nil
  }

  //····················································································································

}

//----------------------------------------------------------------------------------------------------------------------
//   Controller_CanariViewWithZoomAndFlip_zoom
//   MARK: -
//----------------------------------------------------------------------------------------------------------------------

final class Controller_CanariViewWithZoomAndFlip_zoom : EBReadOnlyPropertyController {

  private let mZoomProperty : EBReadWriteProperty_Int
  private let mOutlet : EBGraphicView

  //····················································································································

  init (zoom : EBReadWriteProperty_Int, outlet : EBGraphicView) {
    self.mZoomProperty = zoom
    self.mOutlet = outlet
    super.init (observedObjects:[zoom], callBack: { outlet.updateOutlet (zoom) })
  }

  //····················································································································

  func updateModel (_ sender : EBGraphicView, _ inNewZoom : Int) {
    _ = self.mZoomProperty.validateAndSetProp (inNewZoom, windowForSheet:sender.window)
  }

  //····················································································································

}

//----------------------------------------------------------------------------------------------------------------------
