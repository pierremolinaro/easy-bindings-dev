//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension EBView {

  //····················································································································

  func bind_backColor (_ model : EBReadOnlyProperty_NSColor, file:String, line:Int) {
    self.mBackColorController = EBReadOnlyController_NSColor (
      model: model,
      callBack: { [weak self] in self?.updateBackColor (from: model) }
    )
  }

  //····················································································································

  func unbind_backColor () {
    mBackColorController?.unregister ()
    mBackColorController = nil
  }

  //····················································································································

  private func updateBackColor (from model : EBReadOnlyProperty_NSColor) {
    switch model.prop {
    case .empty :
      break
    case .single (let v) :
      self.set (backColor: v)
    case .multiple :
      break
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
