#import "PMAllocationDebug.h"
#import "easy-bindings-utilities.h"
#import "PMTransientDependancyManager.h"
#import "PMEntityArrayController.h"
#import "%!DOCUMENT_NAME%.h"
#import "%!ROOT_ENTITY_NAME%.h"
%if [TRANSIENT_LIST_FOR_IMPLEMENTATION length] > 0 then
%#import "%!DOCUMENT_NAME%-computations.h"\n%
end if
foreach INCLUSION_SET do
  %#import "%!key%.h"\n%
end foreach
%
//----------------------------------------------------------------------------*

@implementation %!DOCUMENT_NAME%

//----------------------------------------------------------------------------*
//    windowNibName                                                           *
//----------------------------------------------------------------------------*

- (NSString *) windowNibName {
  return @"%!DOCUMENT_NAME%" ;
}

//----------------------------------------------------------------------------*
//    rootEntityClass                                                         *
//----------------------------------------------------------------------------*

- (Class) rootEntityClass {
  return [%!ROOT_ENTITY_NAME% class] ;
}

//----------------------------------------------------------------------------*
//    rootObject                                                              *
//----------------------------------------------------------------------------*

- (%!ROOT_ENTITY_NAME% *) rootObject {
  return (%!ROOT_ENTITY_NAME% *) mRootObject ;
}

//----------------------------------------------------------------------------*
//    windowControllerDidLoadNib                                              *
//----------------------------------------------------------------------------*

- (void) windowControllerDidLoadNib: (NSWindowController *) inWindowController { 
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"\%s", __PRETTY_FUNCTION__) ;
  #endif
  [super windowControllerDidLoadNib:inWindowController] ;
//--------------------------- Controller instanciation
%
foreach CONTROLLER_MAP do
  %//--- '%!lkey->string%' controller instanciation\n%
  %  %!lkey->string% = [%!mControllerClassName% new] ;\n%
  if mControlledClassOrEntityName->string != "" then
    %  %!lkey->string%.objectClass = [%!mControlledClassOrEntityName->string% class] ;\n%
    %  %!lkey->string%.entityManager = self.entityManager ;\n%
  end if
end foreach
%//--------------------------- Controller bindings
%
foreach CONTROLLER_MAP do
  foreach mControllerBindingList
  before 
    %//--- '%!lkey->string%' controller bindings\n%
  do
   ![mBinding generateBinding !lkey->string]
  end foreach
end foreach
%//--------------------------- Outlet bindings
%

foreach OUTLET_GENERATION_LIST do
   %//--- Outlet %!mOutletName%\n%
   %  if (nil == %!mOutletName%) {\n%
   %    presentErrorWindow (__FILE__, __LINE__, @"the '%!mOutletName%' outlet is nil") ;\n%
   %  }\n%
  foreach mOutletBindingList do
    ![mBinding generateBinding !mOutletName]
  end foreach
end foreach
%//--------------------------- Add Transient observers
%!generateAddObserverForTransients [!TRANSIENT_LIST_FOR_IMPLEMENTATION !""]
%//--------------------------- Add Signature observer
%
if HAS_SIGNATURE_OBSERVER then
  %  [mRootObject addSignatureObserver:self] ;\n%
end if
%}

//----------------------------------------------------------------------------*
//   R E M O V E    W I N D O W    C O N T R O L L E R                        *
//----------------------------------------------------------------------------*

- (void) removeWindowController:(NSWindowController *) inWindowController {
  //NSLog (@"\%s", __PRETTY_FUNCTION__) ;
//--------------------------- Add Signature observer
%
if HAS_SIGNATURE_OBSERVER then
  %  [mRootObject removeSignatureObserver:self] ;\n%
end if
%//--- Unbind Outlets
%foreach OUTLET_GENERATION_LIST do
  foreach mOutletBindingList do
    ![mBinding generateRemoveBinding !mOutletName]
  end foreach
end foreach
%//--- Unbind Controllers
%foreach CONTROLLER_MAP do
  foreach mControllerBindingList do
   ![mBinding generateRemoveBinding !lkey->string]
  end foreach
end foreach
%//--- Remove Transient observers
%!generateRemoveObserverForTransients [!TRANSIENT_LIST_FOR_IMPLEMENTATION]
%//--- Release controllers
%foreach CONTROLLER_MAP do
  %  macroReleaseSetToNil (%!lkey->string%) ;\n%
end foreach
%//--- Remove circularities in outlets
%foreach OUTLET_GENERATION_LIST do
  if mImplementsDeallocProtocol then
    %  [%!mOutletName% objectWillBeDeallocated] ;\n%
  end if 
end foreach
%//---
  [super removeWindowController:inWindowController] ;
}

% !generateObserverRoutinesForTransient [!DOCUMENT_NAME !TRANSIENT_LIST_FOR_IMPLEMENTATION !"document"]

!generateTransientCacheRoutine [!DOCUMENT_NAME !TRANSIENT_LIST_FOR_IMPLEMENTATION]

if HAS_SIGNATURE_OBSERVER then
%//----------------------------------------------------------------------------*
//   T R I G G E R    S I G N A T U R E    C O M P U T I N G                  *
//----------------------------------------------------------------------------*

- (void) triggerSignatureComputing {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"\%s", __PRETTY_FUNCTION__) ;
  #endif
%
foreach TRANSIENT_LIST_FOR_IMPLEMENTATION do
  if [mRootSignDependencyList length] > 0 then
%  if (%!mTransientName%__computed) {
    %!mTransientName%__computed = NO ;
    [PMTransientDependancyManager
      enterTriggerForObject:self
      transientIndex:%!["document." . DOCUMENT_NAME . "." . mTransientName identifierRepresentation]%
    ] ;
  }
%  
  end if
end foreach
%}

//----------------------------------------------------------------------------*

%
end if

%
