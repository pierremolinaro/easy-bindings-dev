//-----------------------------------------------------------------------------*

import Cocoa

//---------------------------------------------------------------------------*
//                                                                           *
//    T O P O L O G I C A L    S O R T    O F    P R O P E R T I E S         *
//                                                                           *
//---------------------------------------------------------------------------*

%!TRANSIENT_LIST_STRING%

//---------------------------------------------------------------------------*
//                                                                           *
//    T R A N S I E N T    I N D E X E S                                     *
//                                                                           *
//---------------------------------------------------------------------------*

%!TRANSIENT_INDEXES%

//---------------------------------------------------------------------------*
//                                                                           *
//    T R A N S I E N T    P R O T O C O L S                                 *
//                                                                           *
//---------------------------------------------------------------------------*

%
foreach TRANSIENT_LIST
do index idx
%@objc(protocol_%![mValue identifierRepresentation]%) protocol protocol_%![mValue identifierRepresentation]% {
  func %![mValue identifierRepresentation]%_didChange ()
}

%
between
%//---------------------------------------------------------------------------*\n\n%
end  
%//---------------------------------------------------------------------------*
//                                                                           *
//    T R A N S I E N T    T R I G G E R    F U N C T I O N S                *
//                                                                           *
//---------------------------------------------------------------------------*

%
foreach TRANSIENT_LIST
do index idx
%func enterTriggerForObject_%![mValue identifierRepresentation]% (inObject : protocol_%![mValue identifierRepresentation]%) { // %![idx string]%
  var theApp = NSApp as PMApplication
  theApp.enterTriggerForObject_%![mValue identifierRepresentation]% (inObject) ;
}

%
between
%//---------------------------------------------------------------------------*\n\n%
end  
%//-----------------------------------------------------------------------------*

@objc(PMApplication) class PMApplication : NSApplication {

  //---------------------------------------------------------------------------*

%
  foreach TRANSIENT_LIST do index idx
%  var mObserverObject_%![mValue identifierRepresentation]% : NSMutableSet = NSMutableSet () // %![idx string]%\n%
%  func enterTriggerForObject_%![mValue identifierRepresentation]% (inObject : AnyObject) {
    mObserverObject_%![mValue identifierRepresentation]%.addObject (inObject)
  }\n\n%
  end  
%  //---------------------------------------------------------------------------*
 
  override func sendEvent (inEvent : NSEvent!) {
    super.sendEvent (inEvent)
    triggerChange ()
    displayAllocation ()
  }
  
  //---------------------------------------------------------------------------*

  override func sendAction (theAction: Selector, to theTarget: AnyObject!, from sender: AnyObject!) -> Bool {
    let result = super.sendAction (theAction, to:theTarget, from:sender)
    triggerChange ()
    displayAllocation ()
    return result
  }

  //---------------------------------------------------------------------------*
  
  func triggerChange () {
%
  foreach TRANSIENT_LIST do index idx
%    if mObserverObject_%![mValue identifierRepresentation]%.count () > 0 { // %![idx string]%
      let s = mObserverObject_%![mValue identifierRepresentation]%
      mObserverObject_%![mValue identifierRepresentation]% = NSMutableSet ()
      for anyObject : AnyObject in s {
        let object = anyObject as protocol_%![mValue identifierRepresentation]%
        object.%![mValue identifierRepresentation]%_didChange ()
        // object.willChangeValueForKey ("%![mValue pathExtension]%")
        // object.didChangeValueForKey  ("%![mValue pathExtension]%")
      }
    }    
%  end  
%  }

  //---------------------------------------------------------------------------*

}
