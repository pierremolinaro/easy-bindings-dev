//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

private let DEBUG_EVENT = false

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    EBTableView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(EBTableView) class EBTableView : NSTableView, EBUserClassNameProtocol {

  //····················································································································

  required init? (coder: NSCoder) {
    super.init (coder:coder)
    noteObjectAllocation (self)
  }

  //····················································································································

  override init (frame:NSRect) {
    super.init (frame:frame)
    noteObjectAllocation (self)
  }
  
  //····················································································································

  deinit {
    noteObjectDeallocation (self)
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    EBTableViewDataSource
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(EBTableViewDataSource) protocol EBTableViewDataSource : NSTableViewDataSource {
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    EBTableViewDelegate
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(EBTableViewDelegate) protocol EBTableViewDelegate : NSTableViewDelegate {
  func selectedObjectIndexSet () -> NSIndexSet
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Controller DataSource_EBTableView_controller
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(DataSource_EBTableView_controller) final class DataSource_EBTableView_controller : EBOutletEvent {

  private let mDelegate : EBTableViewDelegate
  private let mTableView : EBTableView

  //····················································································································
  //   When init is called, table view delegate and data source are set
  //····················································································································
  
  init (delegate:EBTableViewDelegate, tableView:EBTableView) {
    mTableView = tableView
    mDelegate = delegate
    super.init ()
    self.mEventCallBack = { [weak self] in self?.updateOutlet () }
  }

  //····················································································································
  
  private func updateOutlet () {
    if DEBUG_EVENT {
      print ("DataSource_EBTableView_controller::\(#function)")
    }
  //---------------- Get current selection, as reloadData may change it
    let newTableViewSelectionIndexSet = self.mDelegate.selectedObjectIndexSet ()
  //---------------- Reload data
    mTableView.reloadData ()
  //---------------- Update table view selection
    if !newTableViewSelectionIndexSet.isEqual (to: mTableView.selectedRowIndexes) {
      mTableView.selectRowIndexes (newTableViewSelectionIndexSet as IndexSet, byExtendingSelection:false)
    }
  //---------------- Scroll first selected row to visible
    if newTableViewSelectionIndexSet.count > 0 {
      self.mTableView.scrollRowToVisible (newTableViewSelectionIndexSet.firstIndex)
    }
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Controller Selection_EBTableView_controller
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(Selection_EBTableView_controller) final class Selection_EBTableView_controller : EBOutletEvent {

  private let mDelegate : EBTableViewDelegate
  private let mTableView : EBTableView

  //····················································································································
  //   When init is called, table view delegate and data source are set
  //····················································································································
  
  init (delegate:EBTableViewDelegate, tableView:EBTableView) {
    mTableView = tableView
    mDelegate = delegate
    super.init ()
    self.mEventCallBack = { [weak self] in self?.updateOutlet () }
  }

  //····················································································································
  
  private func updateOutlet () {
    if DEBUG_EVENT {
      print ("Selection_EBTableView_controller::\(#function)")
    }
  //---------------- Update table view selection
    let newTableViewSelectionIndexSet = self.mDelegate.selectedObjectIndexSet ()
    if !newTableViewSelectionIndexSet.isEqual (to: mTableView.selectedRowIndexes) {
      mTableView.selectRowIndexes (newTableViewSelectionIndexSet as IndexSet, byExtendingSelection:false)
    }
  //---------------- Scroll first selected row to visible
    if newTableViewSelectionIndexSet.count > 0 {
      self.mTableView.scrollRowToVisible (newTableViewSelectionIndexSet.firstIndex)
    }
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
