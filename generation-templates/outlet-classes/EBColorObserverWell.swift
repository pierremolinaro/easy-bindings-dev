//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBColorObserverWell
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(EBColorObserverWell) final class EBColorObserverWell : NSColorWell, EBUserClassNameProtocol {

  //····················································································································

  required init? (coder : NSCoder) {
    super.init (coder: coder)
    noteObjectAllocation (self)
    self.isEnabled = false
  }

  //····················································································································

  override init (frame : NSRect) {
    super.init (frame: frame)
    noteObjectAllocation (self)
    self.isEnabled = false
  }

  //····················································································································
  //  color binding
  //····················································································································

  private var mValueController : Controller_EBColorObserverWell_color? = nil

  final func bind_colorObserver (_ object : EBReadOnlyProperty_NSColor, file : String, line : Int) {
    self.mValueController = Controller_EBColorObserverWell_color (object:object, outlet:self)
  }

  final func unbind_colorObserver () {
    self.mValueController?.unregister ()
    self.mValueController = nil
  }

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Controller_EBColorObserverWell_color
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class Controller_EBColorObserverWell_color : EBReadOnlyPropertyController {

  private let mObject : EBReadOnlyProperty_NSColor
  private let mOutlet : EBColorObserverWell

  //····················································································································

  init (object : EBReadOnlyProperty_NSColor, outlet : EBColorObserverWell) {
    mObject = object
    mOutlet = outlet
    super.init (observedObjects: [object], outlet: outlet)
    self.mEventCallBack = { [weak self] in self?.updateOutlet () }
  }

  //····················································································································

  private func updateOutlet () {
    switch self.mObject.selection {
    case .empty, .multiple :
      self.mOutlet.color = NSColor.white
    case .single (let v) :
      self.mOutlet.color = v
    }
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
