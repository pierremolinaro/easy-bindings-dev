//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBTextObserverView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(EBTextObserverView) class EBTextObserverView : NSTextView, EBUserClassNameProtocol {

  //····················································································································

  required init? (coder: NSCoder) {
    super.init (coder:coder)
    noteObjectAllocation (self)
    self.editable = false
  }

  //····················································································································

  deinit {
    noteObjectDeallocation (self)
  }

  //····················································································································
  //  valueObserver binding
  //····················································································································

  private var mValueController : Controller_EBTextObserverView_value?

  func bind_valueObserver (object:EBReadOnlyProperty_String, file:String, line:Int) {
    mValueController = Controller_EBTextObserverView_value (object:object, outlet:self, file:file, line:line)
  }

  //····················································································································

  func unbind_valueObserver () {
    mValueController?.unregister ()
    mValueController = nil
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Controller Controller_EBTextObserverView_value
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@objc(Controller_EBTextObserverView_value) final class Controller_EBTextObserverView_value : EBSimpleController {

  private let mOutlet: EBTextObserverView
  private let mObject : EBReadOnlyProperty_String

  //····················································································································

  init (object:EBReadOnlyProperty_String, outlet : EBTextObserverView, file : String, line : Int) {
    mObject = object
    mOutlet = outlet
    super.init (objects:[object], outlet:outlet)
    object.addEBObserver (self)
  }

  //····················································································································
  
  func unregister () {
    mObject.removeEBObserver (self)
  }

  //····················································································································

  override func sendUpdateEvent () {
    switch mObject.prop {
    case .noSelection, .multipleSelection :
      mOutlet.string = ""
    case .singleSelection (let propertyValue) :
      mOutlet.string = propertyValue
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
