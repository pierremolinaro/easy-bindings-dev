#import "%!PREFERENCES_NAME%.h"
#import "easy-bindings-utilities.h"
%if ([TRANSIENT_LIST_FOR_IMPLEMENTATION length] + [ACTION_LIST length]) > 0 then
  %#import "%!PREFERENCES_NAME%-computations.h"%
end if%

//----------------------------------------------------------------------------*

%!PREFERENCES_NAME% * g_%!PREFERENCES_NAME% ;

//----------------------------------------------------------------------------*

@implementation %!PREFERENCES_NAME%

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

%foreach ATTRIBUTE_LIST_FOR_GENERATION do
%@synthesize %!mPropertyName% ;\n%
end foreach%
//----------------------------------------------------------------------------*
//    Init                                                                    *
//----------------------------------------------------------------------------*

- (id) init {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"\%s", __PRETTY_FUNCTION__) ;
  #endif
  self = [super init] ;
  if (self) {
    #ifdef PM_COCOA_DEBUG
      objectHasBeenAllocated (self) ;
    #endif
    g_%!PREFERENCES_NAME% = self ;
  //---
%foreach ATTRIBUTE_LIST_FOR_GENERATION
  before
    %    NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;\n%
    %    id value ;\n%
  do
    %    value = [ud objectForKey:@"%!PREFERENCES_NAME%:%!mPropertyName%"] ;\n%
    %    if (nil == value) {\n%
    %      self.%!mPropertyName% = %!mDirectDefaultValue% ;\n%
    %    }else{\n%
    %      self.%!mPropertyName% = %![mType preferencesGetterTransformerFunctionName]% (value) ;\n%
    %    }\n%
end foreach
%  //---
    [[NSNotificationCenter defaultCenter]
      addObserver:self
      selector:@selector(applicationWillTerminateAction:)
      name:NSApplicationWillTerminateNotification
      object:nil
    ] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    applicationWillTerminateAction:                                         *
//----------------------------------------------------------------------------*

- (void) applicationWillTerminateAction: (NSNotification *) inNotification {
%foreach ATTRIBUTE_LIST_FOR_GENERATION
  before
    %  NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;\n%
  do
    %  [ud setObject:%![mType preferencesSetterTransformerFunctionName]% (%!mPropertyName%) forKey:@"%!PREFERENCES_NAME%:%!mPropertyName%"] ;\n%
end foreach%}

//----------------------------------------------------------------------------*
//    awakeFromNib                                                            *
//----------------------------------------------------------------------------*

- (void) awakeFromNib {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"\%s", __PRETTY_FUNCTION__) ;
  #endif
%
foreach OUTLET_DECLARATION_LIST do
   %//--- check %!mOutletName%' outlet not nil\n%
   %  if (nil == %!mOutletName%) {\n%
   %    presentErrorWindow (__FILE__, __LINE__, @"the '%!mOutletName%' outlet is nil") ;\n%
   %  }\n%
  foreach mOutletBindingList do
    ![mBinding generateBinding !mOutletName]
  end foreach
end foreach
%}

%foreach TRANSIENT_LIST_FOR_IMPLEMENTATION do
  %//----------------------------------------------------------------------------*\n%
  %//    '%!mTransientName%' transient                                  *\n%
  %//----------------------------------------------------------------------------*\n\n%
  %+ (NSSet *) keyPathsForValuesAffecting%![mTransientName stringByCapitalizingFirstCharacter]% {\n%
  %  return [NSSet setWithObjects:%
  foreach mDependencyList do
    % @"%!mMasterName%", %
  end foreach
  %nil] ;\n%
  %}\n\n%
  %//----------------------------------------------------------------------------*\n\n%
  %- (%![mType ocTypeName]%) %!mTransientName% {\n%
  %  return %
  %compute_%!PREFERENCES_NAME%_%!mTransientName% (%
  foreach mDependencyList
  do %self.%!mMasterName%%
  between %, %
  end foreach
  %)%
  if [mType copyOnAssign] then %.copy% end if
  % ;\n%
  %}\n\n%
end foreach
%//----------------------------------------------------------------------------*
//    Actions                                                                 *
//----------------------------------------------------------------------------*
%foreach ACTION_LIST do
%
- (IBAction) %!mValue->string%: (id) inSender {
  %!mValue->string%_%!PREFERENCES_NAME%_action (self, inSender) ;
}\n\n%
%//----------------------------------------------------------------------------*\n%
end foreach%


