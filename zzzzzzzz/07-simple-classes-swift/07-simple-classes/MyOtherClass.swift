//-----------------------------------------------------------------------------*
//                                                                             *
//                         File 'MyOtherClass.swift'                           *
//                         Generated by version 0.0.1                          *
//                       august 7th, 2014, at 18h23'59"                        *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

import Cocoa

//----------------------------------------------------------------------------*

@objc(MyOtherClass) class MyOtherClass : MyClass {

  //-------------------------------------------------------------------------------------------------------------------*
  //    Attribute: chose                                                                                               *
  //-------------------------------------------------------------------------------------------------------------------*

  var chose__explorer : NSTextField?
  var chose_observers = NSMutableSet ()

  var chose : Bool =  false {
    didSet {
      if chose__explorer {
        chose__explorer!.stringValue = chose ? "true" : "false"
      }
    //--- Notify observers
      for anyObject in chose_observers.allObjects {
        let object = anyObject as PMTriggerProtocol
        enterTriggerWithObject (object)
      }
    }
  }

  func addObserverOf_chose (inObserver : PMTriggerProtocol) {
    chose_observers.addObject (inObserver)
    enterTriggerWithObject (inObserver)
  }

  func removeObserverOf_chose (inObserver : PMTriggerProtocol) {
    chose_observers.removeObject (inObserver)
    enterTriggerWithObject (inObserver)
  }
  //-------------------------------------------------------------------------------------------------------------------*
  //    Transient: bidule                                                                                              *
  //-------------------------------------------------------------------------------------------------------------------*

  var bidule_observers = NSMutableSet ()
  var bidule__cache : String?
  var bidule : String {
    if bidule__cache == nil {
      if TRACE_TRANSIENT_TRIGGER {
        NSLog ("Compute transient MyOtherClass.bidule")
      }
      bidule__cache = compute_MyOtherClass_bidule (chose, schmurtz) ;
    }
    return bidule__cache!
  }

  func class_2E_MyOtherClass_2E_bidule_didChange () {
    self.willChangeValueForKey ("bidule")
    self.didChangeValueForKey  ("bidule")
    for anyObject in bidule_observers {
      let object = anyObject as PMTriggerProtocol
      enterTriggerWithObject (object)
    }
  }

   func addObserverOf_bidule (inObserver : PMTriggerProtocol) {
    bidule_observers.addObject (inObserver)
    enterTriggerWithObject (inObserver)
  }
 
  func removeObserverOf_bidule (inObserver : PMTriggerProtocol) {
    bidule_observers.removeObject (inObserver)
    enterTriggerWithObject (inObserver)
  }

  var triggerObjectFor_class_2E_MyOtherClass_2E_bidule__cache : PMTrigger_class_2E_MyOtherClass_2E_bidule? = nil
  var triggerObjectFor_class_2E_MyOtherClass_2E_bidule : PMTrigger_class_2E_MyOtherClass_2E_bidule {
    if !triggerObjectFor_class_2E_MyOtherClass_2E_bidule__cache {
      triggerObjectFor_class_2E_MyOtherClass_2E_bidule__cache = PMTrigger_class_2E_MyOtherClass_2E_bidule (object:self)
    }
    return triggerObjectFor_class_2E_MyOtherClass_2E_bidule__cache!
  }
  
  //-------------------------------------------------------------------------------------------------------------------*
  //    init                                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

  init () {
    super.init ()
  //--- Add Transient observers
    addObserverOf_chose (triggerObjectFor_class_2E_MyOtherClass_2E_bidule)
    addObserverOf_schmurtz (triggerObjectFor_class_2E_MyOtherClass_2E_bidule)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    deinit                                                                                                         *
  //-------------------------------------------------------------------------------------------------------------------*

  deinit {
    removeObserverOf_chose (triggerObjectFor_class_2E_MyOtherClass_2E_bidule)
    removeObserverOf_schmurtz (triggerObjectFor_class_2E_MyOtherClass_2E_bidule)
  }

  //-------------------------------------------------------------------------------------------------------------------*

}

//----------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


