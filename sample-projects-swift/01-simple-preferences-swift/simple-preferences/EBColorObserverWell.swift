//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
//   EBColorObserverWell
//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(EBColorObserverWell) class EBColorObserverWell : NSColorWell, EBUserClassNameProtocol {

  //···················································································································*

  required init? (coder: NSCoder) {
    super.init (coder:coder)
    noteObjectAllocation (self)
    self.isEnabled = false
  }

  //···················································································································*

  override init (frame:NSRect) {
    super.init (frame:frame)
    noteObjectAllocation (self)
    self.isEnabled = false
  }
  
  //···················································································································*

  deinit {
    noteObjectDeallocation (self)
  }

  //···················································································································*
  //  color binding                                                                                                    *
  //···················································································································*

  private var mValueController : Controller_EBColorObserverWell_color?

  func bind_colorObserver (_ object:EBReadOnlyProperty_NSColor, file:String, line:Int) {
    mValueController = Controller_EBColorObserverWell_color (object:object, outlet:self, file:file, line:line)
  }

  func unbind_colorObserver () {
    mValueController?.unregister ()
    mValueController = nil
  }

}

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
//   Controller_EBColorObserverWell_color                                                                                      *
//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(Controller_EBColorObserverWell_color)
final class Controller_EBColorObserverWell_color : EBSimpleController {

  private let mObject : EBReadOnlyProperty_NSColor
  private let mOutlet : EBColorObserverWell

  //···················································································································*

  init (object : EBReadOnlyProperty_NSColor, outlet : EBColorObserverWell, file : String, line : Int) {
    mObject = object
    mOutlet = outlet
    super.init (objects:[object], outlet:outlet)
    mObject.addEBObserver (self)
  }

  //···················································································································*
  
  func unregister () {
    mObject.removeEBObserver (self)
  }

  //···················································································································*

  override func sendUpdateEvent () {
    switch mObject.prop {
    case .noSelection, .multipleSelection :
      mOutlet.color = NSColor.white ()
    case .singleSelection (let v) :
      mOutlet.color = v
    }
  }

  //···················································································································*
}

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
