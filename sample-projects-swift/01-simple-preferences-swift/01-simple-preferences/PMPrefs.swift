//-----------------------------------------------------------------------------*
//                                                                             *
//                              File 'PMPrefs.m'                               *
//                     Generated by version 0.0.1 [debug]                      *
//                        june 3rd, 2014, at 21h49'48"                         *
//                                                                             *
//-----------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

import Cocoa

@objc (PMPrefs) class PMPrefs : NSObject {
  //------------------------------------------------------ Outlets
  @IBOutlet var myTextField : NSTextField
  @IBOutlet var myOtherTextField : NSTextField
  @IBOutlet var mColorWell : NSColorWell
  @IBOutlet var mDatePicker : NSDatePicker
  @IBOutlet var mInteger32TextField : NSTextField
  
  //------------------------------------------------------- Init
  init () {
    super.init ()
  //  macroNoteObjectAllocation ;
  //  g_PMPrefs = self ;
    //---
    var ud = NSUserDefaults.standardUserDefaults ()
    //---
    var value : AnyObject
    value = ud.objectForKey ("PMPrefs:myString")
    if (nil != value) {
      myString = value as String ;
    }
    value = ud.objectForKey ("PMPrefs:mColor")
    if (nil != value) {
      mColor = valueFromData (value as NSData) as NSColor ;
    }
    value = ud.objectForKey ("PMPrefs:mDate")
    if (nil != value) {
      mDate = value as NSDate ;
    }
    value = ud.objectForKey ("PMPrefs:mIntegerValue")
    if (nil != value) {
      mIntegerValue = NSIntegerFromNSNumber (value as NSNumber) ;
    }
    //---
    NSNotificationCenter.defaultCenter ().addObserver (self,
     selector:"applicationWillTerminateAction:",
     name:NSApplicationWillTerminateNotification,
     object:nil
    )
  }

  func applicationWillTerminateAction (NSNotification) {
    var ud = NSUserDefaults.standardUserDefaults ()
    ud.setObject (myString, forKey:"PMPrefs:myString")
    ud.setObject (dataEncodedValue (mColor), forKey:"PMPrefs:mColor")
    ud.setObject ( (mDate), forKey:"PMPrefs:mDate")
    ud.setObject (numberEncodedNSInteger (mIntegerValue), forKey:"PMPrefs:mIntegerValue")
  }

  //------------------------------------------------------- 'myString' attribute
  var myString_observers = NSMutableSet ()
  var myString : String = "hello" {
    didSet {
      myString_observers.makeObjectsPerformSelector ("preference_2E_PMPrefs_2E_myString_didChange")
    }
  }
  
  func addObserverOf_myString (inObserver : AnyObject!) {
    myString_observers.addObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_myString_didChange", to:inObserver, from:self)
  }
  func removeObserverOf_myString (inObserver: AnyObject!) {
    myString_observers.removeObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_myString_didChange", to:inObserver, from:self)
  }
  
  //--------------------------------------------------------- 'mColor' attribute
  var mColor_observers = NSMutableSet ()
  var mColor : NSColor = NSColor.yellowColor () {
    didSet {
      mColor_observers.makeObjectsPerformSelector ("preference_2E_PMPrefs_2E_mColor_didChange")
    }
  }
  func addObserverOf_mColor (inObserver : AnyObject!) {
    mColor_observers.addObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_mColor_didChange", to:inObserver, from:self)
  }
  func removeObserverOf_mColor (inObserver : AnyObject!) {
    mColor_observers.removeObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_mColor_didChange", to:inObserver, from:self)
  }
  
  //--------------------------------------------------------- 'mDate' attribute
  var mDate_observers = NSMutableSet ()
  var mDate : NSDate = NSDate.date () {
    didSet {
      mDate_observers.makeObjectsPerformSelector ("preference_2E_PMPrefs_2E_mDate_didChange")
    }
  }
  func addObserverOf_mDate (inObserver : AnyObject!) {
    mDate_observers.addObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_mDate_didChange", to:inObserver, from:self)
  }
  func removeObserverOf_mDate (inObserver : AnyObject!) {
    mDate_observers.removeObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_mDate_didChange", to:inObserver, from:self)
  }
  
  //--- 'mIntegerValue' attribute
  var mIntegerValue_observers = NSMutableSet ()
  var mIntegerValue : Int64 = 123 {
    didSet {
      if !(mIntegerValue == oldValue) {
        mIntegerValue_observers.makeObjectsPerformSelector ("preference_2E_PMPrefs_2E_mIntegerValue_didChange")
      }
    }
  }
  func addObserverOf_mIntegerValue (inObserver : AnyObject!) {
    mIntegerValue_observers.addObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_mIntegerValue_didChange", to:inObserver, from:self)
  }
  func removeObserverOf_mIntegerValue (inObserver : AnyObject!) {
    mIntegerValue_observers.removeObject (inObserver)
    NSApp.sendAction ("preference_2E_PMPrefs_2E_mIntegerValue_didChange", to:inObserver, from:self)
  }
  
  //----------------------------------------------------------------------------*
  //    awakeFromNib                                                            *
  //----------------------------------------------------------------------------*
  
  override func awakeFromNib () {
    //#ifdef EASY_BINDINGS_DEBUG
    // NSLog (@"%s", __PRETTY_FUNCTION__) ;
    //#endif
    //--- check myTextField' outlet not nil
    if (nil == myTextField) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myTextField' outlet is nil") ;
    }
    myTextField.bind ("value",
      toObject:self,
      withKeyPath:"myString",
      options:nil
    )
    //--- check myOtherTextField' outlet not nil
    if (nil == myOtherTextField) {
      presentErrorWindow (__FILE__, __LINE__, "the 'myOtherTextField' outlet is nil") ;
    }
    myOtherTextField.bind ("value",
      toObject:self,
      withKeyPath:"myString",
      options:["NSContinuouslyUpdatesValue" : true]
    )
    //--- check mColorWell' outlet not nil
    if (nil == mColorWell) {
      presentErrorWindow (__FILE__, __LINE__, "the 'mColorWell' outlet is nil") ;
    }
    mColorWell.bind ("value",
      toObject:self,
      withKeyPath:"mColor",
      options:nil
    )
    //--- check mDatePicker' outlet not nil
    if (nil == mDatePicker) {
      presentErrorWindow (__FILE__, __LINE__, "the 'mDatePicker' outlet is nil") ;
    }
    mDatePicker.bind ("value",
      toObject:self,
      withKeyPath:"mDate",
      options:nil
    )
    //--- check mInteger32TextField' outlet not nil
    if nil == mInteger32TextField {
      presentErrorWindow (__FILE__, __LINE__, "the 'mInteger32TextField' outlet is nil") ;
    }
    if (nil != mInteger32TextField) && (nil == mInteger32TextField.formatter) {
      presentErrorWindow (__FILE__, __LINE__, "the 'mInteger32TextField' outlet has no formatter, it should have an NSNumberFormatter") ;
// ???    }else if (nil != mInteger32TextField) && !(mInteger32TextField.formatter is NSNumberFormatter) {
//      presentErrorWindow (__FILE__, __LINE__, "the 'mInteger32TextField outlet has a formatter that is not kind of NSNumberFormatter class") ;
    }
    mInteger32TextField.bind ("value",
      toObject:self,
      withKeyPath:"mIntegerValue",
      options:nil
    )
  //  [self PMPrefs_did_awakeFromNib] ;
  }
  
}

extension PMPrefs {
  @IBAction func monAction (inSender: AnyObject) {
  }
  
  @IBAction func autreAction (inSender: AnyObject) {
  }
}

/*#import "easy-bindings-utilities.h"
#import "PMAllocationDebug.h"
//#import "PMTransientDependancyManager.h"
#import "PMPrefs.h"
#import <objc/runtime.h>

//----------------------------------------------------------------------------*

PMPrefs * g_PMPrefs ;

//----------------------------------------------------------------------------*

@implementation PMPrefs

//----------------------------------------------------------------------------*
//    Synthesize properties                                                   *
//----------------------------------------------------------------------------*

@synthesize myString ;
@synthesize mColor ;
@synthesize mDate ;
@synthesize mIntegerValue ;

//----------------------------------------------------------------------------*
//    Init                                                                    *
//----------------------------------------------------------------------------*

- (instancetype) init {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
  self = [super init] ;
  if (self) {
    macroNoteObjectAllocation ;
    g_PMPrefs = self ;
  //---
    NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;
  //---
    id value ;
    value = [ud objectForKey:@"PMPrefs:myString"] ;
    if (nil == value) {
      self.myString = @"hello" ;
    }else{
      self.myString =  (value) ;
    }
    value = [ud objectForKey:@"PMPrefs:mColor"] ;
    if (nil == value) {
      self.mColor = [NSColor yellowColor] ;
    }else{
      self.mColor = valueFromData (value) ;
    }
    value = [ud objectForKey:@"PMPrefs:mDate"] ;
    if (nil == value) {
      self.mDate = [NSDate date] ;
    }else{
      self.mDate =  (value) ;
    }
    value = [ud objectForKey:@"PMPrefs:mIntegerValue"] ;
    if (nil == value) {
      self.mIntegerValue = 123 ;
    }else{
      self.mIntegerValue = NSIntegerFromNSNumber (value) ;
    }
  //---
    [[NSNotificationCenter defaultCenter]
      addObserver:self
      selector:@selector(applicationWillTerminateAction:)
      name:NSApplicationWillTerminateNotification
      object:nil
    ] ;
  //---
    [self PMPrefs_did_init] ;
  }
  return self ;
}

//----------------------------------------------------------------------------*
//    Dealloc                                                                 *
//----------------------------------------------------------------------------*

- (void) dealloc {
  macroNoteObjectDeallocation ;
  macroSuperDealloc ;
}

//----------------------------------------------------------------------------*
//    applicationWillTerminateAction:                                         *
//----------------------------------------------------------------------------*

- (void) applicationWillTerminateAction: (NSNotification *) inNotification {
  NSUserDefaults * ud = [NSUserDefaults standardUserDefaults] ;
//---
  [ud setObject: (myString) forKey:@"PMPrefs:myString"] ;
  [ud setObject:dataEncodedValue (mColor) forKey:@"PMPrefs:mColor"] ;
  [ud setObject: (mDate) forKey:@"PMPrefs:mDate"] ;
  [ud setObject:numberEncodedNSInteger (mIntegerValue) forKey:@"PMPrefs:mIntegerValue"] ;
}

//----------------------------------------------------------------------------*
//    awakeFromNib                                                            *
//----------------------------------------------------------------------------*

- (void) awakeFromNib {
  #ifdef EASY_BINDINGS_DEBUG
    NSLog (@"%s", __PRETTY_FUNCTION__) ;
  #endif
//--- check myTextField' outlet not nil
  if (nil == myTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myTextField' outlet is nil") ;
  }
  [myTextField
    bind:@"value"
    toObject:self
    withKeyPath:@"myString"
    options:nil
  ] ;
//--- check myOtherTextField' outlet not nil
  if (nil == myOtherTextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'myOtherTextField' outlet is nil") ;
  }
  [myOtherTextField
    bind:@"value"
    toObject:self
    withKeyPath:@"myString"
    options:[NSDictionary dictionaryWithObjectsAndKeys:
      [NSNumber numberWithBool:YES], @"NSContinuouslyUpdatesValue",
      nil
    ]
  ] ;
//--- check mColorWell' outlet not nil
  if (nil == mColorWell) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mColorWell' outlet is nil") ;
  }
  [mColorWell
    bind:@"value"
    toObject:self
    withKeyPath:@"mColor"
    options:nil
  ] ;
//--- check mDatePicker' outlet not nil
  if (nil == mDatePicker) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mDatePicker' outlet is nil") ;
  }
  [mDatePicker
    bind:@"value"
    toObject:self
    withKeyPath:@"mDate"
    options:nil
  ] ;
//--- check mInteger32TextField' outlet not nil
  if (nil == mInteger32TextField) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mInteger32TextField' outlet is nil") ;
  }
  if ((nil != mInteger32TextField) && (nil == mInteger32TextField.formatter)) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mInteger32TextField' outlet has no formatter, it should have an NSNumberFormatter") ;
  }else if ((nil != mInteger32TextField) && ![mInteger32TextField.formatter isKindOfClass:[NSNumberFormatter class]]) {
    presentErrorWindow (__FILE__, __LINE__, @"the 'mInteger32TextField outlet has a formatter that is not kind of NSNumberFormatter class") ;
  }
  [mInteger32TextField
    bind:@"value"
    toObject:self
    withKeyPath:@"mIntegerValue"
    options:nil
  ] ;

//---
  [self PMPrefs_did_awakeFromNib] ;
}

//----------------------------------------------------------------------------*


//--- START OF USER ZONE 2

//----------------------------------------------------------------------------*

- (void) PMPrefs_did_init {
}

//----------------------------------------------------------------------------*

- (void) PMPrefs_did_awakeFromNib {
}

//----------------------------------------------------------------------------*

- (void) monAction:(id)inSender {

}

//----------------------------------------------------------------------------*

- (void) autreAction:(id)inSender {

}

//----------------------------------------------------------------------------*

*/

