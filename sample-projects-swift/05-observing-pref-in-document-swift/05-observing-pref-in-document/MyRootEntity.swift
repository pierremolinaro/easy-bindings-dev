//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             File 'MyRootEntity.swift'                                               *
//                                             Generated by version 0.0.1                                              *
//                                         september 5th, 2014, at 17h48'56"                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

import Cocoa

//---------------------------------------------------------------------------------------------------------------------*

@objc(MyRootEntity) class MyRootEntity : PMManagedObject {


  //-------------------------------------------------------------------------------------------------------------------*
  //    Attribute: docString                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

  private var docString_explorer : NSTextField? = nil
  private var docString_observers = NSMutableSet ()
  var docString : String = "doc string" {
    didSet {
      if docString != oldValue {
        mUndoManager?.registerUndoWithTarget (self, selector:"undoFor_docString:", object:oldValue)
        docString_explorer?.stringValue = docString
        for anyObject in docString_observers {
          let object = anyObject as PMTriggerProtocol
          enterTriggerWithObject (object)
        }
      }
    }
  }

  func undoFor_docString (value : String) {
    docString = value
  }

  func addObserverOf_docString (inObserver : PMTriggerProtocol) {
    docString_observers.addObject (inObserver)
    enterTriggerWithObject (inObserver)
  }
 
  func removeObserverOf_docString (inObserver : PMTriggerProtocol) {
    docString_observers.removeObject (inObserver)
    enterTriggerWithObject (inObserver)
  }


  //-------------------------------------------------------------------------------------------------------------------*
  //    init                                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

  override init (undoManager : NSUndoManager) {
    super.init (undoManager:undoManager)
  //--- Register trigger objects
    g_MyPrefs?.addObserverOf_myPrefString (triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString)
    addObserverOf_docString (triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString)
    g_MyPrefs?.addObserverOf_myPrefString (triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString)
    g_MyPrefs?.addObserverOf_prefTransientString (triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    deinit                                                                                                         *
  //-------------------------------------------------------------------------------------------------------------------*

  deinit {
  //--- Unregister trigger objects
    g_MyPrefs?.removeObserverOf_myPrefString (triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString)
    removeObserverOf_docString (triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString)
    g_MyPrefs?.removeObserverOf_myPrefString (triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString)
    g_MyPrefs?.removeObserverOf_prefTransientString (triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    populateExplorerWindow                                                                                         *
  //-------------------------------------------------------------------------------------------------------------------*

  override func populateExplorerWindowWithRect (inout ioRect : NSRect, view : NSView) {
    docString_explorer = createEntryForAttributeNamed ("docString", ioRect:&ioRect, view:view)
    if let explorer = docString_explorer {
      explorer.stringValue = docString
    }
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    clearObjectExplorer                                                                                            *
  //-------------------------------------------------------------------------------------------------------------------*

  override func clearObjectExplorer () {
    docString_explorer = nil
    super.clearObjectExplorer ()
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    saveIntoDictionary                                                                                             *
  //-------------------------------------------------------------------------------------------------------------------*

  override func saveIntoDictionary (ioDictionary : NSMutableDictionary) {
    super.saveIntoDictionary (ioDictionary)
    ioDictionary.setValue (docString, forKey: "docString")
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    setUpWithDictionary                                                                                            *
  //-------------------------------------------------------------------------------------------------------------------*

  override func setUpWithDictionary (inDictionary : NSDictionary,
                                     managedObjectArray : NSArray) {
    super.setUpWithDictionary (inDictionary, managedObjectArray:managedObjectArray)
    docString = inDictionary.readString ("docString")
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    Transient: otherTransientConcatString                                                                          *
  //-------------------------------------------------------------------------------------------------------------------*

  var otherTransientConcatString_observers = NSMutableSet ()
  var otherTransientConcatString_cache : String?
  var otherTransientConcatString : String {
    get {
      if otherTransientConcatString_cache == nil {
        otherTransientConcatString_cache = compute_MyRootEntity_otherTransientConcatString (g_MyPrefs!.myPrefString)
      }
      return otherTransientConcatString_cache!
    }
    set {
    }
  }

  func entity_2E_MyRootEntity_2E_otherTransientConcatString_didChange () {
    for anyObject in otherTransientConcatString_observers {
      let object = anyObject as PMTriggerProtocol
      enterTriggerWithObject (object)
    }
  }

   func addObserverOf_otherTransientConcatString (inObserver : PMTriggerProtocol) {
    otherTransientConcatString_observers.addObject (inObserver)
    enterTriggerWithObject (inObserver)
  }
 
  func removeObserverOf_otherTransientConcatString (inObserver : PMTriggerProtocol) {
    otherTransientConcatString_observers.removeObject (inObserver)
    enterTriggerWithObject (inObserver)
  }

  var triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString_cache : PMTrigger_entity_2E_MyRootEntity_2E_otherTransientConcatString? = nil
  var triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString : PMTrigger_entity_2E_MyRootEntity_2E_otherTransientConcatString {
    if nil == triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString_cache {
      triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString_cache = PMTrigger_entity_2E_MyRootEntity_2E_otherTransientConcatString (object:self)
    }
    return triggerObjectFor_entity_2E_MyRootEntity_2E_otherTransientConcatString_cache!
  }
 
  //-------------------------------------------------------------------------------------------------------------------*
  //    Transient: transientConcatString                                                                               *
  //-------------------------------------------------------------------------------------------------------------------*

  var transientConcatString_observers = NSMutableSet ()
  var transientConcatString_cache : String?
  var transientConcatString : String {
    get {
      if transientConcatString_cache == nil {
        transientConcatString_cache = compute_MyRootEntity_transientConcatString (docString, g_MyPrefs!.myPrefString, g_MyPrefs!.prefTransientString)
      }
      return transientConcatString_cache!
    }
    set {
    }
  }

  func entity_2E_MyRootEntity_2E_transientConcatString_didChange () {
    for anyObject in transientConcatString_observers {
      let object = anyObject as PMTriggerProtocol
      enterTriggerWithObject (object)
    }
  }

   func addObserverOf_transientConcatString (inObserver : PMTriggerProtocol) {
    transientConcatString_observers.addObject (inObserver)
    enterTriggerWithObject (inObserver)
  }
 
  func removeObserverOf_transientConcatString (inObserver : PMTriggerProtocol) {
    transientConcatString_observers.removeObject (inObserver)
    enterTriggerWithObject (inObserver)
  }

  var triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString_cache : PMTrigger_entity_2E_MyRootEntity_2E_transientConcatString? = nil
  var triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString : PMTrigger_entity_2E_MyRootEntity_2E_transientConcatString {
    if nil == triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString_cache {
      triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString_cache = PMTrigger_entity_2E_MyRootEntity_2E_transientConcatString (object:self)
    }
    return triggerObjectFor_entity_2E_MyRootEntity_2E_transientConcatString_cache!
  }
 
  //-------------------------------------------------------------------------------------------------------------------*
  //   accessibleObjects                                                                                               *
  //-------------------------------------------------------------------------------------------------------------------*

  override func accessibleObjects (inout objects : NSMutableArray) {
    super.accessibleObjects (&objects)
  }

  //-------------------------------------------------------------------------------------------------------------------*

}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


