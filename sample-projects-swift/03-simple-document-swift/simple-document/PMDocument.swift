//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

@objc(PMDocument) class PMDocument : EBManagedDocument {

  //····················································································································
  //    Outlets
  //····················································································································

  @IBOutlet var myColorWell : EBColorWell?
  @IBOutlet var myTextConcatField : EBTextObserverField?
  @IBOutlet var myTextField : EBTextField?
  @IBOutlet var myTextMajField : EBTextObserverField?
  @IBOutlet var myTextMinField : EBTextObserverField?

  //····················································································································
  //    Properties
  //····················································································································


  //····················································································································
  //    Transient properties
  //····················································································································


  //····················································································································
  //    Transient arraies
  //····················································································································


  //····················································································································
  //    Array Controllers
  //····················································································································


  //····················································································································
  //    Selection Controllers
  //····················································································································


  //····················································································································
  //    Custom object Controllers
  //····················································································································


  //····················································································································
  //    populateExplorerWindow
  //····················································································································

  override func populateExplorerWindow (_ y : inout CGFloat, view : NSView) {
    super.populateExplorerWindow (&y, view:view)
  }

  //····················································································································
  //    windowNibName
  //····················································································································

  override var windowNibName: String {
    return "PMDocument"
  }

  //····················································································································
  //    rootEntityClassName
  //····················································································································

  override func rootEntityClassName () -> String {
    return "MyRootEntity"
  }

  //····················································································································
  //    rootObject
  //····················································································································

  var rootObject : MyRootEntity { get { return mRootObject as! MyRootEntity } }

  //····················································································································
  //    windowControllerDidLoadNib
  //····················································································································

  override func windowControllerDidLoadNib (_ aController: NSWindowController) {
  //--------------------------- Outlet checking
    if nil == myColorWell {
      presentErrorWindow (file: #file,
                              line: #line,
                              errorMessage: "the 'myColorWell' outlet is nil") ;
//    }else if !myColorWell!.isKindOfClass (EBColorWell) {
//      presentErrorWindow (file: #file,
//                              line: #line,
//                              errorMessage: "the 'myColorWell' outlet is not an instance of 'EBColorWell'") ;
    }
    if nil == myTextConcatField {
      presentErrorWindow (file: #file,
                              line: #line,
                              errorMessage: "the 'myTextConcatField' outlet is nil") ;
//    }else if !myTextConcatField!.isKindOfClass (EBTextObserverField) {
//      presentErrorWindow (file: #file,
//                              line: #line,
//                              errorMessage: "the 'myTextConcatField' outlet is not an instance of 'EBTextObserverField'") ;
    }
    if nil == myTextField {
      presentErrorWindow (file: #file,
                              line: #line,
                              errorMessage: "the 'myTextField' outlet is nil") ;
//    }else if !myTextField!.isKindOfClass (EBTextField) {
//      presentErrorWindow (file: #file,
//                              line: #line,
//                              errorMessage: "the 'myTextField' outlet is not an instance of 'EBTextField'") ;
    }
    if nil == myTextMajField {
      presentErrorWindow (file: #file,
                              line: #line,
                              errorMessage: "the 'myTextMajField' outlet is nil") ;
//    }else if !myTextMajField!.isKindOfClass (EBTextObserverField) {
//      presentErrorWindow (file: #file,
//                              line: #line,
//                              errorMessage: "the 'myTextMajField' outlet is not an instance of 'EBTextObserverField'") ;
    }
    if nil == myTextMinField {
      presentErrorWindow (file: #file,
                              line: #line,
                              errorMessage: "the 'myTextMinField' outlet is nil") ;
//    }else if !myTextMinField!.isKindOfClass (EBTextObserverField) {
//      presentErrorWindow (file: #file,
//                              line: #line,
//                              errorMessage: "the 'myTextMinField' outlet is not an instance of 'EBTextObserverField'") ;
    }
  //--------------------------- Array controllers
  //--------------------------- Selection controllers
  //--------------------------- Custom object controllers
  //--- Transient compute functions
  //--- Install property observers for transients
  //--- Install regular bindings
    myTextField?.bind_value (self.rootObject.myString, file: #file, line: #line, sendContinously:true)
    myTextMajField?.bind_valueObserver (self.rootObject.myStringMaj, file: #file, line: #line)
    myTextMinField?.bind_valueObserver (self.rootObject.myStringMin, file: #file, line: #line)
    myTextConcatField?.bind_valueObserver (self.rootObject.myStringConcat, file: #file, line: #line)
    myColorWell?.bind_color (self.rootObject.myColor, file: #file, line: #line, sendContinously:false)
  //--- Install multiple bindings
  //--------------------------- Set targets / actions
  //--------------------------- Update display
    super.windowControllerDidLoadNib (aController)
    flushOutletEvents ()
  }

  //····················································································································
  //   removeWindowController
  //····················································································································

  override func removeUserInterface () {
  //--- Unbind regular bindings
    myTextField?.unbind_value ()
    myTextMajField?.unbind_valueObserver ()
    myTextMinField?.unbind_valueObserver ()
    myTextConcatField?.unbind_valueObserver ()
    myColorWell?.unbind_color ()
  //--- Unbind multiple bindings
  //--- Uninstall compute functions for transients
  //--------------------------- Unbind array controllers
  //--------------------------- Unbind selection controllers
  //--- Uninstall property observers for transients
  //--------------------------- Remove targets / actions
  }

  //····················································································································

}

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*

