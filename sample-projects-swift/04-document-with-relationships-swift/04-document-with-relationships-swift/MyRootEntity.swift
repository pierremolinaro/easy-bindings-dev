//---------------------------------------------------------------------------------------------------------------------*
//                                                                                                                     *
//                                             File 'MyRootEntity.swift'                                               *
//                                             Generated by version 0.0.1                                              *
//                                         september 5th, 2014, at 19h45'48"                                           *
//                                                                                                                     *
//---------------------------------------------------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

import Cocoa

//---------------------------------------------------------------------------------------------------------------------*

@objc(MyRootEntity) class MyRootEntity : PMManagedObject {

  //-------------------------------------------------------------------------------------------------------------------*
  //    To many relationship: mNames                                                                                   *
  //-------------------------------------------------------------------------------------------------------------------*

  var mNames_observers = NSMutableSet ()
  var mNames_explorer : NSPopUpButton?
  var mNames : NSMutableArray = NSMutableArray () { // Set of NameEntity entities
    didSet {
      if (oldValue !== mNames) {
      //--- Register old value in undo manager
        mUndoManager?.registerUndoWithTarget (self, selector:"undoFor_mNames:", object:oldValue)
      //--- Update explorer
        if mNames_explorer != nil {
          updateManagedObjectToManyRelationshipDisplayForKey ("mNames", popUpButton:mNames_explorer)
        }
      //--- Removed object set
        var removedObjectSet = NSMutableSet ()
        removedObjectSet.addObjectsFromArray (oldValue)
        removedObjectSet.minusSet (NSSet (array:mNames))
        for object : AnyObject in removedObjectSet {
          let managedObject = object as NameEntity
          managedObject.mRoot = nil ;
        }
      //--- Added object set
        var addedObjectSet = NSMutableSet ()
        addedObjectSet.addObjectsFromArray (mNames)
        addedObjectSet.minusSet (NSSet (array:oldValue))
        for object : AnyObject in addedObjectSet {
          let managedObject = object as NameEntity
          managedObject.mRoot = self
        }
      //--- Notify observers object count did change
        for anyObject in mNames_observers {
          let object = anyObject as PMTriggerProtocol
          enterTriggerWithObject (object)
        }
      }
    }
  }

  func undoFor_mNames (object:NSMutableArray) {
    mNames = object
  }
   
  func addObserverOf_mNames (inObserver : PMTriggerProtocol) {
    mNames_observers.addObject (inObserver)
    enterTriggerWithObject (inObserver)
  }

  func removeObserverOf_mNames (inObserver : PMTriggerProtocol) {
    mNames_observers.removeObject (inObserver)
    enterTriggerWithObject (inObserver)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    init                                                                                                           *
  //-------------------------------------------------------------------------------------------------------------------*

  override init (undoManager : NSUndoManager) {
    super.init (undoManager:undoManager)
  //--- Register trigger objects
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    deinit                                                                                                         *
  //-------------------------------------------------------------------------------------------------------------------*

  deinit {
  //--- Unregister trigger objects
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    populateExplorerWindow                                                                                         *
  //-------------------------------------------------------------------------------------------------------------------*

  override func populateExplorerWindowWithRect (inout ioRect : NSRect, view : NSView) {
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    clearObjectExplorer                                                                                            *
  //-------------------------------------------------------------------------------------------------------------------*

  override func clearObjectExplorer () {
    super.clearObjectExplorer ()
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    saveIntoDictionary                                                                                             *
  //-------------------------------------------------------------------------------------------------------------------*

  override func saveIntoDictionary (ioDictionary : NSMutableDictionary) {
    super.saveIntoDictionary (ioDictionary)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //    setUpWithDictionary                                                                                            *
  //-------------------------------------------------------------------------------------------------------------------*

  override func setUpWithDictionary (inDictionary : NSDictionary,
                                     managedObjectArray : NSArray) {
    super.setUpWithDictionary (inDictionary, managedObjectArray:managedObjectArray)
  }

  //-------------------------------------------------------------------------------------------------------------------*
  //   accessibleObjects                                                                                               *
  //-------------------------------------------------------------------------------------------------------------------*

  override func accessibleObjects (inout objects : NSMutableArray) {
    super.accessibleObjects (&objects)
  }

  //-------------------------------------------------------------------------------------------------------------------*

}

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


